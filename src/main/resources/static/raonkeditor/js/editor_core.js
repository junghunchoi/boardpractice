var console = window && window.console ? window.console : {
      log: function () {
      }
    },
    G_ICON_FULL_SET = "new save save_as print undo redo copy cut paste text_paste find replace emoticon setting horizontal_line image_create image_editor image_property image_editor_property flash_create flash_property media_create media_property iframe_create iframe_property hyperlink_create hyperlink_property remove_hyperlink bookmark symbol form checkbox radiobutton button selectbox textbox textarea hidden doc_bg_image detail_table_insert detail_table_insert_new table_insert table_delete merge_cell split_cell table_row_clone insert_row_up insert_row_down delete_row insert_column_left insert_column_right delete_column table_bg_color table_same_width table_same_height table_same_widthheight table_group table_group_detail full_screen bold underline italic strike_through superscript subscript remove_format remove_css font_color font_bg_color align_group align_group_detail align_left align_center align_right align_full line_height line_height_inc line_height_dec indent outdent list_number list_bullets detail_list_number detail_list_bullets top_design top_source top_preview top_text design source preview text formatting font_family font_size font_size_inc font_size_dec about select_all insert_row_column cell_property row_property column_property table_property table_select_all table_select_cell table_select_row table_select_column valign_up valign_center valign_baseline valign_bottom template grid tool_replace convert_table_to_text insert_link_media paste_word cell_border cell_bg_color table_indent table_outdent load_auto_save ruler pagebreak layout dirltr dirrtl insert_file file_open format_painter apply_format letter_spacing letter_spacing_inc letter_spacing_dec image_align_default image_align_left image_align_right list_blockquote input_textfield input_radio input_checkbox input_button input_hiddenfield input_textarea input_select input_imagebutton input_same_width input_same_height input_same_width_height accessibility_validation table_copy table_paste intable_paste table_content_paste horizontal_sum vertical_sum horizontal_avg vertical_avg table_selection show_blocks table_lock cell_lock table_lock_property help tool_bar_grouping list_lower_alpha photo_editor photo_editor_property insert_file_property shortcut detail_font_color detail_font_bg_color detail_cell_bg_color table_border insert_layer element_position order_of_objects order_of_objects_detail insert_datetime detail_insert_datetime conversion personal_data forbidden_word video video_property spell_check calculator zoom zoom_plus zoom_minus word_edit hwp_edit mini_photo_editor placeholder paragraph_attribute table_adjust insert_table_top_paragraph insert_table_bottom_paragraph clean_nested_tag body_fit hyperlink_open manually_temp_save status_source status_preview status_text save_as_image filelink_open select_save_type delete_pagebreak".split(
        " "),
    G_ICON_READONLY_ACTIVATION_SET = "save print find full_screen help about".split(
        " "), G_ICON_CUSTOM_ADD_DISABLED_SET = [],
    G_FORMATTING = " h1 h2 h3 h4 h5 h6".split(" "), G_ManagerColor = {
      bluegray: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(62,77,95)"},
      blue: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(63,86,120)"},
      skyblue: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(0,118,163)"},
      red: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(177,39,32)"},
      bluegreen: {
        c1: "RGB(239,239,239)", c2: "RGB(73,73,73)",
        c3: "RGB(58,113,127)"
      },
      green: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(57,95,83)"},
      orange: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(213,89,23)"},
      purple: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(111,79,121)"},
      silver: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(159,159,159)"},
      brown: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(105,72,57)"},
      darkgray: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(74,74,74)"},
      gold: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(162,118,85)"},
      gray: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(98,98,98)"},
      pink: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(215,80,102)"},
      yellow: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(215,153,10)"},
      white: {c1: "RGB(239,239,239)", c2: "RGB(73,73,73)", c3: "RGB(200,200,200)"}
    }, KEDITORTOP = parent;
try {
  var G_tempTopDocument = KEDITORTOP.document
} catch (e$$4) {
  alert("cross domain error")
}
try {
  KEDITORTOP.RAONKEDITOR.IsCrossDomain = !1
} catch (e$$5) {
  KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
  && console.log(e$$5)
}
setKEDITORWINwindow();
setKEDITORDOCdocument();
KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = null;
KEDITORTOP.G_CURRKEDITOR = null;
KEDITORTOP.RAONKEDITOR.G_COPIEDTABLE = null;
KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA = null;
var G_CURSOR_ELEMENT = KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT = null,
    G_keditorResize_Elem_Flag = !1;
KEDITORTOP.RAONKEDITOR = parent.RAONKEDITOR;
parent.KEDITORTOP = KEDITORTOP;
var G_dext5plugIn = null, G_SUB_DIALOG = null, G_CURRENT_IFRAME = null,
    G_CURRENT_IFRAME_HOLDER = null, G_USE_EDITOR_ID = null, G_LAST_CMD = null,
    G_MAIN_ZINDEX = 1E4, G_PutUndoCharCount = 20, G_Progress_LoadTime = 100,
    G_TIMEOUT_CNT = 0, G_ShortCutClose = !1, G_ShortCutClick = !1,
    xmlHttpReqeust_Config, SIL = [], Z = [],
    ___ = KEDITORTOP.KEDITORWIN.location, _0_, _1_, _7_;
KEDITORTOP.RAONKEDITOR.util.overrideFn(window);
var G_BASE_COLOR_PICKER = "#ffffff #f7f7f7 #e2e2e2 #c2c2c2 #9c9c9c #858585 #404040 #272727 #000000 #ffb39b #ffd4a7 #fff599 #c5dd9c #7ec89d #85ddff #87c5ff #bd8fbf #f69fc1 #ff0000 #ff9c23 #f4d400 #7bb423 #00a350 #00afef #0076c8 #93338f #f02c8c #9f190d #a46206 #a79a00 #568228 #007036 #0077a4 #0000ff #63155f #a01a5c".split(
        " "), _R_O_ = "K", R = [], T = [], K__ = "fe", C1 = [], C2 = [], ALS = [],
    S1 = [], S2 = [], M1 = "IEludmianzwFsoraWQgUHJvZHVjdCBLZXkuIA==",
    M2 = "IExpY2ianzwVuorc2UgRXhwaXJlZC4g",
    M3 = "IEludmianzwFsoraWQgRG9tYWluLiA=",
    M4 = "IEludmianzwFsoraWQgVUkgTW9kdWxlIExpY2Vuc2UuIA==",
    M5 = "IEludmianzwFsoraWQgU3BlbGwgQ2hlY2tlciBMaWNlbnNlLg==", G_FormData = [],
    G_KPlugin = {}, G_SC = "", G_BODY_DEFAULT_VALUE = "", G_Ruler = null,
    G_BodyFit = null;

function setKEDITORWINwindow() {
  try {
    topURL = top.location.href, "undefined" == typeof topURL
        ? (KEDITORTOP.KEDITORWIN = parent, KEDITORTOP.RAONKEDITOR.IsCrossDomain = !0)
        : (KEDITORTOP.KEDITORWIN = parent, KEDITORTOP.RAONKEDITOR.IsCrossDomain = !1)
  } catch (a) {
    KEDITORTOP.KEDITORWIN = parent, KEDITORTOP.RAONKEDITOR.IsCrossDomain = !0
  }
}

function setKEDITORDOCdocument() {
  try {
    topURL = top.location.href, "undefined" == typeof topURL
        ? (KEDITORTOP.KEDITORDOC = parent.document, KEDITORTOP.RAONKEDITOR.IsCrossDomain = !0)
        : (KEDITORTOP.KEDITORDOC = parent.document, KEDITORTOP.RAONKEDITOR.IsCrossDomain = !1)
  } catch (a) {
    KEDITORTOP.KEDITORDOC = parent.document, KEDITORTOP.RAONKEDITOR.IsCrossDomain = !0
  }
}

SIL[0] = "t";
K__ += "ab";

function RAONK_EDITOR(a, c, b, d) {
  G_PutUndoCharCount = c.undoCount;
  this.ID = a;
  this.Frame = b;
  this.FrameStatus = "";
  this.FrameID = b.FrameID;
  KEDITORTOP.RAONKEDITOR.RAONKMULTIPLE[b.FrameID] = this;
  KEDITORTOP.G_CURRKEDITOR = this;
  this._config = c;
  this._newMode = this._currentMode = "design";
  this._BODY = this._DOC = null;
  this._EDITOR = {};
  this._defaultHeight = "";
  this._setting = {};
  this._top_menu_click_flag = !1;
  this._top_menu_click_id = "";
  this._docType = {};
  this.UndoManager = new UndoManager;
  this.WordCountUndoManager = new UndoManager;
  this.baseMenuToolbarHeight =
      0;
  this._PageProp = {};
  this.remove_item = [];
  this.remove_context_item = [];
  this.____ = {};
  this._LastRange = null;
  this._RangeBlurBug = !1;
  this._defaultWidth = this._defTableWidth = 0;
  this._editorCustomData = [];
  this._editorFrameHasFocus = this._editorCustomDataMode = !1;
  this.changeMultiValue = {valueLength: 0};
  this._FRAMEWIN = window;
  this._formatPainterList = null;
  this._contentsClass = ["keditor_bookmark"];
  _R_O_ += "/";
  _R_O_ += "=";
  G_MAIN_ZINDEX = c.zIndex;
  this.setImageArr = [];
  this.setElementsArr = [];
  this.sTextareaArr = [];
  this.applyEdgeMode =
      this.violationNode = this._editingCheckedValue = null;
  this._configXml = b.configXml;
  this.ShowBlocks = "";
  this.lastElemForLock = this.keditor_dragresize = null;
  this.Toolbar_group = [[], []];
  this.detailSubCmd = "list_decimal list_decimal_leading_zero list_lower_alpha list_lower_greek list_lower_roman list_upper_alpha list_upper_roman list_disc list_circle list_square list_none".split(
      " ");
  this.initPaste = !0;
  this.imageForPhotoEditor = null;
  this.initSetSize = !0;
  this.groupingBoxOpen = this.isOccurredResizeEvent = !1;
  this.dialogWindow =
      null != d.DialogWindow ? d.DialogWindow : null;
  null != this.dialogWindow
  && (this.dialogWindow.KEDITORWIN = KEDITORTOP.KEDITORWIN, this.dialogWindow.KEDITORDOC = KEDITORTOP.KEDITORDOC, this.dialogWindow.G_CURRKEDITOR = KEDITORTOP.G_CURRKEDITOR);
  this.topStatusBarTitleIdx = this.statusBarTitleIdx = 0;
  this.setTextPaste = !1;
  this.iconEnableCommandType = this.keditorResize = null;
  this.lockCommand = [];
  this.toolmenu_bg_resize = function () {
    return function (a) {
      try {
        var b = "CSS1Compat" == KEDITORTOP.KEDITORDOC.compatMode
                ? KEDITORTOP.KEDITORDOC.documentElement.scrollWidth :
                KEDITORTOP.KEDITORDOC.body.scrollWidth,
            c = "CSS1Compat" == KEDITORTOP.KEDITORDOC.compatMode
                ? KEDITORTOP.KEDITORDOC.documentElement.scrollHeight
                : KEDITORTOP.KEDITORDOC.body.scrollHeight,
            d = KEDITORTOP.KEDITORDOC.getElementById(
                "keditor_toolmenu_background" + _k_editor.ID);
        d.firstChild.style.width = b + "px";
        d.firstChild.style.height = c + "px"
      } catch (e) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(e)
      }
    }
  }();
  this.topmenu_bg_resize = function () {
    return function (a) {
      try {
        var b = "CSS1Compat" ==
            KEDITORTOP.KEDITORDOC.compatMode
                ? KEDITORTOP.KEDITORDOC.documentElement.scrollWidth
                : KEDITORTOP.KEDITORDOC.body.scrollWidth,
            c = "CSS1Compat" == KEDITORTOP.KEDITORDOC.compatMode
                ? KEDITORTOP.KEDITORDOC.documentElement.scrollHeight
                : KEDITORTOP.KEDITORDOC.body.scrollHeight,
            d = KEDITORTOP.KEDITORDOC.getElementById(
                "keditor_topmenu_background" + _k_editor.ID);
        d.firstChild.style.width = b + "px";
        d.firstChild.style.height = c + "px"
      } catch (e) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(e)
      }
    }
  }();
  this.context_bg_resize = function () {
    return function (a) {
      try {
        getDialogWindow();
        var b = getDialogDocument(),
            c = "CSS1Compat" == b.compatMode ? b.documentElement.scrollWidth
                : b.body.scrollWidth,
            d = "CSS1Compat" == b.compatMode ? b.documentElement.scrollHeight
                : b.body.scrollHeight,
            e = b.getElementById("keditor_context_background" + _k_editor.ID);
        e.firstChild.style.width = c + "px";
        e.firstChild.style.height = d + "px"
      } catch (f) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(f)
      }
    }
  }();
  this.isInitFocusHandler =
      !0;
  this.mouseDropPosition = {clientX: null, clientY: null};
  this.ShowTableBorder = !1;
  this.selectionKEditorMark = [];
  this.isUseApplyFormat = !1;
  this.strOldSaveFileName = "";
  this.beforeOffset = null;
  this.bTextorHtmlData = this.isInitKeydownForSetApi = !1;
  this.pasteEvt = this.clipImageBlob = null;
  this.clipData = "";
  this.clipImageBeforePopup = null;
  "" != this._config.pasteToImagePopupImageButtonText
  && (RAONKEditor_lang.paste_to_image.insert_image = this._config.pasteToImagePopupImageButtonText);
  "" != this._config.pasteToImagePopupHtmlButtonText &&
  (RAONKEditor_lang.paste_to_image.insert_html = this._config.pasteToImagePopupHtmlButtonText);
  try {
    try {
      if ("" != typeof KEDITORTOP.G_CURRKEDITOR._config.languageExtendObject) {
        var e = JSON.parse(
            KEDITORTOP.G_CURRKEDITOR._config.languageExtendObject);
        "object" === typeof e && KEDITORTOP.RAONKEDITOR.util.objectExtend(!0,
            RAONKEditor_lang, e)
      }
    } catch (f) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(f)
    }
    if ("function"
        === typeof KEDITORTOP.G_CURRKEDITOR._config.event.onLanguageDefinition) {
      KEDITORTOP.G_CURRKEDITOR._config.event.onLanguageDefinition(
          a,
          RAONKEditor_lang);
    } else {
      "function"
      === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_OnLanguageDefinition
      && KEDITORTOP.KEDITORWIN.RAONKEDITOR_OnLanguageDefinition(a,
          RAONKEditor_lang)
    }
  } catch (g) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(g)
  }
  this.isStopScroll = !1;
  this.previousScrollTop = 0;
  this.preventScrollMove = {use: !1, beforeTop: 0, beforeLeft: 0};
  this.xhr_onprogress = null;
  if ("undefined"
      == typeof KEDITORTOP.KEDITORWIN.G_CURRKEDITOR._FRAMEWIN.KEDITOR_LANG_CONFIG) {
    this.lastDateType = null;
  } else {
    try {
      this.lastDateType = KEDITORTOP.KEDITORWIN.G_CURRKEDITOR._FRAMEWIN.KEDITOR_LANG_CONFIG.dateTime.common_date[0]
    } catch (h) {
      this.lastDateType = ""
    }
  }
  this.recentlyColorName = "keditorRecentlyColor";
  this.recentlyFontName = "keditorRecentlyFont";
  this.recentlyLetterSpacing = "keditorRecentlyLetterSpacing";
  this.recentlyLineHeight = "keditorRecentlyLineHeight";
  this.recentlyFontSize = "keditorRecentlyFontSize";
  this.recentlyFormatting = "keditorRecentlyFormatting";
  this.DEXT5WordDoc = this.KEditorWordApp = null;
  this.checkEnterKeyTargetTagArr =
      "li h1 h2 h3 h4 h5".split(" ");
  this.isEnterKeyInTargetTag = !1;
  this.changeDivTagArr = [];
  this.localFontList = [];
  this.managerUrl = "http://127.0.0.1:";
  this._config.agentHttps && (this.managerUrl = this.managerUrl.replace("http",
      "https"));
  this.managerPort = "";
  this.httpHeaderArr = [];
  this.tempHttpHeaderObj = {};
  this.dv = this.agentPasteFormatType = this.av = this.agentGuid = "";
  this.newInstallInterval = null;
  this.agentInstallEvent = this.canPasteToImage = !1;
  var m = this;
  this.miniPhotoLastMode = !1;
  this.isInitBodyAutoFit = !0;
  try {
    if ("1" ==
        this._config.useMiniImageEditor) {
      var q = KEDITORTOP.KEDITORWIN;
      null != this.dialogWindow && (q = this.dialogWindow);
      if (null == q.document.getElementById("k_mini_photo")) {
        miniPhotoCallback = function () {
          q.KMINIPHOTO.isRelease = KEDITORTOP.RAONKEDITOR.isRelease;
          new q.KMINIPhoto({
            Id: "kminiphoto",
            Lang: m._config.lang,
            PhotoHolder: "k_mini_photo",
            ZIndex: m._config.zIndex + 5E3,
            AutoDestroy: m._config.autoDestroy.use,
            Width: m._config.miniPhotoEditor.width,
            Height: m._config.miniPhotoEditor.height,
            BackgroundColor: m._config.miniPhotoEditor.backgroundColor,
            BackgroundOpacity: m._config.miniPhotoEditor.backgroundOpacity,
            AutoSetZoom: KEDITORTOP.G_CURRKEDITOR._config.autoSetZoom,
            CreationCompleteEvent: function () {
              q.KMINIPHOTO.miniPhotoCreation = !0
            }
          })
        };
        var t = q.document.createElement("div");
        t.id = "k_mini_photo";
        t.style.display = "none";
        q.document.body.appendChild(t);
        var u = q.document.getElementsByTagName("head")[0],
            v = q.document.createElement("script");
        v.type = "text/javascript";
        var w = !1;
        v.onreadystatechange = function () {
          "loaded" != this.readyState && "complete" != this.readyState ||
          w || (w = !0, miniPhotoCallback())
        };
        v.onload = function () {
          w || (w = !0, miniPhotoCallback())
        };
        v.src = KEDITORTOP.RAONKEDITOR.isRelease
            ? KEDITORTOP.RAONKEDITOR.rootPath + "imageEdit/js/kminiphoto.js"
            : KEDITORTOP.RAONKEDITOR.rootPath
            + "imageEdit/js_dev/kminiphoto.js";
        u.appendChild(v)
      }
    }
  } catch (x) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(x)
  }
  this.isAddedHtmlContents = !1;
  this.fileOpenLoadingTimeout = null;
  this.isLoadingFile = !1;
  this.useFocusDivForIOS = KEDITORTOP.RAONKEDITOR.browser.iOS ? !0 :
      !1;
  this.keydownNodeForTableCaret = {tdNode: null, backupRange: null};
  this.AgentInstallFailCheckTimeout = null;
  this.pasteTableParam = {
    tableNode: null,
    tableHtml: "",
    currTableNode: null,
    currCellNode: null
  };
  this.AccessClipboardForIEGecko = !1;
  this.countLocalImageToBase64 = 0;
  this.isTablePaste = !1;
  this.autoMoveInitFocusData = {
    targetDocument: null,
    targetNode: null,
    targetNodeEx: null
  };
  this.keydownStyleForIOS = {currStyle: null, fontSize: ""};
  this.backupWidthForIOS = {backupWidth: "", isPopup: !1};
  this.isAOver = {
    over: !1, node: null, nodeChild: null,
    openHelp: !1, linkStyle: !1, timer: null, addTarget: !1
  };
  this.relativeNode = [];
  this.lastCellForUndoManager = null;
  this.autoListUse = "";
  this.fixDEXTWINScroll = {
    keyCodeArr: [33, 34],
    backupValue: null,
    fn: function () {
      KEDITORTOP.KEDITORWIN.scrollTo(
          KEDITORTOP.G_CURRKEDITOR.fixDEXTWINScroll.backupValue.left,
          KEDITORTOP.G_CURRKEDITOR.fixDEXTWINScroll.backupValue.top)
    }
  };
  this.imageFileInfo = {isMulti: !1, vlidData: {}, uploadData: {}};
  this.isSupportedAgentPdf = !1;
  G_BodyFit = new BodyFit(m);
  "1" == m._config.ruler.use && (G_Ruler = new Ruler(m));
  this.strSavedExtension = "";
  this.isPasting = !1
}

K__ += "CDE";
RAONK_EDITOR.prototype = {
  _Design2Source: function () {
    var a = "table tbody tr td th ol ul li div".split(" ");
    if ("0" == this._config.sourceViewtype || "3"
        == this._config.sourceViewtype) {
      a = [];
    }
    var c = "";
    removeFakeLineHeight(this._BODY);
    setMatchSelectedValue(this._BODY);
    setMatchInputValue(this._BODY);
    adjustInputNodeForFF(this._DOC, !1);
    setEmptyTagWhiteSpace(this);
    if ("1"
        == this._config.keepOriginalHtml) {
      c = this._BODY.innerHTML;
    } else if (this._BODY.hasChildNodes()) {
      for (var b = this._BODY.childNodes.length,
          d = 0; d < b; d++) {
        var e =
            this._BODY.childNodes[d];
        if (e) {
          if (1 === e.nodeType) {
            var f = e.tagName.toLowerCase(), g = e.outerHTML;
            if ("script" == f) {
              g = g.replace(/<script([^>]+?)>[\s]+/gi,
                  "<script$1>\r\n"), g = g.replace(/\;[\s]+/gi, ";\r\n");
            } else if ("1"
                == this._config.sourceViewtype || "2"
                == this._config.sourceViewtype) {
              g = removeCRLFChar(g);
            }
            if ("table" == f || "ol" == f || "ul" == f || "kmark"
                == f) {
              c += g;
            } else {
              if (KEDITORTOP.RAONKEDITOR.browser.ie && 11
                  == KEDITORTOP.RAONKEDITOR.browser.ieVersion && "p" == f && ""
                  == (e.innerText || e.textContent)) {
                for (;
                    e = RegExp(
                        "(<span[^>]*>)(?:\\s|<br>|<br />|  | |)(</span>)",
                        "gim"), g = g.replace(e,
                        "$1" + unescape("%u200B") + "</span>"), 0 != e.test(
                        g);) {
                  ;
                }
              }
              c += ("" != c ? "\r\n" : "") + g
            }
          } else {
            g = e.nodeValue;
            if ("1" == this._config.sourceViewtype || "2"
                == this._config.sourceViewtype) {
              g = "#comment" != e.nodeName
                  ? removeCRLFChar(g) : "0" == this._config.removeComment
                      ? void 0
                      != e.data ? "\x3c!--" + e.data + "--\x3e" : void 0
                      != e.nodeValue
                          ? "\x3c!--" + e.nodeValue + "--\x3e" : "" : "";
            }
            c += ("" != c ? "\r\n" : "") + g
          }
        } else if (c = this._BODY.innerHTML, "1" == this._config.sourceViewtype
        || "2" == this._config.sourceViewtype) {
          c = removeCRLFChar(c)
        }
      }
    } else if (c =
        this._BODY.innerHTML, "1" == this._config.sourceViewtype || "2"
    == this._config.sourceViewtype) {
      c = removeCRLFChar(c);
    }
    c = setImgAltLineBreak(c);
    c = replaceLineBreak(this, c);
    "0" == this._config.applyStyleEmptyTag && (c = RemoveUnnecessaryChar(
        c), c = CleanZeroChar(c));
    "1" == this._config.sourceViewtypeEmptyTagMode
    && (c = KEDITORTOP.RAONKEDITOR.util.replaceBrOrSpaceToNbspString(c, "p"));
    "0" == this._config.keepOriginalHtml && (c = c.replace(/\t/g, ""));
    "3" == this._config.sourceViewtype
    && (c = KEDITORTOP.RAONKEDITOR.util.pretty.html(c, {
      indent_with_tabs: !0,
      unformatted: this._config.sourceViewtype_unformatted
    }));
    b = "";
    if ("0" == this._config.keepOriginalHtml) {
      for (d = 0, e = a.length; d < e;
          d++) {
        b = a[d], g = new RegExp(
            "(<" + b + "(\"[^\"]*\"|'[^']*'|[^'\">])*>)", "gi"), f = new RegExp(
            "</" + b + ">", "ig"), "tbody" == b ? (c = c.replace(g,
            function (a, b) {
              return "\r\n\t" + b + "\r\n"
            }), c = c.replace(f, "\r\n\t</" + b + ">")) : "li" == b
            ? c = c.replace(g, function (a, b) {
              return "\r\n\t" + b
            }) : "tr" == b ? (c = c.replace(g, function (a, b) {
              return "\r\n\t\t" + b + ""
            }), c = c.replace(f, "\r\n\t\t</" + b + ">")) : "td" == b || "th"
            == b
                ? (c = c.replace(g,
                    function (a, b) {
                      return "\r\n\t\t\t" + b + "\r\n\t\t\t\t"
                    }), c = c.replace(f, "\r\n\t\t\t</" + b + ">")) : "table"
                == b
                || "ol" == b || "ul" == b ? (c = c.replace(g, function (a, b) {
                  return "\r\n" + b + ""
                }), c = c.replace(f, "\r\n</" + b + ">\r\n")) : c = c.replace(g,
                    function (a, b) {
                      return "\r\n" + b + ""
                    });
      }
    }
    c = changeRealTagToReplaceString(c);
    "0" == this._config.keepOriginalHtml
    && (c = KEDITORTOP.RAONKEDITOR.browser.ie && 9
    <= KEDITORTOP.RAONKEDITOR.browser.ieVersion ? c.replace(/\r?\n?\r?\n/g,
        "\r\n") : c.replace(/\r?\n?\r?\n/g, "\n"));
    c = changeReplaceStringToRealTag(c);
    c = KEDITORTOP.RAONKEDITOR.util.trim(c);
    "0" == KEDITORTOP.G_CURRKEDITOR._config.viewImgBase64Source
    && (c = KEDITORTOP.RAONKEDITOR.util.ImageSrcConvert(c, !0,
        KEDITORTOP.G_CURRKEDITOR.ID));
    "1" == KEDITORTOP.G_CURRKEDITOR._config.xhtml_value
    && (c = KEDITORTOP.RAONKEDITOR.util.html2xhtml(c));
    this._EDITOR.source.value = c;
    a = this._EDITOR.source;
    a.focus();
    "setSelectionRange" in a ? a.setSelectionRange(0, 0) : "createTextRange"
        in a && a.createTextRange().moveStart("character", 0)
  }, _Design2Preview: function () {
    changeBodyImageProperty(!0);
    G_BodyFit.noncreationAreaBackgroundStatus && setBodyFitStyle(
        KEDITORTOP.G_CURRKEDITOR, !0);
    setHtmlToPreview();
    setFocusTopWindow()
  }, _Design2Text: function () {
    for (var a = ["style", "title"], c = a.length, b = 0; b < c;
        b++) {
      for (var d = this._BODY.getElementsByTagName(a[b]),
          e = d.length - 1; 0 <= e; e--) {
        d[e].parentNode.removeChild(d[e]);
      }
    }
    a = this._BODY.innerHTML;
    a = a.replace(/\r/g, "");
    a = a.replace(/[\n|\t]/g, "");
    a = a.replace(/[\v|\f]/g, "");
    a = a.replace(/<p><br><\/p>/gi, "\n");
    a = a.replace(/<P>&nbsp;<\/P>/gi, "\n");
    a = a.replace(/<br(\s)*\/?>/gi,
        "\n");
    a = a.replace(/<br(\s[^\/]*)?>/gi, "\n");
    a = a.replace(/<\/p(\s[^\/]*)?>/gi, "\n");
    a = a.replace(/<\/li(\s[^\/]*)?>/gi, "\n");
    a = a.replace(/<\/tr(\s[^\/]*)?>/gi, "\n");
    nIdx = a.lastIndexOf("\n");
    -1 < nIdx && "\n" == a.substring(nIdx) && (a = a.substring(0, nIdx));
    a = removeStripTags(a, null);
    a = unhtmlSpecialChars(a);
    this._EDITOR.text.value = a;
    a = this._EDITOR.text;
    try {
      a.focus()
    } catch (f) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(f)
    }
  }, getEditorMode: function () {
    return this._currentMode
  },
  setChangeMode: function (a) {
    clearAllFormControlSelected();
    var c = this.getEditorMode();
    if (c != a) {
      if (this._newMode = a, "1" != this._config.formMode && "0"
      != this._config.userTableLock.use && IsExistTableLock(this) && "0"
      == this._config.userTableLock.allowChangeMode && (-1 < a.indexOf("text")
          || -1 < a.indexOf("source"))) {
        alert(
            RAONKEditor_lang.msg.notChangeMode);
      } else {
        var b = !0;
        ("top_text" == a || "text" == a)
        && KEDITORTOP.RAONKEDITOR.ShowTextChangeAlert && (b = confirm(
            RAONKEditor_lang.msg.changeTextMode));
        if (b) {
          var b = this._setting.word_break_type,
              d = this._setting.word_wrap_type;
          if (null == this._EDITOR.preview) {
            var e = document.getElementById("ue_editor_holder_" + this.ID),
                b = createEditorIframe(this._config, e,
                    "keditor_preview_" + this.ID,
                    RAONKEditor_lang.iframe_title.preview,
                    this._docType[this._setting.doctype],
                    this._setting.encoding,
                    this._setting.lang, this._setting.xmlnsname,
                    this._setting.font_family, this._setting.font_size,
                    this._setting.line_height, b, d);
            b.style.width = "0px";
            b.style.height = "0px";
            b.style.display = "none";
            this._EDITOR.preview = document.getElementById("keditor_preview_" +
                this.ID)
          }
          ClearDraggingTableCellSelected();
          Mouse_Status = Mouse_IsPlain;
          g_findRepalceRange = ActiveCurrTable = DrageStartCell = null;
          this._iconSelected();
          for (var e = null,
              f = ["top_design", "top_source", "top_preview", "top_text"],
              b = 0,
              d = f.length; b < d; b++) {
            e = document.getElementById(
                "ue_" + this.ID + f[b]), null != e && ((0 > a.indexOf("top_")
                ? "top_" + a : a) == f[b] ? e.className = "on"
                : e.className = "");
          }
          var g = null, e = null, f = ["design", "source", "preview", "text"];
          a = a.replace("top_", "");
          "design" != a && this._iconEnable("allDisable");
          b = 0;
          for (d = f.length; b <
          d; b++) {
            if (g = document.getElementById(
                "ue_" + this.ID + f[b]), e = document.getElementById(
                "keditor_" + f[b] + "_" + this.ID), null != g || -1 < (","
                + this._config.toolbarArr1.join(",") + ",").indexOf("status_")
            || -1
            < ("," + this._config.toolbarArr2.join(",") + ",").indexOf(
                "status_")) {
              if (a == f[b]) {
                null != g
                && (g.className = this._config.style.skinName, g.getElementsByTagName(
                    "A")[0].className = "color_on", g.getElementsByTagName(
                    "A")[0].parentNode.style.backgroundColor = "#ffffff");
                if ("source" == a || "text" == a) {
                  try {
                    e.focus()
                  } catch (h) {
                    KEDITORTOP &&
                    KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
                    && console.log(h)
                  }
                  g = this._defaultHeight;
                  KEDITORTOP.RAONKEDITOR.browser.ie && 7
                  >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
                  && KEDITORTOP.RAONKEDITOR.browser.quirks ? g -= 5
                      : KEDITORTOP.RAONKEDITOR.browser.ie && 7
                      >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && (g -= 3);
                  e.style.height = g + "px";
                  e.height = g + "px"
                } else {
                  e.style.height = "100%";
                }
                e.style.width = "100%";
                e.style.display = "";
                e.style.overflow = "";
                "design" == a && (this._LastRange = null, setFocusToBody())
              } else {
                null != g && (g.className =
                    "", g.getElementsByTagName(
                    "A")[0].className = "", g.getElementsByTagName(
                    "A")[0].parentNode.style.backgroundColor = "", g.style.backgroundImage = ""), e.style.width = "0px", e.style.height = "0px", e.style.display = "none", e.style.overflow = "hidden", e.blur();
              }
            }
          }
          b = document.getElementById("ue_diabled_div_" + this.ID);
          "BackCompat" == document.compatMode
          && (b.style.height = document.getElementById(
              "ue_toolbar_" + G_USE_EDITOR_ID).scrollHeight + "px");
          document.getElementById(
              "ue_toolbar_" + G_USE_EDITOR_ID).style.position = "relative";
          "design" ==
          a ? (-1 < ("," + this._config.toolbarArr1.join(",") + ",").indexOf(
              "status_") || -1 < ("," + this._config.toolbarArr2.join(",")
              + ",").indexOf("status_") ? "1" == this._config.top_menu
              || isViewMode(this) || (b = document.getElementById(
                  "ue_top_menu_diabled_div_"
                  + this.ID), b.className = b.className.replace(
                  " tm_" + this._config.style.skinName,
                  ""), b.style.width = "0px")
              : b.style.width = "0px", document.getElementById(
              "ue_toolbar_" + G_USE_EDITOR_ID).style.position = "") : -1 < (","
              + this._config.toolbarArr1.join(",") + ",").indexOf("status_") ||
          -1 < ("," + this._config.toolbarArr2.join(",") + ",").indexOf(
              "status_")
              ? "1" == this._config.top_menu || isViewMode(this)
              || (b = document.getElementById(
                  "ue_top_menu_diabled_div_" + this.ID), 0
              > b.className.indexOf(
                  "tm_" + this._config.style.skinName)
              && (b.className = b.className + " tm_"
                  + this._config.style.skinName), b.style.width = document.getElementById(
                  "ue_toolbar_" + G_USE_EDITOR_ID).scrollWidth - 2 + "px")
              : b.style.width = document.getElementById(
                  "ue_toolbar_" + G_USE_EDITOR_ID).scrollWidth + "px";
          b = document.getElementById("keditor_ruler_vertical_disabled_" +
              this.ID);
          null != b && (b.style.display = "design" == a ? "" : "block");
          getApplyDragResize(KEDITORTOP.G_CURRKEDITOR)
          && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.resizeHandleClear();
          "design" == c && "design" != a
          && KEDITORTOP.G_CURRKEDITOR.ShowTableBorder
          && command_showTableBorder(
              KEDITORTOP.G_CURRKEDITOR.ID, KEDITORTOP.G_CURRKEDITOR);
          var m = this, b = function (a) {
            null != m._config.zoomList && (a ? (document.getElementById(
                    "zoom_" + m.ID + "_holder").style.display = "", "1"
                == m._config.wordCount.use && (document.getElementById(
                    "word_count_" +
                    m.ID + "_holder").style.textAlign = ""))
                : (document.getElementById(
                    "zoom_" + m.ID + "_holder").style.display = "none", "1"
                == m._config.wordCount.use && (document.getElementById(
                    "word_count_" + m.ID
                    + "_holder").style.textAlign = "right")))
          };
          "1" == KEDITORTOP.G_CURRKEDITOR._config.clickCtrlHyperlink
          && (KEDITORTOP.G_CURRKEDITOR.isAOver.linkStyle
          && hyperLinkOut(), KEDITORTOP.G_CURRKEDITOR.isAOver.openHelp
          && hyperHelpClose());
          try {
            for (var q in G_KPlugin) {
              if ("function"
                  === typeof G_KPlugin[q].onBeforeEditorChangeMode) {
                G_KPlugin[q].onBeforeEditorChangeMode(
                    {
                      currMode: c,
                      newMode: a
                    })
              }
            }
          } catch (t) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(t)
          }
          switch (c) {
            case "design":
              setRemoveClass(["td", "th"], ["keditor_dot"]);
              switch (a) {
                case "source":
                  "1" == this._config.useSelectionMark
                  && makeRangeSelectionMarkInDesign();
                  ReplaceImageToRealObject();
                  "1" == this._config.formMode
                  && ReplaceCustomDataToRealEvent();
                  this._Design2Source();
                  b(!1);
                  break;
                case "preview":
                  ReplaceImageToRealObject();
                  "1" == this._config.formMode
                  && ReplaceCustomDataToRealEvent();
                  this._Design2Preview();
                  break;
                case "text":
                  this._Design2Text(), b(!1)
              }
              break;
            case "source":
              _value = this._EDITOR.source.value;
              "0" == this._config.keepOriginalHtml && (_value = _value.replace(
                  /\t/g, ""), _value = removeCRLFChar(_value));
              _value = KEDITORTOP.RAONKEDITOR.util.removeLocalFileImage(_value);
              _value = xssReplaceScript(null, _value);
              "1" == this._config.useSelectionMark && "design" == a
              && (this._EDITOR.source.value = _value, makeRangeSelectionMarkInSource(
                  this._EDITOR.source), _value = this._EDITOR.source.value);
              "0" == KEDITORTOP.G_CURRKEDITOR._config.viewImgBase64Source &&
              (_value = KEDITORTOP.RAONKEDITOR.util.ImageSrcConvert(_value, !1,
                  KEDITORTOP.G_CURRKEDITOR.ID));
              var u, v, w, x, y;
              "preview" == a && "1" == this._config.tableAutoAdjustInSetHtml
              && (u = document.getElementById("keditor_design_"
                  + this.ID), v = u.style.width, w = u.style.height, u.style.width = "100%", u.style.height = "100%", x = u.style.display, y = u.style.overflow, u.style.display = "", u.style.overflow = "");
              KEDITORTOP.RAONKEDITOR.setBodyValue(_value, "", !0, !0);
              "preview" == a && "1" == this._config.tableAutoAdjustInSetHtml
              && (u.style.width = v, u.style.height =
                  w, u.style.display = x, u.style.overflow = y);
              u = this.Frame;
              showRuler(u.editor);
              switch (a) {
                case "design":
                  b(!0);
                  "1" == this._config.formMode
                      ? (ReplaceRealEventToCustomData(), ReplaceRealObjectToImage(
                          !1)) : ReplaceRealObjectToImage();
                  setAddClass(["td", "th"], ["keditor_dot"]);
                  break;
                case "preview":
                  ReplaceImageToRealObject();
                  "1" == this._config.formMode
                  && ReplaceCustomDataToRealEvent();
                  setRemoveClass(["td", "th"], ["keditor_dot"]);
                  this._Design2Preview();
                  b(!0);
                  break;
                case "text":
                  this._Design2Text()
              }
              break;
            case "preview":
              u =
                  this.Frame;
              showRuler(u.editor);
              ClearPreViewContent(u.editor);
              switch (a) {
                case "design":
                  FixFlashError();
                  "1" == this._config.formMode
                      ? (ReplaceRealEventToCustomData(), ReplaceRealObjectToImage(
                          !1)) : ReplaceRealObjectToImage();
                  setAddClass(["td", "th"], ["keditor_dot"]);
                  try {
                    this._iconEnable(
                        ""), setFocusToBody(), setFocusChildForStyle(
                        this._BODY)
                  } catch (z) {
                    KEDITORTOP && KEDITORTOP.RAONKEDITOR
                    && KEDITORTOP.RAONKEDITOR.logMode && console.log(z)
                  }
                  break;
                case "source":
                  this._Design2Source();
                  b(!1);
                  break;
                case "text":
                  this._Design2Text(),
                      b(!1)
              }
              break;
            case "text":
              switch (_value = this._EDITOR.text.value, _value = htmlSpecialChars(
                  _value), _value = addLineBreaker(this._config.enterTag,
                  _value), KEDITORTOP.RAONKEDITOR.setBodyValue(_value, "", !0,
                  !0,
                  !0), u = this.Frame, showRuler(u.editor), a) {
                case "design":
                  b(!0);
                  break;
                case "source":
                  this._Design2Source();
                  break;
                case "preview":
                  this._Design2Preview(), b(!0)
              }
          }
          this._currentMode = a;
          null != m._config.zoomList && command_zoom(m.ID);
          "1" == this._config.useSelectionMark && -1 < c.indexOf("design") && -1
          < a.indexOf("source") && setRangeSelectionMarkInSource(
              this._EDITOR.source);
          -1 < a.indexOf("design") && ("1" != this._config.useSelectionMark
          && setFocusChildForStyle(KEDITORTOP.G_CURRKEDITOR._BODY), "2"
          == KEDITORTOP.G_CURRKEDITOR._config.undoMode
          && (KEDITORTOP.G_CURRKEDITOR.UndoManager.reset(), "2"
          == KEDITORTOP.G_CURRKEDITOR._config.undoMode && setTimeout(
              function () {
                KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(!0)
              }, 1)));
          -1 == a.indexOf("source") && "1" == this._config.autoBodyFit
          && G_BodyFit.noncreationAreaBackgroundStatus && setBodyFitStyle(this,
              !0);
          try {
            for (q in G_KPlugin) {
              if ("function"
                  === typeof G_KPlugin[q].onAfterEditorChangeMode) {
                G_KPlugin[q].onAfterEditorChangeMode(
                    {
                      currMode: c,
                      newMode: a
                    })
              }
            }
          } catch (A) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(A)
          }
          setTimeout(function () {
            try {
              var b = {strNewMode: a, strBeforeMode: c};
              "function"
              === typeof KEDITORTOP.G_CURRKEDITOR._config.event.afterChangeMode
                  ? KEDITORTOP.G_CURRKEDITOR._config.event.afterChangeMode(
                      KEDITORTOP.G_CURRKEDITOR.ID, b) : "function"
                  === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_AfterChangeMode
                  && KEDITORTOP.KEDITORWIN.RAONKEDITOR_AfterChangeMode(
                      KEDITORTOP.G_CURRKEDITOR.ID, b)
            } catch (d) {
              KEDITORTOP &&
              KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(d)
            }
          }, 100);
          (-1 < this._config.toolbarArr1.indexOf("status_" + a) || -1
              < this._config.toolbarArr2.indexOf("status_" + a))
          && this._statusToolBarIconSelect(m.ID, "status_" + a)
        }
        onChange({editor: KEDITORTOP.G_CURRKEDITOR})
      }
    }
  }, start: function (a) {
    var c = _k_editor, b = c._config;
    setZoomValueToBody(document, c);
    c.setValueIsBusy = !0;
    c.____.p = c._config[R[28] + R[21] + R[18] + String.fromCharCode(100)
    + String.fromCharCode(117) + R[17] + R[14] + String.fromCharCode(75) + R[12]
    + String.fromCharCode(121)];
    _7_ = c._config[String.fromCharCode(108) + T[10] + R[17] + R[12] + T[11]
    + T[4] + String.fromCharCode(75) + T[2] + T[7] + "Html5"];
    if ("1" == b.autoMoveInitFocus.use) {
      c.autoMoveInitFocusData.targetDocument = document;
      b.autoMoveInitFocus.targetWindow
      && (c.autoMoveInitFocusData.targetDocument = b.autoMoveInitFocus.targetWindow.document, b.autoMoveInitFocus.targetWindow = null);
      var d = c.autoMoveInitFocusData.targetDocument.activeElement;
      d && (c.autoMoveInitFocusData.targetNode = d)
    }
    for (var e = [], f = b.toolbarArr1.length, g = b.toolbarArr2.length,
        h = 0; h < f; h++) {
      d = b.toolbarArr1[h], 0 == d.indexOf("p_")
      && (d = d.split("_"), e.push(d[1]));
    }
    for (f = 0; f < g; f++) {
      d = b.toolbarArr2[f], 0 == d.indexOf("p_")
      && (d = d.split("_"), e.push(d[1]));
    }
    0 < b.selectSaveTypeIconShowIconList.length ? (-1 == e.indexOf(
        "convertimage") && -1 < b.selectSaveTypeIconShowIconList.indexOf(
        "convertimage") && e.push("convertimage"), -1 == e.indexOf("convertpdf")
    && -1 < b.selectSaveTypeIconShowIconList.indexOf("convertpdf") && e.push(
        "convertpdf")) : "1" == b.selectSaveTypeIconShowAllIcon && (-1
    == e.indexOf("convertimage") &&
    e.push("convertimage"), -1 == e.indexOf("convertpdf") && e.push(
        "convertpdf"));
    g = 0;
    for (f = b.pluginToolExArr.length; g < f;
        g++) {
      d = b.pluginToolExArr[g], e.push(d);
    }
    var m = e.length, q = 0, t = function () {
      loadPluginJs(e[q], function () {
        q++;
        q < m ? t() : u()
      })
    }, u = function () {
      if ("1" == b.useKManager) {
        var d;
        d = ""
            + ('<div id="RAON_K_ED_Load" class="RAON_K_UP_file_load_box" style="width:'
                + b.style.width + "; height:" + b.style.height + ';">');
        d += '<span class="RAON_K_ED_loading"><img src="' + b.webPath.image
            + 'icon/loading.gif" alt="loading image" /></span>';
        d += '</div><iframe id="download_frame" name="download_frame" style="display:none;" title="RAON K Agent Download"></iframe>';
        d += '<div id="RAON_K_ED_Updating" class="RAON_K_UP_file_load_box" style="width:'
            + b.style.width + "; height:" + b.style.height
            + '; display:none;">';
        d += '<span class="RAON_K_ED_loading"><img src="' + b.webPath.image
            + 'icon/update.gif" alt="loading image" /></span>';
        d += "</div>";
        document.getElementById("editorContentArea").innerHTML = d;
        d = null;
        try {
          var e = KEDITORTOP.RAONKEDITOR.ajax.load(b.agentInstallFolderUrl +
                  "kversion.js?t=" + KEDITORTOP.RAONKEDITOR.util.getTimeStamp()),
              e = e.replace(/\r\n/gi, ""), e = e.replace(/\r/gi, ""),
              e = e.replace(/\n/gi, ""), f = e.indexOf("{"), g = e.indexOf("}"),
              e = e.substring(f, g + 1);
          d = JSON.parse(e)
        } catch (h) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(h)
        }
        e = [["kcmd", "KC00"]];
        f = {
          browser: KEDITORTOP.RAONKEDITOR.UserAgent.browser.name.toLowerCase(),
          useragent: encodeURIComponent(KEDITORTOP.navigator.userAgent),
          version: KEDITORTOP.RAONKEDITOR.UserAgent.browser.major
        };
        e.push(["k00", f]);
        e.push(["k01",
          b.useServerLicense ? b.productKey.replace(/_/g, "-") : b.productKey]);
        e.push(["k02", b.licenseKey.replace(/[+]/g, "%2B")]);
        e.push(["k03",
          encodeURIComponent(b.agentInstallFolderUrl + "kversion.js")]);
        for (var f = _0_[3], g = ___, f = f.split(","), q = f.length, m = !1,
            t = 0; t < q; t++) {
          if (__0_(f[t])) {
            m = !0;
            break
          }
        }
        if (m || b.useServerLicense) {
          g = "http://localhost";
        }
        e.push(["k04", encodeURIComponent(g)]);
        e.push(["k05", b.security.keyValue]);
        e.push(["k06", "EDITOR"]);
        e.push(["k16", b.managerLang]);
        e.push(["k17",
          0]);
        f = getManagerColorValue(b.style.skinName);
        userColor1 = f.c1;
        userColor2 = f.c2;
        userColor3 = f.c3;
        userColor4 = f.c4;
        e.push(["k50", {
          cr1: userColor1,
          cr2: userColor2,
          cr3: userColor3,
          cr4: userColor4
        }]);
        f = {};
        "1" == b.autoChangeToHtml5Mode && (f.skip_update8000 = 1);
        for (p in f) {
          e.push(["k68", f]);
          break
        }
        "" != b.NTLM && (c.tempHttpHeaderObj.Authorization = b.NTLM);
        e.push(["k71", _k_editor.httpHeaderArr]);
        f = "";
        d && d.agent && d.editor && (f = d.agent
            + KEDITORTOP.RAONKSolution.Agent.formfeed + d.editor);
        e.push(["kp1", encodeURIComponent(f)]);
        "1" == b.dext5Install && (d.dext5editor || d.dext5upload) && e.push(
            ["kp3", 1]);
        var u = setManagerParam("{}", e),
            u = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(u);
        try {
          d = "", d = _k_editor._config.agentHttps ? "kupload_manager_port2"
              : "kupload_manager_port", KEDITORTOP.window.localStorage[d] && 5
          == KEDITORTOP.window.localStorage[d].length
          && (_k_editor.managerPort = KEDITORTOP.window.localStorage[d])
        } catch (v) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(v)
        }
        var I = 0, M = function (a) {
          var b =
              a.ID, c = KEDITORTOP.RAONKEDITOR.UserConfigHashTable.getItem(b);
          if ("undefined" != typeof c) {
            var d = KEDITORTOP.RAONKEDITOR.RAONKMULTIPLEID.indexOf(b);
            -1 < d && KEDITORTOP.RAONKEDITOR.RAONKMULTIPLEID.splice(d, 1);
            delete KEDITORTOP.RAONKEDITOR.RAONKMULTIPLE["raonk_frame_" + b];
            KEDITORTOP.RAONKSolution.Agent.isCheckingPort = !1;
            KEDITORTOP.RAONKSolution.Agent.isUpdating
            && (KEDITORTOP.RAONKSolution.Agent.isUpdating = !1);
            a.agentNewInstall = !1;
            KEDITORTOP.RAONKSolution.Agent.isOtherUploadWaiting = !1;
            a.AgentInstallFailCheckTimeout &&
            clearTimeout(a.AgentInstallFailCheckTimeout);
            KEDITORTOP.RAONKSolution.Agent.isLoaded = !0;
            "" == KEDITORTOP.RAONKSolution.Agent.connectedPort
            && (KEDITORTOP.RAONKSolution.Agent.connectedPort = ""
            != a.managerPort ? a.managerPort : "00000");
            a.newInstallInterval && clearInterval(a.newInstallInterval);
            console.log("fn_autoChangeToHtml5Mode complete!");
            c.Runtimes = "html5";
            new KEDITORTOP.RAONKEditor(c)
          }
        }, K = function (a) {
          if ("1" == _k_editor._config.autoChangeToHtml5Mode) {
            M(
                _k_editor);
          } else if ("0" != _k_editor._config.useAutoInstall &&
              !KEDITORTOP.RAONKSolution.Agent.isUpdating
              && !KEDITORTOP.RAONKSolution.Agent.isStartInstall
              && (KEDITORTOP.RAONKSolution.Agent.isStartInstall = !0, 0 == I)) {
            I++;
            var c = !0;
            try {
              if (0 == _k_editor.agentInstallEvent) {
                _k_editor.agentInstallEvent = !0;
                if ("1" == b.autoChangeToHtml5Mode) {
                  M(_k_editor);
                  return
                }
                var d = {type: "install"}, e;
                "function"
                === typeof KEDITORTOP.G_CURRKEDITOR._config.event.agentInstall
                    ? e = KEDITORTOP.G_CURRKEDITOR._config.event.agentInstall(
                        _k_editor.ID, d) : "function"
                    === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_AgentInstall &&
                    (e = KEDITORTOP.KEDITORWIN.RAONKEDITOR_AgentInstall(
                        _k_editor.ID, d));
                !1 === e && (c = !1)
              }
            } catch (f) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(f)
            }
            "1" == _k_editor._config.agentInstallFailCheck.use
            && startAgentInstallFailCheck(_k_editor);
            if (c) {
              if ("1" == _k_editor._config.useAgentInstallGuide) {
                var c = getDialogWindow(), g = getDialogDocument(), d = {},
                    d = getWindowClientSize(c), h = "CSS1Compat" == g.compatMode
                        ? g.documentElement.scrollWidth : g.body.scrollWidth,
                    q = "CSS1Compat" == g.compatMode
                        ? g.documentElement.scrollHeight :
                        g.body.scrollHeight,
                    h = changeValueForZoom(h, _k_editor),
                    q = changeValueForZoom(q, _k_editor);
                e = {};
                e = getWindowScrollPos(c);
                if (null == g.getElementById("kupload_install_div_back")) {
                  var m = g.createElement("div");
                  m.innerHTML = '<div id="kupload_install_div_back" style="background-color:white; filter:alpha(opacity=80); opacity:0.8; -moz-opacity:0.8; -ms-filter:progid:DXImageTransform.Microsoft.Alpha(Opacity=80); -khtml-opacity: 0.8; left: 0px; top: 0px; width: '
                      + h + "px; height: " + q
                      + "px; display: block; position: absolute; z-index: " +
                      (_k_editor._config.agentInstallGuideZIndex + 1)
                      + ';"></div>';
                  g.body.appendChild(m.firstChild)
                }
                null == g.getElementById("kupload_install_div") && (h = "", a
                && !0 === a.forceInstall
                && (h = "&f=1"), h = _k_editor._config.webPath.agentInstallGuide
                    + "?t=" + KEDITORTOP.RAONKEDITOR.util.getTimeStamp()
                    + h, "1"
                == _k_editor._config.autoSetDocumentDomain
                && (h = KEDITORTOP.RAONKEDITOR.util.setUrlForDocumentDomain(h,
                    KEDITORTOP.KEDITORDOC)), a = g.createElement(
                    "div"), q = '<div id="kupload_install_div" style="z-index:'
                    + (_k_editor._config.agentInstallGuideZIndex +
                        5)
                    + '; position:fixed; _position:absolute; overflow:hidden; width:502px; height:250px; background-color:white; box-shadow: 0 0 18px 1px rgba(0,0,0,0.4);">', q = q
                    + ('<iframe frameborder="0" src="' + h
                        + '" style="width:502px; height:260px; border-width:0px;"></iframe>')
                    + "</div>", a.innerHTML = q, h = [0,
                  0], KEDITORTOP.RAONKEDITOR.browser.quirks
                && (h = e), a.firstChild.style.left = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                        h[0] + d[0] / 2 - 251)
                    + "px", a.firstChild.style.top = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                        h[1] + d[1] / 2 - 125) +
                    "px", KEDITORTOP.RAONKEDITOR.installGuideResizeEvt = function () {
                  try {
                    var a = g.getElementById("kupload_install_div_back");
                    if (a) {
                      var b = "CSS1Compat" == g.compatMode
                              ? g.documentElement.scrollWidth : g.body.scrollWidth,
                          c = "CSS1Compat" == g.compatMode
                              ? g.documentElement.scrollHeight
                              : g.body.scrollHeight,
                          b = changeValueForZoom(b, _k_editor),
                          c = changeValueForZoom(c, _k_editor);
                      a.style.width = b + "px";
                      a.style.height = c + "px"
                    }
                  } catch (d) {
                    KEDITORTOP && KEDITORTOP.RAONKEDITOR
                    && KEDITORTOP.RAONKEDITOR.logMode && console.log(d)
                  }
                }, KEDITORTOP.RAONKEDITOR.util.addEvent(c,
                    "resize",
                    KEDITORTOP.RAONKEDITOR.installGuideResizeEvt), g.body.appendChild(
                    a))
              } else {
                requestManagerInstall(window, document)
              }
            }
          }
        }, P = function (c) {
          var d = KEDITORTOP.RAONKSolution.Agent.parseRtn(c);
          c = d.code;
          d = d.valueArr;
          if ("" == _k_editor.agentGuid) {
            if (1E3 == c) {
              var e = function (b, c) {
                KEDITORTOP.RAONKSolution.Agent.isUpdating
                && (KEDITORTOP.RAONKSolution.Agent.isUpdating = !1);
                b.agentNewInstall = !1;
                KEDITORTOP.RAONKSolution.Agent.isOtherUploadWaiting = !1;
                b.AgentInstallFailCheckTimeout && clearTimeout(
                    b.AgentInstallFailCheckTimeout);
                KEDITORTOP.RAONKSolution.Agent.isLoaded = !0;
                b.agentGuid = c[0];
                c[4] ? b.av = KEDITORTOP.RAONKEDITOR.util.base64_encode(c[4])
                    : c[1] && (b.av = KEDITORTOP.RAONKEDITOR.util.base64_encode(
                    c[1]));
                c[2] && (b.dv = KEDITORTOP.RAONKEDITOR.util.base64_encode(
                    c[2]));
                c[3] && 0 < c[3].length && (b.localFontList = c[3].split(
                    KEDITORTOP.RAONKSolution.Agent.formfeed));
                if (void 0 != c[5] && void 0 != c[6]) {
                  if ("0" == c[5]) {
                    var d = b._config.agentDocumentEdit.length;
                    if (0 < d) {
                      for (var e = 0; e < d; e++) {
                        if ("word"
                            == b._config.agentDocumentEdit[e]) {
                          b._config.agentDocumentEdit.splice(e,
                              1);
                          break
                        }
                      }
                    }
                  }
                  if ("0" == c[6] && (d = b._config.agentDocumentEdit.length, 0
                  < d)) {
                    for (e = 0; e < d; e++) {
                      if ("hwp"
                          == b._config.agentDocumentEdit[e]) {
                        b._config.agentDocumentEdit.splice(e, 1);
                        break
                      }
                    }
                  }
                }
                c[7] && (b.osDPI = parseInt(c[7], 10));
                d = !0;
                "" == KEDITORTOP.RAONKEDITOR.util.getRV(b.av)
                    ? (d = !1, b.agentGuid = "", K(), setTimeout(function () {
                      b.agentNewInstall = !0;
                      null == b.newInstallInterval
                      && (b.newInstallInterval = setInterval(function () {
                        b.agentNewInstall ? sendMessageToAgent(u, P, null, !0)
                            : clearInterval(b.newInstallInterval)
                      }, 2E3))
                    }, 500)) : "2018012" <=
                    KEDITORTOP.RAONKEDITOR.util.getRV(b.av).replace(/\./g, "")
                    && (c[4] ? b.av = KEDITORTOP.RAONKEDITOR.util.base64_encode(
                        c[4]) : (d = !1, b.agentGuid = "", K(), setTimeout(
                        function () {
                          b.agentNewInstall = !0;
                          null == b.newInstallInterval
                          && (b.newInstallInterval = setInterval(function () {
                            b.agentNewInstall ? sendMessageToAgent(u, P, null,
                                    !0)
                                : clearInterval(b.newInstallInterval)
                          }, 2E3))
                        }, 500)));
                d && (closeInstallPopup(
                    b), b.removeAgentInstallCheckImg = null, b.agentInstallCheckImgArr = null, ""
                == KEDITORTOP.RAONKSolution.Agent.connectedPort
                && (KEDITORTOP.RAONKSolution.Agent.connectedPort =
                    b.managerPort), KEDITORTOP.RAONKSolution.Agent.sendCount--, b._setEditorIcon(
                    a))
              };
              d[9] && "" != d[9] && "1" == d[9]
              && (_k_editor.isSupportedAgentPdf = !0);
              d[7] && (_k_editor.osDPI = parseInt(d[7], 10));
              if (d[8] && "" != d[8]) {
                var f = _k_editor.multiUserConfig = null;
                try {
                  var f = JSON.parse(d[8]), g = f.MultiUserConfig.length;
                  _k_editor.multiUserConfig = {};
                  for (var h = 0; h < g;
                      h++) {
                    _k_editor.multiUserConfig[f.MultiUserConfig[h].name] = {
                      http: f.MultiUserConfig[h].http,
                      https: f.MultiUserConfig[h].https
                    };
                  }
                  multiUserPortCheckAsync({
                    currEditor: _k_editor,
                    callback: function () {
                      e(_k_editor, d)
                    }
                  })
                } catch (q) {
                  _k_editor.multiUserConfig = null, e(_k_editor, d)
                }
              } else {
                e(_k_editor, d)
              }
            } else if (1002 == c) {
              if (g = _k_editor._FRAMEWIN.document.getElementById(
                  "RAON_K_ED_Load")) {
                g.style.display = "none";
              }
              if (g = _k_editor._FRAMEWIN.document.getElementById(
                  "RAON_K_ED_Updating")) {
                g.style.display = "";
              }
              KEDITORTOP.RAONKSolution.Agent.isUpdating = !0;
              if ("1" == b.autoChangeToHtml5Mode) {
                M(_k_editor);
              } else {
                if (0 == _k_editor.agentInstallEvent) {
                  f = !0;
                  try {
                    g = {type: "update"}, _k_editor.agentInstallEvent = !0, "function"
                    ===
                    typeof KEDITORTOP.G_CURRKEDITOR._config.event.agentInstall
                        ? h = KEDITORTOP.G_CURRKEDITOR._config.event.agentInstall(
                            _k_editor.ID, g) : "function"
                        === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_AgentInstall
                        && (h = KEDITORTOP.KEDITORWIN.RAONKEDITOR_AgentInstall(
                            _k_editor.ID, g)), !1 === h && (f = !1)
                  } catch (m) {
                    KEDITORTOP && KEDITORTOP.RAONKEDITOR
                    && KEDITORTOP.RAONKEDITOR.logMode && console.log(m)
                  }
                }
                "1" == _k_editor._config.agentInstallFailCheck.use
                && startAgentInstallFailCheck(_k_editor);
                0 != f && setTimeout(function () {
                  J(0)
                }, 500)
              }
            } else {
              3E3 !=
              c && (7E3 == c ? (K({forceInstall: !0}), setTimeout(function () {
                _k_editor.agentNewInstall = !0;
                null == _k_editor.newInstallInterval
                && (_k_editor.newInstallInterval = setInterval(function () {
                  _k_editor.agentNewInstall ? sendMessageToAgent(u, P, null, !0,
                          KEDITORTOP.RAONKSolution.managerFinalUrl, _k_editor)
                      : clearInterval(_k_editor.newInstallInterval)
                }, 2E3))
              }, 500)) : 2001 == c ? sendMessageToAgent(u, P, null, !0,
                  KEDITORTOP.RAONKSolution.managerFinalUrl, _k_editor) : 8E3
              == c
                  ? M(_k_editor) : alert(
                      "Error occurred during create editor\n" + c + ", " +
                      d))
            }
          }
        }, E = function (a) {
          KEDITORTOP.RAONKSolution.Agent.isOtherUploadWaiting = !0;
          _k_editor.managerLoadedCheck = !0;
          _k_editor.managerPort = a;
          KEDITORTOP.RAONKSolution.managerFinalUrl = _k_editor.managerUrl
              + _k_editor.managerPort;
          try {
            a = "", a = _k_editor._config.agentHttps ? "kupload_manager_port2"
                : "kupload_manager_port", KEDITORTOP.window.localStorage[a] = _k_editor.managerPort
          } catch (b) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode && console.log(b)
          }
          sendMessageToAgent(u, P, function () {
            _k_editor._config.sendToManagerType =
                "2";
            sendMessageToAgent(u, P, null, !0,
                KEDITORTOP.RAONKSolution.managerFinalUrl, _k_editor);
            _k_editor._config.sendToManagerType = "1"
          }, !0, KEDITORTOP.RAONKSolution.managerFinalUrl, _k_editor)
        };
        if (0 == KEDITORTOP.RAONKSolution.Agent.isCheckingPort) {
          KEDITORTOP.RAONKSolution.Agent.isCheckingPort = !0;
          var L = [];
          "" != _k_editor.managerPort ? L.push(_k_editor.managerPort)
              : L = _k_editor._config.agentHttps ? b.managerHttpsPortArr
                  : b.managerPortArr;
          var O = L.length, N = [], F = [], J = function (a) {
            0 == a && (O = L.length, N[0] = [], N[0].push(L[0]),
                F[0] = [], F[0].push(L[0]), 1 < O && (N[1] = [], N[1].push(
                L[1]), N[1].push(L[3]), N[2] = [], N[2].push(L[2]), N[2].push(
                L[4]), F[1] = [], F[1].push(L[1]), F[1].push(
                L[3]), F[2] = [], F[2].push(L[2]), F[2].push(L[4])));
            var c = N[a].length;
            _k_editor.agentInstallCheckImgArr = [];
            for (var d = 0; d < c; d++) {
              var e = new Image;
              e.style.display = "none";
              e.onload = function (b) {
                return function (c) {
                  _k_editor.removeAgentInstallCheckImg(
                      _k_editor.agentInstallCheckImgArr);
                  KEDITORTOP.RAONKSolution.Agent.isOtherUploadWaiting && 1
                  != _k_editor.managerLoadedCheck ?
                      setTimeout(function () {
                        J(a)
                      }, 0) : E(L[b])
                }
              }(d);
              e.onerror = function (c) {
                return function (d) {
                  d = N[a][c];
                  for (var e = F[a].length - 1; 0 <= e; e--) {
                    F[a][e] == d
                    && F[a].splice(e, 1);
                  }
                  if (0 == F[a].length) {
                    _k_editor.removeAgentInstallCheckImg(
                        _k_editor.agentInstallCheckImgArr);
                    if ("" != _k_editor.managerPort) {
                      _k_editor.managerPort = "";
                      try {
                        d = "", d = _k_editor._config.agentHttps
                            ? "kupload_manager_port2"
                            : "kupload_manager_port", KEDITORTOP.window.localStorage[d] = ""
                      } catch (f) {
                        KEDITORTOP && KEDITORTOP.RAONKEDITOR
                        && KEDITORTOP.RAONKEDITOR.logMode &&
                        console.log(f)
                      }
                    }
                    1 < O ? 2 == a
                        && (K(), a = -1, L = [], L = _k_editor._config.agentHttps
                            ? b.managerHttpsPortArr : b.managerPortArr) : 0 == a
                        && (K(), a = -1, L = [], L = _k_editor._config.agentHttps
                            ? b.managerHttpsPortArr : b.managerPortArr);
                    setTimeout(function () {
                      J(a + 1)
                    }, 0)
                  }
                }
              }(d);
              _k_editor.agentInstallCheckImgArr.push(e);
              document.body.appendChild(e)
            }
            for (d = 0; d < c;
                d++) {
              _k_editor.agentInstallCheckImgArr[d].src = _k_editor.managerUrl
                  + L[d] + "/png.png?t="
                  + KEDITORTOP.RAONKEDITOR.util.getTimeStamp()
            }
          };
          _k_editor.removeAgentInstallCheckImg = function (a) {
            for (var b =
                a.length, c = 0; c < b; c++) {
              a[c].parentNode.removeChild(
                  a[c]), a[c] = void 0
            }
          };
          J(0)
        } else {
          var W = setInterval(function () {
            "" != KEDITORTOP.RAONKSolution.Agent.connectedPort
            && (clearInterval(
                W), "00000" == KEDITORTOP.RAONKSolution.Agent.connectedPort ? M(
                _k_editor) : (E(
                KEDITORTOP.RAONKSolution.Agent.connectedPort), KEDITORTOP.RAONKSolution.Agent.sendCount++))
          }, 300)
        }
      } else {
        _k_editor._setEditorIcon(a)
      }
    };
    c.____.l = _L__.DE(_7_);
    try {
      c.____.l = c.____.l.split("\x0B"), _0_ = c.____.l, _1_ = c.____.p
    } catch (v) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
      KEDITORTOP.RAONKEDITOR.logMode && console.log(v)
    }
    0 < m ? t() : u()
  }, _setEditorIcon: function (a) {
    var c = _k_editor, b = c._config.style.skinName,
        d = c._config.webPath.image + "skin/" + b, e = c._config.toolbarArr1,
        f = c._config.toolbarArr2;
    c._kEditorSetting();
    if ("1" == c._config.usePersonalSetting
        && KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported) {
      var g = KEDITORTOP.RAONKEDITOR.util.loadJsonFromLocalStorage(
          "raonk_personal_setting");
      g && "" != g.fontFamily && void 0 != g.fontFamily
      && (this._setting.font_family = g.fontFamily);
      g && "" !=
      g.fontSize && void 0 != g.fontSize
      && (this._setting.font_size = g.fontSize);
      g && "" != g.lineHeight && void 0 != g.lineHeight
      && (this._setting.line_height = g.lineHeight);
      g && "" != g.pasteToImage && void 0 != g.pasteToImage && "-1"
      != g.pasteToImage && (c._config.pasteToImage = g.pasteToImage)
    }
    c.remove_item = c._config.removeItem;
    -1 < c._config.disableInsertImage.indexOf(",image,") && null
    == navigator.userAgent.match(/iPad/) && null != navigator.userAgent.match(
        /iPhone|Mobile|UP.Browser|Android|BlackBerry|Windows CE|Nokia|webOS|Opera Mini|SonyEricsson|opera mobi|Windows Phone|IEMobile|POLARIS/)
    &&
    c.remove_item.push("image_create");
    !getApplyDragResize(c) && (0 == KEDITORTOP.RAONKEDITOR.browser.ie || 11
        < KEDITORTOP.RAONKEDITOR.browser.ieVersion) && c.remove_item.push(
        "table_selection");
    KEDITORTOP.RAONKEDITOR.browser.ie && 9
    > KEDITORTOP.RAONKEDITOR.browser.ieVersion && (c.remove_item.push(
        "format_painter"), c.remove_item.push("apply_format"));
    c.remove_item.push("grid");
    "1" == c._config.paste_image_base64_remove && (c.remove_item.push(
        "paste_to_image"), c.remove_item.push("paste_to_image_detail"));
    c.remove_context_item =
        c._config.removeContextItem;
    (KEDITORTOP.RAONKEDITOR.browser.mobile
        || KEDITORTOP.RAONKEDITOR.browser.iOS) && c.remove_item.push(
        "full_screen");
    KEDITORTOP.KEDITORWIN != top && "1" != c._config.frameFullScreen
    && c.remove_item.push("full_screen");
    if ("" != c._config.xss_remove_tags) {
      g = c._config.xss_remove_tags.toLowerCase();
      -1 < g.indexOf("iframe") && (c.remove_item.push(
          "iframe_create"), c.remove_item.push("insert_link_media"));
      if (-1 < g.indexOf("object") || -1 < g.indexOf(
          "embed")) {
        c.remove_item.push("media_create"), c.remove_item.push(
            "flash_create");
      }
      -1 < g.indexOf("video") && c.remove_item.push("video")
    }
    "0" == c._setting.auto_save && "1" != c._config.setAutoSave.useManuallySave
    && c.remove_item.push("load_auto_save");
    "0" == c._config.setAutoSave.useManuallySave && c.remove_item.push(
        "manually_temp_save");
    0 == c._config.ruler.use && c.remove_item.push("ruler");
    G_BodyFit.widthFixableStatus || c.remove_item.push("body_fit");
    "0" == c._config.useMiniImageEditor && c.remove_item.push(
        "mini_photo_editor");
    "1" == c._config.imageEditorUse && 0 != KEDITORTOP.RAONKEDITOR.browser.ie ||
    c.remove_item.push("image_editor");
    "1" != c._config.formMode && (c.remove_item.push(
        "table_lock"), c.remove_item.push("cell_lock"), c.remove_item.push(
        "table_lock_property"));
    "0" == c._config.useKManager && c.remove_item.push("save_as");
    if (KEDITORTOP.RAONKEDITOR.browser.ie && 9
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion || "Windows"
        == KEDITORTOP.RAONKEDITOR.UserAgent.os.name
        && KEDITORTOP.RAONKEDITOR.browser.safari) {
      c.remove_item.push(
          "video"), c.remove_item.push("placeholder");
    }
    (!KEDITORTOP.RAONKEDITOR.browser.ie || KEDITORTOP.RAONKEDITOR.browser.ie &&
        11 < KEDITORTOP.RAONKEDITOR.browser.ieVersion) && c.remove_item.push(
        "spell_check");
    (KEDITORTOP.RAONKEDITOR.browser.mobile
        || KEDITORTOP.RAONKEDITOR.browser.safari
        || KEDITORTOP.RAONKEDITOR.browser.ie && 10
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion && "1"
        != c._config.useKManager) && c.remove_item.push("save_as_image");
    var g = !1, h = !0, m = !1, q = !1, t = !1;
    if ("1" != c._config.selectSaveTypeIconShowListType) {
      for (var u = c._config.toolbarArr1.length, v = 0; v < u; v++) {
        var w = c._config.toolbarArr1[v];
        0 == w.indexOf("p_") ? (w = w.split("_"),
                "convertimage" == w[1] ? m = !0 : "convertpdf" == w[1] && (q = !0))
            : "save" == w ? g = !0 : "save_as" == w ? h = !0
                : "select_save_type" == w && (t = !0)
      }
      u = c._config.toolbarArr2.length;
      for (v = 0; v < u; v++) {
        w = c._config.toolbarArr2[v], 0 == w.indexOf("p_")
            ? (w = w.split("_"), "convertimage" == w[1] ? m = !0 : "convertpdf"
                == w[1] && (q = !0)) : "save" == w ? g = !0 : "save_as" == w
                ? h = !0 : "select_save_type" == w && (t = !0)
      }
    }
    u = c.remove_item.length;
    for (v = 0; v < u; v++) {
      w = c.remove_item[v], 0 == w.indexOf("p_")
          ? (w = w.split("_"), "convertimage" == w[1] ? m = !1 : "convertpdf"
              == w[1] && (q = !1)) : "save" == w ? g =
              !1 : "save_as" == w ? h = !1 : "select_save_type" == w
              && (t = !0);
    }
    u = c._config.selectSaveTypeIconShowIconList;
    -1 == u.indexOf("save") && (g = !1);
    -1 == u.indexOf("save_as") ? h = !1 : 1 == u.length && -1 !== u.indexOf(
        "save_as") && "html5" == c._config.runtimes && (t = h = !1);
    -1 == u.indexOf("p_convertimage") ? m = !1 : 1 == u.length && -1
        !== u.indexOf("p_convertimage") && KEDITORTOP.RAONKEDITOR.browser.ie
        && 9 >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && (t = m = !1);
    -1 == u.indexOf("p_convertpdf") ? q = !1 : 1 == u.length && -1
        !== u.indexOf("p_convertpdf") && "html5" == c._config.runtimes &&
        KEDITORTOP.RAONKEDITOR.browser.ie && 9
        < KEDITORTOP.RAONKEDITOR.browser.ieVersion && (t = q = !1);
    m || q || g || h || t || c.remove_item.push("select_save_type");
    h = q = "";
    m = isViewMode(c);
    g = "";
    KEDITORTOP.RAONKEDITOR.browser.chrome
    || KEDITORTOP.RAONKEDITOR.browser.opera ? g = " bt1"
        : KEDITORTOP.RAONKEDITOR.browser.gecko && (g = " bt2");
    h += '<div id="ue_editor_main_' + c.ID + '" class="K_EdiTor' + g
        + '" style="z-index:' + G_MAIN_ZINDEX
        + '; width:100%; "  oncontextmenu="return false">';
    g = c._config.statusBarItem.length;
    0 == g && (c._config.status_bar =
        "1");
    q = "";
    q = "1" == c._config.top_status_bar || m ? q + "height:1px;" : q
        + "height:28px;";
    if ("1" == c._config.top_status_bar || m) {
      q += "display:none;";
    }
    "" != q && (q = " style='" + q + "'");
    h += "<div id='keditor_topstatusbar_" + c.ID
        + "' class='ue_as K_EdiTor_TopStatusBar_" + b + "'" + q + ">";
    h += "    <ul class='" + b + "'>";
    q = c._config.statusBarItem;
    for (t = 0; t < q.length;
        t++) {
      u = q[t], u = KEDITORTOP.RAONKEDITOR.util.trim(
          u).toLowerCase(), v = "", c.getEditorMode() == u.replace("top_", "")
      && (v = 'class="on"'), h += " <li " + v + ' id="ue_' + c.ID + "top_" + u
          + '"><a href="javascript:void(0);">KEditor_Top_Status</a></li>';
    }
    h += "    </ul></div>";
    h += '<div onselectstart="return false;" id="ue_toolbar_' + c.ID
        + '" style="width:100%" class="ue_as">';
    q = c._makeEditorTopMenu();
    h += q;
    h = "3" == c._config.tool_bar || isViewMode(c) ? h
        + ('\t\t<table id="keditor_toolbar_' + c.ID
            + '" border="0" cellpadding="0" cellspacing="0" class="ue_table ue_tg_'
            + b + '" style="display:none; ">') : h
        + ('\t\t<table id="keditor_toolbar_' + c.ID
            + '" border="0" cellpadding="0" cellspacing="0" class="ue_table ue_tg_'
            + b + '" style="">');
    h += "<caption><span class='blind'>Toolbar Area</span></caption>";
    h += "\t\t\t<tr>";
    h += '\t\t\t\t<td style="width:100%;">';
    h += '\t\t\t\t\t<table id="table_gecko_' + c.ID
        + '" border="0" cellpadding="0" cellspacing="0" class="ue_table01" ';
    h += ">";
    h += "<caption><span class='blind'>Toolbar Area - gecko</span></caption>";
    q = function (a, b) {
      var c = b.length;
      if (0 < c) {
        for (a.splice(0, 0, "separator"), --c; 0 <= c; c--) {
          a.splice(0,
              0, b[c] + "_edit")
        }
      }
    };
    t = e.length;
    u = f.length;
    0 == t && 0 == u ? c._config.tool_bar = "3" : 0 == t
        ? c._config.tool_bar = "1" : 0 == u && (c._config.tool_bar = "2");
    "1" == c._config.tool_bar ? q(f, c._config.agentDocumentEdit) :
        q(e, c._config.agentDocumentEdit);
    q = c._makeEditorIcon(e, "1", a);
    h += q;
    q = c._makeEditorIcon(f, "2", a);
    h += q;
    q = c._makeEditorFormBar();
    h += q;
    if ("1" == c._config.ruler.use) {
      var h = h + "<tr>", x = G_Ruler.rulerPositionLen,
          h = h + ('<td colspan="4" class="ue_tdb_' + b
              + '01 " id="keditor_tab_tool3_' + c.ID
              + '" style="padding:0px; height:18px; display:none; position:relative; overflow:visible;">');
      "2" == c._config.ruler.mode && --x;
      "2" == c._config.ruler.mode && (h += '<div id="ruler_pointer_value_'
          + c.ID
          + '" style="position:absolute; display:none;" class="ruler_pointer_value"></div>');
      h += '<div style="position: relative; overflow: hidden;height: 18px;">';
      h += '<div id="keditor_ruler_horizontal_scroll_' + c.ID
          + '" class="ruler_horizontal_scroll"><div id="h_minus_ruler_area" style="display: inline;"></div><div id="h_plus_ruler_area" style="display: inline;"></div></div>';
      for (a = 0; a < x; a++) {
        h = "2" == c._config.ruler.mode ? 1 == a ? h
            + ('<img id="keditor_ruler_point_' + a + "_" + c.ID
                + '" src="../images/bg/point2.gif" title="'
                + RAONKEditor_lang.setting["ruler" + a + "_desc"]
                + '" alt="" style="vertical-align:top; border:0px; width:14px; height:9px; margin:0 0 0 -7; display:none; position:absolute; top:0px; z-index:'
                +
                (G_MAIN_ZINDEX + 101) + ';" />') : h
            + ('<img id="keditor_ruler_point_' + a + "_" + c.ID
                + '" src="../images/bg/point3.gif" title="'
                + RAONKEditor_lang.setting["ruler" + a + "_desc"]
                + '" alt="" style="vertical-align:bottom; border:0px; width:14px; height:9px; margin:0 0 0 -7; display:none; position:absolute; bottom:0px; z-index:'
                + (G_MAIN_ZINDEX + 101) + ';" />') : h
            + ('<img id="keditor_ruler_point_' + a + "_" + c.ID
                + '" src="../images/bg/point.gif" title="'
                + RAONKEditor_lang.setting["ruler" + a + "_desc"]
                + '" alt="" style="vertical-align:top; border:0px; width:14px; height:9px; margin:0 0 0 -7; display:none; position:absolute; top:-1px; z-index:'
                +
                (G_MAIN_ZINDEX + 101) + ';" />');
      }
      "2" == c._config.ruler.mode
      && (h += '<div id="keditor_ruler_area_0" style="background-color:#dddddd; background-color: rgba(0,0,0,0.18); filter:alpha(opacity=70); opacity:0.70; position:absolute; z-index:'
          + (G_MAIN_ZINDEX + 100)
          + '; height:18px; position:absolute; width:10px; left:0px; top:0px;"></div>', a = G_Ruler.maxRulerPosition, e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              KEDITORTOP.KEDITORWIN.document.getElementById(
                  "raonk_frame_holder" + c.ID).style.width)
          - a, h += '<div id="keditor_ruler_area_1" style="background-color:#dddddd; background-color: rgba(0,0,0,0.18); filter:alpha(opacity=70); opacity:0.70; position:absolute; z-index:'
          +
          (G_MAIN_ZINDEX + 100)
          + "; top:0px; height:18px; position:absolute; width:" + e
          + "px; left:" + a + 'px;"></div>', "1"
      == c._config.ruler.useMouseGuide
      && (h += '<div id="keditor_ruler_mouse_guide_' + c.ID
          + '" class="ruler_mouse_guide" ></div>'));
      h += "</div>";
      h += "</div>";
      h += "</td>";
      h += "</tr>";
      "2" == c._config.ruler.mode && (h += "<tr>", "1"
      == c._config.ruler.useVertical ? (h += '<td colspan="4" class="ue_tdb_'
              + b + '01 " id="keditor_tab_tool4_' + c.ID
              + '" style="border-bottom:0px; padding:0px; height:6px; background-color:#ffffff; background-repeat:no-repeat; display:none; position:relative; border-top:0; overflow:visible">',
              h += '<div class = "ruler_background_' + b
                  + '" style="height: 9px;width: 17px;margin-top: -3px;position: fixed;"></div>', h += '<div style="top:0px; position:absolute; height:6px;">', h += '<img id="keditor_ruler_point_3_'
              + c.ID + '" src="../images/bg/point_square.gif" title="'
              + RAONKEditor_lang.setting.ruler3_desc
              + '" alt="" style="vertical-align:bottom; border:0px; width:14px; height:7px; margin:0 0 0 -7; display:none; position:absolute; top:-1px; z-index:'
              + (G_MAIN_ZINDEX + 101) + ';" />', h += "</div>")
          : (h += '<td colspan="4" class="ue_tdb_' +
              b + '01 " id="keditor_tab_tool4_' + c.ID
              + '" style="border-bottom:0px; margin-top:-2px; padding:0px; height:6px; background-color:#ffffff; background-repeat:no-repeat; display:none; position:relative; border-top:0; overflow:visible">', h += '<img id="keditor_ruler_point_3_'
              + c.ID + '" src="../images/bg/point_square.gif" title="'
              + RAONKEditor_lang.setting.ruler3_desc
              + '" alt="" style="vertical-align:bottom; border:0px; width:14px; height:7px; margin:0 0 0 -7; display:none; position:absolute; top:-1px; z-index:'
              +
              (G_MAIN_ZINDEX + 101) + ';" />'), h += "</td>", h += "</tr>")
    }
    h += "\t\t\t\t\t</table>";
    h += "\t\t\t\t</td>";
    h += "\t\t\t</tr>";
    h += "\t\t</table>";
    h += '\t<div id="ue_diabled_div_' + c.ID
        + '" style="background-color:#ffffff; filter:alpha(opacity=50); opacity:0.50; position:absolute; z-index:'
        + (G_MAIN_ZINDEX + 1E3)
        + '; left:0px; top:0px; width:0px; height:100%;"></div>';
    "2" == c._config.ruler.mode
    && (h += '\t<div id="ue_ruler_back_div" style="background-color:#ffffff; filter:alpha(opacity=0); opacity:0; position:absolute; z-index:'
        +
        (G_MAIN_ZINDEX + 100)
        + '; left:0px; top:0px; width:100%; height:100%; display:none;"></div>');
    "1" == c._config.tool_bar_grouping
    && (h += '<div class="tool_bar_grouping_box" id="keditor_div_tool_bar_grouping_box1" style="display:none; z-index:'
        + (G_MAIN_ZINDEX + 900)
        + ';">', h += '<div class="tool_bar_grouping_list tool_bar_grouping_list_'
        + c._config.style.skinName
        + '" id="keditor_tool_bar_grouping_list1">', h += '<ul id="ul_tool_bar_grouping_list1">', h += "</ul>", h += "</div>", h += "</div>", h += '<div class="tool_bar_grouping_box" id="keditor_div_tool_bar_grouping_box2" style="display:none; z-index:'
        +
        (G_MAIN_ZINDEX + 900)
        + ';">', h += '<div class="tool_bar_grouping_list tool_bar_grouping_list_'
        + c._config.style.skinName
        + '" id="keditor_tool_bar_grouping_list2">', h += '<ul id="ul_tool_bar_grouping_list2">', h += "</ul>", h += "</div>", h += "</div>");
    h += "</div>";
    "1" == c._config.clickCtrlHyperlink
    && (h += '<div class="hyper_link_help_box" id="keditor_div_hyper_link_help" style="display:none; z-index:'
        + (G_MAIN_ZINDEX + 900) + ';">', h += '<div class="'
        + c._config.style.skinName
        + '">', h += '<p id="keditor_div_hyper_link_help_content">',
        h += "</p>", h += '<p class="content">'
        + RAONKEditor_lang.hyperlink.open, h += "</p>", h += "</div>", h += "</div>");
    if ("1" == c._config.ruler.use) {
      x = G_Ruler.rulerPositionLen;
      h += '<div id="keditor_ruler_pointline_div">';
      for (a = 0; a < x;
          a++) {
        e = c._config.ruler.guideLineColor, f = c._config.ruler.guideLineStyle, "2"
        == c._config.ruler.mode
        && (e = c._config.ruler.moveGuideLineColor, f = c._config.ruler.moveGuideLineStyle), h += '<div id="keditor_ruler_pointline_'
            + a + "_" + c.ID
            + '" style="position:absolute; z-index: 9999; border-left:' + f
            + " 1px " +
            e + '; display:none;"></div>';
      }
      h += "</div>"
    }
    "1" == c._config.ruler.use && "2" == c._config.ruler.mode && ("1"
        == c._config.ruler.autoFitMode || G_BodyFit.useNoncreationAreaBackground
        || (h += '<div id="keditor_ruler_pointline_4_' + c.ID
            + '" style="position:absolute; left:' + G_Ruler.maxRulerPosition
            + "px; z-index: 9999; border-left:" + c._config.ruler.guideLineStyle
            + " 1px " + c._config.ruler.guideLineColor + ';"></div>'));
    "1" == c._config.ruler.use && "1" == c._config.ruler.useVertical
    && (h = G_Ruler.viewRulerStatus && "edit" == c._config.mode ?
        h + ('<div id="keditor_ruler_vertical_' + c.ID
            + '" class="ruler_vertical ruler_vertical_' + b + '" style="height: '
            + c.height + 'px;"><div id="keditor_ruler_vertical_scroll_' + c.ID
            + '" class="ruler_vertical_scroll') : h
        + ('<div id="keditor_ruler_vertical_' + c.ID
            + '" class="ruler_vertical" style="height: ' + c.height
            + 'px; display:none;"><div id="keditor_ruler_vertical_scroll_'
            + c.ID
            + '" class="ruler_vertical_scroll'), KEDITORTOP.RAONKEDITOR.browser.ie
    && 8 == KEDITORTOP.RAONKEDITOR.browser.ieVersion
    && (h += " ie8"), h += '" ><div id="v_minus_ruler_area" style="display: inline;"></div><div id="v_plus_ruler_area" style="display: inline;"></div></div>',
    "2" == c._config.ruler.mode
    && (h += '<div id="keditor_ruler_vertical_area_0_' + c.ID
        + '" class="ruler_vertical_unfocused" ></div><div id="keditor_ruler_vertical_area_1_'
        + c.ID
        + '" class="ruler_vertical_unfocused" style="height:100%;"></div>'), h += '<div id="keditor_ruler_vertical_disabled_'
        + c.ID + '" class="ruler_vertical_disabled"></div>', h += "</div > ");
    "2" == c._config.horizontalLine.use
    && (h += '<div id="keditor_horizontal_line_' + c.ID + '"></div>');
    a = c._config.style.height.replace("px", "");
    c._defaultHeight = a + "";
    h +=
        '\t<div id="ue_editor_holder_' + c.ID + '" class="ue_editor_' + b
        + '_lr" ';
    if (KEDITORTOP.RAONKEDITOR.browser.mobile
        || KEDITORTOP.RAONKEDITOR.browser.iOS) {
      h = "view" == c._config.mode
      && "1" == c._config.view_mode_auto_height ? h
          + ' style="overflow:hidden;"'
          : h + ' style="overflow:scroll; -webkit-overflow-scrolling:touch;"';
    }
    h += "\t></div>";
    h += '\t<div id="status_' + c.ID + '" class="ue_as" style="width:100%;">';
    h = "1" == c._config.status_bar || m || 0 == g ? h
        + ('\t\t<table id="keditor_statusbar_' + c.ID
            + '" border="0" cellpadding="0" cellspacing="0" class="ue_table_' +
            b + '" style="background-image:url(' + d
            + "/ue_gbg.gif); display:none; ") : h
        + ('\t\t<table id="keditor_statusbar_' + c.ID
            + '" border="0" cellpadding="0" cellspacing="0" class="ue_table_'
            + b + '" style="background-image:url(' + d + "/ue_gbg.gif); ");
    h += '">';
    h += "<caption><span class='blind'>Statusbar Area</span></caption>";
    h += '\t\t    <tr id="status_tr_' + c.ID + '" ';
    h += ">";
    h += "\t\t\t\t<td>";
    h += '\t\t\t\t\t<ul class="ue_btn_' + b + '" id="keditor_tab_status_' + c.ID
        + '">';
    if (0 == g) {
      h += ' <li class="" id="ue_' + c.ID
          + 'design" style="visibility:hidden;"><a href="javascript:void(0);">KEditor_Status</a></li>';
    } else {
      for (q = c._config.statusBarItem, t = 0; t < q.length;
          t++) {
        u = q[t], u = KEDITORTOP.RAONKEDITOR.util.trim(
            u).toLowerCase(), h += ' <li class="" id="ue_' + c.ID + u
            + '"><a href="javascript:void(0);">KEditor_Status</a></li>';
      }
    }
    h += "\t\t\t\t\t</ul>";
    h += '<ul class="ue_btn_' + b + '" style="float: right;">';
    h += '<li id="keditor_file_open_loading" style="width: 120px; text-align:right; cursor:default; border-right:none; display:none;">';
    h += '<span style="color:black; margin-right:10px; margin-top:1px;">'
        + RAONKEditor_lang.msg.opening_file +
        ' <img src="' + c._config.webPath.image
        + 'icon/loading.gif" style="width:10px;" alt=""/></span>';
    h += "</li>";
    "1" == c._config.wordCount.use && (h += '<li id="word_count_' + c.ID
        + '_holder" style="width: 300px; ', null == c._config.zoomList
    && (h += "text-align: right; "), h += 'cursor:default;"><span id="count_line_span_'
        + c.ID
        + '" style="margin-right:10px;"></span><span id="count_characters_span_'
        + c.ID + '" style="margin-right:10px;"></span></li>');
    null != c._config.zoomList && (h += '<li id="zoom_' + c.ID
        + '_holder" class="zoom_editor_holder"><span class="bottom_width_r"><textarea id="ue_'
        +
        c.ID + 'zoom_text" title="' + RAONKEditor_lang.icon.zoom_text
        + '"maxlength="5" rows="1" wrap="soft"></textarea>', h += '<a class="z_arrow" id="ue_'
        + c.ID
        + 'zoom" href="javascript:void(0);">', h += '\t<span style="display:block;position:absolute; z-index:'
        + (G_MAIN_ZINDEX + 2E3) + '">', h += '\t\t<span id="raon_pan_zoom_'
        + c.ID
        + '" style="cursor:pointer; background-color:#ffffff; position:absolute;  left:0px; top:0px;  padding:0px; border:0px solid #cccccc;"></span>', h += "\t</span>", h += '</a><a class="z_plus" id="ue_'
        + c.ID +
        'zoom_plus" href="javascript:void(0);">', h += '</a><a class="z_minus" id="ue_'
        + c.ID + 'zoom_minus" href="javascript:void(0);"></a></span></li>');
    h += "</ul>";
    h += "\t\t\t\t</td>";
    h += "\t\t\t</tr>";
    h += "\t\t</table>";
    h += "\t</div>";
    h += "</div>";
    document.getElementById("editorContentArea").innerHTML = h;
    for (a = 0; a < x; a++) {
      b = document.getElementById(
          "keditor_ruler_point_" + a + "_" + c.ID), null != b && void 0 != b
      && "2" != c._config.ruler.mode && (b.onmousedown = function () {
        return !1
      }, b.unselectable = "on");
    }
    for (x = 0; x < this.remove_item.length; x++) {
      -1 <
      this.remove_item[x].indexOf("detail") && (b = document.getElementById(
          "keditor_span_" + this.ID + this.remove_item[x]))
      && (b.style.display = "none");
    }
    b = this._setting.word_break_type;
    d = this._setting.word_wrap_type;
    "" == b && (b = "normal");
    "" == d && (d = "normal");
    x = document.getElementById("ue_editor_holder_" + c.ID);
    createEditorIframe(c._config, x, "keditor_design_" + c.ID,
        RAONKEditor_lang.iframe_title.design, c._docType[c._setting.doctype],
        c._setting.encoding, c._setting.lang, c._setting.xmlnsname,
        c._setting.font_family, c._setting.font_size,
        c._setting.line_height, b, d);
    setEditorBorder(c);
    b = document.createElement("label");
    b.id = "keditor_source_label_" + c.ID;
    b.setAttribute("for", "keditor_source_" + c.ID);
    b.className = "blind";
    b.innerText = RAONKEditor_lang.iframe_title.source;
    x.appendChild(b);
    b = document.createElement("textarea");
    b.id = "keditor_source_" + c.ID;
    b.title = RAONKEditor_lang.iframe_title.source;
    KEDITORTOP.RAONKEDITOR.browser.ie && 7
    >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
        ? b.style.cssText = "padding: 0px !important" : b.style.padding = "0px";
    b.style.color =
        "#111111";
    "" != c._config.editingAreaBgColor
    && (b.style.backgroundColor = c._config.editingAreaBgColor);
    b.style.width = "0px";
    b.style.height = "0px";
    b.style.display = "none";
    b.style.borderWidth = "0px";
    b.style.margin = "0px 0px";
    b.className = "K_EdiTor_source_editor_font";
    "1" == c._config.sourceViewtype && ("wrap" in b ? b.wrap = "off"
        : "wordWrap" in b.style && (b.style.wordWrap = "normal"));
    x.appendChild(b);
    b = document.createElement("label");
    b.id = "keditor_text_label_" + c.ID;
    b.setAttribute("for", "keditor_text_" + c.ID);
    b.className =
        "blind";
    b.innerText = RAONKEditor_lang.iframe_title.text;
    x.appendChild(b);
    b = document.createElement("textarea");
    b.id = "keditor_text_" + c.ID;
    b.title = RAONKEditor_lang.iframe_title.text;
    KEDITORTOP.RAONKEDITOR.browser.ie && 7
    >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
        ? b.style.cssText = "padding: 0px !important" : b.style.padding = "0px";
    b.style.color = "#111111";
    "" != c._config.editingAreaBgColor
    && (b.style.backgroundColor = c._config.editingAreaBgColor);
    b.style.width = "0px";
    b.style.height = "0px";
    b.style.display = "none";
    b.style.borderWidth =
        "0px";
    b.style.margin = "0px 0px";
    b.className = "K_EdiTor_text_editor_font";
    x.appendChild(b);
    if (x = document.getElementById("ue_" + c.ID
        + "design")) {
      x.className = c._config.style.skinName, x.getElementsByTagName(
          "A")[0].className = "color_on", x.getElementsByTagName(
          "A")[0].parentNode.style.backgroundColor = "#ffffff";
    }
    document.getElementById("keditor_background")
    || (x = document.createElement("div"), x.setAttribute("id",
        "keditor_background"), x.style.zIndex = G_MAIN_ZINDEX
        + 1E3, document.getElementsByTagName("body")[0].appendChild(x));
    document.getElementById("keditor_click_background")
    || (x = document.createElement("div"), x.setAttribute("id",
        "keditor_click_background"), x.style.zIndex = G_MAIN_ZINDEX
        + 1E3, document.body.appendChild(
        x), KEDITORTOP.RAONKEDITOR.util.addEvent(x, "click", function () {
      RAONK_EDITOR.prototype.dialog._click_background()
    }), x.onmousedown = function () {
      return !1
    }, x.unselectable = "on");
    c._kEditorFormatting.init(c.ID);
    c._kEditorLineHeight.init(c.ID, c);
    c._kEditorzoom.init(c.ID);
    if (KEDITORTOP.RAONKEDITOR.browser.gecko
        || KEDITORTOP.RAONKEDITOR.browser.ie &&
        12 <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
        || KEDITORTOP.RAONKEDITOR.browser.safari) {
      x = null, 0
      == !!KEDITORTOP.KEDITORDOC.getElementById("keditor_paste_temp_frame")
      && (x = KEDITORTOP.KEDITORDOC.createElement(
          "iframe"), x.id = "keditor_paste_temp_frame", x.style.width = "0px", x.style.height = "0px", x.style.display = "none", b = "document.open();"
          + (isCustomDomain(document) ? 'document.domain="' + document.domain
              + '";' : "")
          + " document.close();", b = KEDITORTOP.RAONKEDITOR.browser.ie && 12
      > KEDITORTOP.RAONKEDITOR.browser.ieVersion ?
          "javascript:void(function(){" + encodeURIComponent(b) + "}())"
          : "", x.src = b, KEDITORTOP.KEDITORDOC.body.appendChild(x));
    }
    document.getElementById("ue_" + c.ID + "design");
    c._setIconEvents();
    setToolbarScroll(c, !0);
    c._iconEnable("default");
    displayAgentDocumentIcon(c);
    setEditorHeight(c, !0);
    document.getElementById("ue_editor_holder_" + c.ID).style.height = 0
    > c._defaultHeight ? "0px" : c._defaultHeight + "px";
    c._config.useServerLicense ? KEDITORTOP.RAONKEDITOR.util.checkServerLicense(
        c) : (x = setTimeout(_fn_0,
        2E3), KEDITORTOP.RAONKEDITOR.RAONKMULTIPLETIMEOUT.push(x));
    "1" == c._config.resize_bar && 0 < g && KEDITORTOP.KEDITORWIN == top
    && !KEDITORTOP.RAONKEDITOR.browser.mobile
    && !KEDITORTOP.RAONKEDITOR.browser.iOS && c._setEditorResizeBar();
    if ("1" == c._config.tool_bar_grouping) {
      groupingIcon();
      var x = document.getElementById(
              "keditor_span_" + c.ID + "tool_bar_grouping1"),
          y = document.getElementById("keditor_div_tool_bar_grouping_box1"),
          b = function () {
            return function (a) {
              KEDITORTOP.G_CURRKEDITOR = c;
              "block" == z.style.display && hideGroupingBox();
              if ("block" == y.style.display) {
                hideGroupingBox();
              } else {
                if (KEDITORTOP.RAONKEDITOR.browser.mobile ||
                    "mobile"
                    == KEDITORTOP.RAONKEDITOR.UserAgent.device.type) {
                  y.style.top = "0px", y.style.left = "0px";
                }
                y.style.display = "block";
                showGroupingBackground();
                setPositionGroupingDiv(1);
                var b = y.getElementsByTagName("a"), d = b.length;
                if (0 < d) {
                  var e = setInterval(function () {
                    c.groupingBoxOpen && (b[0].focus(), setFocusFirstAndLast2(
                        b[0], b[d - 1]), c.groupingBoxOpen = !1, clearInterval(
                        e))
                  }, 100)
                }
              }
            }
          }();
      KEDITORTOP.RAONKEDITOR.util.addEvent(x, "click", b);
      x = document.getElementById(
          "keditor_span_" + c.ID + "tool_bar_grouping2");
      10 > KEDITORTOP.RAONKEDITOR.browser.ieVersion &&
      (7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion
      && (x.style.height = "27px"), x.style.marginTop = "-2px");
      var z = document.getElementById("keditor_div_tool_bar_grouping_box2"),
          b = function () {
            return function (a) {
              KEDITORTOP.G_CURRKEDITOR = c;
              "block" == y.style.display && hideGroupingBox();
              if ("block" == z.style.display) {
                hideGroupingBox();
              } else {
                if (KEDITORTOP.RAONKEDITOR.browser.mobile || "mobile"
                    == KEDITORTOP.RAONKEDITOR.UserAgent.device.type) {
                  z.style.top = "0px", z.style.left = "0px";
                }
                z.style.display = "block";
                showGroupingBackground();
                setPositionGroupingDiv(2);
                var b = z.getElementsByTagName("a"), d = b.length;
                if (0 < d) {
                  var e = setInterval(function () {
                    c.groupingBoxOpen && (b[0].focus(), setFocusFirstAndLast2(
                        b[0], b[d - 1]), c.groupingBoxOpen = !1, clearInterval(
                        e))
                  }, 100)
                }
              }
            }
          }();
      KEDITORTOP.RAONKEDITOR.util.addEvent(x, "click", b)
    }
    if ("2" == c._config.ruler.mode) {
      var A = document.getElementById("keditor_ruler_point_0_" + c.ID),
          B = document.getElementById("keditor_ruler_point_1_" + c.ID),
          C = document.getElementById("keditor_ruler_point_2_" + c.ID),
          D = document.getElementById("keditor_ruler_point_3_" +
              c.ID);
      KEDITORTOP.RAONKEDITOR.util.addEvent(A, "mouseover", function () {
        A.style.cursor = "pointer"
      });
      KEDITORTOP.RAONKEDITOR.util.addEvent(B, "mouseover", function () {
        B.style.cursor = "pointer"
      });
      KEDITORTOP.RAONKEDITOR.util.addEvent(C, "mouseover", function () {
        C.style.cursor = "pointer"
      });
      KEDITORTOP.RAONKEDITOR.util.addEvent(D, "mouseover", function () {
        D.style.cursor = "pointer"
      });
      KEDITORTOP.RAONKEDITOR.util.addEvent(A, "mousedown", rulerStartDrag);
      KEDITORTOP.RAONKEDITOR.util.addEvent(B, "mousedown", rulerStartDrag);
      KEDITORTOP.RAONKEDITOR.util.addEvent(C,
          "mousedown", rulerStartDrag);
      KEDITORTOP.RAONKEDITOR.util.addEvent(D, "mousedown", rulerStartDrag)
    }
  }, _setLazyLoadFrame: function (a) {
    "1" != KEDITORTOP.G_CURRKEDITOR._config.contextMenuDisable
    && KEDITOR_CONTEXT._create(a);
    "0" == KEDITORTOP.G_CURRKEDITOR._config.top_menu && KEDITOR_TOPMENU._create(
        a);
    -1 < KEDITORTOP.G_CURRKEDITOR._config.runtimes.indexOf("html5") && 1
    > KEDITORTOP.G_CURRKEDITOR._config.imageQuality.quality
    && (a = document.createElement(
        "canvas"), a.id = "keditor_imageCanvas", a.style.display = "none", KEDITORTOP.G_CURRKEDITOR._FRAMEWIN.document.body.appendChild(
        a))
  },
  _setEditorResizeBar: function () {
    KEDITORTOP.G_CURRKEDITOR.keditorResize = new KEditorResize(
        KEDITORTOP.G_CURRKEDITOR);
    KEDITORTOP.G_CURRKEDITOR.keditorResize.createStatusResizeBar();
    KEDITORTOP.G_CURRKEDITOR.keditorResize.apply(KEDITORTOP.KEDITORDOC)
  }, _kEditorSetting: function () {
    this._setting.grid_color = this._config.gridColor;
    this._setting.grid_color_nm = this._config.gridColorName;
    this._setting.grid_spans = this._config.gridSpans;
    this._setting.grid_form = this._config.gridForm;
    this._setting.encoding = this._config.encoding;
    this._PageProp.encoding = this._setting.encoding;
    this._setting.word_break_type = KEDITORTOP.RAONKEDITOR.util.getWordBreakStyle(
        this._config);
    this._setting.word_wrap_type = KEDITORTOP.RAONKEDITOR.util.getWordWrapStyle(
        this._config);
    this._setting.page_title = this._config.document.docTitle;
    this._setting.page_title && "" != this._setting.page_title
    || (this._setting.page_title = RAONKEditor_lang.document.no_title);
    var a = "";
    "1" == this._config.enforceDoctype ? a = "None" : "2"
    == this._config.enforceDoctype ? KEDITORTOP.RAONKEDITOR.browser.ie ?
            a = "Auto" : (a = "None", this._config.enforceDoctype = "1")
        : a = this._config.docType;
    this._setting.doctype = this._setting_DocType(a);
    this._PageProp.doctype = this._setting.doctype;
    this._setting.xmlnsname = this._config.xmlnsname;
    this._PageProp.xmlnsname = this._setting.xmlnsname;
    this._setting.lang = this._config.lang;
    if ((this._PageProp.lang = this._setting.lang) && 0
        < this._setting.lang.length) {
      var a = document.getElementsByTagName("html")[0], c = this._setting.lang;
      -1 < c.indexOf("-") && (c = c.split("-")[0]);
      a.setAttribute("lang",
          c);
      a.setAttribute("xml:lang", c);
      0 < this._setting.xmlnsname.length && a.setAttribute("xmlns",
          this._setting.xmlnsname)
    }
    this._setting.font_family = this._config.defaultFontFamily;
    this._setting.font_size = this._config.defaultFontSize;
    this._setting.line_height = this._config.defaultLineHeight;
    this._setting.show_font_real = this._config.showRealFont;
    this._setting.enter_tag = this._config.enterTag;
    this._setting.shift_enter_tag = this._config.shiftEnterTag;
    a = getAutoSave(this);
    "0" != a && ("1" == this._config.setAutoSave.mode ?
        a = "1," + this._config.setAutoSave.interval : "0"
        == this._config.setAutoSave.mode && (a = "2"));
    this._setting.auto_save = a;
    this._setting.auto_save_fn = null;
    "1" == this._config.useLineBreak && "1"
    == this._config.saveLineBreakToLocalStorage
    && KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported
    && ((a = KEDITORTOP.RAONKEDITOR.util.loadJsonFromLocalStorage(
        "raonk_" + this.ID + "_line_break"))
        ? (c = a.word_wrap_type, this._setting.word_break_type = a.word_break_type, this._setting.word_wrap_type = c)
        : (this._setting.word_break_type = "1" ==
        this._config.wordBreakType ? "break-all" : "2"
        == this._config.wordBreakType ? "keep-all"
            : "normal", this._setting.word_wrap_type = "1"
        == this._config.wordWrapType ? "break-word" : "normal"));
    KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported
    && (this._setting.config_paste_to_image = this._config.pasteToImage);
    this._docType.Auto = KEDITORTOP.RAONKEDITOR.util.getDocType(
        KEDITORTOP.document);
    this._docType.None = "";
    this._docType["XHTML 1.1"] = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">';
    this._docType["XHTML 1.0 Transitional"] = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">';
    this._docType["XHTML 1.0 Strict"] = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">';
    this._docType["XHTML 1.0 Frameset"] = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">';
    this._docType["HTML 5"] = "<!DOCTYPE html>";
    this._docType["HTML 4.01 Transitional"] = '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">';
    this._docType["HTML 4.01 Strict"] = '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">';
    this._docType["HTML 4.01 Frameset"] = '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">';
    this._docType["HTML 3.2"] = '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">';
    this._docType["HTML 2.0"] =
        '<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">'
  }, _setting_DocType: function (a) {
    for (var c = "HTML 5",
        b = "Auto;None;XHTML 1.1;XHTML 1.0 Transitional;XHTML 1.0 Strict;XHTML 1.0 Frameset;HTML 5;HTML 4.01 Transitional;HTML 4.01 Strict;HTML 4.01 Frameset;HTML 3.2;HTML 2.0".split(
            ";"), d = b.length, e = 0; e < d; e++) {
      if (a == b[e]) {
        c = a;
        break
      }
    }
    return c
  }, _makeEditorTopMenu: function () {
    var a = this._config.style.skinName, c = "",
        b = this._config.topMenuItem.length;
    0 == b && (this._config.top_menu = "1");
    if ("1" == this._config.top_menu || isViewMode(this)) {
      c +=
          '<table style="display:none; height:0px;" border="0" cellpadding="0" cellspacing="0" class="ue_tm tm_'
          + a + '" id="keditor_menu_' + this.ID
          + '" >';
    } else if (c += '<table border="0" cellpadding="0" cellspacing="0" class="ue_tm tm_'
        + a + '" id="keditor_menu_' + this.ID + '" >', -1 < (","
        + this._config.toolbarArr1.join(",") + ",").indexOf("status_") || -1
    < ("," + this._config.toolbarArr2.join(",") + ",").indexOf(
        "status_")) {
      c += '<div id="ue_top_menu_diabled_div_' + this.ID
          + '" class="ue_tm" style="background-color:#ffffff; filter:alpha(opacity=50); opacity:0.50; position:absolute; z-index:'
          +
          (G_MAIN_ZINDEX + 1E3) + '; left:0px; top:0px; width:0px;"></div>';
    }
    c = c + "<caption><span class='blind'>Top Menu Area</span></caption>"
        + ('<tr><td><ul id="keditor_tab_menu_' + this.ID + '">');
    for (a = 0; a < b; a++) {
      var d = this._config.topMenuItem[a],
          d = KEDITORTOP.RAONKEDITOR.util.trim(d).toLowerCase(),
          c = c + ('<li id="ue_' + this.ID + d
              + '"><a href="javascript:void(0);" id="' + this.ID + ":" + d
              + '">'
              + RAONKEditor_lang.top_menu[d] + "</a></li>");
    }
    c += "</ul></td></tr>";
    return c += "</table>"
  }, _makeEditorIcon: function (a, c, b) {
    var d = this._config.style.skinName,
        e = this._config.webPath.image,
        f = '<span  class="ue_SM"><img style="margin:1px; padding: 0px; width: 11px; height: 26px;" src="'
            + (e + "skin/" + d) + '/separator.gif" alt="" /></span>';
    b = "";
    var g = 0, g = a.length, h = isViewMode(this);
    if ("0" == c) {
      b = b + "<tr>" + ('\t<td class="ue_tdb_' + d
          + '" style="padding: 1px 5px 0px 5px;" >');
    } else if ("1" == c) {
      b += '<tr id="tool1_' + this.ID + '">';
      var m = "", q = this._config.agentDocumentEdit.length;
      if (0 == q || 0 != this._config.tool_bar) {
        m = ' style="display:none;"';
      }
      for (var t = 0; t < q; t++) {
        var u = this._config.agentDocumentEdit[t],
            v = RAONKEditor_lang.icon[u + "_edit"],
            w = RAONKEditor_lang.icon[u + "_edit"], w = w.replace("MS ", "");
        b += '<td class="ue_tdb_' + d + ' editOnOther vertical" rowspan="2"' + m
            + '><button id="keditor_big_btn_' + u + 'edit" title="' + v
            + '"><span class="icon-edit' + ("hwp" == u ? " forHangul" : "")
            + '"></span><br><span class="text">' + w + "</span></button></td>"
      }
      b += '<td id="keditor_document_separator" class="editOnOther ue_tdb_' + d
          + '" rowspan="2"' + m + "></td>";
      m = "";
      KEDITORTOP.RAONKEDITOR.browser.mobile && "1"
      == this._config.useAutoToolbar && (m =
          "position:relative; display:block;");
      u = "1" == this._config.tool_bar_grouping ? "" : " white-space: normal;";
      b = "3" == this._config.tool_bar || "1" == this._config.tool_bar || h ? b
          + ('\t<td class="ue_tdb_' + d
              + '" style="padding: 2px 5px 0px; display:none;' + m + u
              + '" id="keditor_tab_tool1_' + this.ID + '">') : b
          + ('\t<td class="ue_tdb_' + d + '" style="padding: 2px 5px 0px;' + m
              + u + '" id="keditor_tab_tool1_' + this.ID + '">')
    } else {
      b += '<tr id="tool2_' + this.ID
          + '">', m = "", KEDITORTOP.RAONKEDITOR.browser.mobile && "1"
      == this._config.useAutoToolbar &&
      (m = "position:relative; display:block;"), u = "1"
      == this._config.tool_bar_grouping ? "" : " white-space: normal;", b = "3"
      == this._config.tool_bar || "2" == this._config.tool_bar || h ? b
          + ('\t<td class="ue_tdb_' + d
              + '01" style="padding: 2px 5px 0px; display:none;' + m + u
              + '" id="keditor_tab_tool2_' + this.ID + '">') : b
          + ('\t<td class="ue_tdb_' + d + '01" style="padding: 2px 5px 0px;' + m
              + u + '" id="keditor_tab_tool2_' + this.ID + '">');
    }
    for (h = 0; h < g; h++) {
      "0" == c ? m = a[h] : (m = a[h], "apply_format" == m
      && (this.isUseApplyFormat = !0));
      m = KEDITORTOP.RAONKEDITOR.util.trim(m).toLowerCase();
      u = this.remove_item.length;
      for (q = 0; q < u; q++) {
        if (this.remove_item[q].toLowerCase() == m) {
          m = "remove";
          break
        }
      }
      if ("0" == c) {
        b += '<span class="uebutton_combo_on" id="keditor_span_'
            + this.ID + m + '" >', b += "</span>", b += f;
      } else if (0
          == m.indexOf("p_")) {
        t = m.split("_"), q = t[1], u = "icon", 2
        < t.length
        && (u = t[2]), b += '<span style="" class="uebutton_span_on" id="keditor_span_'
            + this.ID + m + '">', t = "", KEDITORTOP.RAONKEDITOR.browser.ie
        && (t = "vertical-align:bottom; "), b += '\t<a href="javascript:;" id="'
            + this.ID + ":" + m + '"><img style="' + t
            + 'margin: 0px; padding: 0px; width: 20px; height: 20px;" id="ue_' +
            this.ID + m + '" class="ue_H ue_M" title="" alt="" src="'
            + this._config.webPath.plugin + q + "/images/" + u
            + '.png" /></a>', b += "</span>", G_ICON_FULL_SET.push(
            m);
      } else if (getCustomIconAttr(m).isCustom) {
        u = "custom", null
        != KEDITORTOP.RAONKEDITOR.ajax.load(
            e + this._config.style.iconName + "/" + getCustomIconAttr(m).command
            + ".gif") && (u = getCustomIconAttr(
            m).command), b += '<span style="" class="uebutton_span_on" id="keditor_span_'
            + this.ID + m + '">', t = "", KEDITORTOP.RAONKEDITOR.browser.ie
        && (t = "vertical-align:bottom; "), b += '\t<a href="javascript:;" id="'
            +
            this.ID + ":" + m + '"><img style="' + t
            + 'margin: 3px 0px 0px 3px; padding: 0px; width: 16px; height: 16px;" id="ue_'
            + this.ID + m + '" class="ue_H ue_M" title="" alt="" src="' + e
            + this._config.style.iconName + "/" + u
            + '.gif" /></a>', b += "</span>", G_ICON_FULL_SET.push(
            m);
      } else {
        switch (m) {
          case "remove":
            break;
          case "separator":
            b += f;
            break;
          case "font_family":
          case "font_size":
          case "formatting":
          case "line_height":
          case "letter_spacing":
            u = !1;
            switch (m) {
              case "font_family":
                "1" == this._config.useFontFamilyKeyin && (u = !0);
                break;
              case "font_size":
                "1" ==
                this._config.useFontSizeKeyin && (u = !0);
                break;
              case "line_height":
                "1" == this._config.useLineHeightKeyin && (u = !0)
            }
            if (u) {
              if (u = "", KEDITORTOP.RAONKEDITOR.browser.ie
              && KEDITORTOP.RAONKEDITOR.browser.quirks
              && (u = "22px"), b += '<span class="uebutton_combo_on', "font_size"
              == m && "1" == this._config.useFontSizeIncDec
                  ? b += " fontSize upDown" : "line_height" == m && "1"
                  == this._config.useLineHeightIncDec
                  && (b += " lineHeight upDown"), b += '" id="keditor_span_'
                  + this.ID + m
                  + '" >', q = "", KEDITORTOP.RAONKEDITOR.browser.ie
              && (q = 'class="l2"'), b +=
                  '\t<textarea placeholder="" rows="1" wrap="soft" id="txtara_'
                  + this.ID + m + '" style="height:' + u + ';" title="'
                  + RAONKEditor_lang.icon[m].replace("\uae30\ubcf8", "") + '" '
                  + q
                  + "></textarea>", b += '<a class="t_arrow" href="javascript:void(0);"  id="ue_'
                  + this.ID + m + '"></a>', "font_size" == m && "1"
              == this._config.useFontSizeIncDec || "line_height" == m && "1"
              == this._config.useLineHeightIncDec) {
                u = "", KEDITORTOP.RAONKEDITOR.browser.gecko
                && (u = ' tabindex="-1"'), b += '<a class="t_arrow t_arrow_top" href="javascript:void(0);"  id="ue_'
                    +
                    this.ID + m + '_inc" style="cursor: pointer;"' + u
                    + "></a>", b += '<a class="t_arrow t_arrow_bottom" href="javascript:void(0);"  id="ue_'
                    + this.ID + m + '_dec" style="cursor: pointer;"' + u
                    + "></a>"
              }
            } else {
              u = "";
              u = "line_height" == m ? "Fsize_Btn_" + d : "Font_Btn_" + d;
              if (KEDITORTOP.RAONKEDITOR.browser.ie
                  || KEDITORTOP.RAONKEDITOR.browser.gecko) {
                u += " l2";
              }
              b += '<span class="uebutton_combo_on';
              "font_size" == m && "1" == this._config.useFontSizeIncDec
                  ? b += " fontSize upDown" : "line_height" == m && "1"
                  == this._config.useLineHeightIncDec ? b += " lineHeight upDown" :
                      "letter_spacing" == m && "1"
                      == this._config.useLetterSpacingIncDec
                      && (b += " spacing upDown");
              b += '" id="keditor_span_' + this.ID + m + '" >';
              b += '\t<button unselectable="on" onmousedown="return false;" id="ue_'
                  + this.ID + m + '" class="' + u + '" type="button" title="'
                  + RAONKEditor_lang.icon[m].replace("\uae30\ubcf8", "")
                  + '" style="margin:0;"><span></span></button>';
              if ("line_height" == m && "1" == this._config.useLineHeightIncDec
                  || "letter_spacing" == m && "1"
                  == this._config.useLetterSpacingIncDec || "font_size" == m
                  && "1" == this._config.useFontSizeIncDec) {
                u =
                    "", KEDITORTOP.RAONKEDITOR.browser.gecko
                && (u = ' tabindex="-1"'), b += '<a class="t_arrow t_arrow_top" href="javascript:void(0);"  id="ue_'
                    + this.ID + m + '_inc" style="cursor: pointer;"' + u
                    + "></a>", b += '<a class="t_arrow t_arrow_bottom" href="javascript:void(0);"  id="ue_'
                    + this.ID + m + '_dec" style="cursor: pointer;"' + u
                    + "></a>"
              }
            }
            b += '\t<span style="display:block;position:absolute; z-index:'
                + (G_MAIN_ZINDEX + 2E3) + '">';
            b += '\t\t<span id="keditor_span_' + m + "_" + this.ID
                + '" style="cursor:pointer; background-color:#ffffff; position:absolute;  left:0px; top:0px;  padding:0px; border:0px solid #cccccc; "></span>';
            b += "\t</span>";
            b += "</span>";
            break;
          case "table_insert":
            b += '<span style="" class="uebutton_span_on" id="keditor_span_'
                + this.ID + m + '">';
            b += '\t<a href="javascript:;" id="' + this.ID + ":" + m
                + '" class="'
                + m + '"><span id="ue_' + this.ID + m
                + '" style="display:block;width:16px; height:16px;"></span></a>';
            b += '\t<span style="display:block;position:absolute; z-index:'
                + (G_MAIN_ZINDEX + 2E3) + '">';
            b += '\t\t<span id="keditor_span_' + m + "_" + this.ID
                + '" style="background-color:#ffffff; position:absolute; left:0px; top:0px; display:none; width:180px; height:200px; padding:5px; border:1px solid #cccccc;">';
            b += '\t\t\t<span id="keditor_table_rc_' + this.ID
                + '" style="font-size:12px;">0 * 0</span>';
            b += "\t\t</span>";
            b += "\t</span>";
            b += "</span>";
            m = !1;
            if (-1 < ("," + this._config.toolbarArr1.join(",") + ",").indexOf(
                ",detail_table_insert_new,") || -1 < (","
                + this._config.toolbarArr2.join(",") + ",").indexOf(
                ",detail_table_insert_new,")) {
              m = !0;
            }
            0 == m
            && (b += '<span style="" class="uebutton_dialog_on" id="keditor_span_'
                + this.ID
                + 'detail_table_insert">', b += '\t<a href="javascript:;" id="ue_'
                + this.ID + 'detail_table_insert" class="dialog"></a>',
                b += "</span>");
            break;
          case "detail_table_insert":
            b += '<span style="" class="uebutton_span_on" id="keditor_span_'
                + this.ID + m + '">';
            b += '\t<a href="javascript:;" id="' + this.ID + ":" + m
                + '" class="'
                + m + '"><span id="ue_' + this.ID + m
                + '" style="display:block;width:16px; height:16px;"></span></a>';
            b += '\t<span style="display:block;position:absolute; z-index:'
                + (G_MAIN_ZINDEX + 2E3) + '">';
            b += '\t\t<span id="keditor_span_' + m + "_" + this.ID
                + '" style="background-color:#ffffff; position:absolute; left:0px; top:0px; display:none; width:180px; height:200px; padding:5px; border:1px solid #cccccc;">';
            b += '\t\t\t<span id="keditor_table_rc_' + this.ID
                + '" style="font-size:12px;">0 * 0</span>';
            b += "\t\t</span>";
            b += "\t</span>";
            b += "</span>";
            break;
          case "detail_table_insert_new":
            b += '<span style="" class="uebutton_span_on" id="keditor_span_'
                + this.ID + m + '">';
            b += '\t<a href="javascript:;" id="' + this.ID + ":" + m
                + '" class="'
                + m + '"><span id="ue_' + this.ID + m
                + '" style="display:block;width:16px; height:16px;"></span></a>';
            b += '\t<span style="display:block;position:absolute; z-index:'
                + (G_MAIN_ZINDEX + 2E3) + '">';
            b += '\t\t<span id="keditor_span_' +
                m + "_" + this.ID
                + '" style="background-color:#ffffff; position:absolute; left:0px; top:0px; display:none; width:180px; height:200px; padding:5px; border:1px solid #cccccc; ">';
            b += '\t\t\t<span id="keditor_table_rc_' + this.ID
                + '" style="font-size:12px;">0 * 0</span>';
            b += "\t\t</span>";
            b += "\t</span>";
            b += "</span>";
            break;
          case "font_color":
            b += '<span class="uebutton_span_on" id="keditor_span_' + this.ID
                + m
                + '" style="';
            KEDITORTOP.RAONKEDITOR.browser.ie && 8
            > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            && (b += "margin: 1px 0 0 0 !important; vertical-align: top;");
            b += '">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID + m + '" class="'
                + m + '">';
            b += '<em class="editor_font_color_basic editor_color_style1" id="keditor_em_'
                + this.ID + 'color_show"></em>';
            b += "</a>";
            b += "</span>";
            b += '<span style="" class="uebutton_dialog_on" id="keditor_span_'
                + this.ID + 'detail_font_color">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID
                + 'detail_font_color" class="dialog"></a>';
            b += "</span>";
            break;
          case "detail_font_color":
            break;
          case "font_bg_color":
            b += '<span style="background-color:#ffffff;" class="uebutton_span_on" id="keditor_span_'
                +
                this.ID + m + '">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID + m + '" class="'
                + m + '">';
            b += "</a>";
            b += "</span>";
            b += '<span style="" class="uebutton_dialog_on" id="keditor_span_'
                + this.ID + 'detail_font_bg_color">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID
                + 'detail_font_bg_color" class="dialog"></a>';
            b += "</span>";
            break;
          case "detail_font_bg_color":
            break;
          case "cell_bg_color":
            b += '<span class="uebutton_span_on" id="keditor_span_' + this.ID
                + m
                + '" style="';
            KEDITORTOP.RAONKEDITOR.browser.ie && 8
            > KEDITORTOP.RAONKEDITOR.browser.ieVersion &&
            (b += "margin: 1px 0 0 0 !important; vertical-align: top;");
            b += '">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID + m + '" class="'
                + m + '">';
            b += '\t    <em class="editor_font_color_basic editor_color_style2" id="keditor_em_'
                + this.ID + 'cell_bg_color_show"></em>';
            b += "    </a>";
            b += "</span>";
            b += '<span style="" class="uebutton_dialog_on" id="keditor_span_'
                + this.ID + 'detail_cell_bg_color">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID
                + 'detail_cell_bg_color" class="dialog"></a>';
            b += "</span>";
            break;
          case "detail_cell_bg_color":
            break;
          case "list_number":
            b += '<span style="" class="uebutton_span_on" id="keditor_span_'
                + this.ID + m + '">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID + m + '" class="'
                + m + '"></a>';
            b += "</span>";
            b += '<span style="" class="uebutton_dialog_on" id="keditor_span_'
                + this.ID + 'detail_list_number">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID
                + 'detail_list_number" class="dialog"></a>';
            b += '\t<span style="display:block;position:absolute; z-index:'
                + (G_MAIN_ZINDEX + 2E3) + '">';
            b += '\t\t<span id="keditor_span_detail_list_number_' +
                this.ID
                + '" style="cursor:pointer; background-color:#ffffff; position:absolute;  left:0px; top:0px;  padding:0px; border:0px solid #cccccc;"></span>';
            b += "\t</span>";
            b += "</span>";
            break;
          case "detail_list_number":
            break;
          case "list_bullets":
            b += '<span style="" class="uebutton_span_on" id="keditor_span_'
                + this.ID + m + '">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID + m + '" class="'
                + m + '"></a>';
            b += "</span>";
            b += '<span style="" class="uebutton_dialog_on" id="keditor_span_'
                + this.ID + 'detail_list_bullets">';
            b += '\t<a href="javascript:;" id="ue_' +
                this.ID + 'detail_list_bullets" class="dialog"></a>';
            b += '\t<span style="display:block;position:absolute; z-index:'
                + (G_MAIN_ZINDEX + 2E3) + '">';
            b += '\t\t<span id="keditor_span_detail_list_bullets_' + this.ID
                + '" style="cursor:pointer; background-color:#ffffff; position:absolute;  left:0px; top:0px;  padding:0px; border:0px solid #cccccc; "></span>';
            b += "\t</span>";
            b += "</span>";
            break;
          case "detail_list_bullets":
            break;
          case "align_group":
            b += '<span style="" class="uebutton_span_on" id="keditor_span_'
                + this.ID + m + '">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID + m + '" class="'
                + m + '"></a>';
            b += "</span>";
            b += '<span style="" class="uebutton_dialog_on" id="keditor_span_'
                + this.ID + 'align_group_detail">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID
                + 'align_group_detail" class="dialog"></a>';
            b += '\t<span style="display:block;position:absolute; z-index:'
                + (G_MAIN_ZINDEX + 2E3) + '">';
            b += '\t\t<span id="keditor_span_align_group_detail_' + this.ID
                + '" style="cursor:pointer; background-color:#ffffff; position:absolute;  left:0px; top:0px;  padding:0px; border:0px solid #cccccc; "></span>';
            b += "\t</span>";
            b += "</span>";
            break;
          case "align_group_detail":
            break;
          case "order_of_objects":
            b += '<span style="" class="uebutton_span_on" id="keditor_span_'
                + this.ID + m + '">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID + m + '" class="'
                + m + '"></a>';
            b += "</span>";
            b += '<span style="" class="uebutton_dialog_on" id="keditor_span_'
                + this.ID + 'order_of_objects_detail">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID
                + 'order_of_objects_detail" class="dialog"></a>';
            b += '\t<span style="display:block;position:absolute; z-index:' +
                (G_MAIN_ZINDEX + 2E3) + '">';
            b += '\t\t<span id="keditor_span_order_of_objects_detail_' + this.ID
                + '" style="cursor:pointer; background-color:#ffffff; position:absolute;  left:0px; top:0px;  padding:0px; border:0px solid #cccccc; "></span>';
            b += "\t</span>";
            b += "</span>";
            break;
          case "order_of_objects_detail":
            break;
          case "table_group":
            b += '<span style="" class="uebutton_span_on" id="keditor_span_'
                + this.ID + m + '">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID + m + '" class="'
                + m + '"></a>';
            b += "</span>";
            b += '<span style="" class="uebutton_dialog_on" id="keditor_span_' +
                this.ID + 'table_group_detail">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID
                + 'table_group_detail" class="dialog"></a>';
            b += '\t<span style="display:block;position:absolute; z-index:'
                + (G_MAIN_ZINDEX + 2E3) + '">';
            b += '\t\t<span id="keditor_span_table_group_detail_' + this.ID
                + '" style="cursor:pointer; background-color:#ffffff; position:absolute;  left:0px; top:0px;  padding:0px; border:0px solid #cccccc; "></span>';
            b += "\t</span>";
            b += "</span>";
            break;
          case "table_group_detail":
            break;
          case "insert_datetime":
            b += '<span style="" class="uebutton_span_on" id="keditor_span_' +
                this.ID + m + '">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID + m + '" class="'
                + m + '">';
            b += "</a>";
            b += "</span>";
            b += '<span style="" class="uebutton_dialog_on" id="keditor_span_'
                + this.ID + 'detail_insert_datetime">';
            b += '\t<a href="javascript:;" id="ue_' + this.ID
                + 'detail_insert_datetime" class="dialog"></a>';
            b += "</span>";
            break;
          case "detail_insert_datetime":
            break;
          default:
            b += '<span style="" class="uebutton_span_on" id="keditor_span_'
                + this.ID + m + '">', b += '\t<a href="javascript:;" id="ue_'
                + this.ID + m + '" class="' + m + '"></a>',
                b += "</span>"
        }
      }
    }
    if ("1" == c) {
      a = !1;
      u = this.remove_item.length;
      for (q = 0; q < u; q++) {
        if ("about" == this.remove_item[q]) {
          a = !0;
          break
        }
      }
      0 == a
      && (b += '<span style="" class="uebutton_span_on" id="keditor_span_'
          + this.ID + 'about">', b += '\t<a href="javascript:;" id="ue_'
          + this.ID + 'about" class="about"></a>', b += "</span>")
    }
    "1" == this._config.tool_bar_grouping
    && (a = "a_focus", KEDITORTOP.RAONKEDITOR.browser.ie && 8
    > KEDITORTOP.RAONKEDITOR.browser.ieVersion && (a = "a_focus_ie7"), "1" == c
        ? (b += '<span style="z-index:' + (G_MAIN_ZINDEX + 850)
            + ';" class="tool_bar_grouping" id="keditor_span_' +
            this.ID
            + 'tool_bar_grouping1">', b += '\t<a href="javascript:;" id="ue_'
            + this.ID + 'tool_bar_grouping1" class="' + a + '" title="'
            + RAONKEditor_lang.icon.toolbar_grouping
            + ' 1"><span style="display:none;">'
            + RAONKEditor_lang.icon.toolbar_grouping
            + " 1</span></a>", b += "</span>") : "2" == c
        && (b += '<span style="z-index:' + (G_MAIN_ZINDEX + 850)
            + ';" class="tool_bar_grouping" id="keditor_span_' + this.ID
            + 'tool_bar_grouping2">', b += '\t<a href="javascript:;" id="ue_'
            + this.ID + 'tool_bar_grouping2" class="' + a + '" title="'
            + RAONKEditor_lang.icon.toolbar_grouping +
            ' 2"><span style="display:none;">'
            + RAONKEditor_lang.icon.toolbar_grouping
            + " 2</span></a>", b += "</span>"));
    b += "\t</td>";
    return b += "</tr>"
  }, _makeEditorFormBar: function () {
    var a = "";
    if ("1" == this._config.formMode) {
      var c = this._config.style.skinName,
          b = '<span class="ue_SM"><img style="margin:1px; padding: 0px; width: 11px; height: 26px;" src="'
              + (this._config.webPath.image + "skin/" + c)
              + '/separator.gif" alt="" /></span>', d = 0,
          d = this._config.tool_bar_admin.length;
      if (0 < d && "1" == this._config.formMode) {
        for (a = a
            + ('<table id="" class="ue_table02 tm_' +
                c + '2" border="0" cellpadding="0" cellspacing="0">')
            + "<tbody>", a += '<tr id="tool3_' + this.ID
            + '">', a += '<td class="ue_tdb_ty ue_tdb_' + c + '">', c = 0;
            c < d;
            c++) {
          var e;
          e = this._config.tool_bar_admin[c];
          e = KEDITORTOP.RAONKEDITOR.util.trim(e).toLowerCase();
          for (var f = this.remove_item.length, g = 0; g < f;
              g++) {
            if (this.remove_item[g] == e) {
              e = "remove";
              break
            }
          }
          switch (e) {
            case "remove":
              break;
            case "separator":
              a += b;
              break;
            default:
              a += '<span id="keditor_span_' + this.ID + e
                  + '" class="uebutton_type_on"><a id="ue_' + this.ID + e
                  + '" title="" href="javascript:;" class="' +
                  e.replace("input_", "type_") + '"></a></span>'
          }
        }
      }
      a += "</td>";
      a += "</tr>";
      a += "</tbody>";
      a += "</table>"
    }
    return a
  }, _div_pan_reset: function (a) {
  }, _iconEnableForTextInRange: function () {
    var a = getFirstRange(), c = a.range;
    if (a.sel.isCollapsed) {
      a = "";
      if (c = GetTDTHCell(c.startContainer)) {
        c = GetParentbyTagName(c,
            "table"), a = checkLockAttr(c, !0) && "1"
        != KEDITORTOP.G_CURRKEDITOR._config.formMode ? "focusInCellLockTable"
            : "focusInCell";
      }
      this._iconEnable(a)
    }
  }, _iconEnable: function (a, c) {
    "design" != this._newMode && (-1 < ("," + this._config.toolbarArr1.join(",")
        +
        ",").indexOf("status_") || -1 < ("," + this._config.toolbarArr2.join(
        ",") + ",").indexOf("status_")) && (a = "allDisable");
    if (null == this.iconEnableCommandType || this.iconEnableCommandType != a
        || "undo" == G_LAST_CMD || "redo" == G_LAST_CMD) {
      this.iconEnableCommandType = a;
      var b = !1;
      -1 < a.indexOf("noMerge") && (b = !0, a = a.substring(0, a.indexOf("_")));
      if (0 == KEDITORTOP.G_CURRKEDITOR._config.editorBodyEditable && ("" == a
          || "default" == a)) {
        try {
          var d = getFirstRange().range.startContainer;
          3 == d.nodeType ? d = d.parentNode : 1 != d.nodeType
              && (d = _iframeDoc.body);
          0 == d.isContentEditable && (a = "editableFalse")
        } catch (e) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(e)
        }
      }
      for (var f = null, g = null, h = "", d = f = "", m = 0,
          q = G_ICON_FULL_SET.length; m < q;
          m++) {
        if (h = KEDITORTOP.RAONKEDITOR.util.trim(
            G_ICON_FULL_SET[m]).toLowerCase(), f = document.getElementById(
            "ue_" + this.ID + h), g = document.getElementById(
            "keditor_span_" + this.ID + h), f
        && (f.style.cursor = "pointer"), g) {
          switch (h) {
            case "formatting":
            case "font_family":
            case "font_size":
            case "line_height":
            case "letter_spacing":
              f =
                  "font_size" == h && "1" == this._config.useFontSizeIncDec
                      ? "fontSize upDown uebutton_combo_" : "line_height" == h
                      && "1" == this._config.useLineHeightIncDec
                          ? "lineHeight upDown uebutton_combo_" : "letter_spacing"
                          == h && "1" == this._config.useLetterSpacingIncDec
                              ? "spacing upDown uebutton_combo_"
                              : "uebutton_combo_";
              break;
            case "detail_table_insert":
            case "detail_list_number":
            case "detail_list_bullets":
            case "order_of_objects_detail":
            case "align_group_detail":
            case "table_group_detail":
            case "detail_font_color":
            case "detail_font_bg_color":
            case "detail_cell_bg_color":
            case "detail_insert_datetime":
              f =
                  "uebutton_dialog_";
              break;
            case "input_textfield":
            case "input_textarea":
            case "input_select":
            case "input_checkbox":
            case "input_radio":
            case "input_button":
            case "input_imagebutton":
            case "input_hiddenfield":
            case "input_align_left":
            case "input_align_right":
            case "input_valign_top":
            case "input_valign_bottom":
            case "input_same_width":
            case "input_same_height":
            case "input_word_spacing":
            case "input_line_height":
            case "input_same_width_height":
            case "table_lock":
            case "cell_lock":
            case "table_lock_property":
            case "placeholder":
              f =
                  "uebutton_type_";
              break;
            default:
              f = "uebutton_span_"
          }
          if ((d = KEDITORTOP.RAONKEDITOR.util.getClass(g)) && -1 < d.indexOf(
              "_off")) {
            if (KEDITORTOP.RAONKEDITOR.util.setClass(g, f + "on"), 0
            == h.indexOf("p_")) {
              var t = h.split("_")[1];
              if (g = g.getElementsByTagName(
                  "img")[0]) {
                g.title = RAONKEditor_lang.plugins[t].icon[h]
              }
            } else if (g = g.getElementsByTagName(
                "a")[0]) {
              g.title = RAONKEditor_lang.icon[h]
            }
          }
        }
      }
      d = [];
      switch (a) {
        case "":
        case "default":
          d = "copy cut table_delete merge_cell split_cell insert_row_up insert_row_down delete_row insert_column_left insert_column_right delete_column table_bg_color table_same_width table_same_height table_same_widthheight insert_row_column insert_row insert_column table_row_clone table_selection table_select cell_size align_vertical row_property table_indent table_outdent table_select_all table_select_cell table_select_row table_select_column valign_up valign_center valign_baseline valign_bottom column_property table_property cell_property table_tool cell_border cell_bg_color table_group table_group_detail apply_format image_align_default image_align_left image_align_right table_lock cell_lock table_lock_property detail_cell_bg_color element_position order_of_objects order_of_objects_detail table_adjust insert_table_top_paragraph insert_table_bottom_paragraph table_copy_paste calculation_formula table_row_column delete_table_and_row_column table_row_column_cell_property".split(
              " ");
          break;
        case "selectedSingleCell":
          d = "new save print pagebreak copy cut paste text_paste find replace template emoticon horizontal_line image_create image_editor flash_create insert_link_media media_create iframe_create hyperlink_create insert_file file_open bookmark symbol form checkbox radiobutton button selectbox textbox textarea hidden doc_bg_color doc_bg_image detail_table_insert detail_table_insert_new table_insert table_delete insert_row_up insert_row_down insert_column_left insert_column_right merge_cell cell_size table_same_width table_same_height table_same_widthheight full_screen entity insert_row_column insert_row insert_column table_row_clone table_selection table_select row_property column_property format_painter image_align_default image_align_left image_align_right input_textfield input_radio input_checkbox input_button input_hiddenfield input_textarea input_select input_imagebutton show_blocks photo_editor insert_datetime detail_insert_datetime conversion video calculator mini_photo_editor placeholder insert_table_top_paragraph insert_table_bottom_paragraph table_selection table_indent table_outdent table_row_column table_row_clone insert_row_column insert_row_up insert_row_down insert_column_right insert_table_top_paragraph insert_table_bottom_paragraph row_property column_property table_property calculation_formula horizontal_sum vertical_sum horizontal_avg vertical_avg select_save_type".split(
              " ");
          null == KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA && (d.push(
              "table_content_paste"), d.push("intable_paste"));
          break;
        case "selectedMultiCell":
          d = "new save print pagebreak copy cut paste text_paste find replace emoticon horizontal_line template image_create image_editor flash_create insert_link_media media_create iframe_create hyperlink_create insert_file file_open bookmark symbol form checkbox radiobutton button selectbox textbox textarea hidden doc_bg_color doc_bg_image detail_table_insert detail_table_insert_new table_insert table_delete insert_row_up insert_row_down insert_column_left insert_column_right full_screen entity insert_row_column insert_row insert_column table_row_clone table_selection table_select row_property column_property format_painter image_align_default image_align_left image_align_right input_textfield input_radio input_checkbox input_button input_hiddenfield input_textarea input_select input_imagebutton show_blocks photo_editor insert_datetime detail_insert_datetime conversion video calculator mini_photo_editor placeholder insert_table_top_paragraph insert_table_bottom_paragraph table_indent table_outdent table_content_paste row_property column_property calculation_formula horizontal_sum vertical_sum horizontal_avg vertical_avg intable_paste table_row_column select_save_type".split(
              " ");
          b && d.push("merge_cell");
          break;
        case "focusInCell":
          d = "copy cut merge_cell table_same_width table_same_height table_same_widthheight doc_bg_image cell_size apply_format image_align_default image_align_left image_align_right table_copy".split(
              " ");
          null == KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA && (d.push(
              "table_content_paste"), d.push("intable_paste"));
          break;
        case "focusInCellLockTable":
          d = "copy cut merge_cell table_same_width table_same_height table_same_widthheight doc_bg_image cell_size apply_format image_align_default image_align_left image_align_right table_copy insert_row_up insert_row_down insert_column_left insert_column_right delete_row delete_column".split(
              " ");
          null == KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA && (d.push(
              "table_content_paste"), d.push("intable_paste"));
          break;
        case "focusTable":
          d = "new save print pagebreak find replace emoticon horizontal_line image_create image_editor flash_create media_create template iframe_create hyperlink_create insert_file file_open insert_link_media bookmark symbol form checkbox radiobutton button selectbox textbox textarea hidden doc_bg_color doc_bg_image detail_table_insert detail_table_insert_new table_insert merge_cell split_cell remove_css insert_row_up insert_row_down delete_row insert_column_left insert_column_right delete_column table_bg_color table_same_width table_same_height table_same_widthheight font_color font_bg_color list_number list_bullets detail_list_number detail_list_bullets template entity table_delete insert_row_column insert_row insert_column formatting font_family font_size line_height letter_spacing bold italic underline strike_through superscript subscript remove_format table_row_clone table_selection table_select cell_size align_vertical row_property select_all table_indent table_outdent table_select_all table_select_cell table_select_row table_select_column valign_up valign_center valign_baseline valign_bottom column_property table_property cell_property cell_border cell_bg_color table_group table_group_detail indent outdent image_align_default image_align_left image_align_right list_blockquote input_textfield input_radio input_checkbox input_button input_hiddenfield input_textarea input_select input_imagebutton photo_editor detail_font_color detail_font_bg_color detail_cell_bg_color insert_datetime detail_insert_datetime conversion video calculator mini_photo_editor placeholder insert_table_top_paragraph insert_table_bottom_paragraph calculation_formula table_copy_paste table_row_column delete_table_and_row_column table_row_column_cell_property select_save_type".split(
              " ");
          "1" == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_DeleteTableAlign
          && (d.push("align_left"), d.push("align_center"), d.push(
              "align_right"), d.push("align_full"), d.push(
              "align_group"), d.push("align_group_detail"));
          break;
        case "cellSelectText":
          d = "new save print pagebreak find replace emoticon horizontal_line image_create image_editor flash_create media_create template iframe_create insert_link_media bookmark symbol form checkbox radiobutton button selectbox textbox textarea hidden doc_bg_color doc_bg_image detail_table_insert detail_table_insert_new table_insert table_delete merge_cell split_cell insert_row_up insert_row_down delete_row insert_column_left insert_column_right delete_column table_bg_color table_same_width table_same_height table_same_widthheight template entity table_delete insert_row_column insert_row insert_column table_row_clone table_selection table_select cell_size align_vertical row_property table_indent table_outdent table_select_all table_select_cell table_select_row table_select_column valign_up valign_center valign_baseline valign_bottom column_property table_property cell_property cell_border cell_bg_color table_group table_group_detail format_painter image_align_default image_align_left image_align_right input_textfield input_radio input_checkbox input_button input_hiddenfield input_textarea input_select input_imagebutton table_lock cell_lock table_lock_property photo_editor detail_cell_bg_color insert_datetime detail_insert_datetime video calculator mini_photo_editor placeholder table_copy_paste delete_table_and_row_column table_row_column table_row_column_cell_property calculation_formula select_save_type".split(
              " ");
          "1" != this._config.allowInoutdentText && (d.push("indent"), d.push(
              "outdent"));
          break;
        case "selectArea":
          d = "new save print pagebreak find replace emoticon horizontal_line image_create image_editor flash_create media_create template iframe_create insert_link_media bookmark symbol form checkbox radiobutton button selectbox textbox textarea hidden doc_bg_color doc_bg_image detail_table_insert detail_table_insert_new table_insert table_delete merge_cell split_cell insert_row_up insert_row_down delete_row insert_column_left insert_column_right delete_column table_bg_color table_same_width table_same_height table_same_widthheight template entity insert_row_column insert_row insert_column table_row_clone table_selection table_select cell_size align_vertical row_property table_indent table_outdent table_select_all table_select_cell table_select_row table_select_column valign_up valign_center valign_baseline valign_bottom column_property table_property cell_property cell_border cell_bg_color table_group table_group_detail format_painter image_align_default image_align_left image_align_right input_textfield input_radio input_checkbox input_button input_hiddenfield input_textarea input_select input_imagebutton table_lock cell_lock table_lock_property photo_editor detail_cell_bg_color insert_datetime detail_insert_datetime video calculator mini_photo_editor placeholder table_adjust table_tool delete_table_and_row_column table_row_column_cell_property table_row_colum table_copy_paste calculation_formula table_row_column select_save_type".split(
              " ");
          break;
        case "focusImage":
          d = "new save print pagebreak paste text_paste find replace bookmark symbol insert_link_media media_create flash_create form checkbox radiobutton button selectbox textbox textarea hidden doc_bg_color doc_bg_image detail_table_insert detail_table_insert_new table_insert merge_cell split_cell insert_row_up insert_row_down delete_row insert_column_left insert_column_right delete_column table_bg_color table_same_width table_same_height table_same_widthheight bold underline italic strike_through superscript subscript remove_format remove_css font_color font_bg_color image_create image_editor formatting font_family font_size entity template insert_file file_open horizontal_line emoticon line_height letter_spacing list_number list_bullets detail_list_number detail_list_bullets indent outdent insert_row_column insert_row insert_column iframe_create table_indent table_outdent table_select_all table_select_cell table_select_row table_select_column valign_up valign_center valign_baseline valign_bottom table_row_clone table_selection table_select cell_size align_vertical row_property column_property table_property cell_property cell_border cell_bg_color table_group table_group_detail format_painter apply_format list_blockquote input_textfield input_radio input_checkbox input_button input_hiddenfield input_textarea input_select input_imagebutton table_lock cell_lock table_lock_property detail_font_color detail_font_bg_color detail_cell_bg_color insert_datetime detail_insert_datetime conversion video calculator placeholder table_adjust table_tool delete_table_and_row_column table_row_column_cell_property table_row_colum table_copy_paste calculation_formula table_row_column table_delete select_save_type".split(
              " ");
          break;
        case "focusFigure":
          d = "new save print pagebreak paste text_paste find replace bookmark symbol insert_link_media media_create flash_create form checkbox radiobutton button selectbox textbox textarea hidden doc_bg_color doc_bg_image detail_table_insert detail_table_insert_new table_insert merge_cell split_cell insert_row_up insert_row_down delete_row insert_column_left insert_column_right delete_column table_bg_color table_same_width table_same_height table_same_widthheight bold underline italic strike_through superscript subscript remove_format remove_css font_color font_bg_color image_create image_editor formatting font_family font_size entity template hyperlink_create insert_file file_open horizontal_line emoticon line_height letter_spacing list_number list_bullets detail_list_number detail_list_bullets indent outdent insert_row_column insert_row insert_column iframe_create table_indent table_outdent table_select_all table_select_cell table_select_row table_select_column valign_up valign_center valign_baseline valign_bottom table_row_clone table_selection table_select cell_size align_vertical row_property column_property table_property cell_property cell_border cell_bg_color table_group table_group_detail format_painter apply_format list_blockquote input_textfield input_radio input_checkbox input_button input_hiddenfield input_textarea input_select input_imagebutton table_lock cell_lock table_lock_property photo_editor detail_font_color detail_font_bg_color detail_cell_bg_color insert_datetime detail_insert_datetime conversion video calculator align_full placeholder table_adjust table_tool delete_table_and_row_column table_row_column_cell_property table_row_colum table_copy_paste calculation_formula table_row_column select_save_type".split(
              " ");
          break;
        case "focusEmbed":
          d = "new save print pagebreak paste text_paste find replace bookmark symbol insert_link_media media_create flash_create form checkbox radiobutton button selectbox textbox textarea hidden doc_bg_color doc_bg_image detail_table_insert detail_table_insert_new table_insert merge_cell split_cell insert_row_up insert_row_down delete_row insert_column_left insert_column_right delete_column table_bg_color table_same_width table_same_height table_same_widthheight bold underline italic strike_through superscript subscript remove_format remove_css font_color font_bg_color image_create image_editor formatting font_family font_size entity template hyperlink_create insert_file file_open horizontal_line emoticon line_height letter_spacing list_number list_bullets indent outdent insert_row_column insert_row insert_column table_indent table_outdent table_select_all table_select_cell table_select_row table_select_column valign_up valign_center valign_baseline valign_bottom table_row_clone table_selection table_select cell_size align_vertical row_property column_property table_property cell_property cell_border cell_bg_color table_group table_group_detail format_painter apply_format image_align_default image_align_left image_align_right list_blockquote input_textfield input_radio input_checkbox input_button input_hiddenfield input_textarea input_select input_imagebutton table_lock cell_lock table_lock_property photo_editor detail_cell_bg_color insert_datetime detail_insert_datetime conversion video calculator mini_photo_editor placeholder table_adjust table_tool delete_table_and_row_column table_row_column_cell_property table_row_colum table_copy_paste calculation_formula table_row_column select_save_type".split(
              " ");
          break;
        case "editableFalse":
          d = G_ICON_FULL_SET;
          m = [];
          b = "," + G_ICON_READONLY_ACTIVATION_SET.join(",") + ",";
          h = 0;
          for (q = d.length; h < q; h++) {
            -1 == b.indexOf("," + d[h] + ",")
            && m.push(d[h]);
          }
          d = m;
          break;
        case "allDisable":
          d = G_ICON_FULL_SET;
          break;
        case "keditorResize":
          d = "new save print pagebreak find replace emoticon horizontal_line image_create image_editor flash_create media_create template iframe_create hyperlink_create insert_file file_open insert_link_media bookmark symbol form checkbox radiobutton button selectbox textbox textarea hidden doc_bg_color doc_bg_image detail_table_insert detail_table_insert_new table_insert table_delete merge_cell split_cell remove_css insert_row_up insert_row_down delete_row insert_column_left insert_column_right delete_column table_bg_color table_same_width table_same_height table_same_widthheight font_color font_bg_color list_number list_bullets detail_list_number detail_list_bullets template entity insert_row_column insert_row insert_column formatting font_family font_size line_height letter_spacing bold italic underline strike_through superscript subscript remove_format table_row_clone table_selection table_select cell_size align_vertical row_property select_all table_indent table_outdent table_select_all table_select_cell table_select_row table_select_column valign_up valign_center valign_baseline valign_bottom column_property table_property cell_property cell_border cell_bg_color table_group table_group_detail indent outdent image_align_default image_align_left image_align_right list_blockquote input_textfield input_radio input_checkbox input_button input_hiddenfield input_textarea input_select input_imagebutton photo_editor detail_font_color detail_font_bg_color detail_cell_bg_color table_lock cell_lock table_lock_property insert_datetime detail_insert_datetime video calculator mini_photo_editor placeholder table_adjust table_tool delete_table_and_row_column table_row_column_cell_property table_row_colum table_copy_paste calculation_formula table_row_column select_save_type".split(
              " ");
          break;
        case "focusPageBreak":
          d = "new save print pagebreak paste text_paste find replace bookmark symbol insert_link_media media_create flash_create form checkbox radiobutton button selectbox textbox textarea hidden doc_bg_color doc_bg_image detail_table_insert detail_table_insert_new table_insert merge_cell split_cell insert_row_up insert_row_down delete_row insert_column_left insert_column_right delete_column table_bg_color table_same_width table_same_height table_same_widthheight bold underline italic strike_through superscript subscript remove_format remove_css font_color font_bg_color image_create image_editor formatting font_family font_size entity template hyperlink_create insert_file file_open horizontal_line emoticon line_height letter_spacing list_number list_bullets detail_list_number detail_list_bullets indent outdent insert_row_column insert_row insert_column iframe_create table_indent table_outdent table_select_all table_select_cell table_select_row table_select_column valign_up valign_center valign_baseline valign_bottom table_row_clone table_selection table_select cell_size align_vertical row_property column_property table_property cell_property cell_border cell_bg_color table_group table_group_detail format_painter apply_format list_blockquote input_textfield input_radio input_checkbox input_button input_hiddenfield input_textarea input_select input_imagebutton table_lock cell_lock table_lock_property photo_editor detail_font_color detail_font_bg_color detail_cell_bg_color insert_datetime detail_insert_datetime conversion video calculator placeholder table_adjust table_tool delete_table_and_row_column table_row_column_cell_property table_row_colum table_copy_paste calculation_formula table_row_column select_save_type".split(
              " ");
          break;
        case "placeholder":
          d = "copy cut paste text_paste replace emoticon setting horizontal_line image_create image_editor image_property image_editor_property flash_create flash_property media_create media_property iframe_create iframe_property hyperlink_create hyperlink_property remove_hyperlink bookmark symbol form checkbox radiobutton button selectbox textbox textarea hidden doc_bg_image detail_table_insert detail_table_insert_new table_insert table_delete merge_cell split_cell table_row_clone insert_row_up insert_row_down delete_row insert_column_left insert_column_right delete_column table_bg_color table_same_width table_same_height table_same_widthheight table_group table_group_detail bold underline italic strike_through superscript subscript remove_format remove_css font_color font_bg_color align_group align_group_detail align_left align_center align_right align_full line_height indent outdent list_number list_bullets detail_list_number detail_list_bullets formatting font_family font_size select_all entity insert_row insert_column table_select cell_size align_vertical table_tool list_number list_bullets insert_row_column cell_property row_property column_property table_property table_select_all table_select_cell table_select_row table_select_column valign_up valign_center valign_baseline valign_bottom grid tool_replace convert_table_to_text insert_link_media paste_word cell_border cell_bg_color table_indent table_outdent ruler pagebreak dirltr dirrtl insert_file format_painter apply_format letter_spacing align image_align_default image_align_left image_align_right list_blockquote input_textfield input_radio input_checkbox input_button input_hiddenfield input_textarea input_textarea_property input_select input_select_property input_imagebutton input_same_width input_same_height input_same_width_height accessibility_validation table_copy table_paste intable_paste table_content_paste horizontal_sum vertical_sum horizontal_avg vertical_avg table_selection show_blocks table_lock cell_lock table_lock_property list_lower_alpha word_transform photo_editor photo_editor_property insert_file_property detail_cell_bg_color insert_datetime detail_insert_datetime conversion personal_data forbidden_word video video_property spell_check calculator mini_photo_editor table_adjust table_tool delete_table_and_row_column table_row_column_cell_property table_row_colum table_copy_paste calculation_formula table_row_column".split(
              " ")
      }
      for (t in G_KPlugin) {
        if (G_KPlugin[t].onDisableToolIcon &&
            (m = G_KPlugin[t].onDisableToolIcon(a))) {
          for (b = 0; b < m.length;
              b++) {
            d.push(m[b]);
          }
        }
      }
      h = 0;
      for (q = G_ICON_CUSTOM_ADD_DISABLED_SET.length; h < q; h++) {
        d.push(
            G_ICON_CUSTOM_ADD_DISABLED_SET[h]);
      }
      d = d.concat(this.lockCommand);
      0 == this.UndoManager.canUndo && (d[d.length] = "undo");
      0 == this.UndoManager.canRedo && (d[d.length] = "redo");
      if ("editableFalse" != a) {
        c && 1 == c && (d = addDisalbeItemForNoActionTable(d));
        t = this._setting.auto_save.toString().split(",");
        if ("0" == this._config.setAutoSave.useManuallySave && "2" == t[0]
            || void 0 == getAutoSaveHtml_userID(this.ID,
                this._config.setAutoSave.unique_key,
                this._config.setAutoSave.maxCount) || ""
            == getAutoSaveHtml_userID(this.ID,
                this._config.setAutoSave.unique_key,
                this._config.setAutoSave.maxCount)) {
          d[d.length] = "load_auto_save";
        }
        null == this._formatPainterList && (d[d.length] = "apply_format");
        "focusImage" == a
        && (t = KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT)
        && t.getAttribute("keditorcustomdata") && "" != t.getAttribute(
            "keditorcustomdata") && (t = t.getAttribute(
            "keditorcustomdata"), "iframe" != getKEditorCustomData(t).type
        && (d.push("image_align_default"),
            d.push("image_align_left"), d.push("image_align_right")));
        (t = getFormControlSelectedItem()) && 2 > t.count && (d.push(
            "input_same_width"), d.push("input_same_height"), d.push(
            "input_same_width_height"))
      }
      -1 < d.indexOf("status_source") && d.splice(d.indexOf("status_source"),
          1);
      -1 < d.indexOf("status_preview") && d.splice(d.indexOf("status_preview"),
          1);
      -1 < d.indexOf("status_text") && d.splice(d.indexOf("status_text"), 1);
      m = 0;
      for (q = d.length; m < q; m++) {
        if (h = KEDITORTOP.RAONKEDITOR.util.trim(
            d[m]).toLowerCase(), f = document.getElementById("ue_" +
            this.ID + h), g = document.getElementById(
            "keditor_span_" + this.ID + h), "zoom" != h && "zoom_plus" != h
        && "zoom_minus" != h || "allDisable" != a) {
          if (f
          && (f.style.cursor = "default"), g) {
            switch (h) {
              case "formatting":
              case "font_family":
              case "font_size":
              case "line_height":
              case "letter_spacing":
                f = "font_size" == h && "1" == this._config.useFontSizeIncDec
                    ? "fontSize upDown uebutton_combo_" : "line_height" == h
                    && "1"
                    == this._config.useLineHeightIncDec
                        ? "lineHeight upDown uebutton_combo_" : "letter_spacing"
                        == h && "1" == this._config.useLetterSpacingIncDec ?
                            "spacing upDown uebutton_combo_"
                            : "uebutton_combo_";
                break;
              case "detail_insert_datetime":
              case "detail_table_insert":
              case "detail_list_number":
              case "detail_list_bullets":
              case "table_group_detail":
              case "align_group_detail":
              case "order_of_objects_detail":
              case "detail_font_color":
              case "detail_font_bg_color":
              case "detail_cell_bg_color":
                f = "uebutton_dialog_";
                break;
              case "input_textfield":
              case "input_textarea":
              case "input_select":
              case "input_checkbox":
              case "input_radio":
              case "input_button":
              case "input_imagebutton":
              case "input_hiddenfield":
              case "input_align_left":
              case "input_align_right":
              case "input_valign_top":
              case "input_valign_bottom":
              case "input_same_width":
              case "input_same_height":
              case "input_word_spacing":
              case "input_line_height":
              case "input_same_width_height":
              case "table_lock":
              case "cell_lock":
              case "table_lock_property":
              case "placeholder":
                f =
                    "uebutton_type_";
                break;
              default:
                f = "uebutton_span_"
            }
            KEDITORTOP.RAONKEDITOR.util.setClass(g, f + "off");
            0 == h.indexOf("p_") ? (g = g.getElementsByTagName("img")[0]) && 0
                > g.title.indexOf(RAONKEditor_lang.icon.inactive_button)
                && (g.title = g.title + " "
                    + RAONKEditor_lang.icon.inactive_button)
                : (g = g.getElementsByTagName("a")[0]) && 0 > g.title.indexOf(
                    RAONKEditor_lang.icon.inactive_button)
                && (g.title = RAONKEditor_lang.icon[h] + " "
                    + RAONKEditor_lang.icon.inactive_button)
          }
        }
      }
      if ("1" == this._config.useAutoToolbar) {
        document.getElementById("keditor_tab_tool1_" +
            this.ID);
        t = document.getElementById("keditor_tab_tool2_" + this.ID);
        hiddenIconForAutoToolbar(this);
        "" == a && (a = "default");
        b = this._config.autoToolbar[a] ? this._config.autoToolbar[a] : [];
        h = b.length;
        q = this._config.webPath.image + "skin/" + this._config.style.skinName;
        for (m = 0; m < h; m++) {
          g = document.getElementById(
              "keditor_span_" + this.ID + b[m]), "separator" == b[m]
          && (g = document.createElement(
              "span"), g.className = "ue_SM", g.innerHTML = '<img style="margin:1px; padding: 0px; width: 11px; height: 26px;" src="'
              + q + '/separator.gif" alt="">'),
          g && t.appendChild(g);
        }
        t.scrollLeft = "0px";
        setToolbarScroll(this)
      }
      KEDITOR_TOPMENU._disabeld_menu = d
    }
  }, _iconSelected: function (a) {
    for (var c = KEDITORTOP.G_CURRKEDITOR,
        b = "bold italic underline align_left align_center align_right align_full strike_through subscript superscript full_screen grid list_number list_bullets dirltr dirrtl show_blocks table_lock cell_lock table_lock_property font_color font_bg_color table_border status_source status_preview status_text".split(
            " "), d = "", e = 0, f = b.length; e < f; e++) {
      if (_icon_id =
          KEDITORTOP.RAONKEDITOR.util.trim(
              b[e]).toLowerCase(), _icon_span = document.getElementById(
          "keditor_span_" + c.ID
          + _icon_id)) {
        d = KEDITORTOP.RAONKEDITOR.util.getClass(
            _icon_span), d = KEDITORTOP.RAONKEDITOR.util.replaceAll(d,
            "uebutton_span_enter", ""), d = KEDITORTOP.RAONKEDITOR.util.trim(
            d), KEDITORTOP.RAONKEDITOR.util.setClass(_icon_span,
            d), KEDITORTOP.RAONKEDITOR.util.removeClass(_icon_span, "selected");
      }
    }
    if (a) {
      for (e = 0, f = a.length; e < f;
          e++) {
        if (_icon_id = KEDITORTOP.RAONKEDITOR.util.trim(
            a[e]).toLowerCase(), _icon_span = document.getElementById(
            "keditor_span_" +
            c.ID + _icon_id)) {
          d = KEDITORTOP.RAONKEDITOR.util.getClass(
              _icon_span), d += " uebutton_span_enter", KEDITORTOP.RAONKEDITOR.util.setClass(
              _icon_span, d), -1 < _icon_span.className.indexOf("uebutton_type")
              ? _icon_span.style.backgroundImage = "url("
                  + c._config.webPath.image
                  + "skin/" + c._config.style.skinName
                  + "/form_skinback_release.gif)"
              : KEDITORTOP.RAONKEDITOR.util.addClass(_icon_span, "selected")
        }
      }
    }
  }, _setIconEvents: function () {
    var a = this, c = null, b = "";
    document.getElementById("keditor_big_btn_wordedit")
    && (document.getElementById("keditor_big_btn_wordedit").onclick =
        function () {
          G_LAST_CMD = "word_edit";
          agentDocumentEdit({type: "0"}, a)
        });
    document.getElementById("keditor_big_hwpedit") && (document.getElementById(
        "keditor_big_hwpedit").onclick = function () {
      G_LAST_CMD = "hwp_edit";
      agentDocumentEdit({type: "1"}, a)
    });
    for (var d = 0, e = G_ICON_FULL_SET.length, f; d < e;
        d++) {
      if (b = KEDITORTOP.RAONKEDITOR.util.trim(
          G_ICON_FULL_SET[d]).toLowerCase(), c = document.getElementById(
          "ue_" + a.ID + b)) {
        if (getCustomIconAttr(G_ICON_FULL_SET[d]).isCustom) {
          c.setAttribute(
              "title", getCustomIconAttr(G_ICON_FULL_SET[d])["desc_" +
              a._config.lang]), "A" == c.nodeName
          && (f = document.createElement(
              "span"), f.style.display = "none", f.innerText = getCustomIconAttr(
              G_ICON_FULL_SET[d])["desc_" + a._config.lang], c.appendChild(
              f));
        } else if (null != RAONKEditor_lang.icon[b] && void 0
            != RAONKEditor_lang.icon[b]) {
          if ("design" == b || "source" == b
              || "preview" == b || "text" == b) {
            0 < a._config.statusBarTitle.length
            && void 0 != a._config.statusBarTitle[a.statusBarTitleIdx] ? ""
                != a._config.statusBarTitle[a.statusBarTitleIdx] ? c.setAttribute(
                        "title",
                        a._config.statusBarTitle[a.statusBarTitleIdx]) :
                    c.setAttribute("title", RAONKEditor_lang.icon[b])
                : c.setAttribute(
                    "title", RAONKEditor_lang.icon[b]);
          } else {
            try {
              f = document.createElement(
                  "span"), f.style.display = "none", f.innerText = RAONKEditor_lang.icon[b], "A"
              == c.nodeName ? (c.setAttribute("title",
                  RAONKEditor_lang.icon[b]), c.appendChild(f)) : "SPAN"
                  == c.nodeName
                  && c.parentNode && "A" == c.parentNode.nodeName
                  && (c.parentNode.setAttribute("title",
                      RAONKEditor_lang.icon[b]), c.parentNode.appendChild(f))
            } catch (g) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode
              &&
              console.log(g)
            }
          }
        }
        switch (b) {
          case "top_design":
          case "top_source":
          case "top_preview":
          case "top_text":
            0 < a._config.statusBarTitle.length && void 0
            != a._config.statusBarTitle[a.topStatusBarTitleIdx] ? (""
            != a._config.statusBarTitle[a.topStatusBarTitleIdx]
                ? c.getElementsByTagName(
                    "A")[0].title = a._config.statusBarTitle[a.topStatusBarTitleIdx]
                : c.getElementsByTagName(
                    "A")[0].title = RAONKEditor_lang.icon[b.replace("top_",
                    "")], a.topStatusBarTitleIdx++) : c.getElementsByTagName(
                "A")[0].title = RAONKEditor_lang.icon[b.replace("top_",
                "")], c.getElementsByTagName(
                "A")[0].innerHTML = RAONKEditor_lang.icon[b.replace("top_", "")]
        }
        switch (b) {
          case "design":
          case "source":
          case "preview":
          case "text":
            0 < a._config.statusBarTitle.length && void 0
            != a._config.statusBarTitle[a.statusBarTitleIdx] ? (""
                != a._config.statusBarTitle[a.statusBarTitleIdx]
                    ? c.getElementsByTagName(
                        "A")[0].title = a._config.statusBarTitle[a.statusBarTitleIdx]
                    : c.getElementsByTagName(
                        "A")[0].title = RAONKEditor_lang.icon[b], a.statusBarTitleIdx++)
                : c.getElementsByTagName(
                    "A")[0].title = RAONKEditor_lang.icon[b],
                c.getElementsByTagName(
                    "A")[0].innerHTML = RAONKEditor_lang.icon[b]
        }
        var h = function (b) {
          return function (c) {
            a._editorCommands(a.ID, b);
            "shortcut" == b && (G_ShortCutClick = !0);
            KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
          }
        }(b), m = "";
        switch (b) {
          case "font_family":
          case "font_size":
          case "letter_spacing":
            m = "click";
            break;
          default:
            m = "click"
        }
        KEDITORTOP.RAONKEDITOR.util.addEvent(c, m, h);
        c.onmousedown = function () {
          return !1
        };
        c.unselectable = "on";
        h = function (b) {
          return function (c) {
            -1
            < ",detail_table_insert,detail_list_number,detail_list_bullets,align_group_detail,order_of_objects_detail,table_group_detail,detail_font_color,detail_font_bg_color,detail_cell_bg_color,detail_insert_datetime,".indexOf(
                "," +
                b + ",") || (null != document.getElementById(
                "keditor_span_" + a.ID + b)
            && KEDITORTOP.RAONKEDITOR.util.stopEvent(
                c), KEDITORTOP.G_CURRKEDITOR.isAOver.linkStyle
            && hyperLinkOut(), KEDITORTOP.G_CURRKEDITOR.isAOver.openHelp
            && hyperHelpClose())
          }
        }(b);
        b = function (b) {
          return function (c) {
            null != document.getElementById("keditor_span_" + a.ID + b)
            && KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
          }
        }(b);
        KEDITORTOP.RAONKEDITOR.util.addEvent(c, "mouseover", h);
        KEDITORTOP.RAONKEDITOR.util.addEvent(c, "mouseout", b)
      }
    }
    c = function () {
      return function (b) {
        document.getElementById("ue_toolbar_" +
            a.ID).onselectstart = "";
        b = b.target || b.srcElement;
        b.selectionStart = 0;
        b.selectionEnd = b.value.length
      }
    }();
    d = function () {
      return function (b) {
        document.getElementById(
            "ue_toolbar_" + a.ID).onselectstart = new Function("return false")
      }
    }();
    e = function () {
      return function () {
        KEDITORTOP.G_CURRKEDITOR._editorFrameHasFocus = !0
      }
    }();
    f = document.getElementById("txtara_" + a.ID + "font_family");
    b = document.getElementById("txtara_" + a.ID + "font_size");
    h = document.getElementById("txtara_" + a.ID + "line_height");
    m = document.getElementById("ue_" +
        a.ID + "zoom_text");
    f && (KEDITORTOP.RAONKEDITOR.util.addEvent(f, "focus",
        c), KEDITORTOP.RAONKEDITOR.util.addEvent(f, "blur",
        d), KEDITORTOP.RAONKEDITOR.util.addEvent(f, "mousedown", e));
    b && (KEDITORTOP.RAONKEDITOR.util.addEvent(b, "focus",
        c), KEDITORTOP.RAONKEDITOR.util.addEvent(b, "blur",
        d), KEDITORTOP.RAONKEDITOR.util.addEvent(b, "mousedown", e));
    h && (KEDITORTOP.RAONKEDITOR.util.addEvent(h, "focus",
        c), KEDITORTOP.RAONKEDITOR.util.addEvent(h, "blur",
        d), KEDITORTOP.RAONKEDITOR.util.addEvent(h, "mousedown", e));
    m && KEDITORTOP.RAONKEDITOR.util.addEvent(m,
        "mousedown", e);
    this._load_editor_frame(!0)
  }, _load_editor_frame: function (a) {
    var c = this;
    void 0 == c._EDITOR && KEDITORTOP.G_CURRKEDITOR && ""
    != KEDITORTOP.G_CURRKEDITOR._config.directEditHtmlUrl
    && (c = KEDITORTOP.G_CURRKEDITOR);
    c._EDITOR.design = document.getElementById("keditor_design_" + c.ID);
    c._EDITOR.source = document.getElementById("keditor_source_" + c.ID);
    c._EDITOR.preview = document.getElementById("keditor_preview_" + c.ID);
    c._EDITOR.text = document.getElementById("keditor_text_" + c.ID);
    var b = c._EDITOR.design;
    c._DOC =
        b.contentDocument ? b.contentDocument : b.contentWindow.document;
    G_USE_EDITOR_ID = c.ID;
    KEDITORTOP.G_CURRKEDITOR = c;
    c._BODY = c._DOC.body;
    "1" != c._config.browserSpellCheck && "spellcheck" in c._BODY
    && (c._BODY.spellcheck = !1);
    "contentEditable" in c._BODY && (isViewMode(c) || 0
    == c._config.editorBodyEditable ? c._BODY.contentEditable = !1
        : c._BODY.contentEditable = !0);
    LayerFrame = KEDITORTOP.KEDITORDOC.getElementById("raonk_frame_" + c.ID);
    LayerFrame.title = RAONKEditor_lang.iframe_title.layer;
    keditor_src_init_once(b, c);
    keditor_src_init(b);
    0 < _iframeDoc.body.clientWidth
    && (c._defTableWidth = _iframeDoc.body.clientWidth
        - 30, c._defaultWidth = _iframeDoc.body.clientWidth - 30);
    100 > c._defTableWidth && (c._defTableWidth = 400, c._defaultWidth = 400);
    "1" == c._config.useFontSizeKeyin ? document.getElementById(
        "txtara_" + c.ID + "font_size") && ("1" == c._setting.show_font_real
        ? document.getElementById(
            "txtara_" + c.ID + "font_size").value = c._setting.font_size
        : document.getElementById("txtara_" + c.ID
            + "font_size").value = RAONKEditor_lang.icon.font_size)
        : document.getElementById("ue_" +
        c.ID + "font_size") && ("1" == c._setting.show_font_real
        ? document.getElementById(
            "ue_" + c.ID + "font_size").innerHTML = "<span>"
            + c._setting.font_size + "</span>" : document.getElementById(
            "ue_" + c.ID + "font_size").innerHTML = "<span>"
            + RAONKEditor_lang.icon.font_size + "</span>");
    "1" == c._config.useFontFamilyKeyin ? document.getElementById(
        "txtara_" + c.ID + "font_family") && ("1" == c._setting.show_font_real
        ? document.getElementById(
            "txtara_" + c.ID + "font_family").innerHTML = getDisplayFontName(
            c._setting.font_family) : document.getElementById("txtara_" +
            c.ID + "font_family").value = getDisplayFontName(
            RAONKEditor_lang.icon.font_family)) : document.getElementById(
        "ue_" + c.ID + "font_family") && ("1" == c._setting.show_font_real
        ? document.getElementById(
            "ue_" + c.ID + "font_family").innerHTML = "<span>"
            + getDisplayFontName(c._setting.font_family) + "</span>"
        : document.getElementById(
            "ue_" + c.ID + "font_family").innerHTML = "<span>"
            + getDisplayFontName(RAONKEditor_lang.icon.font_family)
            + "</span>");
    document.getElementById("ue_" + c.ID + "letter_spacing")
    && (document.getElementById("ue_" +
        c.ID + "letter_spacing").innerHTML = "<span>"
        + RAONKEditor_lang.icon.letter_spacing + "</span>");
    "" != c._config.defaultMessage && (b = c._BODY.innerHTML, "<p></p>" == b
    || "<P></P>" == b ? c._BODY.innerHTML = "<p>" + c._config.defaultMessage
        + "</p>" : c._config.defaultMessage = "");
    if (a) {
      a = function () {
        return function (a) {
          a = _k_editor;
          null == a && "undefined" != typeof KEDITORTOP && null != KEDITORTOP
          && KEDITORTOP.G_CURRKEDITOR && (a = KEDITORTOP.G_CURRKEDITOR);
          if (a) {
            if (0 == isContainerMode()) {
              try {
                resizeEditor(a, !1)
              } catch (b) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
                KEDITORTOP.RAONKEDITOR.logMode && console.log(b)
              }
            }
            setZoomValueToBody(document, a);
            setZoomValueToBody(a._DOC, a);
            setToolbarScroll(a);
            "1" == a._config.tool_bar_grouping && (groupingIcon(
                a), setPositionGroupingDiv(1), setPositionGroupingDiv(2));
            G_BodyFit.widthFixStatus && (setBodyFitStyle(a, !0), setAutoBodyFit(
                a));
            G_Ruler && G_Ruler.viewRulerStatus && ("1" == a._config.ruler.mode
                || "2" == a._config.ruler.mode && "1"
                == a._config.ruler.useResizeEvent) && G_Ruler.SetRulerPosition()
          }
        }
      }();
      KEDITORTOP.RAONKEDITOR.util.addEvent(window,
          "resize", a);
      try {
        if (setTimeout(function () {
          var a = _k_editor.Frame, b;
          try {
            if (KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported) {
              var c = KEDITORTOP.localStorage["raon_" + a.editor.ID
              + "_auto_list"];
              c && (b = 0 < c ? 1 < c ? 0 : 1 : a.editor._config.autoList.use)
            }
          } catch (d) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode && console.log(d)
          }
          a.editor.autoListUse = void 0 != b ? b
              : a.editor._config.autoList.use;
          try {
            setAutoSave(a.editor, !0)
          } catch (e) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode &&
            console.log(e)
          }
          try {
            isViewMode(a.editor) ? a.editor._BODY.style.cursor = "auto"
                : G_Ruler && G_Ruler.viewRulerStatus && showRuler(
                a.editor), G_BodyFit.SetBodyWidth()
          } catch (t) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode && console.log(t)
          }
          try {
            if ("" != a.editor._config.setValueObjId) {
              var u = KEDITORTOP.KEDITORDOC.getElementById(
                  a.editor._config.setValueObjId);
              if (u) {
                var v = u.value;
                v && KEDITORTOP.RAONKEDITOR.setHtmlContents(v, a.editor.ID)
              }
            }
          } catch (w) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode &&
            console.log(w)
          }
          b = a.editor._config.statusBarInitMode;
          if ("design" != b) {
            for (var c = !1, u = a.editor._config.statusBarItem, v = u.length,
                x = 0; x < v; x++) {
              if ("design" == u[x]) {
                c = !0;
                break
              }
            }
            c
            || (a.editor._EDITOR.design.style.width = "0px", a.editor._EDITOR.design.style.height = "0px");
            KEDITORTOP.RAONKEDITOR.ShowTextChangeAlert = !1;
            a.editor._editorCommands(a.editor.ID, b);
            KEDITORTOP.RAONKEDITOR.ShowTextChangeAlert = !0
          }
          var y = function (a) {
            try {
              "2" == a.editor._config.undoMode && a.editor.UndoManager.putUndo(
                  !0);
              var b = function () {
                "" != a.editor._config.directEditHtmlUrl &&
                loadDirectEditHtmlUrl(a.editor._config);
                onChange({editor: a.editor});
                G_BODY_DEFAULT_VALUE = a.editor._BODY.innerHTML;
                try {
                  if ("1" == a.editor._config.keepEditorFromDOMChange) {
                    var b = KEDITORTOP.RAONKEDITOR.EditorContentsHashTable.getItem(
                        a.editor.ID);
                    "undefined" != typeof b && (a.editor._BODY.innerHTML = b)
                  }
                } catch (c) {
                  KEDITORTOP && KEDITORTOP.RAONKEDITOR
                  && KEDITORTOP.RAONKEDITOR.logMode && console.log(c)
                }
                a.editor.setValueIsBusy = !1;
                KEDITORTOP.RAONKEDITOR.browser.ie
                && (KEDITORTOP.focus(), KEDITORTOP.document.focus(), KEDITORTOP.document.body.focus());
                b = null;
                "" != a.editor._config.focusInitObjId
                    ? b = KEDITORTOP.KEDITORDOC.getElementById(
                        a.editor._config.focusInitObjId)
                    : a.editor.autoMoveInitFocusData.targetNode
                    && (b = a.editor.autoMoveInitFocusData.targetNode);
                null != b && (a.editor._config.initFocus = !1, b.focus());
                1 == a.editor._config.initFocus && setFocusToBody(a.editor);
                try {
                  if (KEDITORTOP.G_LIGHTVIEWDOC && a.editor.ID
                      in KEDITORTOP.G_LIGHTVIEWDOC) {
                    var d = KEDITORTOP.G_LIGHTVIEWDOC[a.ID],
                        e = a.editor._DOC.getElementsByTagName(
                            "head")[0].outerHTML, b = "";
                    void 0 != a.editor._PageProp.doctype &&
                    0 < a.editor._docType[a.editor._PageProp.doctype].length
                    && (b = a.editor._docType[a.editor._PageProp.doctype]);
                    a.editor._DOC.open("text/html", "replace");
                    a.editor._DOC.write(b + "<html>" + e + d + "</html>");
                    a.editor._DOC.close();
                    a.editor._load_editor_frame(!1);
                    delete KEDITORTOP.G_LIGHTVIEWDOC[a.ID];
                    G_BodyFit.SetBodyWidth()
                  } else {
                    "function"
                    === typeof a.editor._config.event.creationComplete
                        ? a.editor._config.event.creationComplete(a.editor.ID)
                        : "function" === typeof a.editor._config.LoadedEvent
                            ? a.editor._config.LoadedEvent(a.editor.ID) :
                            "function"
                            === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_CreationComplete
                            && KEDITORTOP.KEDITORWIN.RAONKEDITOR_CreationComplete(
                                a.editor.ID)
                  }
                } catch (f) {
                  KEDITORTOP && KEDITORTOP.RAONKEDITOR
                  && KEDITORTOP.RAONKEDITOR.logMode && console.log(f)
                }
                G_Ruler && "2" == a.editor._config.ruler.mode
                && setRulerPositionForNode(a.editor, !0)
              };
              if ("1" == a.editor._config.useMiniImageEditor) {
                var c = KEDITORTOP.KEDITORWIN;
                null != a.editor.dialogWindow && (c = a.editor.dialogWindow);
                if (1
                    == c.KMINIPHOTO.miniPhotoCreation) {
                  b();
                } else {
                  var d = setInterval(
                      function () {
                        c.KMINIPHOTO.miniPhotoCreation &&
                        (clearInterval(d), b())
                      }, 1E3)
                }
              } else {
                b();
              }
              if (KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported && ("0"
                  != a.editor._config.setAutoSave.mode || "1"
                  == a.editor._config.setAutoSave.useManuallySave)) {
                for (var e = parseIntOr0(
                    a.editor._config.setAutoSave.maxCount); 8 > e;
                    e++) {
                  localStorage.removeItem(
                      "keditor_" + a.editor.ID + "_" + e);
                }
              }
              G_BodyFit.widthFixStatus && (setBodyFitStyle(a.editor,
                  !0), setAutoBodyFit(a.editor));
              setEditorIframeTitle(a.editor);
              if (KEDITORTOP.RAONKEDITOR.InitEditorDataHashTable) {
                var f = KEDITORTOP.RAONKEDITOR.InitEditorDataHashTable.getItem(
                    a.editor.ID);
                "undefined" != typeof f && ("object" == typeof f
                    ? "setHtmlContents" == f.mode
                        ? KEDITORTOP.RAONKEDITOR.setHtmlContentsEw(f.value,
                            a.editor.ID) : "setHtmlValueExWithDocType" == f.mode
                            ? KEDITORTOP.RAONKEDITOR.setHtmlValueExWithDocType(
                                f.value, a.editor.ID) : "setHtmlValueEx"
                            == f.mode ? KEDITORTOP.RAONKEDITOR.setHtmlValueEx(
                                f.value, a.editor.ID) : "setHtmlValue" == f.mode
                                ? KEDITORTOP.RAONKEDITOR.setHtmlValue(f.value,
                                    a.editor.ID) : "setBodyValueEx" == f.mode
                                    ? KEDITORTOP.RAONKEDITOR.setBodyValueEx(
                                        f.value, a.editor.ID) : "setBodyValue"
                                    ==
                                    f.mode
                                        ? KEDITORTOP.RAONKEDITOR.setBodyValue(
                                            f.value, a.editor.ID)
                                        : "loadHtmlValueExFromURL" == f.mode
                                            ? KEDITORTOP.RAONKEDITOR.loadHtmlValueExFromURL(
                                                f.value, a.editor.ID)
                                            : "loadHtmlValueExFromServerURL"
                                            == f.mode
                                                ? KEDITORTOP.RAONKEDITOR.loadHtmlValueExFromServerURL(
                                                    f.value, a.editor.ID)
                                                : "setDirectEditHtmlUrl"
                                                == f.mode
                                                    ? KEDITORTOP.RAONKEDITOR.setDirectEditHtmlUrl(
                                                        f.value, a.editor.ID)
                                                    : "setOriginalHtmlValue"
                                                    == f.mode
                                                        ? KEDITORTOP.RAONKEDITOR.setOriginalHtmlValue(
                                                            f.value,
                                                            a.editor.ID)
                                                        : "setBodyTextValue"
                                                        == f.mode
                                                        && KEDITORTOP.RAONKEDITOR.setBodyTextValue(
                                                            f.value,
                                                            a.editor.ID)
                    : KEDITORTOP.RAONKEDITOR.setHtmlContentsEw(f,
                        a.editor.ID), KEDITORTOP.RAONKEDITOR.InitEditorDataHashTable.removeItem(
                    a.editor.ID))
              }
            } catch (g) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(g)
            }
          };
          try {
            try {
              RAONK_EDITOR.prototype._setLazyLoadFrame(a.editor.ID)
            } catch (z) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(z)
            }
            try {
              var A = KEDITORTOP.KEDITORDOC.getElementById(
                  "keditor_toolmenu_background" + a.editor.ID);
              A && A.parentNode.removeChild(A)
            } catch (B) {
              KEDITORTOP &&
              KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(B)
            }
            try {
              var C = KEDITORTOP.KEDITORDOC.getElementById(
                  "keditor_topmenu_background" + a.editor.ID);
              C && C.parentNode.removeChild(C)
            } catch (D) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(D)
            }
            try {
              var H = KEDITORTOP.KEDITORDOC.getElementById(
                  "keditor_context_background" + a.editor.ID);
              H && H.parentNode.removeChild(H)
            } catch (G) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(G)
            }
            try {
              var I =
                  KEDITORTOP.KEDITORDOC.getElementById("ke_disabled");
              I && I.parentNode.removeChild(I)
            } catch (M) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(M)
            }
            try {
              var K = KEDITORTOP.KEDITORDOC.getElementById("keditor_dialog");
              K && K.parentNode.removeChild(K)
            } catch (P) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(P)
            }
            KEDITORTOP.RAONKEDITOR.setDirty(a.editor.ID);
            a.editor._config.isLoadedEditor = !0;
            setScrollStyleForIOS(a.editor);
            null == KEDITORTOP.RAONKEDITOR.IsEditorLoadedHashTable &&
            (KEDITORTOP.RAONKEDITOR.IsEditorLoadedHashTable = new KEDITORTOP.RAONKEDITOR.util.hashTable);
            "1" != KEDITORTOP.RAONKEDITOR.IsEditorLoadedHashTable.getItem(
                a.editor.ID)
            && KEDITORTOP.RAONKEDITOR.IsEditorLoadedHashTable.setItem(
                a.editor.ID, "1");
            showWordCount();
            try {
              for (var E in G_KPlugin) {
                if ("function"
                    === typeof G_KPlugin[E].onLoaded) {
                  G_KPlugin[E].onLoaded()
                }
              }
            } catch (L) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(L)
            }
            var O = function () {
              var a = !0;
              try {
                for (var b in G_KPlugin) {
                  if ("function" ===
                      typeof G_KPlugin[b].isRequiredCheck
                      && (a = G_KPlugin[b].isRequiredCheck(), !0 !== a)) {
                    break
                  }
                }
              } catch (c) {
                a = !0
              }
              return a
            };
            if (O()) {
              y(a);
            } else {
              var N = setInterval(function () {
                1 == O() && (clearInterval(N), y(a))
              }, 500)
            }
          } catch (F) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode && console.log(F)
          }
        }, 100), 0 == this._config.style.InitVisible) {
          try {
            this._config.visibility = !1, LayerFrame.parentElement.style.height = "0px", LayerFrame.parentElement.style.display = "none"
          } catch (d) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            &&
            console.log(d)
          }
        }
      } catch (e) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(e)
      }
    }
  }, _cmd_new: function () {
    0 == KEDITORTOP.RAONKEDITOR.isEmpty() ? 1 == confirm(
        RAONKEditor_lang.msg.newDocument) && (command_InsertDogBGImg(
        KEDITORTOP.G_CURRKEDITOR.ID, KEDITORTOP.G_CURRKEDITOR._EDITOR.design,
        "Y", "", "", "", "", []), KEDITORTOP.RAONKEDITOR.setBodyValue("", "",
        !0), this._iconEnable(
        ""), setBodyDefaultValue(), setFocusToBody(), KEDITORTOP.G_CURRKEDITOR._config.printHeader = KEDITORTOP.G_CURRKEDITOR._config.basePrintHeader,
        KEDITORTOP.G_CURRKEDITOR._config.printFooter = KEDITORTOP.G_CURRKEDITOR._config.basePrintFooter)
        : (command_InsertDogBGImg(KEDITORTOP.G_CURRKEDITOR.ID,
            KEDITORTOP.G_CURRKEDITOR._EDITOR.design, "Y", "", "", "", "",
            []), KEDITORTOP.RAONKEDITOR.setBodyValue("", "", !0), this._iconEnable(
            ""), setBodyDefaultValue(), setFocusToBody(), KEDITORTOP.G_CURRKEDITOR._config.printHeader = KEDITORTOP.G_CURRKEDITOR._config.basePrintHeader, KEDITORTOP.G_CURRKEDITOR._config.printFooter = KEDITORTOP.G_CURRKEDITOR._config.basePrintFooter)
  },
  _editorCommands: function (a, c, b) {
    setKEDITORWINDOC();
    G_USE_EDITOR_ID = a;
    KEDITORTOP.G_CURRKEDITOR = this;
    var d = !1;
    if (!(-1 < ("," + this.lockCommand.join(",") + ",").indexOf(
        "," + c + ","))) {
      KEDITORTOP.G_CURRKEDITOR.isInitFocusHandler
      && (KEDITORTOP.G_CURRKEDITOR.isInitFocusHandler = !1, setFocusToBody());
      var e = null;
      0
      > ",insert_layer,element_position,order_of_objects,order_of_objects_detail,bring_to_front,send_to_back,bring_forward,send_backward,".indexOf(
          "," + c + ",") && getApplyDragResize(KEDITORTOP.G_CURRKEDITOR)
      && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResizeDiv &&
      (e = KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem, KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.resizeHandleClear(), KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.selection(
          e));
      var f = !1;
      null != G_LAST_CMD && -1 < G_LAST_CMD.indexOf("align_") && -1 < c.indexOf(
          "align_") && (f = !0);
      G_LAST_CMD = c;
      checkDefaultMessage();
      if ("1" != this._config.formMode && "1"
          == this._config.userTableLock.use) {
        var g = GetTableSelectionCells(), h = g.length;
        if (0 < h) {
          var m = GetParentbyTagName(g[0], "table");
          if ("insert_row_up" == G_LAST_CMD ||
              "insert_row_down" == G_LAST_CMD || "insert_column_left"
              == G_LAST_CMD || "insert_column_right" == G_LAST_CMD) {
            if (null
                == m || checkLockAttr(m, !0)) {
              return;
            }
          }
          var q = this._config.userTableLock.defaultTableLockMode;
          m.getAttribute("lock_mode") && "" != m.getAttribute("lock_mode")
          && (q = m.getAttribute("lock_mode"));
          var t = !0;
          "1" == q && (t = !1);
          q = !1;
          for (m = 0; m < h; m++) {
            if (checkLockAttr(g[m], !t)) {
              q = !0;
              break
            } else {
              var u = [];
              u.push(g[m].getElementsByTagName("table"));
              u.push(g[m].getElementsByTagName("td"));
              var v = u.length;
              for (j = 0; j < v; j++) {
                var w =
                    u[j].length;
                for (k = 0; k < w; k++) {
                  if (checkLockAttr(u[j][k], !0)) {
                    q = !0;
                    break
                  }
                }
                if (q) {
                  break
                }
              }
            }
            if (q) {
              break
            }
          }
          if (q) {
            return
          }
        } else if (t = getFirstRange(), t.range) {
          t = t.range.startContainer;
          3 == t.nodeType && (t = t.parentNode);
          g = GetTDTHCell(t);
          m = GetParentbyTagName(t, "table");
          if ("insert_row_up" == G_LAST_CMD || "insert_row_down" == G_LAST_CMD
              || "insert_column_left" == G_LAST_CMD || "insert_column_right"
              == G_LAST_CMD) {
            if (null == m || checkLockAttr(m, !0)) {
              return;
            }
          }
          q = this._config.userTableLock.defaultTableLockMode;
          m && m.getAttribute("lock_mode") && "" !=
          m.getAttribute("lock_mode") && (q = m.getAttribute("lock_mode"));
          t = !0;
          "1" == q && (t = !1);
          h = !1;
          if (h = t ? checkLockAttr(m, !t) || checkLockAttr(g, !t)
              : checkLockAttr(g, !t)) {
            return
          }
        }
      }
      t = document.getElementById("ue_" + a + c);
      if (!t || !(t.parentNode && null != t.parentNode.className.match(/_off/gi)
          || t.parentNode.parentNode && null
          != t.parentNode.parentNode.className.match(/_off/gi)
          || t.parentNode.parentNode.parentNode && null
          != t.parentNode.parentNode.parentNode.className.match(/_off/gi))) {
        AdjustDesignBodyWidth({
          editor: KEDITORTOP.G_CURRKEDITOR,
          isApply: !0
        });
        if ("1" == KEDITORTOP.G_CURRKEDITOR._config.tool_bar_grouping && c
            && ("detail_table_insert_new" == c || "detail_table_insert" == c
                || 0 > c.indexOf("detail")) && "table_insert" != c
            && "font_bg_color" != c && "font_color" != c && "font_family" != c
            && "font_size" != c && "line_height" != c && "formatting" != c) {
          g = !1;
          g = isGroupingIcon(a, c);
          if (!g) {
            for (h = KEDITORTOP.G_CURRKEDITOR.detailSubCmd, q = h.length, m = 0;
                m < q; m++) {
              if (h[m] == c) {
                g = !0;
                break
              }
            }
          }
          g && hideGroupingBox()
        }
        if (KEDITORTOP.RAONKEDITOR.browser.ie) {
          KEDITORTOP.G_CURRKEDITOR._RangeBlurBug =
              !0;
          try {
            var x = saveSelection(a);
            8 < KEDITORTOP.RAONKEDITOR.browser.ieVersion ? 0 == (9
                    == x.startContainer.nodeType || 9 == x.endContainer.nodeType)
                && (KEDITORTOP.G_CURRKEDITOR._LastRange = x) : x && 0
                != x.offsetLeft && 0 != x.offsetTop
                && (KEDITORTOP.G_CURRKEDITOR._LastRange = x)
          } catch (y) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode && console.log(y)
          }
        }
        try {
          var z = getFirstRange().range;
          "design" == c || z.startContainer != z.endContainer
          || z.startContainer != z.commonAncestorContainer || 9
          != z.startContainer.nodeType && "body" !=
          z.startContainer.nodeName.toLowerCase() || doSetCaretPosition(
              _iframeDoc.body.firstChild, 0)
        } catch (A) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(A)
        }
        switch (c) {
          case "clean_nested_tag":
            KEDITORTOP.RAONKEDITOR.cleanNestedTag(
                RAONKEditor_lang.msg.clean_nested_tag, "", "1",
                this._config.cleanNestedTagOptions.nestedCount, "p,div",
                this.ID);
            d = !0;
            break;
          case "grid":
            command_grid(a, this);
            d = !0;
            break;
          case "insert_file":
          case "insert_file_property":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.insert_file);
            d = !0;
            break;
          case "file_open":
            "1" == this._config.useKManager ? agentDocumentEdit({type: ""},
                this) : RAONK_EDITOR.prototype.dialog.show(
                this._config.webPath.page, this._config.pages.file_open);
            break;
          case "new":
            this._cmd_new();
            break;
          case "save":
            command_saveAs(a, this);
            break;
          case "save_as":
            command_saveAs(a, this, !0);
            break;
          case "print":
            command_print(a, this);
            break;
          case "pagebreak":
            command_pagebreak(a, this);
            break;
          case "undo":
            command_undo(a, this);
            d = !0;
            break;
          case "redo":
            command_redo(a,
                this);
            d = !0;
            break;
          case "copy":
            command_copy(a, this);
            break;
          case "cut":
            command_cut(a, this);
            break;
          case "paste":
            command_pastehtml(a, this);
            d = !0;
            break;
          case "paste_dialog":
            alert(RAONKEditor_lang.paste_dialog.msg);
            break;
          case "text_paste":
            KEDITORTOP.G_CURRKEDITOR.setTextPaste = !0, command_pastehtml(a,
                this), d = !0;
          case "paste_word":
            break;
          case "paste_to_image":
            command_pastehtml(a, this, "1", !1);
            d = !0;
            break;
          case "paste_to_image_detail":
            command_pastehtml(a, this, "", b);
            d = !0;
            break;
          case "table_copy":
            command_tableCopy(a, this);
            break;
          case "table_content_paste":
          case "table_paste":
            command_tablePaste(a, this);
            d = !0;
            break;
          case "intable_paste":
            command_intablePaste(a, this);
            d = !0;
            break;
          case "find":
            g_findRepalceRange = null;
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.find);
            break;
          case "replace":
            g_findRepalceRange = null;
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.replace);
            break;
          case "emoticon":
            null == navigator.userAgent.match(/iPad/) && null
            != navigator.userAgent.match(
                /iPhone|Mobile|UP.Browser|Android|BlackBerry|Windows CE|Nokia|webOS|Opera Mini|SonyEricsson|opera mobi|Windows Phone|IEMobile|POLARIS/)
                ?
                RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                    this._config.pages.m_emoticon)
                : RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                    this._config.pages.emoticon);
            d = !0;
            break;
          case "setting":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.setting);
            break;
          case "horizontal_line":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.horizontal_line);
            d = !0;
            break;
          case "image_create":
            null == navigator.userAgent.match(/iPad/) && null !=
            navigator.userAgent.match(
                /iPhone|Mobile|UP.Browser|Android|BlackBerry|Windows CE|Nokia|webOS|Opera Mini|SonyEricsson|opera mobi|Windows Phone|IEMobile|POLARIS/)
                ? RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                    this._config.pages.m_image)
                : RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                    this._config.pages.image);
            d = !0;
            break;
          case "image_property":
            null == navigator.userAgent.match(/iPad/) && null
            != navigator.userAgent.match(
                /iPhone|Mobile|UP.Browser|Android|BlackBerry|Windows CE|Nokia|webOS|Opera Mini|SonyEricsson|opera mobi|Windows Phone|IEMobile|POLARIS/)
                ?
                RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                    this._config.pages.m_image)
                : RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                    this._config.pages.image);
            d = !0;
            break;
          case "flash_create":
          case "flash_property":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.flash);
            d = !0;
            break;
          case "media_create":
          case "media_property":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.media);
            d = !0;
            break;
          case "iframe_create":
          case "iframe_property":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.iframe);
            d = !0;
            break;
          case "hyperlink_create":
          case "hyperlink_property":
            if (null == KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT) {
              try {
                var B = getFirstRange().range, C = B.startContainer;
                3 == C.nodeType && (C = C.parentNode);
                var D = GetParentbyTagName(C, "a");
                D && (KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = D)
              } catch (H) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(H)
              }
            }
            try {
              if (KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT && "A"
              != KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.tagName &&
              (D = GetParentbyTagName(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT,
                  "a"))
              && (KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = D), KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT
              && "A" == KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.tagName) {
                var G = getFirstRange().sel;
                G.removeAllRanges();
                B = getFirstRange().range;
                B.selectNode(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
                G.addRange(B)
              }
            } catch (I) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(I)
            }
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.hyperlink);
            d = !0;
            break;
          case "remove_hyperlink":
            if (null == KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT) {
              try {
                if (B = getFirstRange().range, C = B.startContainer, 3
                == C.nodeType && (C = C.parentNode), D = GetParentbyTagName(C,
                    "a")) {
                  KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = D
                }
              } catch (M) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(M)
              }
            }
            try {
              if (KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT && "A"
              != KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.tagName
              && (D = GetParentbyTagName(
                  KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT,
                  "a"))
              && (KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = D), KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT
              && "A" == KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.tagName) {
                if (KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.style.color && ""
                    != KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.style.color) {
                  var K = _iframeDoc.createElement("span");
                  K.style.color = KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.style.color;
                  K.innerHTML = KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.innerHTML;
                  KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.parentNode.replaceChild(
                      K,
                      KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT)
                } else {
                  for (var P = KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.childNodes;
                      0
                      < P.length;) {
                    KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.parentNode.insertBefore(
                        P[0], KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
                  }
                  KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.parentNode.removeChild(
                      KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT)
                }
                KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo()
              }
            } catch (E) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(E)
            }
            d = !0;
            break;
          case "bookmark":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.bookmark);
            break;
          case "symbol":
            z = getFirstRange().range;
            b = getMyElementNode(z.startContainer);
            e = "";
            b && 1 == b.nodeType && (e = getElementInParentStyleProperty(b,
                "fontFamily"), "" == e
            && (e = KEDITORTOP.RAONKEDITOR.util.getStyle(b, "fontFamily")));
            "" == e && (e = this._setting.font_family);
            this._config.currFontFamily = e;
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.symbol);
            d = !0;
            break;
          case "doc_bg_image":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.doc_bg_img);
            d = !0;
            break;
          case "detail_table_insert":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.table);
            d = !0;
            break;
          case "detail_table_insert_new":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.table);
            d = !0;
            break;
          case "table_insert":
            if (KEDITORTOP.RAONKEDITOR.browser.mobile) {
              RAONK_EDITOR.prototype.dialog.show(
                  this._config.webPath.page, this._config.pages.table);
            } else {
              if ("1" == KEDITORTOP.G_CURRKEDITOR._config.tool_bar_grouping
                  && (b = document.getElementById("ue_" +
                      a + "table_insert"), (b = GetParentbyTagName(b, "ul"))
                  && -1 < b.id.indexOf("ul_tool_bar_grouping"))) {
                hideGroupingBox();
                RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                    this._config.pages.table);
                break
              }
              this._kEditorTable.show(a)
            }
            d = !0;
            break;
          case "table_delete":
            command_deleteTable(a, this);
            d = !0;
            break;
          case "merge_cell":
            command_mergeCell(a, this);
            d = !0;
            break;
          case "split_cell":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.split_cell);
            d = !0;
            break;
          case "insert_row_up":
            command_insertRowUp(a,
                this);
            d = !0;
            break;
          case "insert_row_down":
            command_insertRowDown(a, this);
            d = !0;
            break;
          case "delete_row":
            command_deleteRow(a, this);
            d = !0;
            break;
          case "insert_column_left":
            command_insertCellLeft(a, this);
            d = !0;
            break;
          case "insert_column_right":
            command_insertCellRight(a, this);
            d = !0;
            break;
          case "delete_column":
            command_deleteCell(a, this);
            d = !0;
            break;
          case "table_indent":
            command_tableIndentOutdent(a, this, "indent");
            d = !0;
            break;
          case "table_outdent":
            command_tableIndentOutdent(a, this, "outdent");
            d = !0;
            break;
          case "table_selection":
            command_tableSelection(a,
                this);
            break;
          case "table_select_cell":
            command_TableSelect(a, this, "select_cell");
            break;
          case "table_select_row":
            command_TableSelect(a, this, "select_row");
            break;
          case "table_select_column":
            command_TableSelect(a, this, "select_column");
            break;
          case "table_select_all":
            command_TableSelect(a, this, "select_all");
            break;
          case "table_same_width":
            command_TableSameWidthheight(a, this, "same_width");
            d = !0;
            break;
          case "table_same_height":
            command_TableSameWidthheight(a, this, "same_height");
            d = !0;
            break;
          case "table_same_widthheight":
            command_TableSameWidthheight(a,
                this, "same_widthheight");
            d = !0;
            break;
          case "table_row_clone":
            command_TableRowClone(a, this);
            d = !0;
            break;
          case "convert_table_to_text":
            command_convertTableToText(a, this);
            d = !0;
            break;
          case "cell_border":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.cell_border,
                KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
            d = !0;
            break;
          case "cell_bg_color":
            command_cellBGColor(a, this._EDITOR.design);
            d = !0;
            break;
          case "detail_cell_bg_color":
            showColorPopup(document, t, void 0, "detail_cell_bg_color");
            break;
          case "insert_row_column":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.insert_row_column);
            d = !0;
            break;
          case "cell_property":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.cell_property,
                KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
            d = !0;
            break;
          case "row_property":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.row_property);
            d = !0;
            break;
          case "column_property":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.column_property);
            d = !0;
            break;
          case "table_property":
            ClearDraggingTableCellSelected();
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.table_property,
                KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
            d = !0;
            break;
          case "table_group":
            this._kEditorListTables.show(a);
            d = !0;
            break;
          case "table_group_detail":
            this._kEditorListTables.show(a);
            d = !0;
            break;
          case "table_adjust":
            command_AdjustTableAndCellWidth(a, this);
            d = !0;
            break;
          case "bold":
            command_bold(a, this);
            d = !0;
            break;
          case "underline":
            command_underline(a,
                this);
            d = !0;
            break;
          case "italic":
            command_italic(a, this);
            d = !0;
            break;
          case "strike_through":
            command_strikeThrough(a, this);
            d = !0;
            break;
          case "superscript":
            command_superscript(a, this);
            d = !0;
            break;
          case "subscript":
            command_subscript(a, this);
            d = !0;
            break;
          case "remove_format":
            command_removeFormat(a, this);
            d = !0;
            break;
          case "remove_css":
            command_removeCss(a, this);
            d = !0;
            break;
          case "font_color":
            command_fontColor(a, this._EDITOR.design);
            d = !0;
            break;
          case "detail_font_color":
            showColorPopup(document, t, void 0, "detail_font_color");
            d = !0;
            break;
          case "font_bg_color":
            command_fontBgColor(a, this._EDITOR.design);
            d = !0;
            break;
          case "detail_font_bg_color":
            showColorPopup(document, t, void 0, "detail_font_bg_color");
            d = !0;
            break;
          case "align_left":
            command_align(a, this, "left", f, e);
            d = !0;
            break;
          case "align_center":
            command_align(a, this, "center", f, e);
            d = !0;
            break;
          case "align_right":
            command_align(a, this, "right", f, e);
            d = !0;
            break;
          case "align_full":
            command_align(a, this, "justify", f, e);
            d = !0;
            break;
          case "align_group":
            this._kEditorListAligns.show(a);
            d = !0;
            break;
          case "align_group_detail":
            this._kEditorListAligns.show(a);
            d = !0;
            break;
          case "line_height":
            this._kEditorLineHeight.show(a);
            d = !0;
            break;
          case "line_height_inc":
          case "line_height_dec":
            command_lineHeightIncDec(a, c, this);
            d = !0;
            break;
          case "indent":
            command_indent(a, this);
            d = !0;
            break;
          case "outdent":
            command_outdent(a, this);
            d = !0;
            break;
          case "list_number":
            command_insertOrderedList(a, this);
            d = !0;
            break;
          case "list_bullets":
            command_insertUnOrderedList(a, this);
            d = !0;
            break;
          case "detail_list_number":
            this._kEditorListNumber.show(a);
            d = !0;
            break;
          case "detail_list_bullets":
            this._kEditorListBullets.show(a);
            d = !0;
            break;
          case "list_decimal":
            command_listDecimal(a, this);
            d = !0;
            break;
          case "list_decimal_leading_zero":
            command_listDecimalLeadingZero(a, this);
            d = !0;
            break;
          case "list_lower_alpha":
            command_listLowerAlpha(a, this);
            d = !0;
            break;
          case "list_lower_greek":
            command_listLowerGreek(a, this);
            d = !0;
            break;
          case "list_lower_roman":
            command_listLowerRoman(a, this);
            d = !0;
            break;
          case "list_upper_alpha":
            command_listUpperAlpha(a, this);
            d = !0;
            break;
          case "list_upper_roman":
            command_listUpperRoman(a,
                this);
            d = !0;
            break;
          case "list_disc":
            command_listDisc(a, this);
            d = !0;
            break;
          case "list_circle":
            command_listCircle(a, this);
            d = !0;
            break;
          case "list_square":
            command_listSquare(a, this);
            d = !0;
            break;
          case "list_none_N":
            command_listNone_N(a, this);
            d = !0;
            break;
          case "list_none_B":
            command_listNone_B(a, this);
            d = !0;
            break;
          case "full_screen":
            command_fullScreen(a, this);
            showRuler(this);
            break;
          case "formatting":
            this._kEditorFormatting.show(a);
            d = !0;
            break;
          case "font_family":
            this._kEditorFontFamily.show(a);
            d = !0;
            break;
          case "font_size":
            this._kEditorFontSize.show(a);
            d = !0;
            break;
          case "font_size_inc":
          case "font_size_dec":
            command_fontSizeIncDec(a, c, this);
            d = !0;
            break;
          case "letter_spacing":
            this._kEditorLetterSpacing.show(a);
            d = !0;
            break;
          case "letter_spacing_inc":
          case "letter_spacing_dec":
            command_letterSpacingIncDec(a, c, this);
            d = !0;
            break;
          case "top_design":
            if ("1" == this._config.topStatusBarLoading) {
              var L = this;
              showProcessingBackground();
              setTimeout(function () {
                try {
                  L.setChangeMode("top_design"), hideProcessingBackground()
                } catch (a) {
                  hideProcessingBackground()
                }
              }, G_Progress_LoadTime)
            } else {
              this.setChangeMode("top_design");
            }
            break;
          case "top_source":
            "1" == this._config.topStatusBarLoading
                ? (L = this, showProcessingBackground(), setTimeout(
                    function () {
                      try {
                        L.setChangeMode("top_source"), hideProcessingBackground()
                      } catch (a) {
                        hideProcessingBackground()
                      }
                    }, G_Progress_LoadTime)) : this.setChangeMode("top_source");
            break;
          case "top_preview":
            "1" == this._config.topStatusBarLoading
                ? (L = this, showProcessingBackground(), setTimeout(
                    function () {
                      try {
                        L.setChangeMode("top_preview"), hideProcessingBackground()
                      } catch (a) {
                        hideProcessingBackground()
                      }
                    }, G_Progress_LoadTime)) :
                this.setChangeMode("top_preview");
            break;
          case "top_text":
            "1" == this._config.topStatusBarLoading
                ? (L = this, showProcessingBackground(), setTimeout(
                    function () {
                      try {
                        L.setChangeMode("top_text"), hideProcessingBackground()
                      } catch (a) {
                        hideProcessingBackground()
                      }
                    }, G_Progress_LoadTime)) : this.setChangeMode("top_text");
            break;
          case "design":
            "1" == this._config.statusBarLoading
                ? (L = this, showProcessingBackground(), setTimeout(
                    function () {
                      try {
                        L.setChangeMode("design"), hideProcessingBackground()
                      } catch (a) {
                        hideProcessingBackground()
                      }
                    },
                    G_Progress_LoadTime)) : this.setChangeMode("design");
            break;
          case "source":
            "1" == this._config.statusBarLoading
                ? (L = this, showProcessingBackground(), setTimeout(
                    function () {
                      try {
                        L.setChangeMode("source"), hideProcessingBackground()
                      } catch (a) {
                        hideProcessingBackground()
                      }
                    }, G_Progress_LoadTime)) : this.setChangeMode("source");
            break;
          case "preview":
            "1" == this._config.statusBarLoading
                ? (L = this, showProcessingBackground(), setTimeout(
                    function () {
                      try {
                        L.setChangeMode("preview"), hideProcessingBackground()
                      } catch (a) {
                        hideProcessingBackground()
                      }
                    },
                    G_Progress_LoadTime)) : this.setChangeMode("preview");
            break;
          case "text":
            "1" == this._config.statusBarLoading
                ? (L = this, showProcessingBackground(), setTimeout(
                    function () {
                      try {
                        L.setChangeMode("text"), hideProcessingBackground()
                      } catch (a) {
                        hideProcessingBackground()
                      }
                    }, G_Progress_LoadTime)) : this.setChangeMode("text");
            break;
          case "about":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.about);
            break;
          case "select_all":
            command_selectAll(a, this);
            break;
          case "valign_up":
            command_VerticalAlignExcute(a,
                this, "top");
            d = !0;
            break;
          case "valign_center":
            command_VerticalAlignExcute(a, this, "middle");
            d = !0;
            break;
          case "valign_baseline":
            command_VerticalAlignExcute(a, this, "baseline");
            d = !0;
            break;
          case "valign_bottom":
            command_VerticalAlignExcute(a, this, "bottom");
            d = !0;
            break;
          case "template":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.template);
            d = !0;
            break;
          case "tool_replace":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.tool_replace);
            break;
          case "insert_link_media":
            null ==
            navigator.userAgent.match(/iPad/) && null
            != navigator.userAgent.match(
                /iPhone|Mobile|UP.Browser|Android|BlackBerry|Windows CE|Nokia|webOS|Opera Mini|SonyEricsson|opera mobi|Windows Phone|IEMobile|POLARIS/)
                ? RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                    this._config.pages.m_insert_link_media)
                : RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                    this._config.pages.insert_link_media);
            d = !0;
            break;
          case "shortcut":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.shortcut);
            break;
          case "load_auto_save":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.load_auto_save);
            break;
          case "ruler":
            command_useRuler(a);
            break;
          case "layout":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.layout);
            d = !0;
            break;
          case "dirltr":
            command_Direction(a, this, "LTR");
            d = !0;
            break;
          case "dirrtl":
            command_Direction(a, this, "RTL");
            d = !0;
            break;
          case "format_painter":
            command_formatPainter(a, this);
            break;
          case "apply_format":
            command_applyFormat(a, this);
            d = !0;
            break;
          case "image_align_default":
            command_imageAlign(a, this, "");
            d = !0;
            break;
          case "image_align_left":
            command_imageAlign(a, this, "left");
            d = !0;
            break;
          case "image_align_right":
            command_imageAlign(a, this, "right");
            d = !0;
            break;
          case "list_blockquote":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.blockquote);
            d = !0;
            break;
          case "placeholder":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.placeholder);
            d = !0;
            break;
          case "input_textfield":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.input_text);
            d = !0;
            break;
          case "input_radio":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.input_radio);
            d = !0;
            break;
          case "input_checkbox":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.input_checkbox);
            d = !0;
            break;
          case "input_button":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.input_button);
            d = !0;
            break;
          case "input_hiddenfield":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.input_hidden);
            d = !0;
            break;
          case "input_textarea":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.input_textarea);
            d = !0;
            break;
          case "input_select":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.input_select);
            d = !0;
            break;
          case "input_imagebutton":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.input_image);
            d = !0;
            break;
          case "input_same_width":
            command_inputSameWidthHeight(a, this, "width");
            d = !0;
            break;
          case "input_same_height":
            command_inputSameWidthHeight(a, this, "height");
            d = !0;
            break;
          case "input_same_width_height":
            command_inputSameWidthHeight(a, this, "widthheight");
            d = !0;
            break;
          case "accessibility_validation":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.accessibility_validation);
            break;
          case "horizontal_sum":
          case "vertical_sum":
          case "horizontal_avg":
          case "vertical_avg":
            command_calculationFormula(a, this, c);
            d = !0;
            break;
          case "show_blocks":
            command_showBlocks(a, this);
            break;
          case "table_lock":
            command_tableLock(a, this);
            d = !0;
            break;
          case "cell_lock":
            command_cellLock(a, this);
            d = !0;
            break;
          case "table_lock_property":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.table_lock_property);
            d = !0;
            break;
          case "help":
            command_help(a, this);
            break;
          case "photo_editor":
            command_InsertImagePhotoEdit(a, this);
            d = !0;
            break;
          case "mini_photo_editor":
            command_InsertMiniPhotoEditor(a, this, b ? !0 : !1);
            d = !0;
            break;
          case "photo_editor_property":
            command_photoEditProperty(a, this);
            d = !0;
            break;
          case "table_border":
            command_showTableBorder(a, this);
            d = !0;
            break;
          case "pastetoimage":
            var L = this, O = window.URL || window.webkitURL || window,
                N = O.createObjectURL(KEDITORTOP.G_CURRKEDITOR.clipImageBlob),
                F = new Image;
            F.src = N;
            F.onload = function () {
              if (1 == KEDITORTOP.G_CURRKEDITOR.hasClipSvgText) {
                var a = F.height;
                F.width = getChangedSizeForPPTImage(F.width);
                F.height = getChangedSizeForPPTImage(a)
              }
              KEDITORTOP.G_CURRKEDITOR.clipImageBeforePopup = F;
              RAONK_EDITOR.prototype.dialog.show(L._config.webPath.page,
                  L._config.pages.pastetoimage);
              d = !0;
              try {
                O.revokeObjectURL(N)
              } catch (b) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(b)
              }
            };
            F.onerror = function () {
              "" != KEDITORTOP.G_CURRKEDITOR.clipData ? command_pasteHtml5(
                  KEDITORTOP.G_CURRKEDITOR) : alert(
                  RAONKEditor_lang.msg.alert_no_clipboard_contents)
            };
            break;
          case "insert_layer":
            command_insertLayer(a, this);
            d = !0;
            break;
          case "element_position":
            command_elementPosition(a, this);
            break;
          case "order_of_objects":
            this._kEditorElementZindex.show(a);
            d = !0;
            break;
          case "order_of_objects_detail":
            this._kEditorElementZindex.show(a);
            d = !0;
            break;
          case "bring_to_front":
            command_elementZindex(a, this, 1);
            d = !0;
            break;
          case "send_to_back":
            command_elementZindex(a, this, 2);
            d = !0;
            break;
          case "bring_forward":
            command_elementZindex(a, this, 3);
            d = !0;
            break;
          case "send_backward":
            command_elementZindex(a, this, 4);
            d = !0;
            break;
          case "insert_datetime":
            command_insert_datetime(a, this);
            d = !0;
            break;
          case "detail_insert_datetime":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.insert_datetime);
            break;
          case "conversion":
            canConversion() ? RAONK_EDITOR.prototype.dialog.show(
                this._config.webPath.page,
                this._config.pages.conversion) : alert(
                RAONKEditor_lang.conversion.msg2);
            break;
          case "personal_data":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.personal_data);
            d = !0;
            break;
          case "forbidden_word":
            command_forbidden_word(a, this, "ICON");
            break;
          case "video":
          case "video_property":
            null == navigator.userAgent.match(/iPad/) && null
            != navigator.userAgent.match(
                /iPhone|Mobile|UP.Browser|Android|BlackBerry|Windows CE|Nokia|webOS|Opera Mini|SonyEricsson|opera mobi|Windows Phone|IEMobile|POLARIS/)
                ?
                RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                    this._config.pages.m_video)
                : RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                    this._config.pages.video);
            d = !0;
            break;
          case "spell_check":
            this._LastRange = g_findRepalceRange = null;
            doSetCaretPosition(_iframeDoc.body.firstChild, 0);
            null == this.KEditorWordApp
            && (this.KEditorWordApp = new ActiveXObject(
                "Word.Application"), this.DEXT5WordDoc = this.KEditorWordApp.Documents.Add());
            L = this;
            setTimeout(function () {
              RAONK_EDITOR.prototype.dialog.show(L._config.webPath.page,
                  L._config.pages.spell_check)
            }, 1E3);
            d = !0;
            break;
          case "calculator":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.calculator);
            break;
          case "zoom":
            this._kEditorzoom.show(a);
            break;
          case "zoom_plus":
            command_zoom(a, this, "p");
            break;
          case "zoom_minus":
            command_zoom(a, this, "m");
            break;
          case "word_edit":
            agentDocumentEdit({type: "0"}, this);
            d = !0;
            break;
          case "hwp_edit":
            agentDocumentEdit({type: "1"}, this);
            d = !0;
            break;
          case "paragraph_attribute":
            restoreSelection();
            b = getApplyNodes(
                "p li dt dd h1 h2 h3 h4 h5 h6 pre address".split(" "));
            e = b.length;
            KEDITORTOP.G_SELECTED_ELEMENT = null;
            1 == e && (KEDITORTOP.G_SELECTED_ELEMENT = b[0]);
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.paragraph_attribute);
            d = !0;
            break;
          case "insert_table_top_paragraph":
          case "insert_table_bottom_paragraph":
            command_InsertTableTopBottomParagraph(c, this);
            d = !0;
            break;
          case "body_fit":
            command_bodyFit(a, this);
            d = !0;
            break;
          case "hyperlink_open":
          case "filelink_open":
            window.open(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.href);
            break;
          case "manually_temp_save":
            KEDITORTOP.RAONKEDITOR.ManuallyTempSave(a);
            break;
          case "status_source":
          case "status_preview":
          case "status_text":
            G_LAST_CMD = -1 < t.parentElement.className.indexOf(
                "uebutton_span_enter") ? "design" : c.replace("status_", "");
            "1" == this._config.statusBarLoading
                ? (showProcessingBackground(), setTimeout(function () {
                  try {
                    KEDITORTOP.G_CURRKEDITOR.setChangeMode(
                        G_LAST_CMD), hideProcessingBackground()
                  } catch (a) {
                    hideProcessingBackground()
                  }
                }, G_Progress_LoadTime)) : this.setChangeMode(G_LAST_CMD);
            break;
          case "save_as_image":
            command_saveAsImage(a, KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT,
                this);
            break;
          case "select_save_type":
            RAONK_EDITOR.prototype.dialog.show(this._config.webPath.page,
                this._config.pages.select_save_type);
            break;
          case "delete_pagebreak":
            b = G_CURSOR_ELEMENT, e = b.nextSibling, b && b.tagName && "DIV"
            == b.tagName && "keditor_Page_Break" == b.className
            && b.parentNode.removeChild(b), doSetCaretPosition(e,
                0), G_CURSOR_ELEMENT = e, KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), this._iconEnable(
                "default")
        }
        KEDITORTOP.RAONKEDITOR.browser.ie
        && (KEDITORTOP.G_CURRKEDITOR._RangeBlurBug = !1);
        if (c && 0 == c.indexOf("p_")) {
          if (a =
              c.split("_"), e = b = a[1], 2 < a.length
          && (e = a[2]), G_KPlugin[b]
          && G_KPlugin[b].onClickToolIcon) {
            G_KPlugin[b].onClickToolIcon(e)
          }
        } else {
          c && getCustomIconAttr(c).isCustom && command_custom(a, this,
              getCustomIconAttr(c).command,
              KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
        }
        0 == KEDITORTOP.G_CURRKEDITOR.backupWidthForIOS.isPopup
        && AdjustDesignBodyWidth(
            {editor: KEDITORTOP.G_CURRKEDITOR, isApply: !1});
        onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: d});
        onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: c, tool: !0})
      }
    }
  }, _kEditorzoom: {
    _zoomList: {},
    _iframeHolder: null,
    _iframeHolder_id: "",
    _iframe: null,
    _iframe_id: "",
    _iframe_doc: null,
    _default_value: "",
    _editor_config: null,
    _self: function (a) {
      return document.getElementById("raon_pan_zoom_" + a)
    },
    init: function (a) {
      document.getElementById("ue_" + a + "zoom_text")
      && (document.getElementById("ue_" + a + "zoom_text").value = "100%")
    },
    make: function (a, c) {
      var b = KEDITORTOP.KEDITORDOC.getElementById("raon_zoom_iframe_" + a);
      b && b.parentNode.removeChild(b);
      (b = KEDITORTOP.KEDITORDOC.getElementById("raon_zoom_iframe_holder_" + a))
      &&
      b.parentNode.removeChild(b);
      var d = this;
      if (null != this._self(a)) {
        d._editor_config = c;
        this._iframe = KEDITORTOP.RAONKEDITOR.util.makeIframe();
        this._iframe.title = RAONKEditor_lang.iframe_title.zoom;
        this._iframe_id = "raon_zoom_iframe_" + a;
        this._iframe.id = this._iframe_id;
        this._iframe.style.display = "none";
        KEDITORTOP.RAONKEDITOR.browser.iOS
        || KEDITORTOP.RAONKEDITOR.browser.mobile
            ? (this._iframe.width = "100%", this._iframe.height = "100%", this._iframe.style.overflow = "hidden", this._iframe.style.display = "inline-block",
                this._iframeHolder = KEDITORTOP.KEDITORDOC.createElement(
                    "div"), this._iframeHolder_id = "raon_zoom_iframe_holder_"
                + a, this._iframeHolder.id = this._iframeHolder_id, this._iframeHolder.style.display = "none", this._iframeHolder.style.width = "75px", this._iframeHolder.style.height = "150px", this._iframeHolder.style.border = "2px solid #cccccc", this._iframeHolder.style.zIndex = G_MAIN_ZINDEX
                + 2E3
                + "", this._iframeHolder.style.position = "absolute", this._iframeHolder.style.overflow = "scroll", this._iframeHolder.style.overflowX =
                "hidden", this._iframeHolder.style.webkitOverflowScrolling = "touch", this._iframeHolder.appendChild(
                this._iframe), KEDITORTOP.KEDITORDOC.body.appendChild(
                this._iframeHolder))
            : (this._iframe.width = "75px", this._iframe.height = "200px", this._iframe.style.border = "2px solid #cccccc", this._iframe.style.position = "absolute", this._iframe.style.zIndex = G_MAIN_ZINDEX
                + 2E3
                + "", this._iframe.style.overflow = "", this._iframe.style.overflowX = "", KEDITORTOP.KEDITORDOC.body.appendChild(
                this._iframe));
        b = "document.open();" + (isCustomDomain(document) ?
                'document.domain="' + document.domain + '";' : "")
            + " document.close();";
        b = KEDITORTOP.RAONKEDITOR.browser.ie && 12
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            ? "javascript:void(function(){" + encodeURIComponent(b) + "}())"
            : "";
        this._iframe.src = b;
        this._iframe_doc = this._iframe.contentWindow.document;
        b = "<html><head><title>" + RAONKEditor_lang.zoom.frame_title
            + "</title>";
        isCustomDomain(document) && (b += '<script>document.domain = "'
            + document.domain + '";\x3c/script></head>');
        b += '</head><body style="margin:0px; padding:0px;" oncontextmenu="return false"></body></html>';
        getDocWindow(this._iframe_doc);
        this._iframe_doc.open("text/html", "replace");
        this._iframe_doc.write(b);
        this._iframe_doc.close();
        this._zoomList[a] = [];
        0 < KEDITORTOP.G_CURRKEDITOR._config.zoomList.length
        && (this._zoomList[a] = this._zoomList[a].concat(
            KEDITORTOP.G_CURRKEDITOR._config.zoomList));
        for (var b = this._zoomList[a].length, e = 0; e < b; e++) {
          var f = this._zoomList[a][e], g = "lh_" + a + "_" + e;
          _item = this._iframe_doc.createElement("div");
          _item.setAttribute("id", g);
          _item.style.whiteSpace = "nowrap";
          _item.style.fontSize =
              "14px";
          _item.style.margin = "3px";
          _item.style.padding = "3px";
          _item.style.cursor = "pointer";
          _a_tag = this._iframe_doc.createElement("a");
          _a_tag.href = "javascript:void(0);";
          _a_tag.innerHTML = f;
          _a_tag.style.textDecoration = "none";
          _a_tag.style.color = "black";
          _item.appendChild(_a_tag);
          f = function (b) {
            return function (c) {
              d.mouseover_func(a, b);
              KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
            }
          }(g);
          g = function (b) {
            return function (c) {
              d.click_func(a, b);
              KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
            }
          }(e);
          KEDITORTOP.RAONKEDITOR.util.addEvent(_item,
              "mouseover", f);
          KEDITORTOP.RAONKEDITOR.util.addEvent(_item, "click", g);
          _item.onmousedown = function () {
            return !1
          };
          _item.unselectable = "on";
          this._iframe_doc.body.appendChild(_item)
        }
        KEDITORTOP.RAONKEDITOR.util.addEvent(d._iframe_doc, "keyup",
            function (b) {
              27 == ("which" in b ? b.which : b.keyCode) && (d.hide(
                  a), setTimeout(function () {
                setFocusToBody()
              }, 1))
            })
      }
    },
    mouseover_func: function (a, c) {
      this.reset(a);
      this._iframe_doc.getElementById(c).style.backgroundColor = "#e7e7e7"
    },
    click_func: function (a, c) {
      var b = this.get_value(a, c);
      document.getElementById("ue_" + a + "zoom_text").value = b;
      command_zoom(a, document.getElementById("keditor_design_" + a));
      this.hide(a);
      onChange({editor: KEDITORTOP.G_CURRKEDITOR})
    },
    show: function (a) {
      if (null != KEDITORTOP.G_CURRKEDITOR._config.zoomList) {
        null == this._iframe && this.make(a, KEDITORTOP.G_CURRKEDITOR._config);
        G_SUB_DIALOG = this._self(a);
        G_CURRENT_IFRAME = KEDITORTOP.KEDITORDOC.getElementById(
            this._iframe_id);
        this._iframeHolder
        && (G_CURRENT_IFRAME_HOLDER = KEDITORTOP.KEDITORDOC.getElementById(
            this._iframeHolder.id));
        this.reset(a);
        RAONK_EDITOR.prototype.dialog._click_background(!0);
        var c = {}, c = getWindowScrollPos(KEDITORTOP.KEDITORWIN),
            b = getClientRect(_iframeWin.parent.frameElement);
        getClientRect(_iframeWin.frameElement);
        a = getClientRect(
            _iframeWin.parent.frameElement.contentWindow.document.getElementById(
                "ue_" + a + "zoom"));
        var d = 0;
        7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (d = -2);
        this._iframeHolder ? (this._iframeHolder.style.left = a.left + c[0]
                + b.left - 60 + "px", this._iframeHolder.style.top = a.bottom + c[1]
                + b.top + d - 222 + "px",
                this._iframeHolder.style.display = "")
            : (this._iframe.style.left = a.left + c[0] + b.left - 60
                + "px", this._iframe.style.top = a.bottom + c[1] + b.top + d - 222
                + "px");
        this._iframe.style.display = "";
        var c = this._iframe.contentWindow, e = getIframeDocument(this._iframe);
        0 == KEDITORTOP.RAONKEDITOR.browser.ie && c.focus();
        setTimeout(function () {
          e.getElementsByTagName("A")[0].focus()
        }, 1);
        setFocusFirstAndLast(e, e.getElementsByTagName("A")[0])
      }
    },
    hide: function (a) {
      dialogCancel();
      G_SUB_DIALOG = this._self(a);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      document.getElementById(
          "ue_toolbar_" + G_USE_EDITOR_ID).style.position = "relative";
      this._iframe.style.display = "none";
      this._iframeHolder && (this._iframeHolder.style.display = "none")
    },
    reset: function (a) {
      for (var c = this._iframe_doc.getElementsByTagName("div").length, b,
          d = 0; d < c; d++) {
        b = "lh_" + a + "_"
            + d, this._iframe_doc.getElementById(b).style.backgroundColor = ""
      }
    },
    get_value: function (a, c) {
      return this._zoomList[a][c]
    }
  }, _kEditorDialog: {
    make: function (a, c) {
      getDialogWindow();
      var b = getDialogDocument(), d;
      try {
        d = b.createElement(
            "<iframe tabkey='-1' frameborder='0' scrolling='no'>")
      } catch (e) {
        d =
            b.createElement("iframe"), d.setAttribute("frameborder",
            "0"), d.setAttribute("scrolling", "no"), d.setAttribute("tabkey",
            "-1")
      }
      d.title = RAONKEditor_lang.iframe_title.dialog;
      d.style.display = "none";
      d.style.margin = "0px";
      d.style.padding = "0px";
      d.style.zIndex = "1";
      var f = b.createElement("div");
      f.id = "keditor_dialog";
      f.style.display = "none";
      f.style.position = "absolute";
      if ("" != c.style.dialogBorderRadius) {
        try {
          f.style.borderRadius = c.style.dialogBorderRadius
        } catch (g) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          &&
          console.log(g)
        }
      }
      if ("" != c.style.dialogBoxShadow) {
        try {
          f.style.boxShadow = c.style.dialogBoxShadow
        } catch (h) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(h)
        }
      }
      if ("" != c.style.dialogBorder) {
        try {
          f.style.border = c.style.dialogBorder
        } catch (m) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(m)
        }
      }
      var q = b.createElement("div");
      q.id = "EdiTor_Popup_header";
      KEDITORTOP.RAONKEDITOR.util.setClass(q, "EdiTor_Popup_header");
      KEDITORTOP.RAONKEDITOR.util.addEvent(f,
          "contextmenu", function (a) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
          });
      var t = b.createElement("span");
      t.className = "subject";
      var u = b.createElement("span");
      u.className = "text";
      u.innerHTML = c.system_title;
      var v = b.createElement("div");
      v.className = "closeKDialog";
      v.id = "keditor_dialog_close";
      var w = b.createElement("a");
      w.title = "close";
      w.href = "javascript:void(0);";
      var x = b.createElement("span");
      x.style.display = "none";
      x.innerText = "close";
      w.appendChild(x);
      v.appendChild(w);
      q.appendChild(t);
      q.appendChild(u);
      q.appendChild(v);
      f.appendChild(q);
      q = b.createElement("div");
      KEDITORTOP.RAONKEDITOR.browser.ie && 8
      == KEDITORTOP.RAONKEDITOR.browser.ieVersion
      && (q.style.backgroundColor = "#eeeeee", q.style.backgroundRepeat = "no-repeat", q.style.backgroundPosition = "50% 50%", q.style.backgroundImage = "url("
          + c.webPath.image + "dialog/dailogmove.png)");
      q.appendChild(d);
      f.appendChild(q);
      v.onclick = function () {
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
        && KEDITORTOP.G_CURRKEDITOR.isPasting
        && (KEDITORTOP.G_CURRKEDITOR.isPasting = !1);
        for (var a in G_KPlugin) {
          if (G_KPlugin[a].isProcess) {
            return !1;
          }
        }
        hideDialog(f, {isCancel: !0});
        return !1
      };
      d.setAttribute("id", "keditor_dialog_" + a);
      var y;
      try {
        y = b.createElement(
            "<iframe tabkey='-1' frameborder='0' scrolling='no'>")
      } catch (z) {
        y = b.createElement("iframe"), y.setAttribute("frameborder",
            "0"), y.setAttribute("scrolling", "no"), d.setAttribute("tabkey",
            "-1")
      }
      y.style.display = "block";
      y.style.position = "absolute";
      y.style.top = "0";
      y.style.left = "0";
      y.style.zIndex = "-1";
      y.style.filter = "alpha(opacity = 0)";
      y.style.width = "100%";
      y.style.height = "100%";
      y.title = "Dialog Moving";
      f.appendChild(y);
      y.setAttribute("id", "div_dlgmoveing_iframe_" + a);
      b.body.appendChild(f)
    }
  }, _kEditorTable: {
    _getKEditorTable: function (a) {
      return document.getElementById("k_editor_table_pan")
    }, _self: function (a) {
      return document.getElementById("keditor_span_table_insert_" + a)
    }, make: function (a) {
      var c = this;
      if (null != this._self(a)) {
        var b = document.createElement("table"),
            d = document.createElement("tbody");
        b.setAttribute("id", "k_editor_table_pan");
        var e, f, g;
        e = KEDITORTOP.G_CURRKEDITOR._config.tableInsertDragSize.split(",");
        var h = e[0], m = e[1];
        this._self(a).style.width = 18 * m + 1 + "px";
        this._self(a).style.height = 18 * h + 20 + "px";
        for (var q = 1; q <= h; q++) {
          e = document.createElement("tr");
          for (var t = "", u = 1; u <= m; u++) {
            t = "trd_" + a + "_" + q + "_" + u;
            f = document.createElement("td");
            f.style.border = "1px solid #000000";
            f.style.cursor = "pointer";
            g = document.createElement("div");
            g.style.width = "12px";
            g.style.height = "12px";
            g.style.fontSize = "1pt";
            var v = document.createElement("a");
            v.href = "javascript:void(0);";
            v.style.width = "12px";
            v.style.height = "12px";
            v.style.marginTop =
                "0px";
            v.style.marginLeft = "0px";
            v.style.display = "inline";
            v.title = "\ud45c \uc0bd\uc785 \uc140";
            var w = document.createElement("span");
            w.style.display = "none";
            w.title = "\ud45c \uc0bd\uc785 \uc140";
            v.appendChild(w);
            g.appendChild(v);
            f.appendChild(g);
            f.setAttribute("id", t);
            e.appendChild(f);
            g = function (b) {
              return function (d) {
                c.mouseover_func(a, b);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
              }
            }(t);
            t = function (b) {
              return function (d) {
                c.click_func(a, b);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
              }
            }(t);
            KEDITORTOP.RAONKEDITOR.util.addEvent(f,
                "mouseover", g);
            KEDITORTOP.RAONKEDITOR.util.addEvent(f, "click", t);
            t = function (b, e) {
              return function (f) {
                var g = "which" in f ? f.which : f.keyCode,
                    h = function (a, c) {
                      d.childNodes[b - 1 + a] && d.childNodes[b - 1
                      + a].childNodes[e - 1 + c] && (d.childNodes[b - 1
                      + a].childNodes[e - 1 + c].getElementsByTagName(
                          "a")[0].focus(), is_next = !0, KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                          f))
                    };
                39 == g ? h(0, 1) : 37 == g ? h(0, -1) : 40 == g ? h(1, 0) : 38
                == g ? h(-1, 0) : 27 == g && (c.hide(a), setTimeout(
                    function () {
                      setFocusToBody()
                    }, 1))
              }
            }(q, u);
            KEDITORTOP.RAONKEDITOR.util.addEvent(v,
                "focus", g);
            KEDITORTOP.RAONKEDITOR.util.addEvent(v, "keydown", t);
            f.onmousedown = function () {
              return !1
            };
            f.unselectable = "on"
          }
          d.appendChild(e)
        }
        b.appendChild(d);
        this._self(a).appendChild(b)
      }
    }, show: function (a) {
      null == this._getKEditorTable(a) && this.make(a);
      G_SUB_DIALOG = this._self(a);
      var c = G_SUB_DIALOG.getElementsByTagName("a").length,
          b = G_SUB_DIALOG.getElementsByTagName("a")[0],
          d = G_SUB_DIALOG.getElementsByTagName("a")[c - 1];
      this.reset(a);
      RAONK_EDITOR.prototype.dialog._click_background();
      setTimeout(function () {
        b.focus();
        setFocusFirstAndLast(document, b, d)
      }, 1);
      KEDITORTOP.G_CURRKEDITOR._editorFrameHasFocus = !0
    }, hide: function (a) {
      dialogCancel();
      G_SUB_DIALOG = this._self(a);
      RAONK_EDITOR.prototype.dialog._click_background()
    }, click_func: function (a, c) {
      c = c.replace("trd_" + a + "_", "");
      var b = c.split("_");
      command_InsertTablebyRowCol(a,
          document.getElementById("keditor_design_" + a), b[0], b[1]);
      onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: "table_insert"});
      this.hide(a)
    }, mouseover_func: function (a, c) {
      c = c.replace("trd_" + a + "_", "");
      for (var b =
              c.split("_"), d = "",
          d = KEDITORTOP.G_CURRKEDITOR._config.tableInsertDragSize.split(","),
          e = d[0], f = d[1], g = 1; g <= e; g++) {
        for (var h = 1; h <= f;
            h++) {
          d = "trd_" + a + "_" + g + "_" + h, document.getElementById(
              d).style.backgroundColor = "#ffffff";
        }
      }
      for (g = 1; g <= b[0]; g++) {
        for (h = 1; h <= b[1]; h++) {
          d = "trd_" + a
              + "_" + g + "_" + h, document.getElementById(
              d).style.backgroundColor = "#0697f7";
        }
      }
      document.getElementById("keditor_table_rc_" + a).innerHTML = b[0] + " * "
          + b[1]
    }, reset: function (a) {
      for (var c = "",
          c = KEDITORTOP.G_CURRKEDITOR._config.tableInsertDragSize.split(","),
          b = c[0], d = c[1], e = 1; e <= b; e++) {
        for (var f = 1; f <= d;
            f++) {
          c = "trd_" + a + "_" + e + "_" + f, document.getElementById(
              c).style.backgroundColor = "#ffffff";
        }
      }
      document.getElementById("keditor_table_rc_" + a).innerHTML = "0 * 0"
    }
  }, _kEditorFontFamily: {
    _fontFamily: {},
    _iframeHolder: null,
    _iframeHolder_id: "",
    _iframe: null,
    _iframe_id: "",
    _iframe_doc: null,
    _default_value: "",
    _editor_config: null,
    _self: function (a) {
      return document.getElementById("keditor_span_font_family_" + a)
    },
    make: function (a, c) {
      var b = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_fontfamily_iframe_" +
          a);
      b && b.parentNode.removeChild(b);
      (b = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_fontfamily_iframe_holder_" + a)) && b.parentNode.removeChild(
          b);
      var d = this;
      null != d._self(a) && (d._editor_config = c, d._set_font_family(
          a), b = getIframeDocument(
          d._iframe), KEDITORTOP.RAONKEDITOR.util.addEvent(b, "keyup",
          function (b) {
            27 == ("which" in b ? b.which : b.keyCode) && (d.hide(
                a), setTimeout(function () {
              setFocusToBody()
            }, 1))
          }))
    },
    _set_recently_font_family: function (a) {
      var c = this;
      this._iframe_doc.getElementById("item_recently")
      && this._iframe_doc.getElementById(
          "item_recently").parentNode.removeChild(
          this._iframe_doc.getElementById("item_recently"));
      if (KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported) {
        var b = KEDITORTOP.KEDITORWIN.localStorage.getItem(
            KEDITORTOP.G_CURRKEDITOR.recentlyFontName);
        if (null != b && void 0 != b && "" != b) {
          for (var b = b.split(","), d = !1, e = 0; e < b.length; e++) {
            0
            > this._fontFamily[a].indexOf(b[e]) && (b.splice(b.indexOf(b[e]),
                1), d = !0, --e);
          }
          d && KEDITORTOP.KEDITORWIN.localStorage.setItem(
              KEDITORTOP.G_CURRKEDITOR.recentlyFontName, b);
          d = this._iframe_doc.createElement("div");
          d.setAttribute("id", "item_recently");
          e = this._iframe_doc.createElement("div");
          e.setAttribute("id", "item_recently_tit");
          e.innerText = RAONKEditor_lang.font_family.recently;
          e.style.fontFamily = "Tahoma,\ub3cb\uc6c0,Dotum,AppleGothic,sans-serif !important";
          e.style.fontSize = "11px";
          e.style.whiteSpace = "nowrap";
          e.style.padding = "4px 3px 4px 6px";
          e.style.backgroundColor = "rgb(242, 242, 242)";
          e.style.color = "rgb(138, 138, 138)";
          e.style.fontWeight = "600";
          0 == this._iframe_doc.body.childNodes.length
              ? this._iframe_doc.body.appendChild(d)
              : this._iframe_doc.body.insertBefore(d,
                  this._iframe_doc.body.childNodes[0]);
          d.appendChild(e);
          for (var e = b.length, f = 0; f < e; f++) {
            _font_family = b[f];
            var g = this._fontFamily[a].indexOf(_font_family), h = b[f] + "_r";
            _item_rfont = this._iframe_doc.createElement("div");
            _item_rfont.setAttribute("id", h);
            _item_rfont.style.fontSize = "14px";
            _item_rfont.style.whiteSpace = "nowrap";
            _item_rfont.style.margin = "3px";
            _item_rfont.style.padding = "3px";
            _item_rfont.style.cursor = "pointer";
            _item_text = this._iframe_doc.createElement("span");
            var m = _font_family, m = getDisplayFontName(m);
            "textContent" in _item_text ? _item_text.textContent =
                m : _item_text.innerText = m;
            _font_family = changeFontFamily(_font_family);
            _item_text.style.fontFamily = _font_family;
            _item_text.onmousedown = function () {
              return !1
            };
            _item_text.unselectable = "on";
            _a_tag = this._iframe_doc.createElement("a");
            _a_tag.href = "javascript:void(0);";
            _a_tag.appendChild(_item_text);
            _a_tag.style.textDecoration = "none";
            _a_tag.style.color = "black";
            h = function (b) {
              return function (d) {
                c.mouseover_func(a, b);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
              }
            }(h);
            g = function (b, d) {
              return function (d) {
                c.click_func(a,
                    b);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
              }
            }(g, _item_rfont);
            KEDITORTOP.RAONKEDITOR.util.addEvent(_item_rfont, "mouseover", h);
            KEDITORTOP.RAONKEDITOR.util.addEvent(_item_rfont, "click", g);
            _item_rfont.onmousedown = function () {
              return !1
            };
            _item_rfont.unselectable = "on";
            _item_rfont.appendChild(_a_tag);
            d.appendChild(_item_rfont)
          }
        }
      }
    },
    _set_font_family: function (a) {
      var c = this;
      if (null != this._self(a)) {
        var b, d;
        this._iframe = KEDITORTOP.RAONKEDITOR.util.makeIframe();
        this._iframe.title = RAONKEditor_lang.iframe_title.font_family;
        this._iframe_id = "keditor_fontfamily_iframe_" + a;
        this._iframe.id = this._iframe_id;
        this._iframe.style.display = "none";
        this._iframe.className = "ue_combo_"
            + KEDITORTOP.G_CURRKEDITOR._config.style.skinName;
        KEDITORTOP.RAONKEDITOR.browser.iOS
        || KEDITORTOP.RAONKEDITOR.browser.mobile
            ? (this._iframe.width = "100%", this._iframe.height = "100%", this._iframe.style.overflow = "hidden", this._iframe.style.display = "inline-block", this._iframeHolder = KEDITORTOP.KEDITORDOC.createElement(
                "div"), this._iframeHolder_id = "keditor_fontfamily_iframe_holder_"
                +
                a, this._iframeHolder.id = this._iframeHolder_id, this._iframeHolder.style.display = "none", this._iframeHolder.style.width = "180px", this._iframeHolder.style.height = "150px", this._iframeHolder.style.border = "2px solid #cccccc", this._iframeHolder.style.zIndex = G_MAIN_ZINDEX
                + 2E3
                + "", this._iframeHolder.style.position = "absolute", this._iframeHolder.style.overflow = "scroll", this._iframeHolder.style.overflowX = "hidden", this._iframeHolder.style.webkitOverflowScrolling = "touch", this._iframeHolder.appendChild(
                this._iframe),
                KEDITORTOP.KEDITORDOC.body.appendChild(this._iframeHolder))
            : (this._iframe.width = "180px", this._iframe.height = "250px", this._iframe.style.width = "180px", this._iframe.style.height = "250px", this._iframe.style.border = "2px solid #cccccc", this._iframe.style.position = "absolute", this._iframe.style.zIndex = G_MAIN_ZINDEX
                + 2E3
                + "", this._iframe.style.overflow = "", this._iframe.style.overflowX = "", KEDITORTOP.KEDITORDOC.body.appendChild(
                this._iframe));
        var e = "document.open();" + (isCustomDomain(document)
                ? 'document.domain="' +
                document.domain + '";' : "") + " document.close();",
            e = KEDITORTOP.RAONKEDITOR.browser.ie && 12
            > KEDITORTOP.RAONKEDITOR.browser.ieVersion
                ? "javascript:void(function(){" + encodeURIComponent(e) + "}())"
                : "";
        this._iframe.src = e;
        this._iframe_doc = this._iframe.contentWindow.document;
        e = "<html><head><title>" + RAONKEditor_lang.font_family.frame_title
            + "</title>";
        e += "<style>a:focus { outline-offset: 3px; }</style>";
        isCustomDomain(document) && (e += '<script>document.domain = "'
            + document.domain + '";\x3c/script></head>');
        "" != KEDITORTOP.G_CURRKEDITOR._config.webFontCssUrl &&
        (e += '<link href="' + KEDITORTOP.G_CURRKEDITOR._config.webFontCssUrl
            + '" rel="stylesheet" type="text/css">');
        e += '</head><body style="margin:0px; padding:0px;" oncontextmenu="return false"></body></html>';
        getDocWindow(this._iframe_doc);
        this._iframe_doc.open("text/html", "replace");
        this._iframe_doc.write(e);
        this._iframe_doc.close();
        G_KPlugin.webfontloader && ("0"
        == G_KPlugin.webfontloader.config.uselocalstorage
            ? G_KPlugin.webfontloader.loadWebFontCss(this._iframe.contentWindow)
            : G_KPlugin.webfontloader.loadWebFontFromLocalStorage(
                this._iframe.contentWindow));
        this._fontFamily[a] = [];
        if ("1" == KEDITORTOP.G_CURRKEDITOR._config.useLocalFont) {
          for (var e = KEDITORTOP.G_CURRKEDITOR.localFontList.length, f = 0;
              f < e; f++) {
            this._fontFamily[a].push(
                KEDITORTOP.G_CURRKEDITOR.localFontList[f]);
          }
          this._fontFamily[a].sort();
          this._default_value = KEDITORTOP.G_CURRKEDITOR._setting.font_family;
          0 == this._default_value.length && (this._default_value = "gulim");
          this._fontFamily[a].splice(0, 0, this._default_value)
        } else {
          this._default_value = KEDITORTOP.G_CURRKEDITOR._setting.font_family, 0
          == this._default_value.length &&
          (this._default_value = "gulim"), this._fontFamily[a].push(
              this._default_value), 0
          < KEDITORTOP.G_CURRKEDITOR._config.fontFamilyList.length
          && (this._fontFamily[a] = this._fontFamily[a].concat(
              KEDITORTOP.G_CURRKEDITOR._config.fontFamilyList));
        }
        e = this._fontFamily[a].length;
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFont
        && this._set_recently_font_family(a);
        f = this._iframe_doc.createElement("div");
        f.setAttribute("id", "item_all");
        this._iframe_doc.body.appendChild(f);
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFont &&
        (b = this._iframe_doc.createElement("div"), b.setAttribute("id",
            "item_all_tit"), b.innerText = RAONKEditor_lang.font_family.all, b.style.fontFamily = "Tahoma,\ub3cb\uc6c0,Dotum,AppleGothic,sans-serif !important", b.style.fontSize = "11px", b.style.whiteSpace = "nowrap", b.style.padding = "4px 3px 4px 6px", b.style.backgroundColor = "rgb(242, 242, 242)", b.style.color = "rgb(138, 138, 138)", b.style.fontWeight = "600", f.appendChild(
            b));
        for (var g = 0; g < e; g++) {
          _font_family = this._fontFamily[a][g];
          var h = "ff_" + a + "_" + g;
          b = this._iframe_doc.createElement("div");
          b.setAttribute("id", h);
          b.style.fontSize = "14px";
          b.style.whiteSpace = "nowrap";
          b.style.margin = "3px";
          b.style.padding = "3px";
          b.style.cursor = "pointer";
          d = this._iframe_doc.createElement("span");
          var m = _font_family;
          0 == g && (m = RAONKEditor_lang.icon.font_family);
          m = getDisplayFontName(m);
          "textContent" in d ? d.textContent = m : d.innerText = m;
          _font_family = changeFontFamily(_font_family);
          d.style.fontFamily = _font_family;
          d.onmousedown = function () {
            return !1
          };
          d.unselectable = "on";
          _a_tag = this._iframe_doc.createElement("a");
          _a_tag.href =
              "javascript:void(0);";
          _a_tag.appendChild(d);
          _a_tag.style.textDecoration = "none";
          _a_tag.style.color = "black";
          b.appendChild(_a_tag);
          d = function (b) {
            return function (d) {
              c.mouseover_func(a, b);
              KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
            }
          }(h);
          h = function (b) {
            return function (d) {
              c.click_func(a, b);
              KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
            }
          }(g);
          KEDITORTOP.RAONKEDITOR.util.addEvent(b, "mouseover", d);
          KEDITORTOP.RAONKEDITOR.util.addEvent(b, "click", h);
          b.onmousedown = function () {
            return !1
          };
          b.unselectable = "on";
          f.appendChild(b)
        }
      }
    },
    mouseover_func: function (a, c) {
      this.reset(a);
      this._iframe_doc.getElementById(c).style.backgroundColor = "#e7e7e7"
    },
    click_func: function (a, c, b) {
      var d = KEDITORTOP.G_CURRKEDITOR._kEditorFontFamily, e = "";
      c = e = b && 0 < b.length ? b : d.get_value(a, c);
      c == d._default_value && (c = RAONKEditor_lang.icon.font_family);
      "0" != KEDITORTOP.G_CURRKEDITOR._setting.show_font_real && (c = e);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useFontFamilyKeyin
          ? document.getElementById(
              "txtara_" + a + "font_family").value = getDisplayFontName(c)
          : document.getElementById("ue_" +
              a + "font_family").innerHTML = "<span>" + getDisplayFontName(c)
              + "</span>";
      e = getRealNameThroughDisplayName(e);
      command_fontfamily(a, document.getElementById("keditor_design_" + a), e);
      b || d.hide(a);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFont
      && recentlyLocalStorageSave(e, KEDITORTOP.G_CURRKEDITOR.recentlyFontName)
    },
    show: function (a) {
      var c = KEDITORTOP.G_CURRKEDITOR._kEditorFontFamily;
      null != c._iframe && "ios"
      != KEDITORTOP.RAONKEDITOR.UserAgent.os.name.toLowerCase() || c.make(a,
          KEDITORTOP.G_CURRKEDITOR._config);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFont
      && c._set_recently_font_family(a);
      G_SUB_DIALOG = c._self(a);
      G_CURRENT_IFRAME = KEDITORTOP.KEDITORDOC.getElementById(c._iframe_id);
      c._iframeHolder
      && (G_CURRENT_IFRAME_HOLDER = KEDITORTOP.KEDITORDOC.getElementById(
          c._iframeHolder.id));
      c.reset(a);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      var b = {}, b = getWindowScrollPos(KEDITORTOP.KEDITORWIN), d = null,
          d = "1" == KEDITORTOP.G_CURRKEDITOR._config.useFontFamilyKeyin
              ? getClientRect(
                  _iframeWin.parent.frameElement.contentWindow.document.getElementById(
                      "txtara_" +
                      a + "font_family")) : getClientRect(
                  _iframeWin.parent.frameElement.contentWindow.document.getElementById(
                      "ue_" + a + "font_family"));
      a = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (a = -2);
      var e = getClientRect(_iframeWin.parent.frameElement);
      getClientRect(_iframeWin.frameElement);
      c._iframeHolder ? (c._iframeHolder.style.left = d.left + b[0] + e.left
              + "px", c._iframeHolder.style.top = d.bottom + b[1] + e.top + a
              + "px", c._iframeHolder.style.display = "")
          : (c._iframe.style.left = d.left + b[0] + e.left
              + "px", c._iframe.style.top = d.bottom +
              b[1] + e.top + a + "px");
      c._iframe.style.display = "";
      var b = c._iframe.contentWindow, f = getIframeDocument(c._iframe);
      setZoomValueToBody(f, KEDITORTOP.G_CURRKEDITOR);
      0 == KEDITORTOP.RAONKEDITOR.browser.ie && b.focus();
      setTimeout(function () {
        f.getElementsByTagName("A")[0].focus()
      }, 1);
      b.scrollTo(0, 0);
      setFocusFirstAndLast(f, f.getElementsByTagName("A")[0])
    },
    hide: function (a) {
      dialogCancel();
      G_SUB_DIALOG = this._self(a);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      this._iframe.style.display = "none";
      this._iframeHolder &&
      (this._iframeHolder.style.display = "none")
    },
    reset: function (a) {
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFont
      && KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported && recentlyReset(
          KEDITORTOP.G_CURRKEDITOR.recentlyFontName, this);
      for (var c = 0,
          c = "0" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFont
              ? this._iframe_doc.getElementById(
                  "item_all").getElementsByTagName("div").length
              : this._iframe_doc.getElementById(
              "item_all").getElementsByTagName("div").length - 1, b, d = 0;
          d < c; d++) {
        b = "ff_" + a + "_" + d, this._iframe_doc.getElementById(
            b).style.backgroundColor =
            ""
      }
    },
    get_value: function (a, c) {
      return this._fontFamily[a][c]
    }
  }, _kEditorFontSize: {
    _fontSize: {},
    _iframeHolder: null,
    _iframeHolder_id: "",
    _iframe: null,
    _iframe_id: "",
    _iframe_doc: null,
    _default_value: "",
    _editor_config: null,
    _self: function (a) {
      return document.getElementById("keditor_span_font_size_" + a)
    },
    make: function (a, c) {
      var b = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_fontsize_iframe_" + a);
      b && b.parentNode.removeChild(b);
      (b = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_fontsize_iframe_holder_" + a)) && b.parentNode.removeChild(
          b);
      var d = this;
      if (null != d._self(a)) {
        d._editor_config = c;
        this._iframe = KEDITORTOP.RAONKEDITOR.util.makeIframe();
        this._iframe.title = RAONKEditor_lang.iframe_title.font_size;
        this._iframe_id = "keditor_fontsize_iframe_" + a;
        this._iframe.id = this._iframe_id;
        this._iframe.style.display = "none";
        KEDITORTOP.RAONKEDITOR.browser.iOS
        || KEDITORTOP.RAONKEDITOR.browser.mobile
            ? (this._iframe.width = "100%", this._iframe.height = "100%", this._iframe.style.overflow = "hidden", this._iframe.style.display = "inline-block", this._iframeHolder =
                KEDITORTOP.KEDITORDOC.createElement(
                    "div"), this._iframeHolder_id = "keditor_fontsize_iframe_holder_"
                + a, this._iframeHolder.id = this._iframeHolder_id, this._iframeHolder.style.display = "none", this._iframeHolder.style.width = "150px", this._iframeHolder.style.height = "150px", this._iframeHolder.style.border = "2px solid #cccccc", this._iframeHolder.style.zIndex = G_MAIN_ZINDEX
                + 2E3
                + "", this._iframeHolder.style.position = "absolute", this._iframeHolder.style.overflow = "scroll", this._iframeHolder.style.overflowX = "hidden",
                this._iframeHolder.style.webkitOverflowScrolling = "touch", this._iframeHolder.appendChild(
                this._iframe), KEDITORTOP.KEDITORDOC.body.appendChild(
                this._iframeHolder))
            : (this._iframe.width = "150px", this._iframe.height = "270px", this._iframe.style.width = "150px", this._iframe.style.height = "270px", this._iframe.style.border = "2px solid #cccccc", this._iframe.style.position = "absolute", this._iframe.style.zIndex = G_MAIN_ZINDEX
                + 2E3
                + "", this._iframe.style.overflow = "", this._iframe.style.overflowX = "", KEDITORTOP.KEDITORDOC.body.appendChild(
                this._iframe));
        b = "document.open();" + (isCustomDomain(document) ? 'document.domain="'
            + document.domain + '";' : "") + " document.close();";
        b = KEDITORTOP.RAONKEDITOR.browser.ie && 12
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            ? "javascript:void(function(){" + encodeURIComponent(b) + "}())"
            : "";
        this._iframe.src = b;
        this._iframe_doc = this._iframe.contentWindow.document;
        b = "<html><head><title>" + RAONKEditor_lang.font_size.frame_title
            + "</title>";
        b += "<style>a:focus { outline-offset: 3px; }</style>";
        isCustomDomain(document) && (b += '<script>document.domain = "' +
            document.domain + '";\x3c/script></head>');
        b += '</head><body  style="margin:0px; padding:0px; " oncontextmenu="return false"></body></html>';
        getDocWindow(this._iframe_doc);
        this._iframe_doc.open("text/html", "replace");
        this._iframe_doc.write(b);
        this._iframe_doc.close();
        this._fontSize[a] = [];
        this._default_value = KEDITORTOP.G_CURRKEDITOR._setting.font_size;
        0 == this._default_value.length && (this._default_value = "12pt");
        this._fontSize[a].push(this._default_value);
        0 < KEDITORTOP.G_CURRKEDITOR._config.fontSizeList.length &&
        (this._fontSize[a] = this._fontSize[a].concat(
            KEDITORTOP.G_CURRKEDITOR._config.fontSizeList));
        b = this._fontSize[a].length;
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFontSize
        && this._set_recently_font_size(a);
        var e = this._iframe_doc.createElement("div");
        e.setAttribute("id", "item_all");
        this._iframe_doc.body.appendChild(e);
        if ("1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFontSize) {
          var f = this._iframe_doc.createElement("div");
          f.setAttribute("id", "item_all_tit");
          f.innerText = RAONKEditor_lang.font_size.all;
          f.style.fontFamily = "Tahoma,\ub3cb\uc6c0,Dotum,AppleGothic,sans-serif !important";
          f.style.fontSize = "11px";
          f.style.whiteSpace = "nowrap";
          f.style.padding = "4px 3px 4px 6px";
          f.style.backgroundColor = "rgb(242, 242, 242)";
          f.style.color = "rgb(138, 138, 138)";
          f.style.fontWeight = "600";
          e.appendChild(f)
        }
        for (f = 0; f < b; f++) {
          _font_size = this._fontSize[a][f];
          var g = "fs_" + a + "_" + f;
          _item = this._iframe_doc.createElement("div");
          _item.setAttribute("id", g);
          _item.style.whiteSpace = "nowrap";
          _item.style.margin = "3px";
          _item.style.padding =
              "5px";
          _item.style.cursor = "pointer";
          var h = "",
              h = -1 < _font_size.indexOf("pt") ? _font_size.replace("pt", "")
                  + " pt" : -1 < _font_size.indexOf("px") ? _font_size.replace(
                  "px", "") + " px" : _font_size;
          0 == f && (h = RAONKEditor_lang.icon.font_size);
          1 == c.style.isFontSizeUse ? _item.style.fontSize = _font_size
              : (_item.style.fontSize = "10 pt", h = "        " + _font_size);
          _a_tag = this._iframe_doc.createElement("a");
          _a_tag.href = "javascript:void(0);";
          _a_tag.innerHTML = h;
          _a_tag.style.textDecoration = "none";
          _a_tag.style.color = "black";
          _item.appendChild(_a_tag);
          g = function (b) {
            return function (c) {
              d.mouseover_func(a, b);
              KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
            }
          }(g);
          h = function (b) {
            return function (c) {
              d.click_func(a, b);
              KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
            }
          }(f);
          KEDITORTOP.RAONKEDITOR.util.addEvent(_item, "mouseover", g);
          KEDITORTOP.RAONKEDITOR.util.addEvent(_item, "click", h);
          _item.onmousedown = function () {
            return !1
          };
          _item.unselectable = "on";
          e.appendChild(_item)
        }
        KEDITORTOP.RAONKEDITOR.util.addEvent(d._iframe_doc, "keyup",
            function (b) {
              27 == ("which" in b ? b.which : b.keyCode) &&
              (d.hide(a), setTimeout(function () {
                setFocusToBody()
              }, 1))
            })
      }
    },
    mouseover_func: function (a, c) {
      this.reset(a);
      this._iframe_doc.getElementById(c).style.backgroundColor = "#e7e7e7"
    },
    click_func: function (a, c, b) {
      var d = KEDITORTOP.G_CURRKEDITOR._kEditorFontSize, e = "";
      if (b && 0 < b.length) {
        e = parseFloat(b);
        if (isNaN(e)) {
          return;
        }
        e = b = 0 < b.indexOf("pt") ? e + "pt" : 0 < b.indexOf("px") ? e + "px"
            : 0 < b.indexOf("em") ? e + "em" : 0 < b.indexOf("%") ? e + "%" : e
                + "pt"
      } else {
        e = d.get_value(a, c);
      }
      c = e;
      c == d._default_value && (c = RAONKEditor_lang.icon.font_size);
      "0" !=
      KEDITORTOP.G_CURRKEDITOR._setting.show_font_real && (c = e);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useFontSizeKeyin
          ? document.getElementById("txtara_" + a + "font_size").value = c
          : document.getElementById(
              "ue_" + a + "font_size").innerHTML = "<span>" + c + "</span>";
      command_fontsize(a, document.getElementById("keditor_design_" + a), e);
      b || d.hide(a);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFontSize
      && recentlyLocalStorageSave(e, KEDITORTOP.G_CURRKEDITOR.recentlyFontSize)
    },
    show: function (a) {
      var c = KEDITORTOP.G_CURRKEDITOR._kEditorFontSize;
      null != c._iframe && "ios"
      != KEDITORTOP.RAONKEDITOR.UserAgent.os.name.toLowerCase() || c.make(a,
          KEDITORTOP.G_CURRKEDITOR._config);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFontSize
      && c._set_recently_font_size(a);
      G_SUB_DIALOG = c._self(a);
      G_CURRENT_IFRAME = KEDITORTOP.KEDITORDOC.getElementById(c._iframe_id);
      c._iframeHolder
      && (G_CURRENT_IFRAME_HOLDER = KEDITORTOP.KEDITORDOC.getElementById(
          c._iframeHolder.id));
      c.reset(a);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      var b = {}, b = getWindowScrollPos(KEDITORTOP.KEDITORWIN),
          d = getClientRect(_iframeWin.parent.frameElement);
      getClientRect(_iframeWin.frameElement);
      var e = null, e = "1" == KEDITORTOP.G_CURRKEDITOR._config.useFontSizeKeyin
          ? getClientRect(
              _iframeWin.parent.frameElement.contentWindow.document.getElementById(
                  "txtara_" + a + "font_size")) : getClientRect(
              _iframeWin.parent.frameElement.contentWindow.document.getElementById(
                  "ue_" + a + "font_size"));
      a = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (a = -2);
      c._iframeHolder ? (c._iframeHolder.style.left = e.left + b[0] + d.left
              + "px", c._iframeHolder.style.top =
              e.bottom + b[1] + d.top + a
              + "px", c._iframeHolder.style.display = "")
          : (c._iframe.style.left = e.left + b[0] + d.left
              + "px", c._iframe.style.top = e.bottom + b[1] + d.top + a + "px");
      c._iframe.style.display = "";
      var b = c._iframe.contentWindow, f = getIframeDocument(c._iframe);
      setZoomValueToBody(f, KEDITORTOP.G_CURRKEDITOR);
      0 == KEDITORTOP.RAONKEDITOR.browser.ie && b.focus();
      setTimeout(function () {
        f.getElementsByTagName("A")[0].focus()
      }, 1);
      setFocusFirstAndLast(f, f.getElementsByTagName("A")[0])
    },
    hide: function (a) {
      dialogCancel();
      G_SUB_DIALOG =
          this._self(a);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      this._iframe.style.display = "none";
      this._iframeHolder && (this._iframeHolder.style.display = "none")
    },
    reset: function (a) {
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFontSize
      && KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported && recentlyReset(
          KEDITORTOP.G_CURRKEDITOR.recentlyFontSize, this);
      var c = this._iframe_doc.getElementById("item_all").getElementsByTagName(
          "div").length;
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFontSize && --c;
      for (var b, d = 0; d < c; d++) {
        b = "fs_" + a + "_"
            + d, this._iframe_doc.getElementById(b).style.backgroundColor = ""
      }
    },
    get_value: function (a, c) {
      return this._fontSize[a][c]
    },
    _set_recently_font_size: function (a) {
      var c = this;
      c._iframe_doc.getElementById("item_recently")
      && c._iframe_doc.getElementById("item_recently").parentNode.removeChild(
          c._iframe_doc.getElementById("item_recently"));
      if (KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported) {
        var b = KEDITORTOP.KEDITORWIN.localStorage.getItem(
            KEDITORTOP.G_CURRKEDITOR.recentlyFontSize);
        if (null != b && void 0 != b && "" != b) {
          for (var b = b.split(","), d = !1, e = 0; e < b.length; e++) {
            0
            > this._fontSize[a].indexOf(b[e]) && (b.splice(b.indexOf(b[e]),
                1), d = !0, --e);
          }
          d && KEDITORTOP.KEDITORWIN.localStorage.setItem(
              KEDITORTOP.G_CURRKEDITOR.recentlyFontSize, b);
          d = this._iframe_doc.createElement("div");
          d.setAttribute("id", "item_recently");
          e = this._iframe_doc.createElement("div");
          e.setAttribute("id", "item_recently_tit");
          e.innerText = RAONKEditor_lang.font_size.recently;
          e.style.fontFamily = "Tahoma,\ub3cb\uc6c0,Dotum,AppleGothic,sans-serif !important";
          e.style.fontSize = "11px";
          e.style.whiteSpace = "nowrap";
          e.style.padding = "4px 3px 4px 6px";
          e.style.backgroundColor = "rgb(242, 242, 242)";
          e.style.color = "rgb(138, 138, 138)";
          e.style.fontWeight = "600";
          0 == this._iframe_doc.body.childNodes.length
              ? this._iframe_doc.body.appendChild(d)
              : this._iframe_doc.body.insertBefore(d,
                  this._iframe_doc.body.childNodes[0]);
          d.appendChild(e);
          for (var e = b.length, f = 0; f < e; f++) {
            _fontSize = b[f];
            var g = this._fontSize[a].indexOf(_fontSize), h = b[f] + "_r";
            _item_r_value = this._iframe_doc.createElement("div");
            _item_r_value.setAttribute("id", h);
            _item_r_value.style.fontSize = _fontSize;
            _item_r_value.style.whiteSpace = "nowrap";
            _item_r_value.style.margin = "3px";
            _item_r_value.style.padding = "5px";
            _item_r_value.style.cursor = "pointer";
            _item_text = this._iframe_doc.createElement("span");
            var m = _fontSize;
            "textContent" in _item_text ? _item_text.textContent = m
                : _item_text.innerText = m;
            _item_text.onmousedown = function () {
              return !1
            };
            _item_text.unselectable = "on";
            _a_tag = this._iframe_doc.createElement("a");
            _a_tag.href = "javascript:void(0);";
            _a_tag.appendChild(_item_text);
            _a_tag.style.textDecoration = "none";
            _a_tag.style.color = "black";
            h = function (b) {
              return function (d) {
                c.mouseover_func(a, b);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
              }
            }(h);
            g = function (b, d) {
              return function (d) {
                c.click_func(a, b);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
              }
            }(g, _item_r_value);
            KEDITORTOP.RAONKEDITOR.util.addEvent(_item_r_value, "mouseover", h);
            KEDITORTOP.RAONKEDITOR.util.addEvent(_item_r_value, "click", g);
            _item_r_value.onmousedown = function () {
              return !1
            };
            _item_r_value.unselectable =
                "on";
            _item_r_value.appendChild(_a_tag);
            d.appendChild(_item_r_value)
          }
        }
      }
    }
  }, _kEditorFormatting: {
    _format: G_FORMATTING,
    _iframeHolder: null,
    _iframeHolder_id: "",
    _iframe: null,
    _iframe_id: "",
    _iframe_doc: null,
    _self: function (a) {
      return document.getElementById("keditor_span_formatting_" + a)
    },
    init: function (a) {
      document.getElementById("ue_" + a + "formatting")
      && (document.getElementById("ue_" + a + "formatting").innerHTML = "<span>"
          + RAONKEditor_lang.icon.formatting + "</span>")
    },
    make: function (a, c) {
      var b = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_formatting_iframe_" +
          a);
      b && b.parentNode.removeChild(b);
      (b = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_formatting_iframe_holder_" + a)) && b.parentNode.removeChild(
          b);
      var d = this;
      if (null != d._self(a)) {
        var e;
        0 < KEDITORTOP.G_CURRKEDITOR._config.formattingList.length
        && (d._format = KEDITORTOP.G_CURRKEDITOR._config.formattingList);
        b = d._format.length;
        this._iframe = KEDITORTOP.RAONKEDITOR.util.makeIframe();
        this._iframe.title = RAONKEditor_lang.iframe_title.formatting;
        this._iframe_id = "keditor_formatting_iframe_" + a;
        this._iframe.id = this._iframe_id;
        this._iframe.style.display = "none";
        KEDITORTOP.RAONKEDITOR.browser.iOS
        || KEDITORTOP.RAONKEDITOR.browser.mobile
            ? (this._iframe.width = "100%", this._iframe.height = "100%", this._iframe.style.overflow = "hidden", this._iframe.style.display = "inline-block", this._iframeHolder = KEDITORTOP.KEDITORDOC.createElement(
                "div"), this._iframeHolder_id = "keditor_formatting_iframe_holder_"
                + a, this._iframeHolder.id = this._iframeHolder_id, this._iframeHolder.style.display = "none", this._iframeHolder.style.width = "230px", this._iframeHolder.style.height =
                "150px", this._iframeHolder.style.border = "2px solid #cccccc", this._iframeHolder.style.zIndex = G_MAIN_ZINDEX
                + 2E3
                + "", this._iframeHolder.style.position = "absolute", this._iframeHolder.style.overflow = "scroll", this._iframeHolder.style.overflowX = "hidden", this._iframeHolder.style.webkitOverflowScrolling = "touch", this._iframeHolder.appendChild(
                this._iframe), KEDITORTOP.KEDITORDOC.body.appendChild(
                this._iframeHolder)) : (this._iframe.style.zIndex = G_MAIN_ZINDEX
                + 2E3 + "", this._iframe.style.border = "2px solid #cccccc",
                this._iframe.style.position = "absolute", this._iframe.width = "230px", this._iframe.height = "200px", 8
            > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            && (this._iframe.height = "210px"), this._iframe.style.width = "230px", this._iframe.style.height = "200px", 8
            > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            && (this._iframe.style.height = "210px"), KEDITORTOP.KEDITORDOC.body.appendChild(
                this._iframe));
        var f = "document.open();" + (isCustomDomain(document)
                ? 'document.domain="' + document.domain + '";' : "")
            + " document.close();", f = KEDITORTOP.RAONKEDITOR.browser.ie &&
        12 > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            ? "javascript:void(function(){" + encodeURIComponent(f) + "}())"
            : "";
        this._iframe.src = f;
        this._iframe_doc = this._iframe.contentWindow.document;
        f = "<html><head><title>" + RAONKEditor_lang.formatting.frame_title
            + "</title>";
        f += "<style>a:focus { outline-offset: 2px; }</style>";
        isCustomDomain(document) && (f += '<script>document.domain = "'
            + document.domain + '";\x3c/script></head>');
        f += '</head><body style="margin:0px; padding:0px; " oncontextmenu="return false"></body></html>';
        getDocWindow(this._iframe_doc);
        this._iframe_doc.open("text/html", "replace");
        this._iframe_doc.write(f);
        this._iframe_doc.close();
        var g = null;
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFormatting
        && this._set_recently_formatting(a);
        f = this._iframe_doc.createElement("div");
        f.setAttribute("id", "item_all");
        this._iframe_doc.body.appendChild(f);
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFormatting
        && (e = this._iframe_doc.createElement("div"), e.setAttribute("id",
            "item_all_tit"), e.innerText = RAONKEditor_lang.formatting.all,
            e.style.fontFamily = "Tahoma,\ub3cb\uc6c0,Dotum,AppleGothic,sans-serif !important", e.style.fontSize = "11px", e.style.whiteSpace = "nowrap", e.style.padding = "4px 3px 4px 6px", e.style.backgroundColor = "rgb(242, 242, 242)", e.style.color = "rgb(138, 138, 138)", e.style.fontWeight = "600", f.appendChild(
            e));
        for (var h = 0; h < b; h++) {
          var m = "fs_" + a + "_" + h;
          e = this._iframe_doc.createElement("div");
          e.setAttribute("id", m);
          e.style.whiteSpace = "nowrap";
          e.style.cursor = "pointer";
          e.style.padding = "3px";
          e.style.margin = "3px";
          var q = "(" + d._format[h] +
              ") Heading";
          "" == d._format[h] ? (g = this._iframe_doc.createElement(
                  "span"), q = RAONKEditor_lang.icon.formatting)
              : (g = this._iframe_doc.createElement(
                  d._format[h]), g.style.margin = "1px", g.style.padding = "1px");
          g.style.fontFamily = "Dotum Arial";
          _a_tag = this._iframe_doc.createElement("a");
          _a_tag.href = "javascript:void(0);";
          _a_tag.innerHTML = q;
          _a_tag.style.textDecoration = "none";
          _a_tag.style.color = "black";
          g.appendChild(_a_tag);
          e.innerHTML = g.outerHTML;
          g = function (b) {
            return function (c) {
              d.mouseover_func(a, b);
              KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
            }
          }(m);
          m = function (b) {
            return function (c) {
              d.click_func(a, b);
              KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
            }
          }(h);
          KEDITORTOP.RAONKEDITOR.util.addEvent(e, "mouseover", g);
          KEDITORTOP.RAONKEDITOR.util.addEvent(e, "click", m);
          e.onmousedown = function () {
            return !1
          };
          e.unselectable = "on";
          f.appendChild(e)
        }
        document.getElementById("ue_" + a + "formatting").innerHTML = "<span>"
            + RAONKEditor_lang.icon.formatting + "</span>";
        KEDITORTOP.RAONKEDITOR.util.addEvent(d._iframe_doc, "keyup",
            function (b) {
              27 == ("which" in b ? b.which : b.keyCode) && (d.hide(
                  a), setTimeout(function () {
                    setFocusToBody()
                  },
                  1))
            })
      }
    },
    mouseover_func: function (a, c) {
      this.reset(a);
      this._iframe_doc.getElementById(c).style.backgroundColor = "#e7e7e7"
    },
    click_func: function (a, c) {
      var b = KEDITORTOP.G_CURRKEDITOR._kEditorFormatting,
          d = b.get_value(a, c), e = d;
      "" == e && (e = RAONKEditor_lang.icon.formatting);
      document.getElementById("ue_" + a + "formatting").innerHTML = "<span>" + e
          + "</span>";
      try {
        if (KEDITORTOP.RAONKEDITOR.browser.ie) {
          var f = getFirstRange(), g = f.range.startContainer,
              h = f.range.endContainer;
          if (3 == g.nodeType && 1 == h.nodeType && g.parentNode == h && 1 ==
              f.range.endOffset) {
            var m = h.lastChild, e = 1;
            3 == m.nodeType && (e = m.length);
            f.range.setEnd(m, e);
            f.sel.removeAllRanges();
            f.sel.addRange(f.range);
            null != KEDITORTOP.G_CURRKEDITOR._LastRange
            && (KEDITORTOP.G_CURRKEDITOR._LastRange = f.range)
          }
        }
      } catch (q) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(q)
      }
      command_formatting(a, document.getElementById("keditor_design_" + a), d);
      b.hide(a);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFormatting
      && recentlyLocalStorageSave(d,
          KEDITORTOP.G_CURRKEDITOR.recentlyFormatting)
    },
    show: function (a) {
      var c = KEDITORTOP.G_CURRKEDITOR._kEditorFormatting;
      null != c._iframe && "ios"
      != KEDITORTOP.RAONKEDITOR.UserAgent.os.name.toLowerCase() || c.make(a,
          KEDITORTOP.G_CURRKEDITOR._config);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFormatting
      && c._set_recently_formatting(a);
      G_SUB_DIALOG = c._self(a);
      G_CURRENT_IFRAME = KEDITORTOP.KEDITORDOC.getElementById(c._iframe_id);
      c._iframeHolder
      && (G_CURRENT_IFRAME_HOLDER = KEDITORTOP.KEDITORDOC.getElementById(
          c._iframeHolder.id));
      c.reset(a);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      var b = {}, b = getWindowScrollPos(KEDITORTOP.KEDITORWIN),
          d = getClientRect(_iframeWin.parent.frameElement);
      getClientRect(_iframeWin.frameElement);
      a = getClientRect(
          _iframeWin.parent.frameElement.contentWindow.document.getElementById(
              "ue_" + a + "formatting"));
      var e = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (e = -2);
      c._iframeHolder ? (c._iframeHolder.style.left = a.left + b[0] + d.left
              + "px", c._iframeHolder.style.top = a.bottom + b[1] + d.top + e
              + "px", c._iframeHolder.style.display = "")
          : (c._iframe.style.left = a.left + b[0] + d.left +
              "px", c._iframe.style.top = a.bottom + b[1] + d.top + e + "px");
      c._iframe.style.display = "";
      var b = c._iframe.contentWindow, f = getIframeDocument(c._iframe);
      setZoomValueToBody(f, KEDITORTOP.G_CURRKEDITOR);
      0 == KEDITORTOP.RAONKEDITOR.browser.ie && b.focus();
      setTimeout(function () {
        f.getElementsByTagName("A")[0].focus()
      }, 1);
      setFocusFirstAndLast(f, f.getElementsByTagName("A")[0]);
      KEDITORTOP.G_CURRKEDITOR._editorFrameHasFocus = !0
    },
    hide: function (a) {
      dialogCancel();
      G_SUB_DIALOG = this._self(a);
      this.reset(a);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      this._iframe.style.display = "none";
      this._iframeHolder && (this._iframeHolder.style.display = "none")
    },
    reset: function (a) {
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFormatting
      && KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported && recentlyReset(
          KEDITORTOP.G_CURRKEDITOR.recentlyFormatting, this);
      var c = this._iframe_doc.getElementById("item_all").getElementsByTagName(
          "div").length;
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyFormatting && --c;
      for (var b, d = 0; d < c; d++) {
        b = "fs_" + a + "_"
            + d, this._iframe_doc.getElementById(b).style.backgroundColor =
            ""
      }
    },
    get_value: function (a, c) {
      return this._format[c]
    },
    _set_recently_formatting: function (a) {
      var c = this;
      c._iframe_doc.getElementById("item_recently")
      && c._iframe_doc.getElementById("item_recently").parentNode.removeChild(
          c._iframe_doc.getElementById("item_recently"));
      if (KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported) {
        var b = KEDITORTOP.KEDITORWIN.localStorage.getItem(
            KEDITORTOP.G_CURRKEDITOR.recentlyFormatting);
        if (null != b && void 0 != b && "" != b) {
          for (var b = b.split(","), d = !1, e = 0; e < b.length; e++) {
            0
            > this._format.indexOf(b[e]) &&
            (b.splice(b.indexOf(b[e]), 1), d = !0, --e);
          }
          d && KEDITORTOP.KEDITORWIN.localStorage.setItem(
              KEDITORTOP.G_CURRKEDITOR.recentlyFormatting, b);
          d = this._iframe_doc.createElement("div");
          d.setAttribute("id", "item_recently");
          e = this._iframe_doc.createElement("div");
          e.setAttribute("id", "item_recently_tit");
          e.innerText = RAONKEditor_lang.formatting.recently;
          e.style.fontFamily = "Tahoma,\ub3cb\uc6c0,Dotum,AppleGothic,sans-serif !important";
          e.style.fontSize = "11px";
          e.style.whiteSpace = "nowrap";
          e.style.padding = "4px 3px 4px 6px";
          e.style.backgroundColor = "rgb(242, 242, 242)";
          e.style.color = "rgb(138, 138, 138)";
          e.style.fontWeight = "600";
          0 == this._iframe_doc.body.childNodes.length
              ? this._iframe_doc.body.appendChild(d)
              : this._iframe_doc.body.insertBefore(d,
                  this._iframe_doc.body.childNodes[0]);
          d.appendChild(e);
          for (var e = b.length, f = 0; f < e; f++) {
            _formatting = b[f];
            var g = this._format.indexOf(_formatting), h = b[f] + "_r";
            _item_r_value = this._iframe_doc.createElement("div");
            _item_r_value.setAttribute("id", h);
            _item_r_value.style.whiteSpace = "nowrap";
            _item_r_value.style.cursor = "pointer";
            _item_r_value.style.padding = "3px";
            _item_r_value.style.margin = "3px";
            var m = "(" + _formatting + ") Heading";
            "" == _formatting ? (formatType = this._iframe_doc.createElement(
                    "span"), m = RAONKEditor_lang.icon.formatting)
                : (formatType = this._iframe_doc.createElement(
                    _formatting), formatType.style.margin = "1px", formatType.style.padding = "1px");
            formatType.style.fontFamily = "Dotum Arial";
            _a_tag = this._iframe_doc.createElement("a");
            _a_tag.href = "javascript:void(0);";
            _a_tag.innerHTML = m;
            _a_tag.style.textDecoration =
                "none";
            _a_tag.style.color = "black";
            formatType.appendChild(_a_tag);
            _item_r_value.innerHTML = formatType.outerHTML;
            h = function (b) {
              return function (d) {
                c.mouseover_func(a, b);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
              }
            }(h);
            g = function (b, d) {
              return function (d) {
                c.click_func(a, b);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
              }
            }(g, _item_r_value);
            KEDITORTOP.RAONKEDITOR.util.addEvent(_item_r_value, "mouseover", h);
            KEDITORTOP.RAONKEDITOR.util.addEvent(_item_r_value, "click", g);
            _item_r_value.onmousedown = function () {
              return !1
            };
            _item_r_value.unselectable =
                "on";
            d.appendChild(_item_r_value)
          }
        }
      }
    }
  }, _kEditorLineHeight: {
    _lineHeight: {},
    _iframeHolder: null,
    _iframeHolder_id: "",
    _iframe: null,
    _iframe_id: "",
    _iframe_doc: null,
    _default_value: "",
    _editor_config: null,
    _self: function (a) {
      return document.getElementById("keditor_span_line_height_" + a)
    },
    init: function (a, c) {
      var b = "";
      if ("1" == c._setting.show_font_real) {
        var b = c._setting.line_height, d = !0, e = c._config.lineHeightList[0];
        e && 0 > e.indexOf("%") && (d = !1);
        -1 < b.indexOf("%") ? d || (b = parseInt(b, 10) / 100) : d
            && (b = parseInt(100 * b, 10) + "%")
      }
      "1" ==
      c._config.useLineHeightKeyin ? document.getElementById(
          "txtara_" + a + "line_height") && ("1" == c._setting.show_font_real
          ? document.getElementById("txtara_" + a + "line_height").value = b
          : document.getElementById("txtara_" + a
              + "line_height").value = RAONKEditor_lang.icon.line_height)
          : document.getElementById("ue_" + a + "line_height") && ("1"
      == c._setting.show_font_real ? document.getElementById(
              "ue_" + a + "line_height").innerHTML = "<span>" + b + "</span>"
          : document.getElementById(
              "ue_" + a + "line_height").innerHTML = "<span>"
              + RAONKEditor_lang.icon.line_height +
              "</span>")
    },
    make: function (a, c) {
      var b = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_lineheight_iframe_" + a);
      b && b.parentNode.removeChild(b);
      (b = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_lineheight_iframe_holder_" + a)) && b.parentNode.removeChild(
          b);
      var d = this;
      if (null != this._self(a)) {
        d._editor_config = c;
        this._iframe = KEDITORTOP.RAONKEDITOR.util.makeIframe();
        this._iframe.title = RAONKEditor_lang.iframe_title.line_height;
        this._iframe_id = "keditor_lineheight_iframe_" + a;
        this._iframe.id = this._iframe_id;
        this._iframe.style.display =
            "none";
        KEDITORTOP.RAONKEDITOR.browser.iOS
        || KEDITORTOP.RAONKEDITOR.browser.mobile
            ? (this._iframe.width = "100%", this._iframe.height = "100%", this._iframe.style.overflow = "hidden", this._iframe.style.display = "inline-block", this._iframeHolder = KEDITORTOP.KEDITORDOC.createElement(
                "div"), this._iframeHolder_id = "keditor_lineheight_iframe_holder_"
                + a, this._iframeHolder.id = this._iframeHolder_id, this._iframeHolder.style.display = "none", this._iframe.style.width = "1"
            == c.useRecentlyLineHeight ? "140px"
                : "75px", this._iframeHolder.style.height =
                "150px", this._iframeHolder.style.border = "2px solid #cccccc", this._iframeHolder.style.zIndex = G_MAIN_ZINDEX
                + 2E3
                + "", this._iframeHolder.style.position = "absolute", this._iframeHolder.style.overflow = "scroll", this._iframeHolder.style.overflowX = "hidden", this._iframeHolder.style.webkitOverflowScrolling = "touch", this._iframeHolder.appendChild(
                this._iframe), KEDITORTOP.KEDITORDOC.body.appendChild(
                this._iframeHolder))
            : (this._iframe.width = "75px", this._iframe.height = "200px", this._iframe.style.width = "1"
            == c.useRecentlyLineHeight ?
                "140px"
                : "75px", this._iframe.style.height = "200px", this._iframe.style.border = "2px solid #cccccc", this._iframe.style.position = "absolute", this._iframe.style.zIndex = G_MAIN_ZINDEX
                + 2E3
                + "", this._iframe.style.overflow = "", this._iframe.style.overflowX = "", KEDITORTOP.KEDITORDOC.body.appendChild(
                this._iframe));
        b = "document.open();" + (isCustomDomain(document) ? 'document.domain="'
            + document.domain + '";' : "") + " document.close();";
        b = KEDITORTOP.RAONKEDITOR.browser.ie && 12
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            ? "javascript:void(function(){" +
            encodeURIComponent(b) + "}())" : "";
        this._iframe.src = b;
        this._iframe_doc = this._iframe.contentWindow.document;
        b = "<html><head><title>" + RAONKEditor_lang.line_height.frame_title
            + "</title>";
        b += "<style>a:focus { outline-offset: 3px; }</style>";
        isCustomDomain(document) && (b += '<script>document.domain = "'
            + document.domain + '";\x3c/script></head>');
        b += '</head><body style="margin:0px; padding:0px;" oncontextmenu="return false"></body></html>';
        getDocWindow(this._iframe_doc);
        this._iframe_doc.open("text/html", "replace");
        this._iframe_doc.write(b);
        this._iframe_doc.close();
        this._lineHeight[a] = [];
        this._default_value = KEDITORTOP.G_CURRKEDITOR._setting.line_height;
        var b = !0, e = KEDITORTOP.G_CURRKEDITOR._config.lineHeightList[0];
        e && 0 > e.indexOf("%") && (b = !1);
        -1 < this._default_value.indexOf("%") ? b
            || (this._default_value = parseInt(this._default_value, 10) / 100)
            : b && (this._default_value = parseInt(100 * this._default_value,
            10) + "%");
        0 == this._default_value.length && (this._default_value = "1.2");
        this._lineHeight[a].push(this._default_value);
        0 <
        KEDITORTOP.G_CURRKEDITOR._config.lineHeightList.length
        && (this._lineHeight[a] = this._lineHeight[a].concat(
            KEDITORTOP.G_CURRKEDITOR._config.lineHeightList));
        1 == this._lineHeight[a].length
        && (this._lineHeight[a] = this._lineHeight[a].concat(
            KEDITORTOP.G_CURRKEDITOR._config.lineHeightList));
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyLineHeight
        && this._set_recently_line_height(a);
        b = this._iframe_doc.createElement("div");
        b.setAttribute("id", "item_all");
        this._iframe_doc.body.appendChild(b);
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyLineHeight &&
        (e = this._iframe_doc.createElement("div"), e.setAttribute("id",
            "item_all_tit"), e.innerText = RAONKEditor_lang.line_height.all, e.style.fontFamily = "Tahoma,\ub3cb\uc6c0,Dotum,AppleGothic,sans-serif !important", e.style.fontSize = "11px", e.style.whiteSpace = "nowrap", e.style.padding = "4px 3px 4px 6px", e.style.backgroundColor = "rgb(242, 242, 242)", e.style.color = "rgb(138, 138, 138)", e.style.fontWeight = "600", b.appendChild(
            e));
        for (var e = this._lineHeight[a].length, f = 0; f < e; f++) {
          _line_height = this._lineHeight[a][f];
          var g =
              "lh_" + a + "_" + f;
          _item = this._iframe_doc.createElement("div");
          _item.setAttribute("id", g);
          _item.style.whiteSpace = "nowrap";
          _item.style.fontSize = "14px";
          _item.style.margin = "3px";
          _item.style.padding = "3px";
          _item.style.cursor = "pointer";
          var h = "",
              h = 0 == f ? RAONKEditor_lang.icon.line_height : _line_height;
          _a_tag = this._iframe_doc.createElement("a");
          _a_tag.href = "javascript:void(0);";
          _a_tag.innerHTML = h;
          _a_tag.style.textDecoration = "none";
          _a_tag.style.color = "black";
          _item.appendChild(_a_tag);
          g = function (b) {
            return function (c) {
              d.mouseover_func(a,
                  b);
              KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
            }
          }(g);
          h = function (b) {
            return function (c) {
              d.click_func(a, b);
              KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
            }
          }(f);
          KEDITORTOP.RAONKEDITOR.util.addEvent(_item, "mouseover", g);
          KEDITORTOP.RAONKEDITOR.util.addEvent(_item, "click", h);
          _item.onmousedown = function () {
            return !1
          };
          _item.unselectable = "on";
          b.appendChild(_item)
        }
        KEDITORTOP.RAONKEDITOR.util.addEvent(d._iframe_doc, "keyup",
            function (b) {
              27 == ("which" in b ? b.which : b.keyCode) && (d.hide(
                  a), setTimeout(function () {
                    setFocusToBody()
                  },
                  1))
            })
      }
    },
    mouseover_func: function (a, c) {
      this.reset(a);
      this._iframe_doc.getElementById(c).style.backgroundColor = "#e7e7e7"
    },
    click_func: function (a, c, b) {
      var d = KEDITORTOP.G_CURRKEDITOR._kEditorLineHeight, e = "";
      if (b && 0 < b.length) {
        e = parseFloat(b);
        if (isNaN(e)) {
          return;
        }
        e = b
      } else {
        e = d.get_value(a, c);
      }
      c = e;
      c == d._default_value && (c = RAONKEditor_lang.icon.line_height);
      "0" != KEDITORTOP.G_CURRKEDITOR._setting.show_font_real && (c = e);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useLineHeightKeyin
          ? document.getElementById("txtara_" + a + "line_height").value =
              c : document.getElementById(
              "ue_" + a + "line_height").innerHTML = "<span>" + c + "</span>";
      command_lineHeight(a, document.getElementById("keditor_design_" + a), e);
      onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: "line_height"});
      b || d.hide(a);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyLineHeight
      && recentlyLocalStorageSave(e,
          KEDITORTOP.G_CURRKEDITOR.recentlyLineHeight)
    },
    show: function (a) {
      var c = KEDITORTOP.G_CURRKEDITOR._kEditorLineHeight;
      null != c._iframe && "ios"
      != KEDITORTOP.RAONKEDITOR.UserAgent.os.name.toLowerCase() ||
      c.make(a, KEDITORTOP.G_CURRKEDITOR._config);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyLineHeight
      && c._set_recently_line_height(a);
      G_SUB_DIALOG = c._self(a);
      G_CURRENT_IFRAME = KEDITORTOP.KEDITORDOC.getElementById(c._iframe_id);
      c._iframeHolder
      && (G_CURRENT_IFRAME_HOLDER = KEDITORTOP.KEDITORDOC.getElementById(
          c._iframeHolder.id));
      c.reset(a);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      var b = {}, b = getWindowScrollPos(KEDITORTOP.KEDITORWIN),
          d = getClientRect(_iframeWin.parent.frameElement);
      getClientRect(_iframeWin.frameElement);
      var e = null,
          e = "1" == KEDITORTOP.G_CURRKEDITOR._config.useLineHeightKeyin
              ? getClientRect(
                  _iframeWin.parent.frameElement.contentWindow.document.getElementById(
                      "txtara_" + a + "line_height")) : getClientRect(
                  _iframeWin.parent.frameElement.contentWindow.document.getElementById(
                      "ue_" + a + "line_height"));
      a = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (a = -2);
      c._iframeHolder ? (c._iframeHolder.style.left = e.left + b[0] + d.left
          + "px", c._iframeHolder.style.top = e.bottom + b[1] + d.top + a
          + "px", c._iframeHolder.style.display = "") : (c._iframe.style.left =
          e.left + b[0] + d.left + "px", c._iframe.style.top = e.bottom + b[1]
          + d.top + a + "px");
      c._iframe.style.display = "";
      var b = c._iframe.contentWindow, f = getIframeDocument(c._iframe);
      setZoomValueToBody(f, KEDITORTOP.G_CURRKEDITOR);
      0 == KEDITORTOP.RAONKEDITOR.browser.ie && b.focus();
      setTimeout(function () {
        f.getElementsByTagName("A")[0].focus()
      }, 1);
      setFocusFirstAndLast(f, f.getElementsByTagName("A")[0])
    },
    hide: function (a) {
      dialogCancel();
      G_SUB_DIALOG = this._self(a);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      this._iframe.style.display =
          "none";
      this._iframeHolder && (this._iframeHolder.style.display = "none")
    },
    reset: function (a) {
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyLineHeight
      && KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported && recentlyReset(
          KEDITORTOP.G_CURRKEDITOR.recentlyLineHeight, this);
      var c = this._iframe_doc.getElementById("item_all").getElementsByTagName(
          "div").length;
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyLineHeight && --c;
      for (var b, d = 0; d < c; d++) {
        b = "lh_" + a + "_"
            + d, this._iframe_doc.getElementById(b).style.backgroundColor =
            ""
      }
    },
    get_value: function (a, c) {
      return this._lineHeight[a][c]
    },
    _set_recently_line_height: function (a) {
      var c = this;
      c._iframe_doc.getElementById("item_recently")
      && c._iframe_doc.getElementById("item_recently").parentNode.removeChild(
          c._iframe_doc.getElementById("item_recently"));
      if (KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported) {
        var b = KEDITORTOP.KEDITORWIN.localStorage.getItem(
            KEDITORTOP.G_CURRKEDITOR.recentlyLineHeight);
        if (null != b && void 0 != b && "" != b) {
          for (var b = b.split(","), d = !1, e = 0; e < b.length; e++) {
            0 >
            this._lineHeight[a].indexOf(b[e]) && (b.splice(b.indexOf(b[e]),
                1), d = !0, --e);
          }
          d && KEDITORTOP.KEDITORWIN.localStorage.setItem(
              KEDITORTOP.G_CURRKEDITOR.recentlyLineHeight, b);
          d = this._iframe_doc.createElement("div");
          d.setAttribute("id", "item_recently");
          e = this._iframe_doc.createElement("div");
          e.setAttribute("id", "item_recently_tit");
          e.innerText = RAONKEditor_lang.line_height.recently;
          e.style.fontFamily = "Tahoma,\ub3cb\uc6c0,Dotum,AppleGothic,sans-serif !important";
          e.style.fontSize = "11px";
          e.style.whiteSpace = "nowrap";
          e.style.padding = "4px 3px 4px 6px";
          e.style.backgroundColor = "rgb(242, 242, 242)";
          e.style.color = "rgb(138, 138, 138)";
          e.style.fontWeight = "600";
          0 == this._iframe_doc.body.childNodes.length
              ? this._iframe_doc.body.appendChild(d)
              : this._iframe_doc.body.insertBefore(d,
                  this._iframe_doc.body.childNodes[0]);
          d.appendChild(e);
          for (var e = b.length, f = 0; f < e; f++) {
            _lineHeight = b[f];
            var g = this._lineHeight[a].indexOf(_lineHeight), h = b[f] + "_r";
            _item_r_line_height = this._iframe_doc.createElement("div");
            _item_r_line_height.setAttribute("id",
                h);
            _item_r_line_height.style.fontSize = "14px";
            _item_r_line_height.style.whiteSpace = "nowrap";
            _item_r_line_height.style.margin = "3px";
            _item_r_line_height.style.padding = "3px";
            _item_r_line_height.style.cursor = "pointer";
            _item_text = this._iframe_doc.createElement("span");
            var m = _lineHeight;
            "textContent" in _item_text ? _item_text.textContent = m
                : _item_text.innerText = m;
            _item_text.onmousedown = function () {
              return !1
            };
            _item_text.unselectable = "on";
            _a_tag = this._iframe_doc.createElement("a");
            _a_tag.href = "javascript:void(0);";
            _a_tag.appendChild(_item_text);
            _a_tag.style.textDecoration = "none";
            _a_tag.style.color = "black";
            h = function (b) {
              return function (d) {
                c.mouseover_func(a, b);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
              }
            }(h);
            g = function (b, d) {
              return function (d) {
                c.click_func(a, b);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
              }
            }(g, _item_r_line_height);
            KEDITORTOP.RAONKEDITOR.util.addEvent(_item_r_line_height,
                "mouseover", h);
            KEDITORTOP.RAONKEDITOR.util.addEvent(_item_r_line_height, "click",
                g);
            _item_r_line_height.onmousedown = function () {
              return !1
            };
            _item_r_line_height.unselectable = "on";
            _item_r_line_height.appendChild(_a_tag);
            d.appendChild(_item_r_line_height)
          }
        }
      }
    }
  }, _kEditorLetterSpacing: {
    _letterSpacing: {},
    _iframe: null,
    _iframe_id: "",
    _iframe_doc: null,
    _default_value: "",
    _editor_config: null,
    _self: function (a) {
      return document.getElementById("keditor_span_letter_spacing_" + a)
    },
    make: function (a, c) {
      var b = this;
      if (null != b._self(a)) {
        b._editor_config = c;
        this._iframe = KEDITORTOP.RAONKEDITOR.util.makeIframe();
        this._iframe.title = RAONKEditor_lang.iframe_title.letter_spacing;
        this._iframe.width = "85px";
        this._iframe.height = "270px";
        this._iframe.style.width = "1" == c.useRecentlyLetterSpacing ? "145px"
            : "85px";
        this._iframe.style.height = "270px";
        this._iframe_id = "keditor_letterspacing_iframe_" + a;
        this._iframe.id = this._iframe_id;
        this._iframe.style.display = "none";
        this._iframe.style.border = "2px solid #cccccc";
        this._iframe.style.position = "absolute";
        this._iframe.style.zIndex = G_MAIN_ZINDEX + 2E3 + "";
        this._iframe.style.overflow = "";
        this._iframe.style.overflowX = "";
        KEDITORTOP.KEDITORDOC.body.appendChild(this._iframe);
        var d = "document.open();" + (isCustomDomain(document)
                ? 'document.domain="' + document.domain + '";' : "")
            + " document.close();", d = KEDITORTOP.RAONKEDITOR.browser.ie && 12
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            ? "javascript:void(function(){" + encodeURIComponent(d) + "}())"
            : "";
        this._iframe.src = d;
        this._iframe_doc = this._iframe.contentWindow.document;
        d = "<html><head><title>" + RAONKEditor_lang.letter_spacing.frame_title
            + "</title>";
        d += "<style>a:focus { outline-offset: 3px; }</style>";
        isCustomDomain(document) && (d += '<script>document.domain = "' +
            document.domain + '";\x3c/script></head>');
        d += '</head><body style="margin:0px; padding:0px;" oncontextmenu="return false"></body></html>';
        getDocWindow(this._iframe_doc);
        this._iframe_doc.open("text/html", "replace");
        this._iframe_doc.write(d);
        this._iframe_doc.close();
        this._letterSpacing[a] = [];
        this._default_value = "";
        this._letterSpacing[a].push(this._default_value);
        for (var d = c.letterSpacingList.length, e = 0; e < d;
            e++) {
          _letter_spacing = c.letterSpacingList[e], this._letterSpacing[a].push(
              _letter_spacing);
        }
        d = this._letterSpacing[a].length;
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyLetterSpacing
        && this._set_recently_letter_spacing(a);
        var f = this._iframe_doc.createElement("div");
        f.setAttribute("id", "item_all");
        this._iframe_doc.body.appendChild(f);
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyLetterSpacing
        && (e = this._iframe_doc.createElement("div"), e.setAttribute("id",
            "item_all_tit"), e.innerText = RAONKEditor_lang.letter_spacing.all, e.style.fontFamily = "Tahoma,\ub3cb\uc6c0,Dotum,AppleGothic,sans-serif !important", e.style.fontSize =
            "11px", e.style.whiteSpace = "nowrap", e.style.padding = "4px 3px 4px 6px", e.style.backgroundColor = "rgb(242, 242, 242)", e.style.color = "rgb(138, 138, 138)", e.style.fontWeight = "600", f.appendChild(
            e));
        for (e = 0; e < d; e++) {
          _letter_spacing = this._letterSpacing[a][e];
          var g = "ls_" + a + "_" + e;
          _item = this._iframe_doc.createElement("div");
          _item.setAttribute("id", g);
          _item.style.whiteSpace = "nowrap";
          _item.style.fontSize = "14px";
          _item.style.margin = "3px";
          _item.style.padding = "3px";
          _item.style.cursor = "pointer";
          var h = "", h = 0 == e ? RAONKEditor_lang.icon.letter_spacing :
              _letter_spacing;
          _a_tag = this._iframe_doc.createElement("a");
          _a_tag.href = "javascript:void(0);";
          _a_tag.innerHTML = h;
          _a_tag.style.textDecoration = "none";
          _a_tag.style.color = "black";
          _item.appendChild(_a_tag);
          g = function (c) {
            return function (d) {
              b.mouseover_func(a, c);
              KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
            }
          }(g);
          h = function (c) {
            return function (d) {
              b.click_func(a, c);
              KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
            }
          }(e);
          KEDITORTOP.RAONKEDITOR.util.addEvent(_item, "mouseover", g);
          KEDITORTOP.RAONKEDITOR.util.addEvent(_item, "click",
              h);
          _item.onmousedown = function () {
            return !1
          };
          _item.unselectable = "on";
          f.appendChild(_item)
        }
      }
    },
    mouseover_func: function (a, c) {
      this.reset(a);
      this._iframe_doc.getElementById(c).style.backgroundColor = "#e7e7e7"
    },
    click_func: function (a, c) {
      var b = KEDITORTOP.G_CURRKEDITOR._kEditorLetterSpacing,
          d = b.get_value(a, c), e = d;
      e == b._default_value && (e = RAONKEditor_lang.icon.letter_spacing);
      document.getElementById("ue_" + a + "letter_spacing").innerHTML = "<span>"
          + e + "</span>";
      command_letterSpacing(a, KEDITORTOP.G_CURRKEDITOR, d);
      b.hide(a);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyLetterSpacing
      && recentlyLocalStorageSave(d,
          KEDITORTOP.G_CURRKEDITOR.recentlyLetterSpacing)
    },
    show: function (a) {
      var c = KEDITORTOP.G_CURRKEDITOR._kEditorLetterSpacing;
      null != c._iframe && "ios"
      != KEDITORTOP.RAONKEDITOR.UserAgent.os.name.toLowerCase() || c.make(a,
          KEDITORTOP.G_CURRKEDITOR._config);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyLetterSpacing
      && c._set_recently_letter_spacing(a);
      G_SUB_DIALOG = c._self(a);
      G_CURRENT_IFRAME = KEDITORTOP.KEDITORDOC.getElementById(c._iframe_id);
      c.reset(a);
      RAONK_EDITOR.prototype.dialog._click_background();
      var b = {}, b = getWindowScrollPos(KEDITORTOP.KEDITORWIN),
          d = getClientRect(_iframeWin.parent.frameElement);
      getClientRect(_iframeWin.frameElement);
      var e = getClientRect(
          _iframeWin.parent.frameElement.contentWindow.document.getElementById(
              "ue_" + a + "letter_spacing")), f = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (f = -2);
      c._iframe.style.left = e.left + b[0] + d.left + "px";
      c._iframe.style.top = e.bottom + b[1] + d.top + f + "px";
      c._iframe.style.display = "";
      var b = c._iframe.contentWindow,
          g = getIframeDocument(c._iframe);
      setZoomValueToBody(g, KEDITORTOP.G_CURRKEDITOR);
      0 == KEDITORTOP.RAONKEDITOR.browser.ie && b.focus();
      setTimeout(function () {
        g.getElementsByTagName("A")[0].focus()
      }, 1);
      KEDITORTOP.RAONKEDITOR.util.addEvent(g, "keyup", function (b) {
        27 == ("which" in b ? b.which : b.keyCode) && (c.hide(a), setTimeout(
            function () {
              setFocusToBody()
            }, 1))
      });
      setFocusFirstAndLast(g, g.getElementsByTagName("A")[0])
    },
    hide: function (a) {
      dialogCancel();
      G_SUB_DIALOG = this._self(a);
      RAONK_EDITOR.prototype.dialog._click_background();
      this._iframe.style.display = "none"
    },
    reset: function (a) {
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyLetterSpacing
      && KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported && recentlyReset(
          KEDITORTOP.G_CURRKEDITOR.recentlyLetterSpacing, this);
      var c = this._iframe_doc.getElementById("item_all").getElementsByTagName(
          "div").length;
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useRecentlyLetterSpacing && --c;
      for (var b, d = 0; d < c; d++) {
        b = "ls_" + a + "_"
            + d, this._iframe_doc.getElementById(b).style.backgroundColor = ""
      }
    },
    get_value: function (a,
        c) {
      return this._letterSpacing[a][c]
    },
    _set_recently_letter_spacing: function (a) {
      var c = this;
      c._iframe_doc.getElementById("item_recently")
      && c._iframe_doc.getElementById("item_recently").parentNode.removeChild(
          c._iframe_doc.getElementById("item_recently"));
      if (KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported) {
        var b = KEDITORTOP.KEDITORWIN.localStorage.getItem(
            KEDITORTOP.G_CURRKEDITOR.recentlyLetterSpacing);
        if (null != b && void 0 != b && "" != b) {
          for (var b = b.split(","), d = !1, e = 0; e < b.length; e++) {
            0
            > this._letterSpacing[a].indexOf(b[e]) &&
            (b.splice(b.indexOf(b[e]), 1), d = !0, --e);
          }
          d && KEDITORTOP.KEDITORWIN.localStorage.setItem(
              KEDITORTOP.G_CURRKEDITOR.recentlyLetterSpacing, b);
          d = this._iframe_doc.createElement("div");
          d.setAttribute("id", "item_recently");
          e = this._iframe_doc.createElement("div");
          e.setAttribute("id", "item_recently_tit");
          e.innerText = RAONKEditor_lang.letter_spacing.recently;
          e.style.fontFamily = "Tahoma,\ub3cb\uc6c0,Dotum,AppleGothic,sans-serif !important";
          e.style.fontSize = "11px";
          e.style.whiteSpace = "nowrap";
          e.style.padding = "4px 3px 4px 6px";
          e.style.backgroundColor = "rgb(242, 242, 242)";
          e.style.color = "rgb(138, 138, 138)";
          e.style.fontWeight = "600";
          0 == this._iframe_doc.body.childNodes.length
              ? this._iframe_doc.body.appendChild(d)
              : this._iframe_doc.body.insertBefore(d,
                  this._iframe_doc.body.childNodes[0]);
          d.appendChild(e);
          for (var e = b.length, f = 0; f < e; f++) {
            _letter_spacing = b[f];
            var g = this._letterSpacing[a].indexOf(_letter_spacing),
                h = b[f] + "_r";
            _item_r_letter_spacing = this._iframe_doc.createElement("div");
            _item_r_letter_spacing.setAttribute("id", h);
            _item_r_letter_spacing.style.fontSize =
                "14px";
            _item_r_letter_spacing.style.whiteSpace = "nowrap";
            _item_r_letter_spacing.style.margin = "3px";
            _item_r_letter_spacing.style.padding = "3px";
            _item_r_letter_spacing.style.cursor = "pointer";
            _item_text = this._iframe_doc.createElement("span");
            var m = _letter_spacing;
            "textContent" in _item_text ? _item_text.textContent = m
                : _item_text.innerText = m;
            _item_text.onmousedown = function () {
              return !1
            };
            _item_text.unselectable = "on";
            _a_tag = this._iframe_doc.createElement("a");
            _a_tag.href = "javascript:void(0);";
            _a_tag.appendChild(_item_text);
            _a_tag.style.textDecoration = "none";
            _a_tag.style.color = "black";
            h = function (b) {
              return function (d) {
                c.mouseover_func(a, b);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
              }
            }(h);
            g = function (b, d) {
              return function (d) {
                c.click_func(a, b);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(d)
              }
            }(g, _item_r_letter_spacing);
            KEDITORTOP.RAONKEDITOR.util.addEvent(_item_r_letter_spacing,
                "mouseover", h);
            KEDITORTOP.RAONKEDITOR.util.addEvent(_item_r_letter_spacing,
                "click", g);
            _item_r_letter_spacing.onmousedown = function () {
              return !1
            };
            _item_r_letter_spacing.unselectable =
                "on";
            _item_r_letter_spacing.appendChild(_a_tag);
            d.appendChild(_item_r_letter_spacing)
          }
        }
      }
    }
  }, _kEditorWorkProcessing: {
    _iframe: null, _iframe_id: "", _self: function (a) {
      return document.getElementById("ue_editor_holder_" + a)
    }, make: function (a, c) {
      if (null != this._self(a)) {
        this._iframe = KEDITORTOP.RAONKEDITOR.util.makeIframe();
        this._iframe.title = "work processing...";
        var b = this._self(a);
        this._iframe.width = b.clientWidth - 10 + "px";
        this._iframe.height = "200px";
        this._iframe_id = "keditor_workprocessing_iframe_" + a;
        this._iframe.id =
            this._iframe_id;
        this._iframe.style.display = "none";
        this._iframe.style.border = "0px solid #cccccc";
        this._iframe.style.position = "absolute";
        this._iframe.style.zIndex = G_MAIN_ZINDEX + 2E3 + "";
        KEDITORTOP.KEDITORDOC.body.appendChild(this._iframe);
        b = "document.open();" + (isCustomDomain(document) ? 'document.domain="'
            + document.domain + '";' : "") + " document.close();";
        b = KEDITORTOP.RAONKEDITOR.browser.ie && 12
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            ? "javascript:void(function(){" + encodeURIComponent(b) + "}())"
            : "";
        this._iframe.src =
            b;
        this._iframe_doc = this._iframe.contentWindow.document;
        b = "<html><head><title>" + this._iframe.title
            + '</title></head><body  style="margin:0px; padding:0px;" oncontextmenu="return false"><div style="text-align:center;"></div></body></html>';
        getDocWindow(this._iframe_doc);
        this._iframe_doc.open("text/html", "replace");
        isCustomDomain(document) && (this._iframe_doc.domain = document.domain);
        this._iframe_doc.write(b);
        this._iframe_doc.close()
      }
    }, show: function (a) {
      setFocusTopWindow();
      G_SUB_DIALOG = this._self(a);
      G_CURRENT_IFRAME =
          KEDITORTOP.KEDITORDOC.getElementById(this._iframe_id);
      a = {};
      a = getWindowScrollPos(KEDITORTOP.KEDITORWIN);
      var c = getClientRect(G_SUB_DIALOG),
          b = getClientRect(_iframeWin.parent.frameElement);
      getClientRect(_iframeWin.frameElement);
      this._iframe.style.left = c.left + a[0] + b.left + "px";
      this._iframe.style.top = c.top + a[1] + b.top + 50 + "px";
      this._iframe.style.display = ""
    }, hide: function (a) {
      dialogCancel();
      this._iframe.style.display = "none"
    }
  }, _kEditorListNumber: {
    _iframe: null,
    _iframe_id: "",
    _line_number_item: "list_decimal list_decimal_leading_zero list_lower_alpha list_lower_greek list_lower_roman list_upper_alpha list_upper_roman list_none".split(
        " "),
    _self: function (a) {
      return document.getElementById("keditor_span_detail_list_number_" + a)
    },
    make: function (a) {
      var c = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_detail_list_number_iframe_" + a);
      c && c.parentNode.removeChild(c);
      var b = this;
      if (null != this._self(a)) {
        this._iframe = KEDITORTOP.RAONKEDITOR.util.makeIframe();
        this._iframe_id = "keditor_detail_list_number_iframe_" + a;
        this._iframe.id = this._iframe_id;
        this._iframe.style.margin = "0px";
        this._iframe.style.padding = "0px";
        this._iframe.style.zIndex = G_MAIN_ZINDEX + 2E3 +
            "";
        this._iframe.style.position = "absolute";
        this._iframe.scrolling = "no";
        this._iframe.style.overflow = "auto";
        this._iframe.style.overflowX = "hidden";
        this._iframe.style.display = "none";
        this._iframe.allowTransparency = "true";
        c = 0;
        if (7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion || 8
            == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          c = 2;
        }
        this._iframe.style.width = 180 + c + "px";
        c = this._line_number_item.length;
        7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (c -= 2);
        c = 24 * c + 2;
        1 != getKEDITORWINZoomValue(KEDITORTOP.G_CURRKEDITOR) && (c +=
            1);
        this._iframe.style.height = c + "px";
        this._iframe.frameBorder = "0";
        KEDITORTOP.KEDITORDOC.body.appendChild(this._iframe);
        c = "document.open();" + (isCustomDomain(document) ? 'document.domain="'
            + document.domain + '";' : "") + " document.close();";
        c = KEDITORTOP.RAONKEDITOR.browser.ie && 12
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            ? "javascript:void(function(){" + encodeURIComponent(c) + "}())"
            : "";
        this._iframe.src = c;
        this._iframe_doc = this._iframe.contentWindow.document;
        var d = "", d = KEDITORTOP.RAONKEDITOR.isRelease
                ? KEDITORTOP.G_CURRKEDITOR._config.webPath.css :
                KEDITORTOP.G_CURRKEDITOR._config.webPath.css_dev,
            e = "editor_context.css";
        "ko-kr" != KEDITORTOP.G_CURRKEDITOR._config.lang
        && (e = "editor_context_" + KEDITORTOP.G_CURRKEDITOR._config.lang
            + ".css");
        c = "<html><head>";
        isCustomDomain(document) && (c += '<script>document.domain = "'
            + document.domain + '";\x3c/script></head>');
        c += '<link rel="stylesheet" type="text/css" href="' + d + e + "?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">';
        "1" == KEDITORTOP.G_CURRKEDITOR._config.customCssUrlDetailApply
        && (c += '<link rel="stylesheet" type="text/css" href="' +
            KEDITORTOP.G_CURRKEDITOR._config.style.customCssUrl + "?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">');
        c += '<link rel="stylesheet" type="text/css" href="' + d + "editor_"
            + KEDITORTOP.G_CURRKEDITOR._config.style.iconName + ".css?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">';
        c += '</head><body style="margin:0px; padding:0px; background-color:transparent;" oncontextmenu="return false"><div onselectstart="return false;" style="width:100%; height:100%" id="line_number_iframe_bg">';
        c += '<div class="K_EDitoR_popup">';
        c += '<div class="K_EDitoR_EDP">';
        c += '<div class="KEd_popup K_edITor_'
            + KEDITORTOP.G_CURRKEDITOR._config.style.skinName + '">';
        c += '<dl id="div_line_number_main"><dt>number_group</dt></dl>';
        c += "</div>";
        c += "</div>";
        c += "</div>";
        c += "</div>";
        c += "</body></html>";
        getDocWindow(this._iframe_doc);
        this._iframe_doc.open("text/html", "replace");
        this._iframe_doc.write(c);
        this._iframe_doc.close();
        c = this._iframe_doc.getElementById("div_line_number_main");
        d = b._line_number_item.length;
        for (e = 0; e < d; e++) {
          var f = b._line_number_item[e],
              g = KEDITORTOP.G_CURRKEDITOR.remove_item.length;
          for (r = 0; r < g; r++) {
            if (KEDITORTOP.G_CURRKEDITOR.remove_item[r]
                == f) {
              return;
            }
          }
          if (7 != KEDITORTOP.RAONKEDITOR.browser.ieVersion
              || "list_decimal_leading_zero" != f && "list_lower_greek" != f) {
            g = this._iframe_doc.createElement("dd");
            g.id = f;
            var h = b.getImageIconUrl(f), m = b.getText(f),
                q = this._iframe_doc.createElement("div"),
                t = this._iframe_doc.createElement("div"),
                u = this._iframe_doc.createElement("span");
            0 < h.length && (u.className = f, q.appendChild(u));
            var v = this._iframe_doc.createElement("a");
            v.href = "javascript:void(0);";
            v.title = m;
            v.style.textDecoration = "none";
            v.style.color = "#545454";
            v.style.cursor = "pointer";
            v.innerHTML = m;
            t.appendChild(v);
            q.className = "s_left";
            t.className = "s_right ellipsis";
            g.appendChild(q);
            g.appendChild(t);
            var h = function (a) {
              return function (b) {
                KEDITORTOP.RAONKEDITOR.util.removeEvent(v, "focus", w);
                KEDITORTOP.RAONKEDITOR.util.removeEvent(v, "blur", x);
                "item_disabled" != a.className
                && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
                    b))
              }
            }(g), m = function (a) {
              return function (b) {
                KEDITORTOP.RAONKEDITOR.util.addEvent(v,
                    "focus", w);
                KEDITORTOP.RAONKEDITOR.util.addEvent(v, "blur", x);
                "on_mouseover" == a.className
                && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
              }
            }(g), w = function (a) {
              return function (b) {
                "item_disabled" != a.className
                && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
                    b))
              }
            }(g), x = function (a) {
              return function (b) {
                "on_mouseover" == a.className
                && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
              }
            }(g), b = this, q = function (a) {
              return function (c) {
                "list_none" == a.id && (a.id += "_N");
                _k_editor._editorCommands(_k_editor.ID,
                    a.id);
                b.hide(_k_editor.ID);
                KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
              }
            }(g);
            KEDITORTOP.RAONKEDITOR.util.addEvent(g, "mouseover", h);
            KEDITORTOP.RAONKEDITOR.util.addEvent(g, "mouseout", m);
            KEDITORTOP.RAONKEDITOR.util.addEvent(g, "click", q);
            KEDITORTOP.RAONKEDITOR.util.addEvent(v, "focus", w);
            KEDITORTOP.RAONKEDITOR.util.addEvent(v, "blur", x);
            0 < f.length && (g.id = f);
            g.unselectable = "on";
            c.appendChild(g)
          }
        }
        KEDITORTOP.RAONKEDITOR.util.addEvent(b._iframe_doc, "keyup",
            function (c) {
              27 == ("which" in c ? c.which : c.keyCode) && (b.hide(a),
                  setTimeout(function () {
                    setFocusToBody()
                  }, 1))
            })
      }
    },
    getImageIconUrl: function (a) {
      var c = "";
      "" != a && (c = KEDITORTOP.G_CURRKEDITOR._config.webPath.image
          + KEDITORTOP.G_CURRKEDITOR._config.style.iconName + "/" + a + ".gif");
      return c
    },
    getText: function (a) {
      var c = "";
      "" != a && (c = RAONKEditor_lang.icon[a]);
      return c
    },
    show: function (a) {
      var c = KEDITORTOP.G_CURRKEDITOR._kEditorListNumber;
      null == c._iframe && c.make(a);
      setFocusTopWindow();
      G_SUB_DIALOG = c._self(a);
      G_CURRENT_IFRAME = KEDITORTOP.KEDITORDOC.getElementById(c._iframe_id);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      a = {};
      a = getWindowScrollPos(KEDITORTOP.KEDITORWIN);
      var b = getClientRect(G_SUB_DIALOG),
          d = getClientRect(_iframeWin.parent.frameElement),
          e = getClientRect(_iframeWin.frameElement), f = 180;
      if (7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion || 8
          == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
        f += 2;
      }
      var g = 0;
      b.left + f >= e.right && (g = b.left + f - e.right + 30);
      e = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (e = -15);
      f = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (f = 6);
      c._iframe.style.left = b.left + a[0] + d.left + e - g + "px";
      c._iframe.style.top =
          b.bottom + a[1] + d.top + f + "px";
      c._iframe.style.display = "";
      a = c._iframe.contentWindow;
      var h = getIframeDocument(c._iframe);
      setZoomValueToBody(h, KEDITORTOP.G_CURRKEDITOR);
      0 == KEDITORTOP.RAONKEDITOR.browser.ie && a.focus();
      setTimeout(function () {
        h.getElementsByTagName("A")[0].focus()
      }, 1);
      setFocusFirstAndLast(h, h.getElementsByTagName("A")[0]);
      KEDITORTOP.G_CURRKEDITOR._editorFrameHasFocus = !0
    },
    hide: function (a) {
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      this._iframe.style.display = "none"
    }
  }, _kEditorListBullets: {
    _iframe: null,
    _iframe_id: "",
    _line_bullets_item: ["list_disc", "list_circle", "list_square",
      "list_none"],
    _self: function (a) {
      return document.getElementById("keditor_span_detail_list_bullets_" + a)
    },
    make: function (a) {
      var c = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_detail_list_bullets_iframe_" + a);
      c && c.parentNode.removeChild(c);
      var b = this;
      if (null != this._self(a)) {
        this._iframe = KEDITORTOP.RAONKEDITOR.util.makeIframe();
        this._iframe_id = "keditor_detail_list_bullets_iframe_" + a;
        this._iframe.id = this._iframe_id;
        this._iframe.style.margin =
            "0px";
        this._iframe.style.padding = "0px";
        this._iframe.style.zIndex = G_MAIN_ZINDEX + 2E3 + "";
        this._iframe.style.position = "absolute";
        this._iframe.scrolling = "no";
        this._iframe.style.overflow = "auto";
        this._iframe.style.overflowX = "hidden";
        this._iframe.style.display = "none";
        this._iframe.allowTransparency = "true";
        c = 0;
        if (7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion || 8
            == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          c = 2;
        }
        this._iframe.style.width = 180 + c + "px";
        c = 24 * this._line_bullets_item.length + 2;
        1 != getKEDITORWINZoomValue(KEDITORTOP.G_CURRKEDITOR) &&
        (c += 1);
        this._iframe.style.height = c + "px";
        this._iframe.frameBorder = "0";
        KEDITORTOP.KEDITORDOC.body.appendChild(this._iframe);
        c = "document.open();" + (isCustomDomain(document) ? 'document.domain="'
            + document.domain + '";' : "") + " document.close();";
        c = KEDITORTOP.RAONKEDITOR.browser.ie && 12
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            ? "javascript:void(function(){" + encodeURIComponent(c) + "}())"
            : "";
        this._iframe.src = c;
        this._iframe_doc = this._iframe.contentWindow.document;
        var d = "", d = KEDITORTOP.RAONKEDITOR.isRelease
                ? KEDITORTOP.G_CURRKEDITOR._config.webPath.css :
                KEDITORTOP.G_CURRKEDITOR._config.webPath.css_dev,
            e = "editor_context.css";
        "ko-kr" != KEDITORTOP.G_CURRKEDITOR._config.lang
        && (e = "editor_context_" + KEDITORTOP.G_CURRKEDITOR._config.lang
            + ".css");
        c = "<html><head>";
        isCustomDomain(document) && (c += '<script>document.domain = "'
            + document.domain + '";\x3c/script></head>');
        c += '<link rel="stylesheet" type="text/css" href="' + d + e + "?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">';
        "1" == KEDITORTOP.G_CURRKEDITOR._config.customCssUrlDetailApply
        && (c += '<link rel="stylesheet" type="text/css" href="' +
            KEDITORTOP.G_CURRKEDITOR._config.style.customCssUrl + "?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">');
        c += '<link rel="stylesheet" type="text/css" href="' + d + "editor_"
            + KEDITORTOP.G_CURRKEDITOR._config.style.iconName + ".css?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">';
        c += '</head><body  style="margin:0px; padding:0px; background-color:transparent;" oncontextmenu="return false"><div onselectstart="return false;" style="width:100%; height:100%" id="line_bullets_iframe_bg">';
        c += '<div class="K_EDitoR_popup">';
        c += '<div class="K_EDitoR_EDP">';
        c += '<div class="KEd_popup K_edITor_'
            + KEDITORTOP.G_CURRKEDITOR._config.style.skinName + '">';
        c += '<dl id="div_line_bullets_main"><dt>bullets_group</dt></dl>';
        c += "</div>";
        c += "</div>";
        c += "</div>";
        c += "</div>";
        c += "</body></html>";
        getDocWindow(this._iframe_doc);
        this._iframe_doc.open("text/html", "replace");
        this._iframe_doc.write(c);
        this._iframe_doc.close();
        c = this._iframe_doc.getElementById("div_line_bullets_main");
        d = b._line_bullets_item.length;
        for (e = 0; e < d; e++) {
          var f = b._line_bullets_item[e],
              g = KEDITORTOP.G_CURRKEDITOR.remove_item.length;
          for (r = 0; r < g; r++) {
            if (KEDITORTOP.G_CURRKEDITOR.remove_item[r]
                == f) {
              return;
            }
          }
          g = this._iframe_doc.createElement("dd");
          g.id = f;
          var h = b.getImageIconUrl(f), m = b.getText(f),
              q = this._iframe_doc.createElement("div"),
              t = this._iframe_doc.createElement("div"),
              u = this._iframe_doc.createElement("span");
          0 < h.length && (u.className = f, q.appendChild(u));
          var v = this._iframe_doc.createElement("a");
          v.href = "javascript:void(0);";
          v.title = m;
          v.style.textDecoration = "none";
          v.style.color = "#545454";
          v.style.cursor = "pointer";
          v.innerHTML = m;
          t.appendChild(v);
          q.className = "s_left";
          t.className = "s_right";
          g.appendChild(q);
          g.appendChild(t);
          var h = function (a) {
            return function (b) {
              KEDITORTOP.RAONKEDITOR.util.removeEvent(v, "focus", w);
              KEDITORTOP.RAONKEDITOR.util.removeEvent(v, "blur", x);
              "item_disabled" != a.className
              && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
                  b))
            }
          }(g), m = function (a) {
            return function (b) {
              KEDITORTOP.RAONKEDITOR.util.addEvent(v, "focus", w);
              KEDITORTOP.RAONKEDITOR.util.addEvent(v,
                  "blur", x);
              "on_mouseover" == a.className
              && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
            }
          }(g), w = function (a) {
            return function (b) {
              "item_disabled" != a.className
              && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
                  b))
            }
          }(g), x = function (a) {
            return function (b) {
              "on_mouseover" == a.className
              && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
            }
          }(g), b = this, q = function (a) {
            return function (c) {
              "list_none" == a.id && (a.id += "_B");
              _k_editor._editorCommands(_k_editor.ID, a.id);
              b.hide();
              KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
            }
          }(g);
          KEDITORTOP.RAONKEDITOR.util.addEvent(g, "mouseover", h);
          KEDITORTOP.RAONKEDITOR.util.addEvent(g, "mouseout", m);
          KEDITORTOP.RAONKEDITOR.util.addEvent(g, "click", q);
          KEDITORTOP.RAONKEDITOR.util.addEvent(v, "focus", w);
          KEDITORTOP.RAONKEDITOR.util.addEvent(v, "blur", x);
          0 < f.length && (g.id = f);
          g.unselectable = "on";
          c.appendChild(g)
        }
        KEDITORTOP.RAONKEDITOR.util.addEvent(b._iframe_doc, "keyup",
            function (c) {
              27 == ("which" in c ? c.which : c.keyCode) && (b.hide(
                  a), setTimeout(function () {
                setFocusToBody()
              }, 1))
            })
      }
    },
    getImageIconUrl: function (a) {
      var c =
          "";
      "" != a && (c = KEDITORTOP.G_CURRKEDITOR._config.webPath.image
          + KEDITORTOP.G_CURRKEDITOR._config.style.iconName + "/" + a + ".gif");
      return c
    },
    getText: function (a) {
      var c = "";
      "" != a && (c = RAONKEditor_lang.icon[a]);
      return c
    },
    show: function (a) {
      var c = KEDITORTOP.G_CURRKEDITOR._kEditorListBullets;
      null == c._iframe && c.make(a);
      setFocusTopWindow();
      G_SUB_DIALOG = c._self(a);
      G_CURRENT_IFRAME = KEDITORTOP.KEDITORDOC.getElementById(c._iframe_id);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      a = {};
      a = getWindowScrollPos(KEDITORTOP.KEDITORWIN);
      var b = getClientRect(G_SUB_DIALOG),
          d = getClientRect(_iframeWin.parent.frameElement),
          e = getClientRect(_iframeWin.frameElement), f = 180;
      if (7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion || 8
          == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
        f += 2;
      }
      var g = 0;
      b.left + f >= e.right && (g = b.left + f - e.right + 30);
      e = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (e = -15);
      f = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (f = 6);
      c._iframe.style.left = b.left + a[0] + d.left + e - g + "px";
      c._iframe.style.top = b.bottom + a[1] + d.top + f + "px";
      c._iframe.style.display =
          "";
      a = c._iframe.contentWindow;
      var h = getIframeDocument(c._iframe);
      setZoomValueToBody(h, KEDITORTOP.G_CURRKEDITOR);
      0 == KEDITORTOP.RAONKEDITOR.browser.ie && a.focus();
      setTimeout(function () {
        h.getElementsByTagName("A")[0].focus()
      }, 1);
      setFocusFirstAndLast(h, h.getElementsByTagName("A")[0]);
      KEDITORTOP.G_CURRKEDITOR._editorFrameHasFocus = !0
    },
    hide: function (a) {
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      this._iframe.style.display = "none"
    }
  }, _kEditorListAligns: {
    _iframe: null, _iframe_id: "", _line_align_item: ["align_left",
      "align_center", "align_right", "align_full"], _self: function (a) {
      return document.getElementById("keditor_span_align_group_detail_" + a)
    }, make: function (a) {
      var c = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_detail_align_group_iframe_" + a);
      c && c.parentNode.removeChild(c);
      var b = this;
      if (null != this._self(a)) {
        this._iframe = KEDITORTOP.RAONKEDITOR.util.makeIframe();
        this._iframe_id = "keditor_detail_align_group_iframe_" + a;
        this._iframe.id = this._iframe_id;
        this._iframe.style.margin = "0px";
        this._iframe.style.padding = "0px";
        this._iframe.style.zIndex = G_MAIN_ZINDEX + 2E3 + "";
        this._iframe.style.position = "absolute";
        this._iframe.scrolling = "no";
        this._iframe.style.overflow = "auto";
        this._iframe.style.overflowX = "hidden";
        this._iframe.style.display = "none";
        this._iframe.allowTransparency = "true";
        c = 0;
        if (7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion || 8
            == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          c = 2;
        }
        this._iframe.style.width = 180 + c + "px";
        this._iframe.style.height = 24 * this._line_align_item.length + 2
            + "px";
        this._iframe.frameBorder = "0";
        KEDITORTOP.KEDITORDOC.body.appendChild(this._iframe);
        c = "document.open();" + (isCustomDomain(document) ? 'document.domain="'
            + document.domain + '";' : "") + " document.close();";
        c = KEDITORTOP.RAONKEDITOR.browser.ie && 12
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            ? "javascript:void(function(){" + encodeURIComponent(c) + "}())"
            : "";
        this._iframe.src = c;
        this._iframe_doc = this._iframe.contentWindow.document;
        var c = "", c = KEDITORTOP.RAONKEDITOR.isRelease
                ? KEDITORTOP.G_CURRKEDITOR._config.webPath.css
                : KEDITORTOP.G_CURRKEDITOR._config.webPath.css_dev,
            d = "editor_context.css";
        "ko-kr" != KEDITORTOP.G_CURRKEDITOR._config.lang &&
        (d = "editor_context_" + KEDITORTOP.G_CURRKEDITOR._config.lang
            + ".css");
        var e;
        e = "<html><head>";
        isCustomDomain(document) && (e += '<script>document.domain = "'
            + document.domain + '";\x3c/script></head>');
        e += '<link rel="stylesheet" type="text/css" href="' + c + d + "?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">';
        "1" == KEDITORTOP.G_CURRKEDITOR._config.customCssUrlDetailApply
        && (e += '<link rel="stylesheet" type="text/css" href="'
            + KEDITORTOP.G_CURRKEDITOR._config.style.customCssUrl + "?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp +
            '" charset="utf-8">');
        e += '<link rel="stylesheet" type="text/css" href="' + c + "editor_"
            + KEDITORTOP.G_CURRKEDITOR._config.style.iconName + ".css?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">';
        e += '</head><body  style="margin:0px; padding:0px; background-color:transparent;" oncontextmenu="return false"><div onselectstart="return false;" style="width:100%; height:100%" id="line_bullets_iframe_bg">';
        e += '<div class="K_EDitoR_popup">';
        e += '<div class="K_EDitoR_EDP">';
        e += '<div class="KEd_popup K_edITor_' +
            KEDITORTOP.G_CURRKEDITOR._config.style.skinName + '">';
        e += '<dl id="div_align_group_main"><dt>align_group</dt></dl>';
        e += "</div>";
        e += "</div>";
        e += "</div>";
        e += "</div>";
        e += "</body></html>";
        getDocWindow(this._iframe_doc);
        this._iframe_doc.open("text/html", "replace");
        this._iframe_doc.write(e);
        this._iframe_doc.close();
        c = this._iframe_doc.getElementById("div_align_group_main");
        d = b._line_align_item.length;
        for (e = 0; e < d; e++) {
          var f = b._line_align_item[e],
              g = KEDITORTOP.G_CURRKEDITOR.remove_item.length;
          for (r = 0; r < g; r++) {
            if (KEDITORTOP.G_CURRKEDITOR.remove_item[r] ==
                f) {
              return;
            }
          }
          g = this._iframe_doc.createElement("dd");
          g.id = f;
          var h = b.getImageIconUrl(f), m = b.getText(f),
              q = this._iframe_doc.createElement("div"),
              t = this._iframe_doc.createElement("div"),
              u = this._iframe_doc.createElement("span");
          0 < h.length && (u.className = f, q.appendChild(u));
          var v = this._iframe_doc.createElement("a");
          v.href = "javascript:void(0);";
          v.title = m;
          v.style.textDecoration = "none";
          v.style.color = "#545454";
          v.style.cursor = "pointer";
          v.innerHTML = m;
          t.appendChild(v);
          q.className = "s_left";
          t.className = "s_right ellipsis";
          g.appendChild(q);
          g.appendChild(t);
          var h = function (a) {
                return function (b) {
                  KEDITORTOP.RAONKEDITOR.util.removeEvent(v, "focus", w);
                  KEDITORTOP.RAONKEDITOR.util.removeEvent(v, "blur", x);
                  "item_disabled" != a.className
                  && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
                      b))
                }
              }(g), m = function (a) {
                return function (b) {
                  KEDITORTOP.RAONKEDITOR.util.addEvent(v, "focus", w);
                  KEDITORTOP.RAONKEDITOR.util.addEvent(v, "blur", x);
                  "on_mouseover" == a.className
                  && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
                }
              }(g),
              w = function (a) {
                return function (b) {
                  "item_disabled" != a.className
                  && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
                      b))
                }
              }(g), x = function (a) {
                return function (b) {
                  "on_mouseover" == a.className
                  && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
                }
              }(g), b = this, q = function (a) {
                return function (c) {
                  _k_editor._editorCommands(_k_editor.ID, a.id);
                  b.hide();
                  KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
                }
              }(g);
          KEDITORTOP.RAONKEDITOR.util.addEvent(g, "mouseover", h);
          KEDITORTOP.RAONKEDITOR.util.addEvent(g, "mouseout",
              m);
          KEDITORTOP.RAONKEDITOR.util.addEvent(g, "click", q);
          KEDITORTOP.RAONKEDITOR.util.addEvent(v, "focus", w);
          KEDITORTOP.RAONKEDITOR.util.addEvent(v, "blur", x);
          0 < f.length && (g.id = f);
          g.unselectable = "on";
          c.appendChild(g)
        }
        KEDITORTOP.RAONKEDITOR.util.addEvent(b._iframe_doc, "keyup",
            function (c) {
              27 == ("which" in c ? c.which : c.keyCode) && (b.hide(
                  a), setTimeout(function () {
                setFocusToBody()
              }, 1))
            })
      }
    }, getImageIconUrl: function (a) {
      var c = "";
      "" != a && (c = KEDITORTOP.G_CURRKEDITOR._config.webPath.image
          + KEDITORTOP.G_CURRKEDITOR._config.style.iconName +
          "/" + a + ".gif");
      return c
    }, getText: function (a) {
      var c = "";
      "" != a && (c = RAONKEditor_lang.icon[a]);
      return c
    }, show: function (a) {
      var c = KEDITORTOP.G_CURRKEDITOR._kEditorListAligns;
      null == c._iframe && c.make(a);
      setFocusTopWindow();
      G_SUB_DIALOG = c._self(a);
      G_CURRENT_IFRAME = KEDITORTOP.KEDITORDOC.getElementById(c._iframe_id);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      a = {};
      a = getWindowScrollPos(KEDITORTOP.KEDITORWIN);
      var b = getClientRect(G_SUB_DIALOG),
          d = getClientRect(_iframeWin.parent.frameElement),
          e = getClientRect(_iframeWin.frameElement),
          f = 180;
      if (7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion || 8
          == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
        f += 2;
      }
      var g = 0;
      b.left + f >= e.right && (g = b.left + f - e.right + 30);
      e = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (e = -15);
      f = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (f = 6);
      c._iframe.style.left = b.left + a[0] + d.left + e - g + "px";
      c._iframe.style.top = b.bottom + a[1] + d.top + f + "px";
      c._iframe.style.display = "";
      a = c._iframe.contentWindow;
      var h = getIframeDocument(c._iframe);
      setZoomValueToBody(h, KEDITORTOP.G_CURRKEDITOR);
      0 == KEDITORTOP.RAONKEDITOR.browser.ie &&
      a.focus();
      setTimeout(function () {
        h.getElementsByTagName("A")[0].focus()
      }, 1);
      setFocusFirstAndLast(h, h.getElementsByTagName("A")[0]);
      KEDITORTOP.G_CURRKEDITOR._editorFrameHasFocus = !0
    }, hide: function (a) {
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      this._iframe.style.display = "none"
    }
  }, _kEditorListTables: {
    _iframe: null,
    _iframe_id: "",
    _table_item: "insert_row_up insert_row_down insert_column_right insert_column_left delete_row delete_column table_delete merge_cell split_cell table_same_width table_same_height".split(
        " "),
    _self: function (a) {
      return document.getElementById("keditor_span_table_group_detail_" + a)
    },
    make: function (a) {
      var c = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_detail_table_group_iframe_" + a);
      c && c.parentNode.removeChild(c);
      var b = this;
      if (null != this._self(a)) {
        this._iframe = KEDITORTOP.RAONKEDITOR.util.makeIframe();
        this._iframe_id = "keditor_detail_table_group_iframe_" + a;
        this._iframe.id = this._iframe_id;
        this._iframe.style.margin = "0px";
        this._iframe.style.padding = "0px";
        this._iframe.style.zIndex = G_MAIN_ZINDEX + 2E3 +
            "";
        this._iframe.style.position = "absolute";
        this._iframe.scrolling = "no";
        this._iframe.style.overflow = "auto";
        this._iframe.style.overflowX = "hidden";
        this._iframe.style.display = "none";
        this._iframe.allowTransparency = "true";
        c = 0;
        if (7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion || 8
            == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          c = 2;
        }
        this._iframe.style.width = 180 + c + "px";
        this._iframe.style.height = 24 * this._table_item.length + 2 + "px";
        this._iframe.frameBorder = "0";
        KEDITORTOP.KEDITORDOC.body.appendChild(this._iframe);
        c = "document.open();" +
            (isCustomDomain(document) ? 'document.domain="' + document.domain
                + '";' : "") + " document.close();";
        c = KEDITORTOP.RAONKEDITOR.browser.ie && 12
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            ? "javascript:void(function(){" + encodeURIComponent(c) + "}())"
            : "";
        this._iframe.src = c;
        this._iframe_doc = this._iframe.contentWindow.document;
        var c = "", c = KEDITORTOP.RAONKEDITOR.isRelease
                ? KEDITORTOP.G_CURRKEDITOR._config.webPath.css
                : KEDITORTOP.G_CURRKEDITOR._config.webPath.css_dev,
            d = "editor_context.css";
        "ko-kr" != KEDITORTOP.G_CURRKEDITOR._config.lang &&
        (d = "editor_context_" + KEDITORTOP.G_CURRKEDITOR._config.lang
            + ".css");
        var e;
        e = "<html><head>";
        isCustomDomain(document) && (e += '<script>document.domain = "'
            + document.domain + '";\x3c/script></head>');
        e += '<link rel="stylesheet" type="text/css" href="' + c + d + "?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">';
        "1" == KEDITORTOP.G_CURRKEDITOR._config.customCssUrlDetailApply
        && (e += '<link rel="stylesheet" type="text/css" href="'
            + KEDITORTOP.G_CURRKEDITOR._config.style.customCssUrl + "?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp +
            '" charset="utf-8">');
        e += '<link rel="stylesheet" type="text/css" href="' + c + "editor_"
            + KEDITORTOP.G_CURRKEDITOR._config.style.iconName + ".css?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">';
        e += '</head><body  style="margin:0px; padding:0px; background-color:transparent;" oncontextmenu="return false"><div onselectstart="return false;" style="width:100%; height:100%" id="line_bullets_iframe_bg">';
        e += '<div class="K_EDitoR_popup">';
        e += '<div class="K_EDitoR_EDP">';
        e += '<div class="KEd_popup K_edITor_' +
            KEDITORTOP.G_CURRKEDITOR._config.style.skinName + '">';
        e += '<dl id="div_table_group_main"><dt>table_group</dt></dl>';
        e += "</div>";
        e += "</div>";
        e += "</div>";
        e += "</div>";
        e += "</body></html>";
        getDocWindow(this._iframe_doc);
        this._iframe_doc.open("text/html", "replace");
        this._iframe_doc.write(e);
        this._iframe_doc.close();
        c = this._iframe_doc.getElementById("div_table_group_main");
        d = b._table_item.length;
        e = KEDITORTOP.G_CURRKEDITOR.remove_item.length;
        for (var f = 0; f < d; f++) {
          var g = b._table_item[f];
          for (r = 0; r < e; r++) {
            if (KEDITORTOP.G_CURRKEDITOR.remove_item[r] ==
                g) {
              return;
            }
          }
          var h = this._iframe_doc.createElement("dd");
          h.id = g;
          var m = b.getImageIconUrl(g), q = b.getText(g),
              t = this._iframe_doc.createElement("div"),
              u = this._iframe_doc.createElement("div"),
              v = this._iframe_doc.createElement("span");
          0 < m.length && (v.className = g, t.appendChild(v));
          var w = this._iframe_doc.createElement("a");
          w.href = "javascript:void(0);";
          w.title = q;
          w.style.textDecoration = "none";
          w.style.color = "#545454";
          w.style.cursor = "pointer";
          w.innerHTML = q;
          u.appendChild(w);
          t.className = "s_left";
          u.className = "s_right ellipsis";
          h.appendChild(t);
          h.appendChild(u);
          var m = function (a) {
                return function (b) {
                  KEDITORTOP.RAONKEDITOR.util.removeEvent(w, "focus", x);
                  KEDITORTOP.RAONKEDITOR.util.removeEvent(w, "blur", y);
                  "item_disabled" != a.className
                  && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
                      b))
                }
              }(h), q = function (a) {
                return function (b) {
                  KEDITORTOP.RAONKEDITOR.util.addEvent(w, "focus", x);
                  KEDITORTOP.RAONKEDITOR.util.addEvent(w, "blur", y);
                  "on_mouseover" == a.className
                  && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
                }
              }(h),
              x = function (a) {
                return function (b) {
                  "item_disabled" != a.className
                  && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
                      b))
                }
              }(h), y = function (a) {
                return function (b) {
                  "on_mouseover" == a.className
                  && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
                }
              }(h), b = this, t = function (a) {
                return function (c) {
                  "item_disabled" != a.className && (_k_editor._editorCommands(
                      _k_editor.ID,
                      a.id), b.hide(), KEDITORTOP.RAONKEDITOR.util.stopEvent(c))
                }
              }(h);
          KEDITORTOP.RAONKEDITOR.util.addEvent(h, "mouseover", m);
          KEDITORTOP.RAONKEDITOR.util.addEvent(h,
              "mouseout", q);
          KEDITORTOP.RAONKEDITOR.util.addEvent(h, "click", t);
          KEDITORTOP.RAONKEDITOR.util.addEvent(w, "focus", x);
          KEDITORTOP.RAONKEDITOR.util.addEvent(w, "blur", y);
          0 < g.length && (h.id = g);
          h.unselectable = "on";
          c.appendChild(h)
        }
        KEDITORTOP.RAONKEDITOR.util.addEvent(b._iframe_doc, "keyup",
            function (c) {
              27 == ("which" in c ? c.which : c.keyCode) && (b.hide(
                  a), setTimeout(function () {
                setFocusToBody()
              }, 1))
            })
      }
    },
    getImageIconUrl: function (a) {
      var c = "";
      "" != a && (c = KEDITORTOP.G_CURRKEDITOR._config.webPath.image
          + KEDITORTOP.G_CURRKEDITOR._config.style.iconName +
          "/" + a + ".gif");
      return c
    },
    getText: function (a) {
      var c = "";
      "" != a && (c = RAONKEditor_lang.icon[a]);
      return c
    },
    show: function (a) {
      var c = KEDITORTOP.G_CURRKEDITOR._kEditorListTables;
      null == c._iframe && c.make(a);
      try {
        KEDITORTOP.G_CURRKEDITOR._LastRange = saveSelection(
            KEDITORTOP.G_CURRKEDITOR.ID)
      } catch (b) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(b)
      }
      setFocusTopWindow();
      G_SUB_DIALOG = c._self(a);
      G_CURRENT_IFRAME = KEDITORTOP.KEDITORDOC.getElementById(c._iframe_id);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      a = {};
      a = getWindowScrollPos(KEDITORTOP.KEDITORWIN);
      var d = getClientRect(G_SUB_DIALOG),
          e = getClientRect(_iframeWin.parent.frameElement),
          f = getClientRect(_iframeWin.frameElement), g = 180;
      if (7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion || 8
          == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
        g += 2;
      }
      var h = 0;
      d.left + g >= f.right && (h = d.left + g - f.right + 30);
      f = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (f = -15);
      g = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (g = 6);
      c._iframe.style.left = d.left + a[0] + e.left + f - h + "px";
      c._iframe.style.top =
          d.bottom + a[1] + e.top + g + "px";
      c._iframe.style.display = "";
      a = KEDITOR_TOPMENU._disabeld_menu;
      e = c._table_item.length;
      d = a.length;
      for (h = 0; h < e;
          h++) {
        if (f = G_CURRENT_IFRAME.contentWindow.document.getElementById(
            c._table_item[h])) {
          f.className = "", removeAttribute(f, "class");
        }
      }
      for (e = 0; e < d;
          e++) {
        if (h = G_CURRENT_IFRAME.contentWindow.document.getElementById(
            a[e])) {
          h.className = "item_disabled";
        }
      }
      a = c._iframe.contentWindow;
      var m = getIframeDocument(c._iframe);
      0 == KEDITORTOP.RAONKEDITOR.browser.ie && a.focus();
      setTimeout(function () {
            m.getElementsByTagName("A")[0].focus()
          },
          1);
      setFocusFirstAndLast(m, m.getElementsByTagName("A")[0]);
      KEDITORTOP.G_CURRKEDITOR._editorFrameHasFocus = !0
    },
    hide: function (a) {
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      this._iframe.style.display = "none"
    }
  }, _kEditorElementZindex: {
    _iframe: null,
    _iframe_id: "",
    _zindex_item: ["bring_to_front", "send_to_back", "bring_forward",
      "send_backward"],
    _self: function (a) {
      return document.getElementById(
          "keditor_span_order_of_objects_detail_" + a)
    },
    make: function (a) {
      var c = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_order_of_objects_detail_iframe_" +
          a);
      c && c.parentNode.removeChild(c);
      var b = this;
      if (null != this._self(a)) {
        this._iframe = KEDITORTOP.RAONKEDITOR.util.makeIframe();
        this._iframe_id = "keditor_order_of_objects_detail_iframe_" + a;
        this._iframe.id = this._iframe_id;
        this._iframe.style.margin = "0px";
        this._iframe.style.padding = "0px";
        this._iframe.style.zIndex = G_MAIN_ZINDEX + 2E3 + "";
        this._iframe.style.position = "absolute";
        this._iframe.scrolling = "no";
        this._iframe.style.overflow = "auto";
        this._iframe.style.overflowX = "hidden";
        this._iframe.style.display = "none";
        this._iframe.allowTransparency = "true";
        c = 0;
        if (7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion || 8
            == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          c = 2;
        }
        this._iframe.style.width = 180 + c + "px";
        this._iframe.style.height = 24 * this._zindex_item.length + 2 + "px";
        this._iframe.frameBorder = "0";
        KEDITORTOP.KEDITORDOC.body.appendChild(this._iframe);
        c = "document.open();" + (isCustomDomain(document) ? 'document.domain="'
            + document.domain + '";' : "") + " document.close();";
        c = KEDITORTOP.RAONKEDITOR.browser.ie && 12
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion ?
            "javascript:void(function(){" + encodeURIComponent(c) + "}())" : "";
        this._iframe.src = c;
        this._iframe_doc = this._iframe.contentWindow.document;
        var c = "", c = KEDITORTOP.RAONKEDITOR.isRelease
                ? KEDITORTOP.G_CURRKEDITOR._config.webPath.css
                : KEDITORTOP.G_CURRKEDITOR._config.webPath.css_dev,
            d = "editor_context.css";
        "ko-kr" != KEDITORTOP.G_CURRKEDITOR._config.lang
        && (d = "editor_context_" + KEDITORTOP.G_CURRKEDITOR._config.lang
            + ".css");
        var e;
        e = "<html><head>";
        isCustomDomain(document) && (e += '<script>document.domain = "'
            + document.domain +
            '";\x3c/script></head>');
        e += '<link rel="stylesheet" type="text/css" href="' + c + d + "?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">';
        "1" == KEDITORTOP.G_CURRKEDITOR._config.customCssUrlDetailApply
        && (e += '<link rel="stylesheet" type="text/css" href="'
            + KEDITORTOP.G_CURRKEDITOR._config.style.customCssUrl + "?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">');
        e += '<link rel="stylesheet" type="text/css" href="' + c + "editor_"
            + KEDITORTOP.G_CURRKEDITOR._config.style.iconName + ".css?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp +
            '" charset="utf-8">';
        e += '</head><body  style="margin:0px; padding:0px; background-color:transparent;" oncontextmenu="return false"><div onselectstart="return false;" style="width:100%; height:100%" id="line_bullets_iframe_bg">';
        e += '<div class="K_EDitoR_popup">';
        e += '<div class="K_EDitoR_EDP">';
        e += '<div class="KEd_popup K_edITor_'
            + KEDITORTOP.G_CURRKEDITOR._config.style.skinName + '">';
        e += '<dl id="div_order_of_objects_main"><dt>Order of Objects</dt></dl>';
        e += "</div>";
        e += "</div>";
        e += "</div>";
        e += "</div>";
        e += "</body></html>";
        getDocWindow(this._iframe_doc);
        this._iframe_doc.open("text/html", "replace");
        this._iframe_doc.write(e);
        this._iframe_doc.close();
        c = this._iframe_doc.getElementById("div_order_of_objects_main");
        d = b._zindex_item.length;
        for (e = 0; e < d; e++) {
          var f = b._zindex_item[e],
              g = KEDITORTOP.G_CURRKEDITOR.remove_item.length;
          for (r = 0; r < g; r++) {
            if (KEDITORTOP.G_CURRKEDITOR.remove_item[r]
                == f) {
              return;
            }
          }
          g = this._iframe_doc.createElement("dd");
          g.id = f;
          var h = b.getImageIconUrl(f), m = b.getText(f),
              q = this._iframe_doc.createElement("div"),
              t = this._iframe_doc.createElement("div"),
              u = this._iframe_doc.createElement("span");
          0 < h.length && (u.className = f, q.appendChild(u));
          "textContent" in t ? t.textContent = m : t.innerText = m;
          q.className = "s_left";
          t.className = "s_right";
          var v = this._iframe_doc.createElement("a");
          v.href = "javascript:void(0);";
          v.title = m;
          v.style.textDecoration = "none";
          v.style.color = "#545454";
          v.style.cursor = "pointer";
          v.appendChild(q);
          v.appendChild(t);
          g.appendChild(v);
          var h = function (a) {
                return function (b) {
                  KEDITORTOP.RAONKEDITOR.util.removeEvent(v,
                      "focus", w);
                  KEDITORTOP.RAONKEDITOR.util.removeEvent(v, "blur", x);
                  "item_disabled" != a.className
                  && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
                      b))
                }
              }(g), m = function (a) {
                return function (b) {
                  KEDITORTOP.RAONKEDITOR.util.addEvent(v, "focus", w);
                  KEDITORTOP.RAONKEDITOR.util.addEvent(v, "blur", x);
                  "on_mouseover" == a.className
                  && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
                }
              }(g), w = function (a) {
                return function (b) {
                  "item_disabled" != a.className
                  && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
                      b))
                }
              }(g),
              x = function (a) {
                return function (b) {
                  "on_mouseover" == a.className
                  && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(
                      b))
                }
              }(g), b = this, q = function (a) {
                return function (c) {
                  _k_editor._editorCommands(_k_editor.ID, a.id);
                  b.hide();
                  KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
                }
              }(g);
          KEDITORTOP.RAONKEDITOR.util.addEvent(g, "mouseover", h);
          KEDITORTOP.RAONKEDITOR.util.addEvent(g, "mouseout", m);
          KEDITORTOP.RAONKEDITOR.util.addEvent(g, "click", q);
          KEDITORTOP.RAONKEDITOR.util.addEvent(v, "focus", w);
          KEDITORTOP.RAONKEDITOR.util.addEvent(v,
              "blur", x);
          0 < f.length && (g.id = f);
          g.unselectable = "on";
          c.appendChild(g)
        }
        KEDITORTOP.RAONKEDITOR.util.addEvent(b._iframe_doc, "keyup",
            function (c) {
              27 == ("which" in c ? c.which : c.keyCode) && (b.hide(
                  a), setTimeout(function () {
                setFocusToBody()
              }, 1))
            })
      }
    },
    getImageIconUrl: function (a) {
      var c = "";
      "" != a && (c = KEDITORTOP.G_CURRKEDITOR._config.webPath.image
          + KEDITORTOP.G_CURRKEDITOR._config.style.iconName + "/" + a + ".gif");
      return c
    },
    getText: function (a) {
      var c = "";
      "" != a && (c = RAONKEditor_lang.icon[a]);
      return c
    },
    show: function (a) {
      var c = KEDITORTOP.G_CURRKEDITOR._kEditorElementZindex;
      null == c._iframe && c.make(a);
      setFocusTopWindow();
      G_SUB_DIALOG = c._self(a);
      G_CURRENT_IFRAME = KEDITORTOP.KEDITORDOC.getElementById(c._iframe_id);
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      a = {};
      a = getWindowScrollPos(KEDITORTOP.KEDITORWIN);
      var b = getClientRect(G_SUB_DIALOG),
          d = getClientRect(_iframeWin.parent.frameElement),
          e = getClientRect(_iframeWin.frameElement), f = 180;
      if (7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion || 8
          == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
        f += 2;
      }
      var g = 0;
      b.left + f >= e.right && (g = b.left +
          f - e.right + 30);
      e = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (e = -15);
      f = 0;
      7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (f = 6);
      c._iframe.style.left = b.left + a[0] + d.left + e - g + "px";
      c._iframe.style.top = b.bottom + a[1] + d.top + f + "px";
      c._iframe.style.display = "";
      a = c._iframe.contentWindow;
      var h = getIframeDocument(c._iframe);
      0 == KEDITORTOP.RAONKEDITOR.browser.ie && a.focus();
      setTimeout(function () {
        h.getElementsByTagName("A")[0].focus()
      }, 1);
      setFocusFirstAndLast(h, h.getElementsByTagName("A")[0]);
      KEDITORTOP.G_CURRKEDITOR._editorFrameHasFocus =
          !0
    },
    hide: function (a) {
      RAONK_EDITOR.prototype.dialog._click_background(!0);
      this._iframe.style.display = "none"
    }
  }, setFocusToBody: function () {
    setFocusToBody()
  }, _topMenuDisbleCheck: function () {
    this._iconEnable("allDisable")
  }, _statusToolBarIconSelect: function (a, c) {
    var b = document.getElementById("ue_" + a + c), d = [];
    d.push(c);
    -1 < b.parentElement.className.indexOf("uebutton_span_enter")
    && removeArrayItemByValue(d, c);
    KEDITORTOP.G_CURRKEDITOR._iconSelected(d)
  }
};
K__ += "FA";
R[0] = "h";
SIL[1] = "u";
K__ += "BG";
C1[0] = "h";
C2[0] = "h";
ALS[0] = "R";
S1[0] = "h";
S2[0] = "h";
RAONK_EDITOR.prototype.full_screen = {
  toggle: function () {
  }
};
K__ += R[0];
R[1] = "t";
C1[1] = "t";
C2[1] = "t";
ALS[1] = "A";
S1[1] = "t";
S2[1] = "t";
K__ += "i";
RAONK_EDITOR.prototype.dialog = {
  _self: function (a) {
    return document.getElementById("keditor_dialog_" + a)
  }, _selfTopWindow: function (a) {
    return getDialogDocument().getElementById("keditor_dialog_" + a)
  }, _background: function (a) {
    var c = document.getElementById("keditor_background");
    null != c && void 0 != c ? 1 == a ? (this.set_full_size(
        c), c.style.display = "block") : c.style.display = "none" : alert(
        "ErrCode : 2000")
  }, _click_background: function (a) {
    if (a) {
      a = "keditor_toolmenu_background"
          + KEDITORTOP.G_CURRKEDITOR._config.editor_id;
      var c =
          KEDITORTOP.KEDITORDOC.getElementById(a);
      if (c) {
        if ("block" == c.style.display || ""
            == c.style.display) {
          c.style.display = "none", dialogCancel(), G_SUB_DIALOG
          && (isGroupingIcon(G_USE_EDITOR_ID, "", G_SUB_DIALOG)
          && hideGroupingBox(), G_SUB_DIALOG.style.display = "none"), G_CURRENT_IFRAME
          && (G_CURRENT_IFRAME.style.display = "none"), G_CURRENT_IFRAME_HOLDER
          && (G_CURRENT_IFRAME_HOLDER.style.display = "none");
        } else {
          c.style.display = "block";
          document.getElementById(
              "ue_toolbar_" + G_USE_EDITOR_ID).style.position = "";
          G_SUB_DIALOG.style.display =
              "block";
          a = getClientRect(G_SUB_DIALOG);
          var b = getClientRect(_iframeWin.frameElement),
              d = parseInt(a.right, 10) - parseInt(a.left, 10);
          a.left + d >= b.right && (a = a.left + d - b.right
              + 30, G_SUB_DIALOG.style.left = parseInt(G_SUB_DIALOG.style.left,
              10) - a + "px")
        }
      } else {
        c = KEDITORTOP.KEDITORDOC.createElement(
            "div"), c.id = a, c.innerHTML = '<div oncontextmenu="return false" style="filter:alpha(opacity=0); opacity:0.0; -moz-opacity:0.0; -khtml-opacity: 0.0; background-color:#000000; z-index:'
            + (G_MAIN_ZINDEX + 1E3)
            + '; position:absolute; left:0px; top:0px;overflow:hidden; "></div>',
            c.style.overflow = "visible", c.style.position = "static", a = "CSS1Compat"
        == KEDITORTOP.KEDITORDOC.compatMode
            ? KEDITORTOP.KEDITORDOC.documentElement.scrollWidth
            : KEDITORTOP.KEDITORDOC.body.scrollWidth, b = "CSS1Compat"
        == KEDITORTOP.KEDITORDOC.compatMode
            ? KEDITORTOP.KEDITORDOC.documentElement.scrollHeight
            : KEDITORTOP.KEDITORDOC.body.scrollHeight, a = changeValueForZoom(a,
            KEDITORTOP.G_CURRKEDITOR), b = changeValueForZoom(b,
            KEDITORTOP.G_CURRKEDITOR), c.firstChild.style.width = a - 10
            + "px", c.firstChild.style.height = b - 10
            + "px", KEDITORTOP.KEDITORDOC.body.appendChild(c),
            a = function () {
              return function (a) {
                dialogCancel();
                G_SUB_DIALOG && (isGroupingIcon(G_USE_EDITOR_ID, "",
                    G_SUB_DIALOG)
                && hideGroupingBox(), G_SUB_DIALOG.style.display = "none", document.getElementById(
                    "ue_toolbar_"
                    + G_USE_EDITOR_ID).style.position = "relative");
                G_CURRENT_IFRAME && (G_CURRENT_IFRAME.style.display = "none");
                G_CURRENT_IFRAME_HOLDER
                && (G_CURRENT_IFRAME_HOLDER.style.display = "none");
                c.style.display = "none"
              }
            }(), KEDITORTOP.RAONKEDITOR.util.addEvent(c, "click",
            a), KEDITORTOP.RAONKEDITOR.util.addEvent(c, "contextmenu",
            a), KEDITORTOP.RAONKEDITOR.util.addEvent(KEDITORTOP.KEDITORWIN,
            "resize",
            KEDITORTOP.G_CURRKEDITOR.toolmenu_bg_resize), document.getElementById(
            "ue_toolbar_"
            + G_USE_EDITOR_ID).style.position = "", G_SUB_DIALOG.style.display = "block", a = getClientRect(
            G_SUB_DIALOG), b = getClientRect(
            _iframeWin.frameElement), d = parseInt(a.right, 10) - parseInt(
            a.left,
            10), a.left + d >= b.right && (a = a.left + d - b.right
            + 30, G_SUB_DIALOG.style.left = parseInt(G_SUB_DIALOG.style.left,
                10)
            - a + "px")
      }
    } else {
      a = document.getElementById("keditor_click_background"),
          null != a && void 0 != a ? "block" == a.style.display
              ? (dialogCancel(), G_SUB_DIALOG && (isGroupingIcon(
                  G_USE_EDITOR_ID,
                  "", G_SUB_DIALOG)
              && hideGroupingBox(), G_SUB_DIALOG.style.display = "none"), G_CURRENT_IFRAME
              && (G_CURRENT_IFRAME.style.display = "none"), G_CURRENT_IFRAME_HOLDER
              && (G_CURRENT_IFRAME_HOLDER.style.display = "none"), a.style.display = "none")
              : (document.getElementById("ue_toolbar_"
                  + G_USE_EDITOR_ID).style.position = "", this.set_full_size(
                  a), a.style.display = "block", G_SUB_DIALOG.style.display = "block", a = getClientRect(
                  G_SUB_DIALOG),
                  b = getClientRect(_iframeWin.frameElement), d = parseInt(
                  a.right, 10) - parseInt(a.left, 10), a.left + d >= b.right
              && (a = a.left + d - b.right
                  + 30, G_SUB_DIALOG.style.left = parseInt(
                  G_SUB_DIALOG.style.left, 10) - a + "px")) : alert(
              "ErrCode : 2001")
    }
  }, set_full_size: function (a) {
    var c = 0, b = 0;
    "BackCompat" == document.compatMode
        ? (c = document.body.scrollWidth, b = document.body.scrollHeight)
        : (c = document.documentElement.scrollWidth, b = document.documentElement.scrollHeight);
    c = changeValueForZoom(c, KEDITORTOP.G_CURRKEDITOR);
    b = changeValueForZoom(b,
        KEDITORTOP.G_CURRKEDITOR);
    a.style.width = c + "px";
    a.style.height = b + "px"
  }, _set_resize: function (a) {
    getDialogWindow();
    var c = getDialogDocument();
    if (0 == KEDITORTOP.RAONKEDITOR.isPopUpCssLoaded) {
      var b = c.createElement("link");
      b.type = "text/css";
      b.rel = "stylesheet";
      b.href = KEDITORTOP.RAONKEDITOR.isRelease ? "ko-kr"
      != KEDITORTOP.G_CURRKEDITOR._config.lang
          ? KEDITORTOP.G_CURRKEDITOR._config.webPath.css + "editor_popup_"
          + KEDITORTOP.G_CURRKEDITOR._config.lang + ".css?t="
          + KEDITORTOP.RAONKEDITOR.UrlStamp
          : KEDITORTOP.G_CURRKEDITOR._config.webPath.css +
          "editor_popup.css?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp : "ko-kr"
      != KEDITORTOP.G_CURRKEDITOR._config.lang
          ? KEDITORTOP.G_CURRKEDITOR._config.webPath.css_dev + "editor_popup_"
          + KEDITORTOP.G_CURRKEDITOR._config.lang + ".css?t="
          + KEDITORTOP.RAONKEDITOR.UrlStamp
          : KEDITORTOP.G_CURRKEDITOR._config.webPath.css_dev
          + "editor_popup.css?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp;
      var d = c.getElementsByTagName("head")[0];
      d.appendChild(b);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.customCssUrlDetailApply
      && (c = c.createElement("link"), c.type =
          "text/css", c.rel = "stylesheet", c.href = KEDITORTOP.G_CURRKEDITOR._config.style.customCssUrl
          + "?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp, d.appendChild(c));
      KEDITORTOP.RAONKEDITOR.isPopUpCssLoaded = !0
    }
    getElementsByClass("EdiTor_Popup_header",
        a.contentWindow.document)[0].style.display = "none";
    a.contentWindow.document.body.getElementsByTagName(
        "div")[0].style.border = "0px";
    b = "BackCompat" == document.compatMode ? a.contentWindow.document.body
        : a.contentWindow.document.documentElement;
    d = b.scrollWidth;
    c = a.contentWindow.document.body.clientHeight;
    b = b.scrollHeight;
    0 == (KEDITORTOP.RAONKEDITOR.browser.ie && 7
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion) && 0 < c && c < b
    && (b = c);
    a.style.width = d + "px";
    a.style.height = b + "px";
    var c = a.parentNode.parentNode, e = c.firstChild,
        f = a.contentWindow.document.body.getElementsByTagName(
            "div")[0].className,
        g = getElementsByClass("subject", a.contentWindow.document,
            "span")[0].innerHTML;
    c.className = f;
    e.className = "EdiTor_Popup_header";
    e.firstChild.innerHTML = g;
    e = function () {
      return function (b) {
        press_enter_esc_btn(b, a.contentWindow.document);
        KEDITORTOP.RAONKEDITOR.util.stopEvent(b)
      }
    }();
    KEDITORTOP.RAONKEDITOR.util.addEvent(a.contentWindow.document, "keydown",
        e);
    c.style.width = d + "px";
    d = b + 29;
    "white" == KEDITORTOP.G_CURRKEDITOR._config.style.dialogSkinName
    && (d += 9);
    c.style.height = d + "px";
    try {
      if (isMobileAndFixBottom()) {
        for (d = 1; 6 >= d; d++) {
          var h = a.contentWindow.document.querySelector(
              ".K_edITor_ED_Popup_Type0" + d);
          if (h) {
            h.style.width = "100%";
            break
          }
        }
      }
    } catch (m) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(m)
    }
    locationDialog(c)
  },
  show: function (a, c) {
    var b = this;
    null != KEDITORTOP.G_CURRKEDITOR.dialogWindow
    && (KEDITORTOP.G_CURRKEDITOR.dialogWindow.KEDITORWIN = KEDITORTOP.KEDITORWIN, KEDITORTOP.G_CURRKEDITOR.dialogWindow.KEDITORDOC = KEDITORTOP.KEDITORDOC, KEDITORTOP.G_CURRKEDITOR.dialogWindow.G_CURRKEDITOR = KEDITORTOP.G_CURRKEDITOR);
    var d = this._selfTopWindow(KEDITORTOP.G_CURRKEDITOR.ID);
    if (null == d) {
      KEDITORTOP.G_CURRKEDITOR._kEditorDialog.make(
          KEDITORTOP.G_CURRKEDITOR.ID,
          KEDITORTOP.G_CURRKEDITOR._config), d = this._selfTopWindow(
          KEDITORTOP.G_CURRKEDITOR.ID);
    } else if ("object" === typeof d.contentWindow
    && (d.contentWindow.onbeforeunload = null), null
    != KEDITORTOP.G_CURRKEDITOR.dialogWindow) {
      var e = getDialogDocument();
      e.getElementById("keditor_dialog_close").onclick = function () {
        hideDialog(e.getElementById("keditor_dialog"));
        return !1
      }
    }
    KEDITORTOP.G_CURRKEDITOR.backupWidthForIOS.isPopup = !0;
    for (var f = a + c,
        g = KEDITORTOP.G_CURRKEDITOR._config.itemCustomUrl.item.length, h = 0;
        h < g; h++) {
      if (0 == c.indexOf(
          "editor_" + KEDITORTOP.G_CURRKEDITOR._config.itemCustomUrl.item[h])) {
        f = KEDITORTOP.G_CURRKEDITOR._config.itemCustomUrl.url[h];
        break
      }
    }
    "1" == KEDITORTOP.G_CURRKEDITOR._config.autoSetDocumentDomain
    && (f = KEDITORTOP.RAONKEDITOR.util.setUrlForDocumentDomain(f,
        KEDITORTOP.KEDITORDOC));
    var m = d.contentWindow;
    try {
      if ("none" != d.parentNode.parentNode.style.display) {
        return;
      }
      m.location.replace(f)
    } catch (q) {
      m.src = f
    }
    if ("none" == d.parentNode.parentNode.style.display) {
      d.parentNode.parentNode.style.display = "block";
      d.parentNode.parentNode.style.left = "-800px";
      d.parentNode.parentNode.style.top = "-800px";
      d.style.display = "block";
      d.style.position = "relative";
      d.style.left = "0px";
      d.style.top = "0px";
      -1 < c.indexOf("editor_split_cell.html") && (d.style.height = "112px");
      var t = function (a) {
        KEDITORTOP.RAONKEDITOR.util.removeEvent(d, "load", t);
        b._set_resize(d);
        AdjustDesignBodyWidth({editor: KEDITORTOP.G_CURRKEDITOR, isApply: !1});
        setZoomValueToBody(m.document, KEDITORTOP.G_CURRKEDITOR);
        try {
          "function"
          === typeof KEDITORTOP.G_CURRKEDITOR._config.event.afterPopupShow
              ? KEDITORTOP.G_CURRKEDITOR._config.event.afterPopupShow(
                  G_USE_EDITOR_ID, a.target) : "function"
              === typeof KEDITORTOP.RAONKEDITOR_AfterPopupShow &&
              KEDITORTOP.RAONKEDITOR_AfterPopupShow(G_USE_EDITOR_ID, a.target)
        } catch (c) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(c)
        }
      };
      KEDITORTOP.RAONKEDITOR.util.addEvent(d, "load", t)
    }
    KEDITORTOP.G_CURRKEDITOR.isAOver.linkStyle && hyperLinkOut();
    KEDITORTOP.G_CURRKEDITOR.isAOver.openHelp && hyperHelpClose()
  }, hide: function () {
    this._background(!1);
    var a = document.getElementById("keditor_dialog_" + G_USE_EDITOR_ID);
    a && (a.style.display = "none", a.src = "about:blank")
  }
};
Z[0] = "h";
K__ += "j";

function event_keditor_image_upload(a, c, b, d, e, f, g, h, m, q) {
  command_InsertImage(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), d, e, f, g,
      h, m);
  saveSelection(G_USE_EDITOR_ID)
}

R[2] = "t";
C1[2] = "t";
C2[2] = "t";
ALS[2] = "O";
S1[2] = "t";
S2[2] = "t";

function event_keditor_flash_upload(a, c, b, d, e, f, g) {
  command_InsertMedia(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), e, f);
  hideDialog(g)
}

K__ += "k";
R[3] = "p";
C1[3] = "p";
C2[3] = "p";
ALS[3] = "N";
S1[3] = "p";
S2[3] = "p";

function event_keditor_media_upload(a, c, b, d, e, f, g) {
  command_InsertReplacedImg(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), f)
}

K__ += "l";

function event_keditor_detail_table_insert(a, c, b, d, e, f, g, h, m, q, t, u,
    v, w, x, y, z, A, B, C, D, H, G, I, M, K, P, E, L, O, N, F, J, W, ba) {
  command_InsertDetailTable(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b, d,
      e, f, g, h, m, q, t, u, v, w, x, y, z, A, B, C, D, H, G, I, M, K, P, L, O,
      N, F, J, W, ba)
}

K__ += "m";

function event_keditor_detail_table_insert_new(a, c, b, d, e, f, g, h, m, q, t,
    u, v, w, x, y, z, A, B, C, D, H, G, I, M, K, P, E, L, O, N, F) {
  command_InsertDetailTable(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b, d,
      e, f, g, h, m, q, t, u, v, w, x, y, z, A, B, C, D, H, G, I, M, K, P, E, L,
      O, F);
  hideDialog(N)
}

Z[1] = "t";
K__ += "n";
R[4] = ":";
C1[4] = ":";
C2[4] = "s";
ALS[4] = "K";
S1[4] = ":";
S2[4] = "s";

function event_keditor_table_property(a, c, b, d, e, f, g, h, m, q, t, u, v, w,
    x, y, z, A, B, C, D, H, G, I, M, K) {
  command_InsertTableProperty(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b, d,
      e, f, g, h, m, q, t, u, v, w, x, y, z, A, B, D, H, G, I, M, K)
}

function event_keditor_cell_property(a, c, b, d, e, f, g, h, m, q, t, u, v, w,
    x, y, z, A, B) {
  command_InsertCellProperty(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b, d,
      e, f, g, h, m, q, t, u, v, x, y, z, A, B)
}

function event_keditor_cell_border(a, c, b, d, e) {
  command_InsertCellBorder(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b, d);
  hideDialog(e)
}

R[5] = "/";
C1[5] = "/";
C2[5] = ":";
ALS[5] = "E";
S1[5] = "/";
S2[5] = ":";

function event_keditor_dog_bg_img_insert(a, c, b, d, e, f, g) {
  command_InsertDogBGImg(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b, d,
      e, g)
}

function event_keditor_emoticon_insert(a, c) {
  command_InsertImage(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), "", "", "",
      "", "", a);
  hideDialog(c)
}

R[6] = "/";
C1[6] = "/";
C2[6] = "/";
ALS[6] = "d";
S1[6] = "/";
S2[6] = "/";

function event_keditor_insert_row_column(a, c, b, d) {
  command_InsertRowColumn(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b);
  hideDialog(d)
}

SIL[2] = "o";

function event_keditor_setting(a, c) {
  command_editorSetting(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

Z[2] = "t";

function event_keditor_horizontal_line(a, c, b, d) {
  command_insertHorizontalLine(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b);
  hideDialog(d)
}

R[7] = "w";
C1[7] = "a";
C2[7] = "/";
ALS[7] = "i";
S1[7] = "a";
S2[7] = "/";

function event_keditor_row_property(a, c, b, d, e, f) {
  command_RowProperty(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b, d,
      e);
  hideDialog(f)
}

function event_keditor_column_property(a, c, b, d, e) {
  command_ColumnProperty(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b, d);
  hideDialog(e)
}

R[8] = "w";
C1[8] = "u";
C2[8] = "a";
ALS[8] = "t";
S1[8] = "u";
S2[8] = "a";

function event_keditor_bookmark_add(a, c) {
  command_InsertBookmark(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c)
}

function event_keditor_create_iframe(a, c) {
  command_InsertReplacedImg(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

R[9] = "w";
C1[9] = "t";
C2[9] = "u";
ALS[9] = "o";
S1[9] = "t";
S2[9] = "u";

function event_keditor_create_hyperlink(a, c) {
  command_InsertHyperLink(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a)
}

R[10] = ".";
C1[10] = "h";
C2[10] = "t";
ALS[10] = "r";
S1[10] = "h";
S2[10] = "t";

function event_keditor_split_cell(a, c, b) {
  command_InsertSplitCell(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c);
  hideDialog(b)
}

T[0] = "Li";

function event_keditor_symbol(a, c) {
  command_InsertSymbol(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

R[11] = "L";
C1[11] = ".";
C2[11] = "h";
ALS[11] = "_";
S1[11] = ".";
S2[11] = "h";

function event_keditor_template(a, c) {
  0 != a.url.toLowerCase().indexOf("http:") && 0 != a.url.toLowerCase().indexOf(
      "https:") && 0 != a.url.toLowerCase().indexOf("/")
  && (a.url = KEDITORTOP.RAONKEDITOR.rootPath + a.url);
  var b = KEDITORTOP.RAONKEDITOR.ajax.load(a.url);
  null != b && (b = removeCarriageReturn(KEDITORTOP.G_CURRKEDITOR,
      b), setHtmlValueToEditor(b), "1"
  == KEDITORTOP.G_CURRKEDITOR._config.ruler.use && "1"
  == KEDITORTOP.G_CURRKEDITOR._config.autoBodyFit
  && (G_BodyFit.SetBodyWidth(), setAutoBodyFit(KEDITORTOP.G_CURRKEDITOR),
  G_BodyFit.noncreationAreaBackgroundStatus && setBodyFitStyle(
      KEDITORTOP.G_CURRKEDITOR, !0)), setStyleForTableBorderNodeClass(
      KEDITORTOP.G_CURRKEDITOR), setCssForFormMode(KEDITORTOP.G_CURRKEDITOR));
  KEDITORTOP.G_CURRKEDITOR._config.printHeader = "null" != a.print_header
      ? a.print_header : KEDITORTOP.G_CURRKEDITOR._config.basePrintHeader;
  KEDITORTOP.G_CURRKEDITOR._config.printFooter = "null" != a.print_footer
      ? a.print_footer : KEDITORTOP.G_CURRKEDITOR._config.basePrintFooter;
  hideDialog(c)
}

T[1] = "c";

function event_keditor_layout(a, c) {
  var b = KEDITORTOP.RAONKEDITOR.ajax.load(
      KEDITORTOP.RAONKEDITOR.rootPath + "pages/layout/layout" + a.num
      + ".html");
  null != b && KEDITORTOP.RAONKEDITOR.setHtmlValueEx(b, G_USE_EDITOR_ID);
  hideDialog(c)
}

_R_O_ += R[11];

function event_dialog_cancel(a) {
  hideDialog(a, {isCancel: !0});
  null != KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
  && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_ResizeHandlerActivatedFlag
  && (KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_ResizeHandlerActivatedFlag = !1, KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.setResizeHandle(
      null, !0))
}

R[12] = "e";
C1[12] = "r";
C2[12] = ".";
ALS[12] = "R";
S1[12] = "r";
S2[12] = ".";

function event_keditor_find(a, c, b, d, e, f) {
  command_find(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, d, e,
      b)
}

Z[3] = "p";
_R_O_ += "R";

function event_keditor_replace(a, c, b, d, e, f, g) {
  command_replace(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b, e,
      f, d, g)
}

R[13] = "x";
C1[13] = "a";
C2[13] = "r";
ALS[13] = "A";
S1[13] = "a";
S2[13] = "r";

function event_keditor_all_replace(a, c, b, d, e, f, g, h) {
  command_replaceAll(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b, e,
      f, d, g, h)
}

function event_keditor_spellcheck_find(a) {
  command_find(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, !0, !1,
      !0, !1)
}

function event_keditor_spellcheck_replace(a, c) {
  command_replace(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, !0,
      !1, !0, !1, !0)
}

function event_keditor_spellcheck_all_replace(a, c) {
  command_replaceAll(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, !0,
      !1, !0, !1, !0)
}

T[2] = "e";
_R_O_ += "S";

function event_keditor_capital_small_letter(a, c) {
  command_changeWordUpperLower(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a)
}

R[14] = "t";
C1[14] = "o";
C2[14] = "a";
ALS[14] = "D";
S1[14] = "o";
S2[14] = "a";

function event_keditor_insert_link_media(a, c, b, d) {
  a = getCustomParam(a, {forceFullSreenAllow: b});
  null == a ? alert(RAONKEditor_lang.msg.alert_insert_link_media_xss) : (c && ""
  != c && (a.caption = c), command_InsertReplacedImg(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a));
  hideDialog(d)
}

function event_keditor_modify_link_media(a, c, b, d, e) {
  a = getCustomParam(a, {forceFullSreenAllow: b});
  null == a ? alert(RAONKEditor_lang.msg.alert_insert_link_media_xss) : (c && ""
  != c && (a.caption = c), command_ModifyReplacedImg(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, d));
  hideDialog(e)
}

_R_O_ += "T";
T[3] = "n";

function event_keditor_insert_paste_dialog_html(a, c) {
  command_InsertPasteDialogHtml(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

R[15] = "5";
C1[15] = "n";
C2[15] = "o";
S1[15] = "n";
S2[15] = "o";

function event_keditor_insert_file(a, c) {
  command_InsertHyperLink(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a)
}

_R_O_ += "x";

function event_keditor_insert_open_file(a, c) {
  command_InsertOpenFile(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

R[16] = ".";
C1[16] = "w";
C2[16] = "n";
S1[16] = "w";
S2[16] = "n";

function event_keditor_insert_blockquote(a, c) {
  command_InsertBlockquote(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

function event_keditor_cancel_blockquote(a) {
  command_CancelBlockquote(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID));
  hideDialog(a)
}

T[4] = "se";
_R_O_ += "y";

function event_keditor_insert_input_text(a, c) {
  command_InsertInputText(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

R[17] = "c";
T[5] = "k";
C1[17] = "i";
C2[17] = "w";
S1[17] = "i";
S2[17] = "w";

function event_keditor_insert_input_radio_or_checkbox(a, c) {
  command_InsertInputRadioOrCheckbox(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

_R_O_ += "z";
T[6] = "e";

function event_keditor_insert_input_button(a, c) {
  command_InsertInputButton(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

SIL[3] = "b";

function event_keditor_insert_input_select(a, c) {
  command_InsertInputSelect(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

T[7] = "y";

function event_keditor_insert_input_textarea(a, c) {
  command_InsertInputTextarea(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

_R_O_ += "u";

function event_keditor_insert_input_hidden(a, c) {
  command_InsertInputHidden(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

R[18] = "o";
T[8] = " i";
C1[18] = "z";
C2[18] = "i";
S1[18] = "z";
S2[18] = "i";

function event_keditor_insert_input_image(a, c) {
  command_InsertInputImage(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

T[9] = "s ";
_R_O_ += "v";

function event_keditor_setAccessibility(a, c, b) {
  command_setAccessibility(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a, c, b)
}

R[19] = "m";
T[10] = "i";
C1[19] = ".";
C2[19] = "z";
S1[19] = ".";
S2[19] = "z";

function event_keditor_create_conversion(a, c) {
  command_InsertConversion(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

function event_keditor_video_upload(a, c, b, d, e, f, g) {
  command_InsertVideo(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), e, f);
  hideDialog(g)
}

function event_keditor_calculator(a, c) {
  command_InsertCalculator(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

function event_keditor_insert_placeholder(a, c) {
  command_InsertPlaceholder(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

function event_keditor_load_auto_save_open(a, c, b) {
  return getAutoSaveHtml_userID(a, c, b)
}

function event_keditor_load_auto_save(a, c, b) {
  command_loadAutoSave(b, document.getElementById("keditor_design_" + b), a);
  hideDialog(c)
}

function event_keditor_load_auto_save_del(a, c, b, d) {
  delAutoSaveHtml(a, c, d) || KEDITORTOP.G_CURRKEDITOR._iconEnable("")
}

function event_keditor_paragraph_attribute(a, c) {
  command_ParagraphAttribute(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  hideDialog(c)
}

function event_kplugin_action(a, c) {
  command_PluginAction(G_USE_EDITOR_ID,
      document.getElementById("keditor_design_" + G_USE_EDITOR_ID), a);
  1 == a.closeDialog && hideDialog(c)
}

function event_keditor_paste_table(a, c) {
  KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableNode.removeAttribute(
      "KEditorCellSelected");
  for (var b = KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableNode.rows,
      d = KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableNode.rows.length, e = 0;
      e < d; e++) {
    for (var f = b[e].cells, g = b[e].cells.length, h = 0; h < g;
        h++) {
      "true" == f[h].getAttribute("keditor_select")
      && (f[h].style.backgroundColor = f[h].getAttribute(
          "cellOrgBgColor"), removeAttribute(f[h],
          "cellOrgBgColor"), removeAttribute(f[h], "keditor_select"));
    }
  }
  KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableHtml = KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableNode.outerHTML;
  switch (a.type) {
    case "paste_table":
      "1" == KEDITORTOP.G_CURRKEDITOR._config.pasteWhenTableIsLast
      && (KEDITORTOP.G_CURRKEDITOR.isTablePaste = !0);
      KEDITORTOP.RAONKEDITOR.setInsertHTML(
          KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableHtml,
          KEDITORTOP.G_CURRKEDITOR.ID);
      break;
    case "paste_table_contents":
      command_tablePaste(KEDITORTOP.G_CURRKEDITOR.ID, KEDITORTOP.G_CURRKEDITOR,
          KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableNode);
      break;
    case "paste_table_right":
      command_AddTableLeftAndRight(KEDITORTOP.G_CURRKEDITOR,
          KEDITORTOP.G_CURRKEDITOR.pasteTableParam, "right");
      break;
    case "paste_table_left":
      command_AddTableLeftAndRight(KEDITORTOP.G_CURRKEDITOR,
          KEDITORTOP.G_CURRKEDITOR.pasteTableParam, "left");
      break;
    case "paste_table_up":
      command_AddTableUpAndDown(KEDITORTOP.G_CURRKEDITOR,
          KEDITORTOP.G_CURRKEDITOR.pasteTableParam, "up");
      break;
    case "paste_table_down":
      command_AddTableUpAndDown(KEDITORTOP.G_CURRKEDITOR,
          KEDITORTOP.G_CURRKEDITOR.pasteTableParam,
          "down")
  }
  KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableHtml = "";
  KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableNode = null;
  KEDITORTOP.G_CURRKEDITOR.pasteTableParam.currTableNode = null;
  KEDITORTOP.G_CURRKEDITOR.pasteTableParam.currCellNode = null;
  hideDialog(c)
}

function onlyNumberAndNegative(a) {
  isNaN(new Number(a.value)) && "-" != a.value && (isNaN(
      new Number(KEDITORTOP.G_CURRKEDITOR.keydownInputText)) ? a.value = ""
      : a.value = KEDITORTOP.G_CURRKEDITOR.keydownInputText)
}

function onlyNumber(a) {
  window.netscape ? 34 < a.which && 41 > a.which || 47 < a.which && 58 > a.which
      || 95 < a.which && 106 > a.which || 8 == a.which || 9 == a.which || 13
      == a.which || 46 == a.which || KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
      : 34 < a.keyCode && 41 > a.keyCode || 47 < a.keyCode && 58 > a.keyCode
      || 95 < a.keyCode && 106 > a.keyCode || 8 == a.keyCode || 9 == a.keyCode
      || 13 == a.keyCode || 46 == a.keyCode
      || KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
}

T[11] = "n";
R[20] = "/";
C1[20] = "c";
C2[20] = ".";
S1[20] = "c";
S2[20] = ".";

function locationDialog(a) {
  setFocusTopWindow();
  var c = getDialogWindow(), b = getDialogDocument(),
      d = b.createElement("div");
  d.setAttribute("id", "ke_disabled");
  d.innerHTML = '<div style="filter:alpha(opacity=0); opacity:0; -moz-opacity:0; -ms-filter:progid:DXImageTransform.Microsoft.Alpha(Opacity=0); -khtml-opacity: 0; background-color:white; z-index:'
      + (G_MAIN_ZINDEX + 1E3)
      + '; position:absolute; left:0px; top:0px;overflow:hidden;width:100%;height:100%;" oncontextmenu="return false;"></div>';
  d.style.overflow =
      "visible";
  var e = "CSS1Compat" == b.compatMode ? b.documentElement.scrollHeight
      : b.body.scrollHeight;
  d.firstChild.style.width = ("CSS1Compat" == b.compatMode
      ? b.documentElement.scrollWidth : b.body.scrollWidth) + "px";
  d.firstChild.style.height = e + "px";
  b.body.appendChild(d);
  KEDITORTOP.RAONKEDITOR.util.addEvent(c, "resize", setLayerbgResize);
  KEDITORTOP.RAONKEDITOR.util.addEvent(d, "dragover", function (a) {
    KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
  });
  KEDITORTOP.RAONKEDITOR.util.addEvent(d, "drop", function (a) {
    KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
  });
  a.style.display = "block";
  a.style.zIndex = G_MAIN_ZINDEX + 2E3;
  a.style.position = "absolute";
  var f = {}, f = getWindowClientSize(c), b = {}, b = getWindowScrollPos(c),
      d = a.getElementsByTagName("iframe")[0],
      e = a.getElementsByTagName("div")[2];
  d && e && (KEDITORTOP.RAONKEDITOR.browser.ie && 8
  == KEDITORTOP.RAONKEDITOR.browser.ieVersion
  && (e.style.position = d.style.position), e.style.left = d.style.left, e.style.right = d.style.right, e.style.width = d.style.width, e.style.height = d.style.height);
  var g = a.clientWidth;
  0 == g && (g = 386);
  var h = a.clientHeight;
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.showDialogPosition) {
    var f = getClientRect(_iframeWin.parent.frameElement),
        h = getClientRect(_iframeWin.frameElement), m = 0, q = 0;
    if (null
        != KEDITORTOP.G_CURRKEDITOR.dialogWindow) {
      for (var t = _iframeWin.parent.parent;
          t != c;) {
        var u = getClientRect(t.frameElement), m = m + u.left,
            q = q + u.top, t = t.parent;
      }
    }
    a.style.left = b[0] + f.left + m + ((h.right - h.left) / 2 - g / 2) + "px";
    a.style.top = b[1] + f.top + h.top + q + 10 + "px"
  } else {
    a.style.left = b[0] + f[0] / 2 - g / 2 + "px", a.style.top = b[1]
        + f[1] / 2 - h / 2 + "px";
  }
  makeDragPopup(a);
  isMobileAndFixBottom()
  && (a.style.position = "fixed", a.style.left = "0px", a.style.top = "", a.style.bottom = "0px", a.style.width = "calc(100% - 2px)", e.style.width = "100%", d.style.width = "100%")
}

Z[4] = ":";
T[12] = "c";

function localToGlobal(a) {
  var c = a.offsetWidth, b = a.offsetHeight, d = 0, e = 0, f = {},
      g = function (h) {
        if (h) {
          d += h.offsetLeft, e += h.offsetTop, g(
              h.offsetParent);
        } else {
          return f = {
            top: a.offsetTop + e,
            left: a.offsetLeft + d,
            bottom: a.offsetTop + e + b,
            right: a.offsetLeft + d + c
          }
        }
      };
  g(a.offsetParent);
  return f
}

R[21] = "r";
C1[21] = "o";
C2[21] = "c";
S1[21] = "o";
S2[21] = "c";

function setLayerbgResize() {
  var a = getDialogDocument(), c = a.getElementById("ke_disabled"),
      b = "CSS1Compat" == a.compatMode ? a.documentElement.scrollHeight
          : a.body.scrollHeight;
  c.firstChild.style.width = ("CSS1Compat" == a.compatMode
      ? a.documentElement.scrollWidth : a.body.scrollWidth) + "px";
  c.firstChild.style.height = b + "px"
}

T[13] = "o";

function hideDialog(a, c) {
  dialogCancel();
  var b = getDialogWindow(), d = getDialogDocument();
  _k_editor.violationNode && (removeClassName(_k_editor.violationNode,
      "keditor_accessibility"), _k_editor.violationNode = null, KEDITORTOP.RAONKEDITOR.setEditorChangeMode(
      "source", _k_editor.ID), KEDITORTOP.RAONKEDITOR.setEditorChangeMode(
      "design", _k_editor.ID));
  var e = d.getElementById("ke_disabled");
  if (null != e) {
    KEDITORTOP.RAONKEDITOR.util.removeEvent(b, "resize", setLayerbgResize);
    a.style.display = "none";
    var f = a.getElementsByTagName("iframe")[0];
    f.style.width = "10px";
    f.style.height = "10px";
    e.parentElement.removeChild(e);
    if ("hyperlink_property" == G_LAST_CMD || "hyperlink_create"
        == G_LAST_CMD) {
      try {
        KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT && "A"
        == KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.tagName
        && doSetCaretPosition(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT, 1)
      } catch (g) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(g)
      }
    }
    KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
    && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResizeDiv &&
    KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem
    && (KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.resizeHandleClear(), KEDITORTOP.RAONKEDITOR.setCaretBeforeOrAfter(
        {node: KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT, pos: "after"}));
    KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = null;
    KEDITORTOP.RAONKEDITOR.util.removeEvent(d, "keyup", press_enter_esc_btn);
    setTimeout(function () {
      onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0});
      if (!c || !c.isCancel) {
        var a = f.contentWindow.location.href.split(".")[0];
        try {
          a = a.split("/"), a = a[a.length - 1], a = a.replace("editor_", "")
        } catch (b) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(b)
        }
        onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: a})
      }
    }, 100)
  }
}

_R_O_ += "w";
R[22] = "a";
C1[22] = "m";
C2[22] = "o";
S1[22] = "m";
S2[22] = "o";

function getWindowClientSize(a) {
  var c = 0, b = 0;
  "number" == typeof a.innerWidth ? (c = a.innerWidth, b = a.innerHeight)
      : a.document.documentElement && (a.document.documentElement.clientWidth
          || a.document.documentElement.clientHeight)
          ? (c = a.document.documentElement.clientWidth, b = a.document.documentElement.clientHeight)
          : a.document.body && (a.document.body.clientWidth
              || a.document.body.clientHeight)
          && (c = a.document.body.clientWidth, b = a.document.body.clientHeight);
  c = changeValueForZoom(c, KEDITORTOP.G_CURRKEDITOR);
  b = changeValueForZoom(b,
      KEDITORTOP.G_CURRKEDITOR);
  return [c, b]
}

Z[5] = "/";

function getWindowScrollPos(a) {
  var c = 0, b = 0;
  "number" === typeof a.pageYOffset ? (c = a.pageXOffset, b = a.pageYOffset)
      : a.document.body && (a.document.body.scrollLeft
          || a.document.body.scrollTop)
          ? (c = a.document.body.scrollLeft, b = a.document.body.scrollTop)
          : a.document.documentElement && (a.document.documentElement.scrollLeft
              || a.document.documentElement.scrollTop)
          && (c = a.document.documentElement.scrollLeft, b = a.document.documentElement.scrollTop);
  c = changeValueForZoom(c, KEDITORTOP.G_CURRKEDITOR);
  b = changeValueForZoom(b,
      KEDITORTOP.G_CURRKEDITOR);
  return [c, b]
}

Z[6] = "/";
_R_O_ += "H";
R[23] = "o";
C1[23] = "/";
C2[23] = "m";
S1[23] = "/";
S2[23] = "m";
var _startXY = {};

function _MD(a) {
  if (isLeftClick(a)) {
    var c = null, c = a.target ? a.target : a.srcElement, c = c.parentElement;
    a = getMousePosition(a);
    _startXY.X = a.X - parseIntOr0(c.style.left);
    _startXY.Y = a.Y - parseIntOr0(c.style.top)
  }
}

T[14] = "r";
Z[7] = "w";

function _MM(a) {
  if (isLeftClick(a)) {
    var c = getMousePosition(a), b = null,
        b = a.target ? a.target : a.srcElement, b = b.parentElement;
    b.style.left = c.X - _startXY.X + "px";
    b.style.top = c.Y - _startXY.Y + "px"
  }
  KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
}

T[15] = "r";

function _MU(a) {
}

Z[8] = "w";
_R_O_ += "M";
T[16] = "e";
Z[9] = "w";

function click_plus_func(a, c, b, d) {
  b = parseIntOr0(a.value, 10) + parseIntOr0(b, 10);
  a.value = "number" == typeof c ? b > c ? c : b : b;
  d && d()
}

R[24] = "n";
T[17] = "c";
C1[24] = "k";
C2[24] = "/";
S1[24] = "s";
S2[24] = "/";

function click_minus_func(a, c, b, d, e) {
  b = parseIntOr0(a.value, 10) - parseIntOr0(b, 10);
  a.value = "number" == typeof c ? b < c ? c : b : b;
  void 0 !== d && 1 == d && b < c && (a.value = "");
  e && e()
}

Z[10] = ".";

function elementIndexOf(a, c) {
  for (var b, d = document.getElementsByName(c), e = d.length, f = 0; f < e;
      f++) {
    if (d[f] == a) {
      b = f;
      break
    }
  }
  return b
}

Z[11] = "d";
_R_O_ += "N";

function getElementsByClassNameEx(a, c) {
  var b = null;
  try {
    b = a.querySelector ? a.querySelectorAll("." + c) : getElementsByClass(c, a)
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  return b
}

function getElementsByClass(a, c, b) {
  var d = [];
  null == c && (c = document);
  null == b && (b = "*");
  c = c.getElementsByTagName(b);
  b = c.length;
  a = new RegExp("(^|\\s)" + a + "(\\s|$)");
  for (j = i = 0; i < b; i++) {
    try {
      a.test(c[i].className) && (d[j] = c[i], j++)
    } catch (e) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(e)
    }
  }
  return d
}

T[18] = "t";
_R_O_ += "O";
R[25] = ".";
C1[25] = "2";
C2[25] = "k";
S1[25] = "2";
S2[25] = "s";

function getElementsById(a, c, b) {
  var d = [];
  null == c && (c = document);
  null == b && (b = "*");
  c = c.getElementsByTagName(b);
  b = c.length;
  for (j = i = 0; i < b; i++) {
    c[i].id == a && (d[j] = c[i], j++);
  }
  return d
}

Z[12] = "e";

function getIframeWin() {
  return _iframeWin
}

T[19] = ". P";

function getIframeDoc() {
  return _iframeDoc
}

T[20] = "l";
_R_O_ += "P";

function isCustomDomain(a) {
  if (!KEDITORTOP.RAONKEDITOR.browser.ie) {
    return !1;
  }
  var c = a.domain;
  a = getDocWindow(a).location.hostname;
  var b = !1;
  try {
    b = kEditorEnforceDocumentDomain
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  return 1 == !!b || c != a && c != "[" + a + "]"
}

Z[13] = "x";

function getDocWindow(a) {
  return a.parentWindow || a.defaultView
}

R[26] = "a";
C1[26] = ".";
C2[26] = "2";
S1[26] = ".";
S2[26] = "2";

function getIframeDocument(a) {
  return "undefined" != typeof a.contentDocument ? a.contentDocument
      : "undefined" != typeof a.contentWindow ? a.contentWindow.document : null
}

Z[14] = "t";

function getIframeWindow(a) {
  return "undefined" != typeof a.contentWindow ? a.contentWindow : "undefined"
  != typeof a.contentDocument ? a.contentDocument.defaultView : null
}

T[21] = T[2] + "a";

function createPopupIframe(a, c, b, d, e, f, g, h, m, q, t) {
  var u = a.createElement("div");
  u.id = c;
  u.className = b;
  u.style.position = "absolute";
  u.style.zIndex = d;
  u.style.width = e;
  u.style.height = f;
  u.style.display = g;
  b = a.createElement("iframe");
  b.frameBorder = 0;
  b.style.top = "0px";
  b.style.position = "absolute";
  b.style.left = "0px";
  b.width = "100%";
  b.height = "100%";
  b.scrolling = "no";
  b.title = c;
  1 == h && (b.allowTransparency = !0);
  u.appendChild(b);
  a.body.appendChild(u);
  c = "";
  void 0 === m || "" == m ? (c = "document.open();" + (isCustomDomain(a)
          ? 'document.domain="' +
          a.domain + '";' : "")
      + " document.close();", c = KEDITORTOP.RAONKEDITOR.browser.ie && 12
  > KEDITORTOP.RAONKEDITOR.browser.ieVersion ? "javascript:void(function(){"
      + encodeURIComponent(c) + "}())" : "") : c = m;
  b.src = c;
  c = getIframeDocument(b);
  if (void 0 === m || "" == m) {
    m = "<html><head><title>"
        + _k_editor._config.system_title
        + ' Editor Popup Window</title></head><body style="padding:0; margin:0;"></body></html>', c.open(
        "text/html", "replace"), isCustomDomain(a)
    && (c.domain = a.domain), c.write(m), c.close(), 1 == h
    && (c.body.style.backgroundColor =
        "transparent");
  }
  a = c.getElementsByTagName("head")[0];
  m = q.length;
  for (h = 0; h < m; h++) {
    d = c.createElement(
        "link"), d.type = "text/css", d.rel = "stylesheet", d.href = q[h], a.appendChild(
        d);
  }
  "1" == KEDITORTOP.G_CURRKEDITOR._config.customCssUrlDetailApply
  && (q = c.createElement(
      "link"), q.type = "text/css", q.rel = "stylesheet", q.href = KEDITORTOP.G_CURRKEDITOR._config.style.customCssUrl, a.appendChild(
      q));
  c = getIframeDocument(b);
  a = c.getElementsByTagName("head")[0];
  q = t.length;
  for (h = 0; h < q; h++) {
    m = c.createElement(
        "script"), m.type = "text/javascript",
        m.src = t[h], a.appendChild(m);
  }
  t = {};
  t.layer = u;
  t.iframe = b;
  t.iframeDoc = getIframeDocument(b);
  t.iframeWin = getIframeWindow(b);
  return t
}

Z[15] = "5";
_R_O_ += "Q";

function showColorPopup(a, c, b, d, e, f, g) {
  var h = !1, m = !1;
  if ("detail_font_color" == d || "detail_font_bg_color" == d
      || "detail_cell_bg_color" == d) {
    var q = a.getElementById(
        "editor_intelligent_menu_iframe_" + KEDITORTOP.G_CURRKEDITOR.ID);
    null != q && "none" != q.style.display && (m = !0);
    a = getDialogDocument();
    h = !0
  }
  y = onColorPicker({
    cmd: "before",
    targetDoc: a,
    clickedElem: c,
    styleColor: b,
    actionType: d,
    leftX: y,
    topY: t,
    excuteFn: g
  });
  void 0 != y && null != y.clickedElem && (c = y.clickedElem);
  y = t = "";
  KEDITORTOP.RAONKEDITOR.isRelease ? (t = _k_editor._config.webPath.css,
          y = _k_editor._config.webPath.js)
      : (t = _k_editor._config.webPath.css_dev, y = _k_editor._config.webPath.js_dev);
  var t = "ko-kr" != _k_editor._config.lang ? t + ("editor_"
          + _k_editor._config.lang + ".css") : t + "editor.css",
      t = t + ("?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp),
      q = Math.max(a.documentElement.scrollHeight, a.body.scrollHeight),
      u = createPopupIframe(a, "popupCover", "", G_MAIN_ZINDEX + 2E3, "165px",
          "300px", "none", !0, "", [t], [y + "jscolor/jscolor.js"]),
      v = a.createElement("div");
  v.setAttribute("id", "keditor_color_back");
  v.innerHTML =
      '<div style="filter:alpha(opacity=0); opacity:0; -moz-opacity:0; -ms-filter:progid:DXImageTransform.Microsoft.Alpha(Opacity=0); -khtml-opacity: 0; background-color:white; z-index:'
      + (G_MAIN_ZINDEX + 1E3)
      + '; position:absolute; left:0px; top:0px;overflow:hidden;width:100%;height:100%;"></div>';
  v.style.position = "static";
  var w = "CSS1Compat" == a.compatMode ? a.documentElement.scrollWidth
          : a.body.scrollWidth,
      x = "CSS1Compat" == a.compatMode ? a.documentElement.scrollHeight
          : a.body.scrollHeight, y = e, t = f, w = changeValueForZoom(w,
          _k_editor), x = changeValueForZoom(x, _k_editor);
  h && x > q && (x = q);
  v.firstChild.style.width = w + "px";
  v.firstChild.style.height = x + "px";
  a.body.appendChild(v);
  v.onclick = function () {
    a.body.removeChild(a.getElementById("popupCover"));
    a.body.removeChild(v);
    dialogCancel()
  };
  f = getClientRect(c);
  e = c.ownerDocument || c.document || a;
  var z;
  "undefined" != typeof e.defaultView ? z = e.defaultView : "undefined"
      != typeof e.parentWindow && (z = e.parentWindow);
  var A = getDocWindow(a), q = null;
  z !== A && (q = getClientRect(z.frameElement));
  null == y && (y =
      0);
  null == t && (t = 0);
  0 == f.left && (f = getClientRect(c));
  KEDITORTOP.G_CURRKEDITOR._config.userColorPicker && ""
  != KEDITORTOP.G_CURRKEDITOR._config.userColorPicker
  && (G_BASE_COLOR_PICKER = KEDITORTOP.G_CURRKEDITOR._config.userColorPicker.split(
      ","));
  var B = u.iframeDoc, C = u.iframeWin, D = G_BASE_COLOR_PICKER;
  if ("detail_font_bg_color" == d) {
    var H = B.createElement("div");
    H.setAttribute("class", "color");
    H.setAttribute("id", "removeBgColor");
    H.style.display = "block";
    H.style.textAlign = "center";
    H.style.lineHeight = "24px";
    H.style.backgroundColor =
        "#ffffff";
    H.style.color = "#5d5d5d";
    H.style.fontSize = "11px";
    H.style.overflow = "hidden";
    H.style.cursor = "pointer";
    H.style.width = "150px";
    H.style.height = "20px";
    H.style.margin = "5px 5px 0 5px";
    _a_tag = B.createElement("a");
    _a_tag.href = "javascript:void(0);";
    _a_tag.style.width = "150px";
    _a_tag.style.height = "20px";
    _a_tag.style.display = "block";
    _a_tag.style.textDecoration = "none";
    _a_tag.style.color = "#5d5d5d";
    _a_tag.style.outlineOffset = "-1px";
    _a_tag.innerText = RAONKEditor_lang.color_picker.remove_bg_Color;
    H.appendChild(_a_tag);
    w = function (a) {
      return function (b) {
        P("", a);
        KEDITORTOP.RAONKEDITOR.util.stopEvent(b)
      }
    }("removeBgColor");
    KEDITORTOP.RAONKEDITOR.util.addEvent(H, "click", w)
  }
  var G = D.length;
  e = B.createElement("ul");
  e.setAttribute("id", "color_ul");
  KEDITORTOP.RAONKEDITOR.util.setClass(e, "keditor_color");
  "cssFloat" in e.style ? e.style.cssFloat = "left"
      : e.style.styleFloat = "left";
  for (var I = 0; I < G; I++) {
    var M = "", M = "cp_" + G_USE_EDITOR_ID + "_" + I,
        x = B.createElement("li");
    x.setAttribute("id", M);
    x.setAttribute("title", D[I]);
    x.style.fontSize =
        "1pt";
    var K = "12px";
    KEDITORTOP.RAONKEDITOR.browser.mobile && (K = "24px");
    x.style.width = K;
    x.style.height = K;
    "cssFloat" in x.style ? x.style.cssFloat = "left"
        : x.style.styleFloat = "left";
    x.style.padding = "2px";
    x.style.margin = "-1px 0 0 -1px";
    x.style.border = "1px solid #fff";
    x.style.cursor = "pointer";
    x.style.listStyleType = "none";
    x.style.backgroundColor = "#default" == D[I] ? "" : D[I];
    _a_tag = B.createElement("a");
    _a_tag.href = "javascript:void(0);";
    _a_tag.style.width = K;
    _a_tag.style.height = K;
    _a_tag.style.display = "block";
    w = D[I];
    "#default" == D[I]
    && (w = RAONKEditor_lang.color_picker[D[I]], _a_tag.style.backgroundImage = "url( ../images/editor/jscolor/defaultColor.png)");
    _a_tag.title = w;
    x.appendChild(_a_tag);
    var P = function (e, f) {
      M = f ? f : 3 < e.length ? e : D[e];
      "#000000" == M && (M = "black");
      var h = M;
      "#default" == M && ("detail_font_color" == d ? M = "black"
          : "detail_font_bg_color" == d && (M = "transparent"));
      if ("" !== b || void 0 !== b) {
        c.style[b] = M;
        0 == KEDITORTOP.RAONKEDITOR.browser.ie && A.focus();
        a.body.focus();
        c.parentNode.focus();
        if (void 0 !== d) {
          if ("doc_bg_color" == d) {
            command_docBGColor(
                G_USE_EDITOR_ID,
                document.getElementById("keditor_design_" + G_USE_EDITOR_ID),
                M);
          } else if ("detail_cell_bg_color" == d) {
            isGroupingIcon(
                G_USE_EDITOR_ID, "cell_bg_color")
            && hideGroupingBox(), command_cellBGColor(G_USE_EDITOR_ID,
                document.getElementById("keditor_design_" + G_USE_EDITOR_ID),
                M), onCommand(
                {editor: KEDITORTOP.G_CURRKEDITOR, cmd: d});
          } else if ("line_color"
              == d) {
            g && g();
          } else if ("detail_font_color" == d) {
            isGroupingIcon(
                G_USE_EDITOR_ID, "font_color")
            && hideGroupingBox(), command_fontColor(G_USE_EDITOR_ID,
                document.getElementById("keditor_design_" +
                    G_USE_EDITOR_ID), M);
          } else if ("detail_font_bg_color"
              == d) {
            isGroupingIcon(G_USE_EDITOR_ID, "font_bg_color")
            && hideGroupingBox(), "removeBgColor" == M
                ? command_removeBackgroundColor(G_USE_EDITOR_ID,
                    KEDITORTOP.G_CURRKEDITOR) : command_fontBgColor(
                    G_USE_EDITOR_ID,
                    document.getElementById(
                        "keditor_design_" + G_USE_EDITOR_ID),
                    M);
          } else if ("custom_color" == d && c.onchange) {
            c.onchange();
          }
        }
        a.body.removeChild(v);
        a.body.removeChild(a.getElementById("popupCover"));
        if (KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported
            && "removeBgColor" !=
            h) {
          var q = KEDITORTOP.KEDITORWIN.localStorage.getItem(
              KEDITORTOP.G_CURRKEDITOR.recentlyColorName);
          null == q ? KEDITORTOP.KEDITORWIN.localStorage.setItem(
              KEDITORTOP.G_CURRKEDITOR.recentlyColorName, h) : (q = q.split(
              ","), -1 < q.indexOf(h) && q.splice(q.indexOf(h), 1), q.unshift(
              h), 9 < q.length
          && (q.reverse(), q.shift(), q.reverse()), KEDITORTOP.KEDITORWIN.localStorage.setItem(
              KEDITORTOP.G_CURRKEDITOR.recentlyColorName, q.toString()))
        }
      }
    }, w = function (a) {
      return function (b) {
        P(a);
        KEDITORTOP.RAONKEDITOR.util.stopEvent(b)
      }
    }(I);
    KEDITORTOP.RAONKEDITOR.util.addEvent(x,
        "click", w);
    x.onmousedown = function () {
      return !1
    };
    x.unselectable = "on";
    w = function (a, b, c) {
      return function (c) {
        function d(a, b, e) {
          a.getElementsByTagName("li")[b + e] && (a.getElementsByTagName("li")[b
          + e].getElementsByTagName("a")[0] && a.getElementsByTagName("li")[b
          + e].getElementsByTagName(
              "a")[0].focus(), KEDITORTOP.RAONKEDITOR.util.cancelEvent(c))
        }

        var e = "which" in c ? c.which : c.keyCode;
        37 == e ? d(a, b, -1) : 39 == e ? d(a, b, 1) : 38 == e ? d(a, b, -14)
            : 40 == e && d(a, b, 14)
      }
    }(e, I);
    KEDITORTOP.RAONKEDITOR.util.addEvent(_a_tag, "keydown", w);
    e.appendChild(x)
  }
  e.style.width = "158px";
  e.style.paddingLeft = "5px";
  e.style.paddingTop = "5px";
  e.style.paddingRight = "0";
  e.style.paddingBottom = "0";
  e.style.margin = "0px";
  e.style.backgroundColor = "#fbfbfb";
  var E = /msie ([0-9]{1,}[.0-9]{0,})/;
  null != E.exec(navigator.userAgent.toLowerCase()) && "6" == parseFloat(
      RegExp.$1) && (e.style.width = "210px");
  x = B.createElement("div");
  x.style.margin = "0px 0px 0px 0px";
  x.style.padding = KEDITORTOP.RAONKEDITOR.browser.mobile && "tablet"
  != KEDITORTOP.RAONKEDITOR.UserAgent.device.type ? "5px 0px 3px 5px" :
      "5px 0px 0px 5px";
  x.style.display = "block";
  if (KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported && null
      != KEDITORTOP.KEDITORWIN.localStorage.getItem(
          KEDITORTOP.G_CURRKEDITOR.recentlyColorName)) {
    G = KEDITORTOP.KEDITORWIN.localStorage.getItem(
        KEDITORTOP.G_CURRKEDITOR.recentlyColorName).split(",");
    w = B.createElement("div");
    w.style.padding = "0";
    w.style.margin = "0 0 5px 0";
    w.style.fontSize = "0px";
    w.style.height = "1px";
    w.style.width = "151px";
    w.style.backgroundColor = "#c5c5c5";
    x.appendChild(w);
    w = B.createElement("div");
    w.innerHTML = RAONKEditor_lang.color_picker.recently_used_color;
    w.className = "K_EdiTor_font";
    w.style.color = "#5d5d5d";
    w.style.fontSize = "11px";
    x.appendChild(w);
    for (var I = G.length, L = 0; L < I; L++) {
      var O = B.createElement("span");
      O.setAttribute("id", "recentlyColor_" + L);
      O.style.width = K;
      O.style.height = K;
      O.style.border = "1px solid #fff";
      O.style.display = "inline-block";
      O.style.margin = "2px 0px 0px -1px";
      O.style.padding = "2px";
      O.setAttribute("title", G[L]);
      _a_tag = B.createElement("a");
      _a_tag.href = "javascript:void(0);";
      _a_tag.style.width =
          K;
      _a_tag.style.height = K;
      _a_tag.style.display = "block";
      O.appendChild(_a_tag);
      O.style.backgroundColor = G[L];
      w = function (a) {
        return function (b) {
          P("", a);
          KEDITORTOP.RAONKEDITOR.util.stopEvent(b)
        }
      }(G[L]);
      KEDITORTOP.RAONKEDITOR.util.addEvent(O, "click", w);
      x.appendChild(O)
    }
  }
  if (!KEDITORTOP.RAONKEDITOR.browser.mobile || "tablet"
      == KEDITORTOP.RAONKEDITOR.UserAgent.device.type) {
    var N = B.createElement("div");
    N.setAttribute("class", "color");
    N.setAttribute("id", "more_btn");
    N.style.cursor = "pointer";
    N.style.width = "150px";
    N.style.height = "20px";
    N.style.overflow = "hidden";
    N.style.fontSize = "11px";
    N.style.color = "#5d5d5d";
    N.style.lineHeight = "20px";
    N.style.display = "block";
    N.style.textAlign = "center";
    N.style.autoComplete = "off";
    N.style.marginBottom = "5px";
    N.style.marginTop = "5px";
    _a_tag = B.createElement("a");
    _a_tag.href = "javascript:void(0);";
    _a_tag.style.width = "146px";
    _a_tag.style.height = "16px";
    _a_tag.style.display = "block";
    _a_tag.style.textDecoration = "none";
    _a_tag.style.color = "#5d5d5d";
    _a_tag.style.marginTop = "2px";
    _a_tag.style.marginLeft =
        "2px";
    _a_tag.innerText = RAONKEditor_lang.color_picker.custom_color;
    _a_tag.title = "\uc0c9\uc0c1 \uc120\ud0dd";
    N.appendChild(_a_tag);
    KEDITORTOP.RAONKEDITOR.util.addEvent(N, "click", function () {
      (new C.jscolor.color(N, {}, c, b, d, g, h)).showPicker();
      var e = getClientRect(F),
          e = parseInt(e.bottom, 10) - parseInt(e.top, 10);
      u.layer.style.height = e + 150 + "px";
      null != E.exec(navigator.userAgent.toLowerCase()) && "6" == parseFloat(
          RegExp.$1) && (u.iframe.style.height = e + 150 + "px");
      var f = 163;
      KEDITORTOP.RAONKEDITOR.browser.ie && KEDITORTOP.RAONKEDITOR.browser.quirks
      &&
      --f;
      B.getElementById("color_picker").firstChild.style.width = f + "px";
      B.getElementById("color_picker").style.width = "163px";
      B.getElementById("color_picker").style.display = "";
      f = getClientRect(B.getElementById("color_picker"));
      f = parseInt(f.bottom, 10) - parseInt(f.top, 10);
      setColorPickerHeight(a, e + f)
    })
  }
  K = B.createElement("div");
  K.style.clear = "both";
  K.style.margin = "0";
  K.style.padding = "0";
  K.style.line_height = "0";
  K.style.fontSize = "0";
  var F = B.createElement("div");
  F.className = "K_EdiTor";
  F.style.backgroundColor = "#fbfbfb";
  "detail_font_bg_color" == d && F.appendChild(H);
  F.appendChild(e);
  F.appendChild(K);
  F.appendChild(x);
  KEDITORTOP.RAONKEDITOR.browser.mobile && "tablet"
  != KEDITORTOP.RAONKEDITOR.UserAgent.device.type || F.appendChild(N);
  F.style.position = "absolute";
  F.style.width = "163px";
  F.style.border = "solid 1px #bbbbbb";
  B.body.appendChild(F);
  z = u.iframe.contentWindow;
  var J = getIframeDocument(u.iframe);
  setZoomValueToBody(J, KEDITORTOP.G_CURRKEDITOR);
  setTimeout(function () {
    J.getElementsByTagName("A")[0].focus()
  }, 1);
  KEDITORTOP.RAONKEDITOR.util.addEvent(J,
      "keyup", function (b) {
        b = b ? b : z.event;
        27 == ("which" in b ? b.which : b.keyCode) && (a.body.removeChild(
            v), a.body.removeChild(a.getElementById("popupCover")), setTimeout(
            function () {
              try {
                A == window ? setFocusToBody() : (0
                == KEDITORTOP.RAONKEDITOR.browser.ie
                && A.focus(), a.body.focus(), c.parentNode.focus())
              } catch (b) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(b)
              }
            }, 1))
      });
  if (a == document) {
    m = B.getElementsByTagName("div")[0], m = getClientRect(
        m), H = getClientRect(_iframeWin.frameElement), K = parseInt(m.right,
        10) - parseInt(m.left, 10), parseInt(m.bottom, 10), parseInt(m.top,
        10), f.left + K >= H.right ? (u.layer.style.left = f.left - (f.left + K
        - H.right + 30) + "px", u.layer.style.top = f.bottom + t + "px") : null
    == q ? (u.layer.style.left = f.left + y + "px", u.layer.style.top = f.bottom
        + t + "px") : (u.layer.style.left = q.left + f.left + y
        + "px", u.layer.style.top = q.top + f.bottom + t + "px");
  } else if (null
      == q) {
    u.layer.style.left = f.left + y + "px", a.getElementById(
        "editor_popup_row_property") || a.getElementById(
        "editor_popup_column_property") ? u.layer.style.top = "0px"
        : u.layer.style.top =
            f.bottom + t + "px";
  } else {
    K = H = 0;
    if (null
        != KEDITORTOP.G_CURRKEDITOR.dialogWindow) {
      for (w = _iframeWin.parent.parent, x = getDialogWindow();
          w != x;) {
        G = getClientRect(
            w.frameElement), H += G.left, K += G.top, w = w.parent;
      }
    }
    I = G = x = w = 0;
    h && (w = Math.max(a.documentElement.scrollLeft,
        a.body.scrollLeft), x = Math.max(a.documentElement.scrollTop,
        a.body.scrollTop), w = changeValueForZoom(w,
        KEDITORTOP.G_CURRKEDITOR), x = changeValueForZoom(x,
        KEDITORTOP.G_CURRKEDITOR), G = m ? getClientRect(frameElement).top
        : 0, I = m ? getClientRect(frameElement).left : 0);
    u.layer.style.left =
        q.left + f.left + y + H + w + I + "px";
    u.layer.style.top = q.top + f.bottom + t + K + x + G + "px"
  }
  u.layer.style.display = "block";
  KEDITORTOP.RAONKEDITOR.browser.ie && (m = B.getElementById(
      "color_ul"), m = getClientRect(m), 850 < m.bottom - m.top
  && (e.style.paddingBottom = KEDITORTOP.G_CURRKEDITOR._config.userColorPicker
  && "" != KEDITORTOP.G_CURRKEDITOR._config.userColorPicker ? "" : "5px"));
  setFocusFirstAndLast(J, F.getElementsByTagName("a")[0])
}

T[22] = T[4];

function showAccessPopup(a, c, b, d, e, f) {
  var g = a.createElement("div");
  g.setAttribute("id", "keditor_access_back");
  g.innerHTML = '<div style="filter:alpha(opacity=0); opacity:0; -moz-opacity:0; -ms-filter:progid:DXImageTransform.Microsoft.Alpha(Opacity=0); -khtml-opacity: 0; background-color:white; z-index:12; position:absolute; left:0px; top:0px;overflow:hidden;width:100%;height:100%;"></div>';
  var h = "CSS1Compat" == a.compatMode ? a.documentElement.scrollHeight
      : a.body.scrollHeight;
  g.firstChild.style.width = ("CSS1Compat" ==
  a.compatMode ? a.documentElement.scrollWidth : a.body.scrollWidth) + "px";
  g.firstChild.style.height = h + "px";
  a.body.appendChild(g);
  g.onclick = function () {
    a.body.removeChild(g);
    b.style.display = "none"
  };
  b.getElementsByTagName("p")[0].innerHTML = d;
  setTimeout(function () {
    var a = getClientRect(c);
    b.style.left = a.left + e + "px";
    b.style.top = a.top + f + "px";
    b.style.display = ""
  }, 0)
}

Z[16] = ".";
_R_O_ += "I";

function getClickCell(a, c) {
  var b = null;
  a.srcElement ? b = a.srcElement : a.target && (b = a.target);
  if (null != b) {
    return GetParentbyTagName(b, c)
  }
}

Z[17] = "c";
___ = 1 == KEDITORTOP.RAONKEDITOR.IsCrossDomain ? ___.href : top.location.href;

function createSelectProtocols(a, c) {
  var b = ["http://", "https://", "ftp://", "news://", "other"],
      d = ["http://", "https://", "ftp://", "news://", ""], e = [], f;
  for (f in b) {
    e.push(document.createElement(
        "option")), e[f].innerHTML = b[f], e[f].setAttribute("value",
        d[f]), a.appendChild(e[f]);
  }
  KEDITORTOP.RAONKEDITOR.util.addEvent(c, "keyup", function () {
    for (var d in b) {
      b[d] == c.value && "other" != b[d]
      && (c.value = "", a.options[d].selected = "selected")
    }
  })
}

function lastFocus(a) {
}

R[27] = "s";
C1[27] = "a";
C2[27] = ".";
S1[27] = "a";
S2[27] = ".";

function press_enter_esc_btn(a, c) {
  var b = !1, d = !1;
  if (27 == ("which" in a ? a.which : a.keyCode)) {
    for (var e in G_KPlugin) {
      if (G_KPlugin[e].isProcess) {
        return !1;
      }
    }
    c ? (b = closeWebAccessPopup(c), d = closeGridSelectPopop(c)) : d = b = !0;
    b && d && (b = KEDITORTOP.G_CURRKEDITOR.dialog._selfTopWindow(
        KEDITORTOP.G_CURRKEDITOR.ID).parentNode.parentNode, hideDialog(b,
        {isCancel: !0}))
  }
}

T[23] = ",";
___ = 1 == KEDITORTOP.RAONKEDITOR.IsCrossDomain ? null
    != KEDITORTOP.KEDITORDOC.referrer && void 0 != KEDITORTOP.KEDITORDOC.referrer
    && "" != KEDITORTOP.KEDITORDOC.referrer ? KEDITORTOP.KEDITORDOC.referrer : ___
    : ___;

function closeWebAccessPopup(a) {
  for (var c = a.getElementsByTagName("div"), b = c.length, d = !0, e = 0;
      e < b; e++) {
    if (-1 < c[e].id.indexOf("access_div") && "none"
        != c[e].style.display) {
      b = a.getElementById("keditor_access_back");
      a.body.removeChild(b);
      c[e].style.display = "none";
      d = !1;
      break
    }
  }
  return d
}

Z[18] = "o";

function closeGridSelectPopop(a) {
  a = a.getElementById("grid_select");
  var c = !0;
  a && "none" != a.style.display && (a.style.display = "none", c = !1);
  return c
}

Z[19] = "m";
K__ += Z[18];
_R_O_ += "J";
T[24] = " c";

function setEditorHeight(a, c) {
  var b = {};
  c ? b.height = parseIntOr0(a._config.style.height) : b = getClientSize(
      a._FRAMEWIN.frameElement);
  var d = b.height, e = getEditorFrameDoc(a),
      f = e.getElementById("keditor_topstatusbar_" + a.ID),
      g = e.getElementById("keditor_menu_" + a.ID),
      h = e.getElementById("keditor_toolbar_" + a.ID),
      m = e.getElementById("keditor_statusbar_" + a.ID);
  e.getElementById("tool3_" + a.ID);
  var q = b = 0, t = isViewMode(a);
  if (f) {
    switch (a._config.top_status_bar) {
      case "1":
        q = 0;
        break;
      default:
        q = 28
    }
    b += q
  }
  if (g) {
    switch (a._config.top_menu) {
      case "1":
        q =
            0;
        break;
      default:
        f = getClientRect(g), q = t ? f.bottom - f.top : 0 == f.bottom && 0
        == f.top ? 26 : f.bottom - f.top
    }
    b += q
  }
  if (h) {
    switch (a._config.tool_bar) {
      case "3":
        q = 1;
        break;
      default:
        f = getClientRect(h), q = t ? f.bottom - f.top : 0 == f.bottom && 0
        == f.top ? "1" == a._config.tool_bar ? 29 : "2" == a._config.tool_bar
            ? 29 : 57 : f.bottom - f.top
    }
    b += q
  }
  if (m) {
    switch (a._config.status_bar) {
      case "1":
        q = 1;
        break;
      default:
        h = getClientRect(m), q = t ? h.bottom - h.top : 0 == h.bottom && 0
        == h.top ? 23 : h.bottom - h.top
    }
    b += q
  }
  a.baseMenuToolbarHeight = b;
  -1 < a._config.style.height.indexOf("%") &&
  (e.getElementsByTagName(
      "html")[0].style.height = "100%", d = e.getElementsByTagName(
      "body")[0], d.style.height = "100%", d.style.margin = "0", e.body.getElementsByTagName(
      "div")[0].style.height = "100%", getClientRect(
      e.body.getElementsByTagName("div")[0]), d = Math.max(e.body.clientHeight,
      e.documentElement.clientHeight));
  t && (b = "1" == a._config.editorborder ? 2 : 0, 7
  == KEDITORTOP.RAONKEDITOR.browser.trident || 12
  <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
  || !KEDITORTOP.RAONKEDITOR.browser.quirks || (b = 0));
  "0" == a._config.editorborder &&
  --b;
  e = document.getElementById("ue_editor_holder_" + a.ID);
  "0px" != e.style.borderTopWidth && "0px" != e.style.borderBottomWidth || --b;
  KEDITORTOP.RAONKEDITOR.browser.ie && 7
  >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && "2" == a._config.tool_bar
  && !isViewMode(a) && (e.style.borderTopWidth = "0px");
  a._defaultHeight = d - b;
  1 != getKEDITORWINZoomValue(a) && 2 < b && (a._defaultHeight -= 2)
}

_R_O_ += "c";
K__ += "p";

function _fn_0() {
  var a = null, c = null;
  try {
    a = KEDITORTOP.G_CURRKEDITOR
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
  if (a) {
    try {
      c = KEDITORTOP.G_CURRKEDITOR._config
    } catch (d) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(d)
    }
  }
  if (0 != !!a && 0 != !!c && (a = function (a) {
    try {
      KEDITORTOP && KEDITORTOP.G_CURRKEDITOR && alert(a)
    } catch (b) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(b)
    }
  }, "undefined" !== typeof T)) {
    var e =
        T.toString(), e = e.replace(/,/gi, ""), f, g, h, m, q, t;
    f = g = h = m = q = t = "";
    try {
      t = _0_[7], f = _0_[3], g = _0_[5], h = _0_[0], q = _0_[8], m = _1_
    } catch (u) {
      a(e + u.toString());
      return
    }
    try {
      if (0 == m.length || m != h) {
        a(e + KEDITORTOP.RAONKEDITOR.util.makeDecryptReponseMessage(M1) + m);
        return
      }
    } catch (v) {
      a(e + v.toString());
      return
    }
    try {
      if (0 == g.length) {
        a(e);
        return
      }
      if ("0" != g) {
        var w = new Date;
        g = g.toString();
        g = g.split("-");
        var x = parseIntOr0(g[0]), y = parseIntOr0(g[1]), y = y - 1,
            z = parseIntOr0(g[2]);
        if (w > new Date(x, y, z, 23, 59, 59)) {
          a(e + KEDITORTOP.RAONKEDITOR.util.makeDecryptReponseMessage(M2) +
              g.join());
          return
        }
      }
    } catch (A) {
      a(e + A.toString());
      return
    }
    try {
      if (0 == f.length) {
        a(e);
        return
      }
      f = f.split(",");
      w = !1;
      f.push("localhost");
      f.push("127.0.0.1");
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.util && ""
      == KEDITORTOP.RAONKEDITOR.util.trim(___)
      && (___ = KEDITORTOP.KEDITORWIN.location.href);
      -1 < ___.indexOf("file://") && (___ = "" != c.post_url_save_for_notes
          ? c.post_url_save_for_notes : c.handlerUrl);
      for (c = 0; c < f.length; c++) {
        var B = f[c].replace("*.", "");
        if (w = __0_(B)) {
          break;
        }
        if (-1 != ___.toLowerCase().search(B.toLowerCase())) {
          w =
              !0;
          break
        } else {
          var C = B.replace("www.", "");
          if (C != B && (C = "/" + C, -1 != ___.toLowerCase().search(
              C.toLowerCase()))) {
            w = !0;
            break
          }
        }
      }
      if (0 == w) {
        a(e + KEDITORTOP.RAONKEDITOR.util.makeDecryptReponseMessage(M3) + ___);
        return
      }
    } catch (D) {
      if (D.number && 5011 == (D.number & 65535)) {
        return;
      }
      a(e + D.toString());
      return
    }
    try {
      if (0 == t.length) {
        a(KEDITORTOP && KEDITORTOP.G_CURRKEDITOR);
        return
      }
    } catch (H) {
      a(e + H.toString());
      return
    }
    try {
      G_SC = q && (-1 < q.indexOf("C") || -1 < q.indexOf("O")) ? "Y" : "N"
    } catch (G) {
      G_SC = "N"
    }
    _1_ = !0
  }
}

T[25] = T[13];
K__ += "XYZ";
_R_O_ += "d";

function checkDefaultMessage(a) {
  try {
    var c = KEDITORTOP.G_CURRKEDITOR._config.firstLoadType;
    "" != KEDITORTOP.G_CURRKEDITOR._config.firstLoadType && ""
    == KEDITORTOP.G_CURRKEDITOR._config.defaultMessage
    && (KEDITORTOP.G_CURRKEDITOR._config.defaultMessage = " ");
    if ("" == KEDITORTOP.G_CURRKEDITOR._config.defaultMessage) {
      return !1;
    }
    "" != KEDITORTOP.G_CURRKEDITOR._config.defaultMessage
    && (KEDITORTOP.G_CURRKEDITOR._config.defaultMessage = "", KEDITORTOP.G_CURRKEDITOR._config.firstLoadType = "");
    var b = !1;
    switch (c.toLowerCase()) {
      case "bodyvalue":
        KEDITORTOP.RAONKEDITOR.setBodyValue(
            KEDITORTOP.G_CURRKEDITOR._config.firstLoadMessage,
            KEDITORTOP.G_CURRKEDITOR._config.editor_id);
        b = !0;
        break;
      case "bodyvalueex":
        KEDITORTOP.RAONKEDITOR.setBodyValueEx(
            KEDITORTOP.G_CURRKEDITOR._config.firstLoadMessage);
        b = !0;
        break;
      case "bodyvalueexlikediv":
        KEDITORTOP.RAONKEDITOR.setBodyValueExLikeDiv(
            KEDITORTOP.G_CURRKEDITOR._config.firstLoadMessage);
        b = !0;
        break;
      case "htmlvalue":
        KEDITORTOP.RAONKEDITOR.setHtmlValue(
            KEDITORTOP.G_CURRKEDITOR._config.firstLoadMessage);
        b = !0;
        break;
      case "htmlvalueex":
        KEDITORTOP.RAONKEDITOR.setHtmlValueEx(
            KEDITORTOP.G_CURRKEDITOR._config.firstLoadMessage);
        b = !0;
        break;
      case "url":
        KEDITORTOP.RAONKEDITOR.loadHtmlValueExFromURL(
            KEDITORTOP.G_CURRKEDITOR._config.firstLoadMessage,
            KEDITORTOP.G_CURRKEDITOR._config.editor_id);
        b = !0;
        break;
      default:
        KEDITORTOP.RAONKEDITOR.setBodyValue("",
            KEDITORTOP.G_CURRKEDITOR._config.editor_id), KEDITORTOP.G_CURRKEDITOR.UndoManager.reset(), KEDITORTOP.G_CURRKEDITOR._iconEnable(
            ""), setBodyDefaultValue(), setFocusToBody(), b = !0
    }
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  return b
}

_R_O_ += "g";
Z[20] = "/";

function isViewMode(a) {
  var c = a;
  if (void 0 == a || null == a) {
    c = KEDITORTOP.G_CURRKEDITOR;
  }
  return "view" == c._config.mode ? !0 : !1
}

T[26] = "n";
K__ += "qrstU";

function resizeEditor(a, c) {
  try {
    if (null == a || void 0 == a) {
      a = KEDITORTOP.G_CURRKEDITOR;
    }
    setEditorHeight(a, c);
    var b = KEDITORTOP.KEDITORDOC.getElementById("raonk_frame_" + a.ID);
    ("undefined" != typeof b.contentDocument ? b.contentDocument : "undefined"
    != typeof b.contentWindow ? b.contentWindow.document
        : document).getElementById(
        "ue_editor_holder_" + a.ID).style.height = a._defaultHeight + "px";
    for (var b = ["source", "text"], d = b.length, e = 0; e < d; e++) {
      var f = document.getElementById("keditor_" + b[e] + "_" + a.ID),
          g = a._defaultHeight;
      KEDITORTOP.RAONKEDITOR.browser.quirks ?
          g -= 5 : KEDITORTOP.RAONKEDITOR.browser.ie && 7
          >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && (g -= 3);
      f.style.height = g + "px"
    }
  } catch (h) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(h)
  }
}

Z[21] = "z";
K__ += "VW";

function getCustomIconAttr(a) {
  var c = {
    isCustom: !1,
    command: "",
    "desc_ko-kr": "",
    "desc_en-us": "",
    "desc_ja-jp": "",
    "desc_zh-cn": "",
    "desc_zh-tw": "",
    "desc-vi-vn": ""
  };
  "c_" == a.substring(0, 2) && (c.isCustom = !0);
  c.isCustom && (a = a.split("|"), c.command = a[0], a[1] && (a = a[1].split(
      "^"), 1 == a.length
      ? (c["desc_ko-kr"] = a[0], c["desc_en-us"] = a[0], c["desc_ja-jp"] = a[0], c["desc_zh-cn"] = a[0], c["desc_zh-tw"] = a[0], c["desc_vi-vn"] = a[0])
      : (a[0] && (c["desc_ko-kr"] = a[0]), a[1]
      && (c["desc_en-us"] = a[1]), a[2] && (c["desc_ja-jp"] = a[2]), a[3]
      && (c["desc_zh-cn"] =
          a[3]), a[4] && (c["desc_zh-tw"] = a[4]), a[5]
      && (c["desc_vi-vn"] = a[5]))));
  return c
}

K__ += "89012";
T[27] = T[18];

function removeCRLFChar(a) {
  a = changeRealTagToReplaceString(a);
  a = changeReplaceStringToRealTag(a);
  return a = a.replace(/>\n</g, "><")
}

T[28] = "a";

function setFocusFirstAndLast(a, c, b) {
  try {
    var d = null;
    if (b) {
      d = b;
    } else {
      var e = a.getElementsByTagName("a").length,
          d = a.getElementsByTagName("a")[e - 1];
    }
    var f = getDocWindow(a), g = !1;
    f.frameElement && f.frameElement.parentNode && "keditor_dialog"
    == f.frameElement.parentNode.id && (g = !0);
    var h = b = null;
    g && (b = f.frameElement.parentNode.getElementsByTagName(
        "div")[0], h = b.getElementsByTagName("a")[0]);
    b = function (b) {
      b = b ? b : KEDITORTOP.KEDITORWIN.event;
      var e = "which" in b ? b.which : b.keyCode;
      KEDITORTOP.RAONKEDITOR.util.cancelEvent(b);
      0 == b.shiftKey && 9 == e ? (0 == KEDITORTOP.RAONKEDITOR.browser.ie
      && f.focus(), a.body.focus(), c.focus()) : b.shiftKey && 9 == e && (0
      == KEDITORTOP.RAONKEDITOR.browser.ie
      && f.focus(), a.body.focus(), d.focus())
    };
    c.onkeydown = function (b) {
      b = b ? b : f.event;
      var c = "which" in b ? b.which : b.keyCode,
          e = g ? KEDITORTOP.KEDITORWIN : f, m = g ? KEDITORTOP.KEDITORDOC : a,
          w = g ? h : d;
      b.shiftKey && 9 == c && (KEDITORTOP.RAONKEDITOR.util.cancelEvent(b), 0
      == KEDITORTOP.RAONKEDITOR.browser.ie
      && e.focus(), m.body.focus(), w.focus())
    };
    d.onkeydown = function (b) {
      b = b ? b : f.event;
      var d = "which" in b ? b.which : b.keyCode,
          e = g ? KEDITORTOP.KEDITORWIN : f, m = g ? KEDITORTOP.KEDITORDOC : a,
          w = g ? h : c;
      0 == b.shiftKey && 9 == d && (KEDITORTOP.RAONKEDITOR.util.cancelEvent(
          b), 0 == KEDITORTOP.RAONKEDITOR.browser.ie
      && e.focus(), m.body.focus(), w.focus())
    };
    h && (h.onkeydown = b)
  } catch (m) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(m)
  }
}

Z[25] = ".";
T[29] = "c";

function move_next_a_tag(a, c, b, d, e, f) {
  c.childNodes[b + e] && c.childNodes[b + e].childNodes[d + f]
  && (c.childNodes[b + e].childNodes[d + f].getElementsByTagName("a")[0]
  && c.childNodes[b + e].childNodes[d + f].getElementsByTagName(
      "a")[0].focus(), KEDITORTOP.RAONKEDITOR.util.cancelEvent(a))
}

K__ += "367";
T[30] = "t ";
Z[26] = "a";
K__ += "45";
SIL[4] = "a";

function removeFakeLineHeight(a) {
  if (KEDITORTOP.RAONKEDITOR.browser.ie && 8
      < KEDITORTOP.RAONKEDITOR.browser.ieVersion && 11
      >= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
    var c = "span strong i u strike sup sub".split(" "), b = c.length,
        d = KEDITORTOP.G_CURRKEDITOR._setting.line_height, e = d;
    -1 < d.indexOf("%") ? (e = parseInt(d, 10), d = e /= 100, e += .01) : 0
        > d.indexOf("px") && 0 > d.indexOf("pt") && 0 > d.indexOf("em")
        && (d = e = parseFloat(d), e += .01);
    for (var f = 0; f < b; f++) {
      for (var g = a.getElementsByTagName(c[f]),
          h = g.length, m = 0; m < h; m++) {
        g[m].style.lineHeight !=
        d && g[m].style.lineHeight != e || g[m].style.removeAttribute(
            "line-height")
      }
    }
  }
}

Z[27] = "s";
T[31] = "u";

function showRuler(a) {
  if (G_Ruler && G_Ruler.viewRulerStatus && "view" != a._config.mode) {
    var c = getEditorFrameDoc(a), b = G_Ruler.rulerPositionLen;
    G_Ruler.SettingInit();
    G_Ruler.SelectIcon();
    "1" == a._config.horizontalLine.use
    && (_iframeDoc.body.style.backgroundImage = "url("
        + a._config.horizontalLine.url
        + ")", _iframeDoc.body.style.backgroundRepeat = "0"
    == a._config.horizontalLine.repeat ? "repeat-x" : "repeat");
    if ("1" == a._config.ruler.useVertical) {
      var d = c.getElementById("keditor_ruler_vertical_" + a.ID);
      null != d && (d.style.display =
          "")
    }
    "1" == a._config.ruler.viewRuler
    && (G_Ruler.rulerArea.style.display = "", "2" == a._config.ruler.mode
    && (G_Ruler.rulerBottomArea.style.display = ""), resizeEditor(a));
    if ("1" == a._config.ruler.viewPointer) {
      for (d = 0; d < b; d++) {
        var e = c.getElementById("keditor_ruler_point_" + d + "_" + a.ID);
        e && (e.style.display = "")
      }
    }
    if ("1" == a._config.ruler.viewGuideLine) {
      for (d = 0; d < b;
          d++) {
        (e = c.getElementById("keditor_ruler_pointline_" + d + "_" + a.ID))
        && "1" == a._config.ruler.mode && (e.style.display = "");
      }
    }
    G_BodyFit.widthFixedStatus || G_BodyFit.SetBodyWidth();
    G_Ruler.SetRulerPosition()
  }
}

R[28] = "p";
C1[28] = "s";
C2[28] = "a";
S1[28] = "sp";
S2[28] = "a";

function hideRuler(a) {
  var c = getEditorFrameDoc(a), b = G_Ruler.rulerArea;
  if ("1" == a._config.ruler.use && null != b) {
    G_BodyFit.widthFixableStatus || (G_BodyFit.widthFixedStatus = !1);
    G_Ruler.SelectIcon();
    b.style.display = "none";
    "2" == a._config.ruler.mode
    && (G_Ruler.rulerBottomArea.style.display = "none");
    if ("1" == a._config.ruler.viewPointer) {
      for (var d = b.getElementsByTagName(
          "img"), e = d.length, b = 0; b < e; b++) {
        d[b].style.display = "none";
      }
    }
    if ("1" == a._config.ruler.viewGuideLine) {
      d = c.getElementById("keditor_ruler_pointline_div").getElementsByTagName(
          "div");
      e = d.length;
      for (b = 0; b < e; b++) {
        d[b].style.display = "none";
      }
      "2" == a._config.ruler.mode && ((b = c.getElementById(
          "keditor_ruler_pointline_4_" + a.ID)) && "none" != b.style.display
      && (b.style.display = "none"), c.getElementById(
          "keditor_ruler_pointline_3_" + a.ID).style.display = "none")
    }
    "1" == a._config.ruler.useVertical && (b = c.getElementById(
        "keditor_ruler_vertical_" + a.ID), null != b
    && (b.style.display = "none"), b = c.getElementById(
        "ue_editor_holder_" + a.ID), null != b && (b.style.marginLeft = "0px"));
    resizeEditor(a, !1)
  }
  "1" == a._config.horizontalLine.use &&
  (changeBodyImageProperty(!0), G_BodyFit.noncreationAreaBackgroundStatus
  && setBodyFitStyle(a, !0));
  "2" == a._config.horizontalLine.use && (a = c.getElementById(
      "keditor_horizontal_line_" + a.ID)) && (a.style.marginLeft = "0px");
  G_BodyFit.SetBodyWidth()
}

Z[28] = "p";
K__ += "+";
T[32] = "s.";
C1[29] = "p";
C2[29] = "s";
S2[29] = "sp";
var K__ = K__ + "/", _L__ = {
  _K: _R_O_ + K__, DE: function (a) {
    var c = "", b, d, e, f, g, h = 0;
    if (void 0 == a || null == a || "" == a) {
      return !1;
    }
    for (a = a.replace(/[^A-Za-z0-9\+\/\=]/g, "");
        h < a.length;) {
      b = this._K.indexOf(a.charAt(h++)), d = this._K.indexOf(
          a.charAt(h++)), f = this._K.indexOf(
          a.charAt(h++)), g = this._K.indexOf(
          a.charAt(h++)), b = b << 2 | d >> 4, d = (d & 15) << 4 | f
          >> 2, e = (f
          & 3) << 6 | g, c += String.fromCharCode(b), 64 != f
      && (c += String.fromCharCode(d)), 64 != g && (c += String.fromCharCode(
          e));
    }
    return c = _L__._utf8_d(c)
  }, _utf8_d: function (a) {
    for (var c = "", b = 0, d = c1 =
        c2 = 0; b < a.length;) {
      d = a.charCodeAt(b), 128 > d
          ? (c += String.fromCharCode(d), b++) : 191 < d && 224 > d
              ? (c2 = a.charCodeAt(b + 1), c += String.fromCharCode(
                  (d & 31) << 6 | c2 & 63), b += 2) : (c2 = a.charCodeAt(
                  b + 1), c3 = a.charCodeAt(b + 2), c += String.fromCharCode(
                  (d & 15) << 12 | (c2 & 63) << 6 | c3 & 63), b += 3);
    }
    return c
  }
};
C2[30] = "p";

function ClearPreViewContent(a) {
  a = a._EDITOR.preview.contentDocument ? a._EDITOR.preview.contentDocument
      : a._EDITOR.preview.contentWindow.document;
  for (var c = a.getElementsByTagName("embed"), b = c.length - 1; 0 <= b; b--) {
    var d = c[b];
    try {
      d.stop()
    } catch (e) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(e)
    }
  }
  a.body.innerHTML = ""
}

function setFocusFirstAndLast2(a, c) {
  try {
    a.onkeydown = function (a) {
      a = a ? a : window.event;
      var b = "which" in a ? a.which : a.keyCode;
      a.shiftKey && 9 == b && (KEDITORTOP.RAONKEDITOR.util.cancelEvent(
          a), c.focus())
    }, c.onkeydown = function (b) {
      b = b ? b : window.event;
      var c = "which" in b ? b.which : b.keyCode;
      0 == b.shiftKey && 9 == c && (KEDITORTOP.RAONKEDITOR.util.cancelEvent(
          b), a.focus())
    }
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
}

function setMatchSelectedValue(a) {
  try {
    var c = a.getElementsByTagName("select"), b = c.length;
    for (a = 0; a < b; a++) {
      for (var d = c[a].getElementsByTagName("option"), e = d.length, f = 0;
          f < e; f++) {
        1 == d[f].selected ? d[f].setAttribute("selected",
            "selected") : d[f].removeAttribute("selected");
      }
      if (KEDITORTOP.RAONKEDITOR.browser.ie && 9
          == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
        var g = c[a].outerHTML,
            h = RegExp('(<option[^>]+)(selected="")(.*?>)', "gi");
        h.test(g) && (g = g.replace(h, "$1$3"), c[a].outerHTML = g)
      }
    }
  } catch (m) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
    KEDITORTOP.RAONKEDITOR.logMode && console.log(m)
  }
}

function setMatchInputValue(a, c) {
  try {
    for (var b = a.getElementsByTagName("input"), d = b.length, e = 0; e < d;
        e++) {
      var f = b[e];
      if (-1
          < ",,text,date,time,datetime-local,number,month,range,color,tel,url,week,".indexOf(
              "," + f.type + ",")) {
        var g = f.value;
        "" == g || null != f.getAttribute("value") && g == f.getAttribute(
            "value") || f.setAttribute("value", g)
      }
    }
    for (var h = a.getElementsByTagName("textarea"), m = h.length, e = 0; e < m;
        e++) {
      var f = h[e], q = f.value;
      0 == KEDITORTOP.RAONKEDITOR.browser.ie ? "" == q || "" != f.innerHTML && q
          == f.innerHTML || (f.innerHTML =
              q) : 1 != c && "" == q && f.placeholder && "" != f.placeholder
          && (f.innerHTML = "")
    }
  } catch (t) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(t)
  }
}

function getBase64ImageCount(a) {
  var c = 0;
  try {
    var b = null;
    if (b = a ? a : KEDITORTOP.G_CURRKEDITOR) {
      var d = b._FRAMEWIN, e = b.getEditorMode();
      "source" != e && "text" != e || b.setChangeMode("design");
      d.ReplaceImageToRealObject();
      d.changeBodyContenteditable(!1);
      d.changeBodyImageProperty(!0);
      var f = b._DOC.body.outerHTML;
      a = "";
      var g = RegExp("<img[^>]*src=(.*?)>", "gi"),
          h = f.match(RegExp("<[^>]*url\\((.*?)\\)", "gi")), m = f.match(g);
      if (h) {
        for (var q = h.length, t = 0; t < q; t++) {
          a = h[t].match(
              "url\\((.*?)\\)")[1].replace(/"/gi, "").replace(/'/gi,
              "").replace(/&quot;/gi, ""), null != a && void 0 != a && "" != a
          && 0
          == a.indexOf("data:") && c++;
        }
      }
      if (m) {
        for (var u = m.length, t = 0; t < u; t++) {
          a = m[t].match(
              "src=\"(.*?)\"|src='(.*?)'")[1].replace(/"/gi, "").replace(/'/gi,
              ""), null != a && void 0 != a && "" != a && 0 == a.indexOf(
              "data:")
          && c++;
        }
      }
      G_BodyFit.noncreationAreaBackgroundStatus && d.setBodyFitStyle(b, !0);
      d.changeBodyImageProperty(!1);
      d.ReplaceRealObjectToImage();
      d.changeBodyContenteditable(!0)
    }
  } catch (v) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(v)
  }
  return c
}

function getBase64ImageCountEx(a) {
  var c = 0;
  try {
    var b = "", d = RegExp("<img[^>]*src=(.*?)>", "gi"),
        e = a.match(RegExp("<[^>]*url\\((.*?)\\)", "gi")), f = a.match(d);
    if (e) {
      for (var g = e.length, h = 0; h < g; h++) {
        b = e[h].match(
            "url\\((.*?)\\)")[1].replace(/"/gi, "").replace(/'/gi, "").replace(
            /&quot;/gi, ""), null != b && void 0 != b && "" != b && 0
        == b.indexOf(
            "data:") && c++;
      }
    }
    if (f) {
      for (var m = f.length, h = 0; h < m; h++) {
        b = f[h].match(
            "src=\"(.*?)\"|src='(.*?)'")[1].replace(/"/gi, "").replace(/'/gi,
            ""), null != b && void 0 != b && "" != b && 0 == b.indexOf("data:")
        &&
        c++
      }
    }
  } catch (q) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(q)
  }
  return c
}

function setEditorIframeTitle(a) {
  var c = "";
  isViewMode(a) ? c = RAONKEditor_lang.iframe_title.design : (c = "", "0"
  == a._config.top_menu && (c = RAONKEditor_lang.iframe_title.title_menu), "3"
  != a._config.tool_bar && (c += "" == c ? " - " : ", ", "0"
  == a._config.tool_bar
      ? (c += RAONKEditor_lang.iframe_title.title_tool1, c += ", "
          + RAONKEditor_lang.iframe_title.title_tool2) : "1"
      == a._config.tool_bar ? c += RAONKEditor_lang.iframe_title.title_tool2
          : "2" == a._config.tool_bar
          && (c += RAONKEditor_lang.iframe_title.title_tool1)), c += ("" == c
          ? " - " : ", ") +
      RAONKEditor_lang.iframe_title.title_text, "0" == a._config.status_bar
  && (c += ("" == c ? " - " : ", ")
      + RAONKEditor_lang.iframe_title.title_status), c += ", "
      + RAONKEditor_lang.iframe_title.title_help, c = RAONKEditor_lang.iframe_title.design
      + " - " + c);
  try {
    document.getElementById("keditor_design_" + a.ID).title = c
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
}

function setManagerParam(a, c) {
  for (var b = a, b = JSON.parse(a), d = c.length, e = 0; e < d;
      e++) {
    b[c[e][0]] = c[e][1];
  }
  return b = JSON.stringify(b)
}

function sendMessageToAgent(a, c, b, d, e, f) {
  f = f ? f : KEDITORTOP.G_CURRKEDITOR;
  "1" == f._config.sendToManagerType && "html4" != f._config.runtimes ? (a = {
    req: KEDITORTOP.RAONKEDITOR._manager.createManagerRequest(f),
    async: d ? !0 : !1,
    errorCallBack: b,
    successCallBack: c,
    data: a,
    url: e && "" != e ? e : KEDITORTOP.RAONKSolution.managerFinalUrl
  }, KEDITORTOP.RAONKEDITOR._manager.sendDataWidthAjax(a)) : (a = {
    managerParamStr: a,
    fn_success: c,
    frameId: KEDITORTOP.RAONKEDITOR.util.makeGuid()
  }, e && "" != e && (a.url = e), null == c
  && (a.frameId = KEDITORTOP.RAONKEDITOR.util.makeGuid()),
      sendManagerDataWithForm(a))
}

function closeInstallPopup(a, c) {
  void 0 == a && (a = KEDITORTOP.G_CURRKEDITOR);
  var b = getDialogDocument(a), d = getDialogWindow(a);
  try {
    b.getElementById("kupload_install_div") && b.getElementById(
        "kupload_install_div").parentNode.removeChild(
        b.getElementById("kupload_install_div"))
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
  try {
    b.getElementById("kupload_install_div_back") && b.getElementById(
        "kupload_install_div_back").parentNode.removeChild(
        b.getElementById("kupload_install_div_back"))
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
    KEDITORTOP.RAONKEDITOR.logMode && console.log(f)
  }
  try {
    KEDITORTOP.RAONKEDITOR.installGuideResizeEvt
    && KEDITORTOP.RAONKEDITOR.util.removeEvent(d, "resize",
        KEDITORTOP.RAONKEDITOR.installGuideResizeEvt)
  } catch (g) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(g)
  }
  if (!0 === c) {
    try {
      "function"
      === typeof KEDITORTOP.G_CURRKEDITOR._config.event.closeInstallPopup
          ? KEDITORTOP.G_CURRKEDITOR._config.event.closeInstallPopup(a.ID)
          : "function"
          === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_CloseInstallPopup &&
          KEDITORTOP.KEDITORWIN.RAONKEDITOR_CloseInstallPopup(a.ID)
    } catch (h) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(h)
    }
  }
}

function requestManagerInstall(a, c) {
  var b = c.createElement("iframe");
  b.name = "download_frame";
  b.id = "download_frame";
  b.style.display = "none";
  c.body.appendChild(b);
  b = c.createElement("form");
  b.target = "download_frame";
  b.action = a.KEDITORTOP.G_CURRKEDITOR._config.agentInstallFileUrl;
  c.body.appendChild(b);
  b.submit();
  c.body.removeChild(b)
}

function sendManagerDataWithForm(a) {
  document.getElementById(a.frameId) && document.getElementById(
      a.frameId).parentNode.removeChild(document.getElementById(a.frameId));
  var c = document.createElement("iframe");
  c.style.display = "none";
  c.id = a.frameId;
  document.body.appendChild(c);
  var b = KEDITORTOP.RAONKEDITOR.util.getDefaultIframeSrc();
  c.src = b;
  var d = c.contentWindow.document, c = getDocWindow(d),
      b = '<!doctype html><html lang="ko">', b = b + "<head>";
  KEDITORTOP.RAONKEDITOR.browser.isCustomDomain(document)
  && (b += '<script> document.domain = "' +
      document.domain + '"; \x3c/script>');
  b += "</head>";
  b += "<body>";
  b += '<form id="send_form" target="response_frame" method="post" action="'
      + (a.url && "" != a.url ? a.url
          : KEDITORTOP.RAONKSolution.managerFinalUrl) + '">';
  b += "</form>";
  b += '<iframe id="response_frame" name="response_frame"></iframe>';
  b += "</body>";
  b += "</html>";
  d.open("text/html", "replace");
  d.write(b);
  d.close();
  b = d.createElement("input");
  b.type = "hidden";
  b.value = a.managerParamStr;
  -1 < a.managerParamStr.indexOf("{") ? b.name = "k03" : b.name = "k01";
  d.getElementById("send_form").appendChild(b);
  d.getElementById("send_form").submit();
  KEDITORTOP.RAONKEDITOR.util.addEvent(c, "message", function (b) {
    if (0 == ("string" == typeof a.url && "" != a.url ? a.url
            : KEDITORTOP.RAONKSolution.managerFinalUrl).indexOf(b.origin)
        && (b = KEDITORTOP.RAONKEDITOR.util.trim(b.data), "" != b)) {
      clearInterval(e);
      try {
        document.getElementById(a.frameId).parentNode.removeChild(
            document.getElementById(a.frameId))
      } catch (c) {
        clearInterval(e)
      }
      a.fn_success && a.fn_success(b)
    }
  });
  var e = null;
  a.fn_success && (e = setInterval(function () {
    try {
      d.getElementById("response_frame").contentWindow.postMessage("",
          "*")
    } catch (a) {
      clearInterval(e)
    }
  }, 100))
}

function getManagerColorValue(a) {
  for (var c = {c1: 0, c2: 0, c3: 0, c4: 0}, b = 1; 3 >= b; b++) {
    c["c"
    + b] = KEDITORTOP.RAONKEDITOR.util.rgbToHex(G_ManagerColor[a]["c" + b]);
  }
  c.c4 = "white" == a ? "#313131" : "#ffffff";
  return c
}

function loadPluginJs(a, c) {
  if (G_KPlugin[a]) {
    c();
  } else {
    var b = _k_editor._config.webPath.plugin + a + "/js"
            + (KEDITORTOP.RAONKEDITOR.isRelease ? "" : "_dev") + "/kplugin.js?t="
            + KEDITORTOP.RAONKEDITOR.UrlStamp,
        d = document.getElementsByTagName("head")[0];
    if (!d || document.readyState && "complete"
        != document.readyState) {
      document.write(
          '<script src="' + b + '" type="text/javascript">\x3c/script>');
    } else {
      var e = document.createElement("script");
      e.type = "text/javascript";
      e.src = b;
      var f = function () {
        setTimeout(function () {
          var b = document.createElement("script");
          b.type = "text/javascript";
          b.src = _k_editor._config.webPath.plugin + a + "/js"
              + (KEDITORTOP.RAONKEDITOR.isRelease ? "" : "_dev") + "/lang/"
              + _k_editor._config.lang + ".js";
          d.appendChild(b)
        }, 0)
      };
      "undefined" !== typeof e.onreadystatechange
          ? e.onreadystatechange = function () {
            if ("loaded" == e.readyState || "complete"
                == e.readyState) {
              e.onreadystatechange = null, f(), c()
            }
          } : e.onload = function () {
            f();
            c()
          };
      e.onerror = function () {
        c()
      };
      d.appendChild(e)
    }
  }
}

function startAgentInstallFailCheck(a) {
  if (null != a.AgentInstallFailCheckTimeout) {
    try {
      clearTimeout(
          a.AgentInstallFailCheckTimeout), a.AgentInstallFailCheckTimeout = null
    } catch (c) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(c)
    }
  }
  a.AgentInstallFailCheckTimeout = setTimeout(function () {
    try {
      if (0 == KEDITORTOP.RAONKSolution.Agent.isLoaded) {
        1 == a._config.agentInstallFailCheck.stopInstallCheck
        && a.removeAgentInstallCheckImg(a.agentInstallCheckImgArr);
        var b = {
          strType: "install",
          strMessage: RAONKEditor_lang.msg.install_failed
        };
        try {
          if ("function"
              === typeof KEDITORTOP.G_CURRKEDITOR._config.event.onError) {
            KEDITORTOP.G_CURRKEDITOR._config.event.onError(
                a.ID, b);
          } else {
            "function"
            === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_OnError
            && KEDITORTOP.KEDITORWIN.RAONKEDITOR_OnError(a.ID, b)
          }
        } catch (c) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(c)
        }
      }
    } catch (e) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(e)
    }
  }, 1E3 * a._config.agentInstallFailCheck.time)
}

function __0_(a) {
  var c = !1;
  a = a.split("-");
  3 != a.length && 4 != a.length || isNaN(a[0]) || isNaN(a[1]) || isNaN(a[2])
  || (c = !0);
  return c
}

function installGuideLoadedPage(a) {
  var c = KEDITORTOP.G_CURRKEDITOR;
  setZoomValueToBody(a.document, c);
  var b = c._config;
  b.autoSetZoom && "1" == b.autoSetZoom.use
  && KEDITORTOP.RAONKEDITOR.util.addEvent(a, "resize", function () {
    setZoomValueToBody(a.document, c)
  })
}

function changeFontFamily(a) {
  -1 < a.indexOf(".") && (a = a.replace(/"/, ""), a = a.replace(/'/,
      ""), a = "'" + a + "'");
  return a
}

function FileValidator(a) {
  this.options = a;
  this.passedFiles = [];
  this.checkFiles = [];
  this.result = [];
  this.filtered = {};
  this.getFilteredData = function (a) {
    var b = null;
    if ("string" == typeof a && "" != a) {
      this.filtered[a]
      && (b = this.filtered[a]);
    } else {
      a = !1;
      for (p in this.filtered) {
        if (null != this.filtered[p]) {
          a = !0;
          break
        }
      }
      a && (b = this.filtered)
    }
    return b
  };
  this.callback = function (a, b) {
    var d = [], e = this.getFilteredData(b), f = !0;
    !1 === this.options.resultContainsNull && (f = !1);
    for (var g = 0; g < this.result.length; g++) {
      var h = this.result[g];
      null ==
      h ? !0 === f && d.push(h) : d.push(h)
    }
    a(d, e)
  };
  this.init = function () {
    if ("undefined" == typeof this.options.files[0].realIndex) {
      for (var a = 0; a < this.options.files.length;
          a++) {
        this.options.files[a].realIndex = a;
      }
      this.checkFiles = this.options.files
    } else {
      this.checkFiles = this.passedFiles, this.passedFiles = []
    }
  };
  this.addFilteredFiles = function (a, b) {
    if (null == this.filtered[a] || void 0
        == this.filtered[a]) {
      this.filtered[a] = [];
    }
    this.filtered[a].push({fileName: this.options.files[b].name});
    this.result[b] = null
  };
  this.addPassedFiles = function (a) {
    if (null ==
        a) {
      for (a = 0; a < this.checkFiles.length;
          a++) {
        this.result[this.checkFiles[a].realIndex] = this.checkFiles[a];
      }
      this.passedFiles = this.checkFiles
    } else {
      this.result[a.realIndex] = a, this.passedFiles.push(a)
    }
  };
  this.extensionCheck = function (a) {
    var b = this.options.allowExtArray;
    this.init();
    if (0 < this.checkFiles.length && b && 0
        < b.length) {
      for (var d = this.checkFiles, e = d.length, f = 0; f < e;
          f++) {
        for (var g = KEDITORTOP.RAONKEDITOR.util.getExtensionFromFileName(
            d[f].name), h = b.length, m = !1, q = 0; q < h;
            q++) {
          if (g.toLowerCase() == b[q].toLowerCase()) {
            m =
                !0;
            break
          }
        }
        0 == m ? this.addFilteredFiles("extensionLimit", d[f].realIndex)
            : this.addPassedFiles(d[f])
      }
    } else {
      this.addPassedFiles(null);
    }
    this.callback(a, "extensionLimit")
  };
  this.maxSizeCheck = function (a) {
    var b = this;
    b.init();
    var d = b.options.maxSize, e = function () {
      for (var e = b.checkFiles, f = e.length, g = 0; g < f;
          g++) {
        KEDITORTOP.RAONKEDITOR.util.parseIntOr0(e[g].size) > d
            ? b.addFilteredFiles("maxSize", b.checkFiles[g].realIndex)
            : b.addPassedFiles(b.checkFiles[g]);
      }
      b.callback(a, "maxSize")
    };
    if (0 < b.checkFiles.length && "number" == typeof d &&
        0 < d) {
      var f = b.checkFiles, g = f.length;
      if ("number" != typeof f[0].size) {
        for (var h = {path: []}, m = 0; m < g; m++) {
          h.path.push(f[m].path);
        }
        executeKC10(h, function (a) {
          a = a.result;
          for (var b = a.length, c = 0; c < b; c++) {
            f[c].size = a[c];
          }
          e()
        })
      } else {
        e()
      }
    } else {
      b.addPassedFiles(null), b.callback(a, "maxSize")
    }
  };
  this.extensionDetect = function (a) {
    var b = this;
    b.init();
    var d = b.options.editor, e = b.options.extensionDetector, f = b.checkFiles,
        g = function (d) {
          var e = f[d], h = e.fileObj,
              u = KEDITORTOP.RAONKEDITOR.util.getExtensionFromFileName(e.name);
          D5FileDetector(h,
              u, function (h, t, u) {
                0 == u ? b.addFilteredFiles("extensionDetect", e.realIndex)
                    : b.addPassedFiles(e);
                d++;
                d < f.length ? g(d) : b.callback(a, "extensionDetect")
              })
        }, h = function () {
          for (var d = {path: []}, e = f.length, g = 0; g < e; g++) {
            d.path.push(
                f[g].path);
          }
          executeKC10_kp2(d, function (d) {
            d = d.result;
            for (var e = d.length, g = 0; g < e; g++) {
              1
              == KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d[g]) ? b.addFilteredFiles(
                  "extensionDetect", f[g].realIndex) : b.addPassedFiles(f[g]);
            }
            b.callback(a, "extensionDetect")
          })
        };
    0 < f.length && "string" == typeof e && "1" == e ? "1" ==
    d._config.useKManager ? h() : g(0) : (b.addPassedFiles(null), b.callback(a,
        "extensionDetect"))
  };
  this.base64CountCheck = function (a) {
    this.init();
    var b = this.options.editor, d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        this.options.base64ImageMaxCount), e = this.checkFiles, f = e.length;
    if (0 < f && "base64" == b._config.uploadMethod && "number" == typeof d && 0
        < d) {
      for (var b = getBase64ImageCount(), g = 0; g < f; g++) {
        var h = e[g].realIndex;
        b + (g + 1) > d ? this.addFilteredFiles("base64MaxCount", h)
            : this.addPassedFiles(e[g])
      }
    } else {
      this.addPassedFiles(null);
    }
    this.callback(a, "base64MaxCount")
  };
  this.changeImageQuality = function (a) {
    var b = this;
    b.init();
    var d = b.options.qualityOptions, e = b.options.editor, f = 1;
    d && "number" == typeof d.quality && (f = d.quality);
    var g = function (a, c) {
      (a.isChangedQuality = c) && (b.checkFiles[m] = a);
      b.addPassedFiles(a);
      t()
    }, h = function (a, b) {
      var c = !1,
          c = "" == d.extension ? !0 : -1 < d.extension.split(",").indexOf(
              b.toLowerCase()) ? !0 : !1, e = !1,
          e = a > d.overFileSize || 0 == d.overFileSize ? !0 : !1;
      return c && e ? !0 : !1
    }, m = -1, q = b.checkFiles, t = function () {
      m++;
      m < q.length ? w() :
          b.callback(a)
    }, u = function (a, b, c) {
      c ? a.base64 = b : (b = KEDITORTOP.RAONKEDITOR.util.dataURItoBlob(
          b), c = KEDITORTOP.RAONKEDITOR.util.getExtensionFromFileName(
          a.fileObj.name), "jpeg" != c && "jpg" != c ? (c = getFileName(
              a.fileObj.name, !0), b.name = c + ".jpg")
          : b.name = a.fileObj.name, a.fileObj = null, a.fileObj = void 0, a.fileObj = b, a.name = b.name, a.size = b.size);
      return a
    }, v = function (a, b) {
      var c = !0;
      KEDITORTOP.RAONKEDITOR.util.dataURItoBlob(a).size >= b.size && (c = !1);
      return c
    }, w = function () {
      var a = q[m];
      if ("1" == e._config.useKManager) {
        var b =
                a.size,
            c = KEDITORTOP.RAONKEDITOR.util.getExtensionFromFileName(a.path);
        (b = h(b, c)) ? executeKC04({path: [a.path], quality: f}, function (b) {
          b = b.result;
          if (null == b[0]) {
            g(a, !1);
          } else {
            var c = b[0].size;
            c >= a.size ? g(a, !1) : (a.path = b[0].path, a.size = c, g(a, !0))
          }
        }) : g(a, !1)
      } else {
        var d = !1, t = "object" == typeof a.fileObj ? a.fileObj : null;
        null == t && "string" == typeof a.base64 && "" != a.base64
        && (d = !0, t = KEDITORTOP.RAONKEDITOR.util.dataURItoBlob(a.base64));
        if (null == t) {
          g(a, !1);
        } else if (b = t.size, c = "string"
        == typeof t.name ? KEDITORTOP.RAONKEDITOR.util.getExtensionFromFileName(
                t.name) :
            t.type.replace("image/", ""), c = c.toLowerCase(), b = h(b, c)) {
          var w = new Image;
          w.onload = function () {
            try {
              (window.URL || window.webkitURL || window).revokeObjectURL(
                  this.src)
            } catch (b) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(b)
            }
            canvasBugFix(w);
            var e = document.getElementById("keditor_imageCanvas"),
                h = e.getContext("2d");
            e.width = w.width;
            e.height = w.height;
            h.fillStyle = "#fff";
            h.fillRect(0, 0, e.width, e.height);
            h.drawImage(w, 0, 0);
            var q = e.toDataURL("image/jpeg", f);
            w = null;
            w = void 0;
            if ("jpg" ==
                c || "jpeg" == c) {
              e = 65636;
              e > t.size && (e = t.size);
              var m;
              m = t.mozSlice ? t.mozSlice(0, e) : t.webkitSlice ? t.webkitSlice(
                  0, e) : t.slice(0, e);
              e = new FileReader;
              e.onload = function (b) {
                m = null;
                b = b.target.result;
                -1 < b.indexOf("data:application/octet-stream")
                && (b = b.replace("data:application/octet-stream",
                    "data:image/jpeg"));
                var c = null, e = null;
                try {
                  c = piexif.load(b)
                } catch (f) {
                  c = null
                }
                if (c) {
                  try {
                    KEDITORTOP.RAONKEDITOR.browser.ie || (c["0th"][274] && 1
                    != c["0th"][274] ? c["0th"][274] = 1 : c["1st"][274] && 1
                        != c["1st"][274] && (c["1st"][274] = 1)), c =
                        piexif.dump(c), e = piexif.insert(c, q)
                  } catch (h) {
                    e = null
                  }
                }
                null != e && (q = e);
                (b = v(q, a.fileObj)) ? (c = u(a, q, d), g(c, b)) : g(a, !1)
              };
              e.readAsDataURL(m)
            } else {
              (e = v(q, a.fileObj)) ? (h = u(a, q, d), g(h, e)) : g(a, !1)
            }
          };
          w.onerror = function () {
            w = null;
            w = void 0;
            addResultData(a, !1)
          };
          b = (window.URL || window.webkitURL || window).createObjectURL(
              a.fileObj);
          w.src = b
        } else {
          g(a, !1)
        }
      }
    };
    0 < q.length && 1 > f ? t() : (b.addPassedFiles(null), b.callback(a))
  };
  this.setImageWidthHeight = function (a) {
    var b = this;
    b.init();
    var d = -1, e = b.checkFiles, f = function (a, c) {
      c && (b.checkFiles[d] =
          a);
      b.addPassedFiles(a)
    }, g = function () {
      d++;
      d < e.length ? h(d) : b.callback(a)
    }, h = function (a) {
      var b = e[a];
      if ("number" != typeof b.width || "number" != typeof b.height) {
        var c = b.fileObj, d = b.url;
        if (c) {
          var c = (window.URL || window.webkitURL || window).createObjectURL(c),
              h = new Image;
          h.onload = function () {
            1 == KEDITORTOP.G_CURRKEDITOR.hasClipSvgText
                ? (e[a].width = getChangedSizeForPPTImage(
                    this.width), e[a].height = getChangedSizeForPPTImage(
                    this.height))
                : (e[a].width = this.width, e[a].height = this.height);
            h = null;
            h = void 0;
            f(b, !0);
            g()
          };
          h.onerror = function () {
            h = null;
            h = void 0;
            f(b, !1);
            g()
          };
          h.src = c
        } else {
          "string" == typeof d ? (h = new Image, h.onload = function () {
            1 == KEDITORTOP.G_CURRKEDITOR.hasClipSvgText
                ? (e[a].width = getChangedSizeForPPTImage(
                    this.width), e[a].height = Math.getChangedSizeForPPTImage(
                    this.height))
                : (e[a].width = this.width, e[a].height = this.height);
            h = null;
            h = void 0;
            f(b, !0);
            g()
          }, h.onerror = function () {
            h = null;
            h = void 0;
            f(b, !1);
            g()
          }, h.src = d) : (f(b, !1), g())
        }
      } else {
        g()
      }
    };
    0 < e.length ? g() : (b.addPassedFiles(null), b.callback(a))
  };
  this.allCheck = function (a) {
    var b =
        this;
    b.extensionCheck(function () {
      b.maxSizeCheck(function () {
        b.base64CountCheck(function () {
          b.extensionDetect(function () {
            b.changeImageQuality(function () {
              b.callback(a)
            })
          })
        })
      })
    })
  };
  this.showFilteredMessage = function (a, b) {
    var d = a.maxSize, e = a.extensionLimit, f = a.extensionDetect,
        g = a.base64MaxCount, h = "", m = function (a, c) {
          if (!1 === b) {
            h += c + "\n";
          } else if (1 < a.length) {
            var d = RAONKEditor_lang.msg.multi_file_validation_error.replace("{0}",
                a[0].fileName), d = d.replace("{1}", (a.length - 1).toString());
            h += d + c + "\n"
          } else {
            h += a[0].fileName +
                " : " + c + "\n"
          }
        };
    if (d) {
      var q = RAONKEditor_lang.msg.max_file_size.replace("{0}",
          KEDITORTOP.RAONKEDITOR.util.bytesToSize(
              this.options.maxSize).toString);
      m(d, q)
    }
    e && (q = this.options.allowExtArray.toString()
        + RAONKEditor_lang.msg.alert_exec_tail, m(e, q));
    f && (q = RAONKEditor_lang.msg.message_file_ext_detect, m(f, q));
    g && (q = RAONKEditor_lang.msg.max_base64file_count.replace("{0}",
        this.options.base64ImageMaxCount), m(g, q));
    "" != h && alert(h)
  }
}

FileValidator.prototype.extensionCheck = function (a) {
  this.extensionCheck(a)
};
FileValidator.prototype.maxSizeCheck = function (a) {
  this.maxSizeCheck(a)
};
FileValidator.prototype.extensionDetect = function (a) {
  this.extensionDetect(a)
};
FileValidator.prototype.base64CountCheck = function (a) {
  this.base64CountCheck(a)
};
FileValidator.prototype.changeImageQuality = function (a) {
  this.changeImageQuality(a)
};
FileValidator.prototype.setImageWidthHeight = function (a) {
  this.setImageWidthHeight(a)
};
FileValidator.prototype.allCheck = function (a) {
  this.allCheck(a)
};
FileValidator.prototype.showFilteredMessage = function (a, c) {
  this.showFilteredMessage(a, c)
};

function fileObjectToBase64(a, c) {
  var b = !0 === a.getWidthHeight, d = {result: []}, e = -1, f = a.files,
      g = function () {
        e++;
        e < f.length ? h(e) : c(d)
      }, h = function (a) {
        a = f[a].fileObj;
        var c = new FileReader;
        c.onload = function () {
          var a = {base64: c.result};
          if (b) {
            var e = new Image;
            e.onload = function () {
              a.width = e.width;
              a.height = e.height;
              e = null;
              e = void 0;
              d.result.push(a);
              g()
            };
            e.src = srcValue
          } else {
            d.result.push(a), g();
          }
          c = void 0
        };
        c.onerror = function () {
          d.result.push(null);
          c = void 0;
          g()
        };
        c.readAsDataURL(a)
      };
  0 < a.files.length ? g() : c(d)
}

function parseImageUrlFromHandler(a) {
  var c = {
    url: "",
    originalWidth: 0,
    originalHeight: 0,
    isBase64: !1,
    imgAttrInfoArr: []
  };
  c.isBase64 = 0 == a.toLowerCase().indexOf("data:image/");
  0 == c.isBase64 && (a = a.replace(/\r\n/g, ""), a = a.replace(/\n/g,
      ""), a = a.replace(/\t/g, ""), a = web_url_remove_char(a));
  var b = [];
  if ("0" != KEDITORTOP.G_CURRKEDITOR._config.imageCustomPropertyDelimiter
      && (b = a.split(
          KEDITORTOP.G_CURRKEDITOR._config.imageCustomPropertyDelimiter), 1
      < b.length)) {
    a = b[0];
    for (var d = 1; d < b.length; d++) {
      var e = b[d].split("^");
      c.imgAttrInfoArr.push({name: e[0], value: e[1]})
    }
  }
  b = a.split("?");
  2 == b.length && (a = b[0], d = b[1].split("^"), 1 == d.length ? a += "?"
      + b[1] : 2 == d.length
      ? (c.originalWidth = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          d[0]), c.originalHeight = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          d[1])) : 3 == d.length
      && (c.originalWidth = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          d[0]), c.originalHeight = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          d[1]), a += "?" + d[2]));
  c.url = a;
  return c
}

function getImagesInfoInHtml(a) {
  var c = [], b = a.getElementsByTagName("img"), d = [];
  if (a.querySelectorAll) {
    d = a.querySelectorAll('[style*="url("]');
  } else {
    var e = "", e = 9 == a.nodeType ? a.documentElement.innerHTML : a.innerHTML,
        f = "", g = /<table [^>]*url\((.*?)\)/i;
    g.test(e) && (f += ",table");
    g = /<td [^>]*url\((.*?)\)/i;
    g.test(e) && (f += ",td");
    g = /<th [^>]*url\((.*?)\)/i;
    g.test(e) && (f += ",th");
    g = /<div [^>]*url\((.*?)\)/i;
    g.test(e) && (f += ",div");
    g = /<body [^>]*url\((.*?)\)/i;
    g.test(e) && (f += ",body");
    if (0 < f.length) {
      for (f = f.substring(1),
          e = f.split(","), f = e.length, g = 0; g < f; g++) {
        var h = a.getElementsByTagName(e[g]);
        htmlCollectionToArray(d, h)
      }
    }
  }
  c = htmlCollectionToArray(c, b);
  return c = htmlCollectionToArray(c, d)
}

function htmlCollectionToArray(a, c) {
  try {
    a = a.concat(Array.prototype.slice.call(c, 0))
  } catch (b) {
    for (var d = c.length, e = 0; e < d; e++) {
      a.push(c[e])
    }
  }
  return a
};

function setContextMenu(a, c) {
  KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
  "1" == KEDITORTOP.G_CURRKEDITOR._config.usePasteToolbarAndContext
  && checkImageInNavigatorClipboard ? checkImageInNavigatorClipboard().then(
      function (b) {
        KEDITOR_CONTEXT.show(a, b.checked)
      }) : KEDITOR_CONTEXT.show(a, "")
}

var KEDITOR_CONTEXT = {
  _reverse: !1,
  _context_id: "",
  _context_iframe: null,
  _context_zIndex: 0,
  _context_bg_zIndex: 0,
  _context_document: null,
  _context_main: null,
  _context_sub: null,
  _context_bg: null,
  _context_bg_id: "",
  _width: "",
  _height: "0",
  _item_disabled_list: [],
  _item_sub_list: {
    table_copy_paste: ["table_copy", "", "intable_paste",
      "table_content_paste"],
    table_copy_paste2: ["table_copy", "table_content_paste"],
    table_copy_paste3: ["intable_paste", "table_content_paste"],
    table_insert: ["insert_row_up", "insert_row_down", "insert_column_left",
      "insert_column_right"],
    table_select: ["table_select_cell", "table_select_all", "",
      "table_select_row", "table_select_column"],
    align_vertical: ["valign_up", "valign_center", "valign_baseline",
      "valign_bottom"],
    cell_size: ["table_same_width", "table_same_height",
      "table_same_widthheight"],
    table_row_column: "table_row_clone  insert_row_column insert_row_up insert_row_down insert_column_left insert_column_right  insert_table_top_paragraph insert_table_bottom_paragraph".split(
        " "),
    delete_table_and_row_column: ["table_delete",
      "delete_row", "delete_column"],
    delete_row_column: ["delete_row", "delete_column"],
    table_row_column_cell_property: ["table_property", "cell_property",
      "row_property", "column_property"],
    table_row_column_cell_property2: ["table_property", "cell_property"],
    table_row_column_cell_property3: ["cell_property"],
    table_tool: ["table_adjust", "convert_table_to_text"],
    calculation_formula: ["horizontal_sum", "vertical_sum", "horizontal_avg",
      "vertical_avg"]
  },
  _non_image_item: " table_select cell_size insert_row insert_column align_vertical table_insert table_select select_column select_row select_cell table_tool table_tool paste_to_image paste_to_image_detail calculation_formula table_copy_paste table_copy_paste2 table_row_column delete_table_and_row_column delete_row_column table_row_column_cell_property table_row_column_cell_property2 table_row_column_cell_property".split(
      " "),
  _create: function (a) {
    if (a && "" != a) {
      var c = KEDITORTOP.RAONKEDITOR.util._setEditor(a);
      c && (KEDITORTOP.G_CURRKEDITOR = c)
    }
    getDialogWindow();
    c = getDialogDocument();
    (a = c.getElementById("keditor_context_iframe" + a))
    && a.parentNode.removeChild(a);
    this._context_id = "keditor_context_iframe"
        + KEDITORTOP.G_CURRKEDITOR._config.editor_id;
    this._context_bg_id = "keditor_context_background"
        + KEDITORTOP.G_CURRKEDITOR._config.editor_id;
    this._context_zIndex = G_MAIN_ZINDEX + 2E3;
    this._context_bg_zIndex = G_MAIN_ZINDEX + 1E3;
    if (a = c.getElementById(this._context_id)) {
      _context_document =
          a.contentWindow.document, this._context_iframe = a, this._context_document = _context_document, this._context_main = _context_document.getElementById(
          "ul_context_main"), this._context_sub = _context_document.getElementById(
          "ul_context_sub");
    } else {
      try {
        a = c.createElement("iframe")
      } catch (b) {
        a = c.createElement("<iframe>")
      }
      c.body.appendChild(a);
      a.id = this._context_id;
      a.title = "RAON K Editor Context "
          + KEDITORTOP.G_CURRKEDITOR._config.editor_id;
      a.style.margin = "0px";
      a.style.padding = "0px";
      a.style.zIndex = this._context_zIndex;
      a.style.position = "absolute";
      a.scrolling = "no";
      a.style.overflow = "auto";
      a.style.overflowX = "hidden";
      a.style.display = "none";
      a.allowTransparency = "true";
      a.frameBorder = "0";
      c = "document.open();" + (isCustomDomain(document) ? 'document.domain="'
          + document.domain + '";' : "") + " document.close();";
      c = KEDITORTOP.RAONKEDITOR.browser.ie && 12
      > KEDITORTOP.RAONKEDITOR.browser.ieVersion ? "javascript:void(function(){"
          + encodeURIComponent(c) + "}())" : "";
      a.src = c;
      var c = "", c = KEDITORTOP.RAONKEDITOR.isRelease
              ? KEDITORTOP.G_CURRKEDITOR._config.webPath.css :
              KEDITORTOP.G_CURRKEDITOR._config.webPath.css_dev,
          d = "editor_context.css";
      "ko-kr" != KEDITORTOP.G_CURRKEDITOR._config.lang && (d = "editor_context_"
          + KEDITORTOP.G_CURRKEDITOR._config.lang + ".css");
      var e = KEDITORTOP.G_CURRKEDITOR._config.lang;
      -1 < e.indexOf("-") && (e = e.split("-")[0]);
      e = "" + ('<html lang="' + e + '" xml:lang="' + e + '"><head>')
          + ("<title>RAON K Editor Context "
              + KEDITORTOP.G_CURRKEDITOR._config.editor_id + "</title>");
      e += '<link rel="stylesheet" type="text/css" href="' + c + d + "?t="
          + KEDITORTOP.RAONKEDITOR.UrlStamp +
          '" charset="utf-8">';
      "1" == KEDITORTOP.G_CURRKEDITOR._config.customCssUrlDetailApply
      && (e += '<link rel="stylesheet" type="text/css" href="'
          + KEDITORTOP.G_CURRKEDITOR._config.style.customCssUrl + "?t="
          + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">');
      e += '<link rel="stylesheet" type="text/css" href="' + c + "editor_"
          + KEDITORTOP.G_CURRKEDITOR._config.style.iconName + ".css?t="
          + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">';
      e += "</head>";
      e += '<body scroll="no" style="overflow-x:hidden; overflow-y:hidden; margin:0px; padding:0px; background-color:transparent;" oncontextmenu="return false">';
      e += '<div onselectstart="return false;" style="width:100%; height:100%" id="context_iframe_bg">';
      e += '<div class="K_EDitoR_popup">';
      e += '<div id="div_main_context" class="K_EDitoR_EDP">';
      e += '<div class="KEd_popup K_edITor_'
          + KEDITORTOP.G_CURRKEDITOR._config.style.skinName
          + '" id="div_main_context_skin1">';
      e += '<dl id="ul_context_main"></dl>';
      e += "</div>";
      e += "</div>";
      e += '<div class="K_EDitoR_EDP_s" id="div_sub_context" style="display:none; position:relative;">';
      e += '<div class="KEd_popup K_edITor_'
          + KEDITORTOP.G_CURRKEDITOR._config.style.skinName +
          '" id="div_main_context_skin2">';
      e += '<dl id="ul_context_sub"></dl>';
      e += "</div>";
      e += "</div>";
      e += "</div>";
      e += "</div>";
      e += '<iframe style="HEIGHT: 100%; WIDTH: 100%; POSITION: absolute; LEFT: 0px; FILTER: alpha(opacity = 0); Z-INDEX: -1; DISPLAY: block; TOP: 0px" frameBorder="0" scrolling="no" tabkey="-1" title="RAON K Editor Context Iframe"></iframe>';
      e += "</body></html>";
      _context_document = a.contentWindow.document;
      _context_document.open("text/html", "replace");
      isCustomDomain(document) && (_context_document.domain =
          document.domain);
      _context_document.write(e);
      _context_document.close();
      this._context_iframe = a;
      this._context_document = _context_document;
      this._context_main = _context_document.getElementById("ul_context_main");
      this._context_sub = _context_document.getElementById("ul_context_sub");
      var f = this;
      a = function () {
        return function (a) {
          f.hide()
        }
      }();
      KEDITORTOP.RAONKEDITOR.util.addEvent(
          this._context_document.getElementById("context_iframe_bg"), "click",
          a);
      KEDITORTOP.RAONKEDITOR.util.addEvent(
          this._context_document.getElementById("context_iframe_bg"),
          "contextmenu", a);
      KEDITORTOP.RAONKEDITOR.util.addEvent(_context_document, "dragover",
          function (a) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return !1
          });
      KEDITORTOP.RAONKEDITOR.util.addEvent(_context_document, "drop",
          function (a) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return !1
          })
    }
    this._context_main.innerHTML = "";
    this._context_sub.innerHTML = ""
  },
  _setMenu: function (a, c) {
    var b = a.tagName.toLowerCase(), d = "default", e = getFirstRange(),
        f = e.range;
    if ("a" == b || "video" == b) {
      var g = getFirstRange().sel;
      g.removeAllRanges();
      f.selectNode(a);
      g.addRange(f)
    }
    var h = !0;
    try {
      KEDITORTOP.KEDITORWIN != top && (h = !1)
    } catch (m) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(m)
    }
    h && setFocusTopWindow();
    var h = !1, g = KEDITORTOP.G_CURRKEDITOR._config.tableNoActionClass,
        q = GetTableSelectionCells();
    if (0 < q.length) {
      "" != g && (h = GetParentbyTagName(q[0], "table"), h = checkContainClass(
          h, g));
      if (1
          == q.length) {
        d = "selectedSingleCell";
      } else {
        for (var d = "selectedMultiCell",
            t = !1, g = 0; g < q.length - 1; g++) {
          q[g].tagName != q[g + 1].tagName
          && (t = !0);
        }
      }
      KEDITORTOP.RAONKEDITOR.browser.ie && (e.sel.removeAllRanges(), setTimeout(
          function () {
            doSetCaretPosition(
                getMyFirstOrLastChildElementNode(q[q.length - 1]), 0)
          }, 1))
    } else {
      var u = f ? f.toString() : "";
      "video" == b && (u = "");
      0 < u.length && "select" != b && "textarea" != b ? "table" == b ? ("" != g
      && (h = checkContainClass(a,
          g)), d = "focustable", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a, setSelectoinElement(
          a)) : "a" == b ? (d = a.getAttribute("KEditorInsertFile"), d = ""
      == a.href && a.name == a.id ? "focusbookmark" : "" == d
          ? "focusinsertfile"
          : "focusa", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT =
          a, setSelectoinElement(a)) : (g = e.sel) && g.docSelection
      && "Control" == g.docSelection.type ? d = "selectTable"
          : (d = "selectArea", setSelectoinElement(null)) : "img" == b
          ? (b = a.getAttribute("keditorcustomdata"), null != b && void 0 != b
              ? (b = getKEditorCustomData(b), "iframe" == b.type
                  ? (d = "focusiframe", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a)
                  : "flash" == b.type
                      ? (d = "focusflash", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a)
                      : "media" == b.type
                          ? (d = "focusmedia", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a)
                          : "link_media" == b.type ? (d = "focuslinkmedia",
                                  KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a)
                              : "hidden" == b.type
                                  ? (d = "input_hidden", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a)
                                  : "video_media" == b.type
                                  && (d = "focusVideo", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a))
              : (G_KPlugin[a.getAttribute("raon_plugin")]
                  ? d = "focusPluginImage" : a.getAttribute("raon_chart")
                  && G_KPlugin.chart ? (d = "focusPluginImage", a.setAttribute(
                          "raon_plugin", "chart"))
                      : d = "focusImage", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a, KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT = a), setSelectoinElement(
              a)) :
          "a" == b ? (d = a.getAttribute("KEditorInsertFile"), d = "" == a.href
          && a.name == a.id ? "focusbookmark" : "" == d ? "focusinsertfile"
              : "focusa", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a, setSelectoinElement(
              a)) : "table" == b ? ("" != g && (h = checkContainClass(a,
              g)), d = "focustable", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a, setSelectoinElement(
              a)) : "embed" == b
              ? (d = "focusEmbed", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a, setSelectoinElement(
                  a)) : "td" == b || "th" == b ? ("" != g
              && (h = GetParentbyTagName(a, "table"), h = checkContainClass(h,
                  g)), d = null !=
              KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
              && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_ResizeHandlerActivatedFlag
                  ? "selectResizeTable" : "focustd") : "input" == b ? (""
              == a.type || "text" == a.type || "password" == a.type
                  ? d = "input_textfield" : "radio" == a.type
                      ? d = "input_radio" : "checkbox" == a.type
                          ? d = "input_checkbox" : "button" == a.type || "reset"
                          == a.type || "submit" == a.type ? d = "input_button"
                              : "hidden" == a.type ? d = "input_hidden"
                                  : "image" == a.type
                                  && (d = "input_image"), setSelectoinElement(
                  a), KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT =
                  a) : "select" == b ? (d = "input_select", setSelectoinElement(
                      a), KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a)
                  : "textarea" == b
                      ? (d = "input_textarea", setSelectoinElement(
                          a), KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a)
                      : "video" == b
                          ? (d = "focusVideo", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a, setSelectoinElement(
                              a)) : "span" == b ? "raon_placeholder"
                              == a.className
                              && (d = "placeholder", KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a, setSelectoinElement(
                                  a))
                              : (d = "default", g = getFirstRange().sel, g.removeAllRanges(), g.addRange(
                                  f))
    }
    b = [];
    this._item_disabled_list = [];
    switch (d) {
      case "default":
        b = "paste cut copy  table_paste  paragraph_attribute  select_all  hyperlink_create".split(
            " ");
        KEDITORTOP.G_CURRKEDITOR.isUseApplyFormat && b.splice(6, 0,
            "format_painter");
        c ? "1" != KEDITORTOP.G_CURRKEDITOR._config.pasteToImage && b.splice(1,
            0, "paste_to_image") : 1 == KEDITORTOP.G_CURRKEDITOR.canPasteToImage
            && "1" != KEDITORTOP.G_CURRKEDITOR._config.pasteToImage && b.splice(
                1, 0, "paste_to_image");
        this._item_disabled_list = ["cut", "copy"];
        null == KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA &&
        this._item_disabled_list.push("table_paste");
        this._height = "150px";
        this._width = "200px";
        break;
      case "selectArea":
        b = "paste cut copy  paragraph_attribute  select_all".split(" ");
        if ((t = GetParentbyTagName(a, "div")) && t.className
            && "keditor_Page_Break" == t.className) {
          b = [], b.push(
              "delete_pagebreak");
        } else {
          KEDITORTOP.G_CURRKEDITOR.isUseApplyFormat && b.splice(4, 0,
              "apply_format");
          t = !0;
          g = !1;
          if (KEDITORTOP.RAONKEDITOR.browser.ie) {
            try {
              var v = getNodesInRange(f);
              if (9 == v[0].nodeType) {
                if (f.startContainer == f.endContainer && 3 ==
                    f.startContainer.nodeType && 3 == f.endContainer.nodeType) {
                  var w = GetParentbyTagName(f.startContainer, "a"),
                      x = GetParentbyTagName(f.startContainer, "a");
                  null == w && null == x && (g = !0)
                }
              } else if (1 == v[0].nodeType && f.startContainer
                  != f.endContainer
                  && 3 == f.startContainer.nodeType && 3
                  == f.endContainer.nodeType) {
                v = !1;
                if ("A" == f.startContainer.parentNode.tagName) {
                  var v = !0, y = f.startContainer.parentNode.nextSibling;
                  3 == y.nodeType ? f.setStart(y, 0) : 1 == y.nodeType
                      ? f.setStartAfter(y) : f.setStartAfter(f.startContainer)
                } else {
                  "A" == f.endContainer.parentNode.tagName &&
                  (v = !0, y = f.endContainer.parentNode.previousSibling, 3
                  == y.nodeType ? f.setEnd(y, y.length) : 1 == y.nodeType
                      ? f.setEndBefore(y) : f.setEndBefore(f.endContainer));
                }
                v && (e.sel.removeAllRanges(), e.sel.addRange(
                    f), f = getFirstRange().range, KEDITORTOP.G_CURRKEDITOR._LastRange = f, KEDITORTOP.G_SELECTED_ELEMENT
                && "A" == KEDITORTOP.G_SELECTED_ELEMENT.tagName
                && (KEDITORTOP.G_SELECTED_ELEMENT = null))
              }
            } catch (z) {
              g = !1
            }
          }
          if (g) {
            t = !0;
          } else {
            for (v = getNodesInRange(f), e = v.length, g = 0;
                e > g; g++) {
              if (v[g].tagName && "a"
                  == v[g].tagName.toLowerCase()) {
                t = !1;
                break
              }
            }
          }
          t && (b.push(""), b.push("hyperlink_create"));
          c ? "1" != KEDITORTOP.G_CURRKEDITOR._config.pasteToImage && b.splice(
              1, 0, "paste_to_image") : 1
              == KEDITORTOP.G_CURRKEDITOR.canPasteToImage && "1"
              != KEDITORTOP.G_CURRKEDITOR._config.pasteToImage && b.splice(1, 0,
                  "paste_to_image");
          this._item_disabled_list = [];
          KEDITORTOP.G_CURRKEDITOR.isUseApplyFormat && null
          == KEDITORTOP.G_CURRKEDITOR._formatPainterList
          && this._item_disabled_list.push("apply_format")
        }
        this._height = "130px";
        this._width = "200px";
        break;
      case "selectTable":
        b = "paste cut copy  select_all  table_indent table_outdent  table_adjust  table_property".split(
            " ");
        c ? "1" != KEDITORTOP.G_CURRKEDITOR._config.pasteToImage && b.splice(1,
            0, "paste_to_image") : 1 == KEDITORTOP.G_CURRKEDITOR.canPasteToImage
            && "1" != KEDITORTOP.G_CURRKEDITOR._config.pasteToImage && b.splice(
                1, 0, "paste_to_image");
        this._item_disabled_list = [];
        this._height = "130px";
        this._width = "200px";
        break;
      case "selectedSingleCell":
        b = "paste cut copy  paragraph_attribute  select_all  split_cell  table_tool table_copy_paste delete_row_column table_row_column_cell_property3  align_vertical".split(
            " ");
        KEDITORTOP.G_CURRKEDITOR.isUseApplyFormat &&
        b.splice(11, 0, "apply_format");
        this._item_disabled_list = ["cut", "copy", "paste"];
        null == KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA
        && (this._item_disabled_list.push(
            "table_content_paste"), this._item_disabled_list.push(
            "intable_paste"));
        KEDITORTOP.G_CURRKEDITOR.isUseApplyFormat && null
        == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        && this._item_disabled_list.push("apply_format");
        this._height = "300px";
        this._width = "400px";
        break;
      case "selectedMultiCell":
        b = "paste cut copy  paragraph_attribute  select_all  merge_cell split_cell   table_tool table_copy_paste2 delete_row_column table_row_column_cell_property2 cell_size  align_vertical".split(
            " ");
        KEDITORTOP.G_CURRKEDITOR.isUseApplyFormat && b.splice(7, 0,
            "apply_format");
        this._item_disabled_list = ["cut", "copy", "paste",
          "table_content_paste"];
        t && this._item_disabled_list.push("merge_cell");
        KEDITORTOP.G_CURRKEDITOR.isUseApplyFormat && null
        == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        && this._item_disabled_list.push("apply_format");
        this._height = "500px";
        this._width = "400px";
        break;
      case "focusImage":
        b = KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT
        && KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.parentNode && "A"
        == KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.parentNode.tagName ?
            "paste cut copy  select_all  hyperlink_open hyperlink_property remove_hyperlink  save_as_image ".split(
                " ")
            : "paste cut copy  select_all  hyperlink_create  save_as_image ".split(
                " ");
        KEDITORTOP.RAONKEDITOR.browser.iOS
        || KEDITORTOP.RAONKEDITOR.browser.mobile || b.push("image_property");
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useMiniImageEditor && b.push(
            "mini_photo_editor");
        KEDITORTOP.KEDITORWIN.RAONKPHOTO && "IMG"
        == KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.tagName
        && (e = KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.src,
        0 > e.indexOf("file://") && (4 < e.length && "http" == e.substring(0,
            4).toLowerCase() ? e.match(/:\/\/(.[^\/]+)/)[1]
        == KEDITORTOP.window.location.href.match(/:\/\/(.[^\/]+)/)[1] ? b.push(
            "photo_editor_property") : "1"
            == KEDITORTOP.G_CURRKEDITOR._config.useKManager && 0 == e.indexOf(
                KEDITORTOP.RAONKSolution.managerFinalUrl) && b.push(
                "photo_editor_property") : b.push("photo_editor_property")));
        this._item_disabled_list = ["paste"];
        this._height = "300px";
        this._width = "200px";
        break;
      case "focusa":
        b = "paste cut copy  select_all  hyperlink_open hyperlink_property remove_hyperlink".split(
            " ");
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "300px";
        this._width = "200px";
        break;
      case "focusbookmark":
        b = "paste cut copy  select_all  bookmark".split(" ");
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "300px";
        this._width = "200px";
        break;
      case "focustable":
        b = "paste cut copy  select_all  table_property".split(" ");
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "300px";
        this._width = "200px";
        break;
      case "focusembed":
        b = ["paste", "cut", "copy", "", "select_all"];
        this._item_disabled_list =
            ["paste", "cut", "copy"];
        this._height = "300px";
        this._width = "200px";
        break;
      case "focusVideo":
        b = "paste cut copy  select_all  video_property".split(" ");
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "300px";
        this._width = "200px";
        break;
      case "focustd":
        b = "table_selection  table_indent table_outdent  cut copy paste  paragraph_attribute  split_cell  table_tool table_copy_paste3 table_row_column delete_table_and_row_column table_row_column_cell_property  table_select align_vertical  calculation_formula".split(
            " ");
        KEDITORTOP.G_CURRKEDITOR.isUseApplyFormat && b.splice(8, 0,
            "format_painter");
        c ? "1" != KEDITORTOP.G_CURRKEDITOR._config.pasteToImage && b.splice(1,
            0, "paste_to_image") : 1 == KEDITORTOP.G_CURRKEDITOR.canPasteToImage
            && "1" != KEDITORTOP.G_CURRKEDITOR._config.pasteToImage && b.splice(
                1, 0, "paste_to_image");
        this._item_disabled_list = ["cut", "copy", "table_copy"];
        null == KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA
        && (this._item_disabled_list.push(
            "table_content_paste"), this._item_disabled_list.push(
            "intable_paste"));
        this._width =
            "350px";
        this._height = "500px";
        break;
      case "focusiframe":
        b = "paste cut copy  select_all  iframe_property".split(" ");
        this._item_disabled_list = ["paste"];
        this._height = "300px";
        this._width = "200px";
        break;
      case "focusflash":
        b = "paste cut copy  select_all  flash_property".split(" ");
        this._item_disabled_list = ["paste"];
        this._height = "300px";
        this._width = "200px";
        break;
      case "focusmedia":
        b = "paste cut copy  select_all  media_property".split(" ");
        this._item_disabled_list = ["paste"];
        this._height = "300px";
        this._width = "200px";
        break;
      case "focuslinkmedia":
        b = "paste cut copy  select_all ".split(" ");
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "130px";
        this._width = "200px";
        break;
      case "placeholder":
        b = ["paste", "cut", "copy"];
        "1" == KEDITORTOP.G_CURRKEDITOR._config.formMode && (b.push(""), b.push(
            "placeholder"));
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "130px";
        this._width = "200px";
        break;
      case "input_textfield":
        b = ["paste", "cut", "copy", "", "select_all"];
        "1" == KEDITORTOP.G_CURRKEDITOR._config.formMode && (b.push(""),
            b.push("input_textfield"));
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "130px";
        this._width = "200px";
        break;
      case "input_radio":
        b = ["paste", "cut", "copy", "", "select_all"];
        "1" == KEDITORTOP.G_CURRKEDITOR._config.formMode && (b.push(""), b.push(
            "input_radio"));
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "130px";
        this._width = "200px";
        break;
      case "input_checkbox":
        b = ["paste", "cut", "copy", "", "select_all"];
        "1" == KEDITORTOP.G_CURRKEDITOR._config.formMode && (b.push(""), b.push(
            "input_checkbox"));
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "130px";
        this._width = "200px";
        break;
      case "input_button":
        b = ["paste", "cut", "copy", "", "select_all"];
        "1" == KEDITORTOP.G_CURRKEDITOR._config.formMode && (b.push(""), b.push(
            "input_button"));
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "130px";
        this._width = "200px";
        break;
      case "input_select":
        b = ["paste", "cut", "copy", "", "select_all"];
        "1" == KEDITORTOP.G_CURRKEDITOR._config.formMode && (b.push(""), b.push(
            "input_select"));
        this._item_disabled_list =
            ["paste", "cut", "copy"];
        this._height = "130px";
        this._width = "200px";
        break;
      case "input_textarea":
        b = ["paste", "cut", "copy", "", "select_all"];
        "1" == KEDITORTOP.G_CURRKEDITOR._config.formMode && (b.push(""), b.push(
            "input_textarea"));
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "130px";
        this._width = "200px";
        break;
      case "input_image":
        b = ["paste", "cut", "copy", "", "select_all"];
        "1" == KEDITORTOP.G_CURRKEDITOR._config.formMode && (b.push(""), b.push(
            "input_imagebutton"));
        this._item_disabled_list = ["paste", "cut",
          "copy"];
        this._height = "130px";
        this._width = "200px";
        break;
      case "input_hidden":
        b = ["paste", "cut", "copy", "", "select_all"];
        "1" == KEDITORTOP.G_CURRKEDITOR._config.formMode && (b.push(""), b.push(
            "input_hiddenfield"));
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "130px";
        this._width = "200px";
        break;
      case "focusinsertfile":
        b = "paste cut copy  select_all  insert_file_property filelink_open".split(
            " ");
        this._item_disabled_list = ["paste", "cut", "copy"];
        this._height = "300px";
        this._width = "200px";
        break;
      case "selectResizeTable":
        b =
            "table_indent table_outdent  table_adjust  table_property".split(
                " ");
        this._item_disabled_list = [];
        this._height = "130px";
        this._width = "200px";
        break;
      default:
        this._height = this._width = "1px"
    }
    "focusPluginImage" == d && (e = a.getAttribute("raon_plugin"), G_KPlugin[e]
    && G_KPlugin[e].onCreateContextMenu && (f = {
      items: b,
      disabledItems: this._item_disabled_list,
      width: this._width,
      height: this._height
    }, G_KPlugin[e].onCreateContextMenu(
        f), b = f.items, this._item_disabled_list = f.disabledItems, this._width = f.width, this._height = f.height));
    if ("focustd" == d || "selectResizeTable" == d) {
      d = GetParentbyTagName(a,
          "table"), 0 >= parseIntOr0(d.style.marginLeft)
      && this._item_disabled_list.push("table_outdent");
    }
    h && (this._item_disabled_list = addDisalbeItemForNoActionTable(
        this._item_disabled_list));
    this._height = "0px";
    h = this._context_document.createElement("dt");
    h.innerHTML = "context_main_menu";
    this._context_main.appendChild(h);
    h = b.length;
    for (g = 0; g < h; g++) {
      this._addItem(b[g]);
    }
    h = this._context_main.getElementsByTagName("dd");
    d = h.length;
    for (--d; 0 <= d; d--) {
      0 == d ? "b_border" ==
          h[d].className && this._context_main.removeChild(h[d]) : "b_border"
          == h[d].className && "b_border" == h[d - 1].className
          && this._context_main.removeChild(h[d]);
    }
    h = this._context_main.getElementsByTagName("dd");
    d = h.length;
    1 < d && "b_border" == h[d - 1].className && this._context_main.removeChild(
        h[d - 1]);
    h = parseInt(this._height, 10) + 2;
    1 != getKEDITORWINZoomValue(KEDITORTOP.G_CURRKEDITOR) && (h += 1);
    this._height = h + "px";
    this._disableItem(this._item_disabled_list)
  },
  _disableItem: function (a) {
    for (var c = a.length, b = 0; b < c; b++) {
      var d = this._context_document.getElementById("context_" +
          a[b]);
      d && (d.className = "item_disabled")
    }
  },
  _addItem: function (a) {
    for (var c = KEDITORTOP.G_CURRKEDITOR.remove_item.concat(
        KEDITORTOP.G_CURRKEDITOR.remove_context_item), b = c.length, d = 0;
        d < b; d++) {
      if (c[d] == a) {
        return;
      }
    }
    var c = this._context_document.createElement("dd"), e = this,
        b = this._getImageUrl(a), d = this._getText(a),
        f = this._item_sub_list[a];
    if ("" == d) {
      c.className = "b_border", this._height = parseInt(this._height,
          10) + 1 + "px";
    } else {
      this._height = parseInt(this._height, 10) + 24 + "px";
      var g = this._context_document.createElement("div"),
          h = this._context_document.createElement("div"),
          m = this._context_document.createElement("div"),
          q = this._context_document.createElement("span");
      0 < b.length && (q.className = a, g.appendChild(q), 0 == a.indexOf("p_")
      && (q.style.background = "url(" + b + ") transparent no-repeat"));
      "textContent" in h ? h.textContent = d : h.innerText = d;
      g.className = "s_left";
      h.className = "s_right";
      c.appendChild(g);
      c.appendChild(h);
      f ? (m.className = "arrow", c.appendChild(m), b = function (a) {
        return function (b) {
          if ("item_disabled" != a.className) {
            e._context_sub.innerHTML =
                "";
            for (var c = f.length, d = 0; d < c; d++) {
              if (0 == d) {
                var g = e._context_document.createElement("dt");
                g.innerHTML = "context_sub_menu";
                e._context_sub.appendChild(g)
              }
              e._addSubItem(f[d])
            }
            e._disableItem(e._item_disabled_list);
            c = b.target ? b.target : b.srcElement;
            d = getClientRect(c);
            0 == d.top && (d = getClientRect(c));
            e._context_document.getElementById(
                "div_sub_context").style.display = "";
            var g = getClientRect(
                    e._context_document.getElementById("div_sub_context")),
                g = g.bottom - g.top, h = getClientRect(
                    e._context_document.getElementById("div_main_context")),
                q = d.top;
            d.top + g > h.bottom && (q = d.top - (d.top + g - h.bottom));
            e._context_document.getElementById("div_sub_context").style.top = q
                + "px";
            1 == e._reverse ? (c = getClientRect(
                c.parentElement), d = getClientRect(
                e._context_document.getElementById(
                    "div_sub_context")), e._context_document.getElementById(
                "div_sub_context").style.left = c.left - (d.right - d.left) + 2
                + "px") : e._context_document.getElementById(
                "div_sub_context").style.left = "0px";
            c = getClientRect(
                e._context_document.getElementById("div_sub_context"));
            getClientRect(
                e._context_document.getElementById("div_main_context"));
            d = getClientRect(e._context_iframe);
            d = d.bottom - d.top;
            c.bottom > d && (c = c.bottom - d, c = parseIntOr0(
                    e._context_iframe.style.height) + c
                + 2, e._context_iframe.style.height = c + "px");
            a.className = "on_mouseover";
            KEDITORTOP.RAONKEDITOR.util.stopEvent(b)
          }
        }
      }(c), d = function (a) {
        return function (b) {
          "on_mouseover" == a.className
          && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
        }
      }(c), g = function (a) {
        return function (a) {
          KEDITORTOP.RAONKEDITOR.util.stopEvent(a)
        }
      }(c)) : (b = function (a) {
        return function (b) {
          e._context_document.getElementById("div_sub_context").style.display =
              "none";
          "item_disabled" != a.className
          && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
              b))
        }
      }(c), d = function (a) {
        return function (b) {
          "on_mouseover" == a.className
          && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
        }
      }(c), e = this, g = function (b) {
        return function (c) {
          "on_mouseover" == b.className
          && (KEDITORTOP.G_CURRKEDITOR._editorCommands(
              KEDITORTOP.G_CURRKEDITOR.ID, a, e), e.hide());
          null != KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
          && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_ResizeHandlerActivatedFlag
          &&
          "table_property" != a
          && (KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_ResizeHandlerActivatedFlag = !1, KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.setResizeHandle(
              null, !0))
        }
      }(c));
      KEDITORTOP.RAONKEDITOR.util.addEvent(c, "mouseover", b);
      KEDITORTOP.RAONKEDITOR.util.addEvent(c, "mouseout", d);
      KEDITORTOP.RAONKEDITOR.util.addEvent(c, "click", g)
    }
    0 < a.length && (c.id = "context_" + a);
    c.unselectable = "on";
    this._context_main.appendChild(c);
    c = this._context_main.getElementsByTagName("dd");
    for (b = c.length - 1; 0 <= b; b--) {
      0 == b ? "b_border" ==
          c[b].className && this._context_main.removeChild(c[b]) : "b_border"
          == c[b].className && "b_border" == c[b - 1].className
          && this._context_main.removeChild(c[b])
    }
  },
  _addSubItem: function (a) {
    for (var c = KEDITORTOP.G_CURRKEDITOR.remove_item.concat(
        KEDITORTOP.G_CURRKEDITOR.remove_context_item), b = c.length, d = 0;
        d < b; d++) {
      if (c[d] == a) {
        return;
      }
    }
    var c = this._context_document.createElement("dd"), e = this,
        b = this._getImageUrl(a), d = this._getText(a);
    if ("" == d) {
      c.className = "b_border";
    } else {
      var f = this._context_document.createElement("div"), g =
              this._context_document.createElement("div"),
          h = this._context_document.createElement("span");
      0 < b.length && (h.className = a, f.appendChild(h), 0 == a.indexOf("p_")
      && (h.style.background = "url(" + b + ") transparent no-repeat"));
      "textContent" in g ? g.textContent = d : g.innerText = d;
      f.className = "s_left";
      g.className = "s_right";
      c.appendChild(f);
      c.appendChild(g);
      b = function (a) {
        return function (b) {
          "item_disabled" != a.className
          && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
              b))
        }
      }(c);
      d = function (a) {
        return function (b) {
          "on_mouseover" ==
          a.className
          && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
        }
      }(c);
      e = this;
      f = function (b) {
        return function (c) {
          "on_mouseover" == b.className
          && (KEDITORTOP.G_CURRKEDITOR._editorCommands(
              KEDITORTOP.G_CURRKEDITOR.ID, a), e.hide());
          null != KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
          && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_ResizeHandlerActivatedFlag
          && (KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_ResizeHandlerActivatedFlag = !1, KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.setResizeHandle(
              null, !0))
        }
      }(c);
      KEDITORTOP.RAONKEDITOR.util.addEvent(c, "mouseover", b);
      KEDITORTOP.RAONKEDITOR.util.addEvent(c, "mouseout", d);
      KEDITORTOP.RAONKEDITOR.util.addEvent(c, "click", f);
      0 < a.length && (c.id = "context_" + a);
      c.unselectable = "on"
    }
    this._context_sub.appendChild(c)
  },
  _getImageUrl: function (a) {
    var c = "";
    if (0 == a.indexOf("p_")) {
      var c = a.split("_"), b = c[1], d = "icon";
      2 < c.length && (d = c[2]);
      c = KEDITORTOP.G_CURRKEDITOR._config.webPath.plugin + b + "/images/" + d
          + ".png"
    } else {
      c = KEDITORTOP.G_CURRKEDITOR._config.webPath.image
          + KEDITORTOP.G_CURRKEDITOR._config.style.iconName +
          "/" + a + ".gif";
    }
    b = this._non_image_item.length;
    for (d = 0; d < b; d++) {
      if (a == this._non_image_item[d]) {
        c = "";
        break
      }
    }
    return c
  },
  _getText: function (a) {
    var c = "";
    "" != a && (0 == a.indexOf("p_") ? (c = a.split(
            "_")[1], c = RAONKEditor_lang.plugins[c].context[a])
        : c = RAONKEditor_lang.context[a]);
    return c
  },
  show: function (a, c) {
    var b = getDialogWindow(), d = getDialogDocument();
    if (null == this._context_iframe) {
      this._create();
    } else {
      var d = d.getElementById(this._context_id), e = d.contentWindow.document;
      this._context_iframe = d;
      this._context_document = e;
      this._context_main = e.getElementById("ul_context_main");
      this._context_sub = e.getElementById("ul_context_sub")
    }
    d = this._context_document.getElementById("div_main_context_skin1");
    e = this._context_document.getElementById("div_main_context_skin2");
    d.className = "KEd_popup K_edITor_"
        + KEDITORTOP.G_CURRKEDITOR._config.style.skinName;
    e.className = "KEd_popup K_edITor_"
        + KEDITORTOP.G_CURRKEDITOR._config.style.skinName;
    this._context_main.innerHTML = "";
    this._context_sub.innerHTML = "";
    d = a.target ? a.target : a.srcElement;
    null !=
    KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
    && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_ResizeHandlerActivatedFlag
    && (d = KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem.getElementsByTagName(
        "td")[0]);
    if (null != d) {
      keditor_src_init(KEDITORTOP.G_CURRKEDITOR._EDITOR.design);
      restoreSelection();
      setFocusToBody();
      e = d.tagName.toLowerCase();
      if ("img" != e && "hr" != e && "a" != e && "input" != e && "textarea" != e
          && "select" != e) {
        var f = GetParentbyTagName(d, "a");
        f && (d = f, e = d.tagName.toLowerCase())
      }
      f = null;
      if ("img" !=
          e && "hr" != e && "a" != e && "input" != e && "textarea" != e
          && "select" != e) {
        if ("table" != e || "td" != e || "th" != e) {
          f = GetTDTHCell(d);
        }
        f && (KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = f)
      }
      null == f ? this._setMenu(d, c) : this._setMenu(f, c);
      this._context_iframe.style.width = this._width;
      this._context_iframe.style.height = this._height;
      var e = Math.round(a.clientX), g = Math.round(a.clientY), d = {},
          d = getWindowScrollPos(b),
          f = getClientRect(_iframeWin.parent.frameElement),
          h = getClientRect(_iframeWin.frameElement), m = 0, q = 0;
      if (null != KEDITORTOP.G_CURRKEDITOR.dialogWindow) {
        for (var t =
            _iframeWin.parent.parent; t != b;) {
          var u = getClientRect(
              t.frameElement), m = m + u.left, q = q + u.top, t = t.parent;
        }
      }
      e = changeValueForZoom(e, KEDITORTOP.G_CURRKEDITOR);
      g = changeValueForZoom(g, KEDITORTOP.G_CURRKEDITOR);
      g = g + d[1] + f.top + h.top + q;
      this._context_iframe.style.left = e + d[0] + f.left + h.left + m + "px";
      this._context_iframe.style.top = g + "px";
      this._reverse = !1;
      e = parseInt(this._context_iframe.style.left, 10) + parseInt(this._width,
          10);
      f = parseInt(this._context_iframe.style.top, 10) + parseInt(this._height,
          10);
      h = getWindowClientSize(b);
      b = d[0] + h[0] - 20;
      d = d[1] + h[1] - 10;
      e >= b ? (h = e - b, h = parseInt(this._context_iframe.style.left, 10)
              - h, e - b < parseInt(this._width, 10) / 2 && (h -= parseInt(
              this._width, 10) / 2), this._context_iframe.style.left = h
              + "px", "cssFloat" in this._context_document.getElementById(
              "div_main_context").style ? this._context_document.getElementById(
                  "div_main_context").style.cssFloat = "right"
              : this._context_document.getElementById(
                  "div_main_context").style.styleFloat = "right", this._reverse = !0)
          : "cssFloat" in this._context_document.getElementById(
              "div_main_context").style ?
              this._context_document.getElementById(
                  "div_main_context").style.cssFloat = "left"
              : this._context_document.getElementById(
                  "div_main_context").style.styleFloat = "left";
      f >= d && (b = f - d, b = parseInt(this._context_iframe.style.top, 10)
          - b, this._context_iframe.style.top = b + "px");
      this._makeBackground();
      this._context_iframe.style.display = "";
      setZoomValueToBody(this._context_document, KEDITORTOP.G_CURRKEDITOR)
    }
  },
  hide: function () {
    this._context_document && this._context_document.getElementById(
        "div_sub_context") && (this._context_document.getElementById(
        "div_sub_context").style.display =
        "none");
    this._context_iframe && (this._context_iframe.style.display = "none");
    this._context_bg && (this._context_bg.style.display = "none");
    var a = KEDITORTOP.G_CURRKEDITOR._LastRange
        ? KEDITORTOP.G_CURRKEDITOR._LastRange : getFirstRange().range;
    restoreSelection(a, !0)
  },
  _makeBackground: function () {
    var a = this, c = getDialogWindow(), b = getDialogDocument();
    this._context_bg = b.getElementById(a._context_bg_id);
    KEDITORTOP.G_CURRKEDITOR.dialogWindow && this._context_bg
    && (this._context_bg.parentNode.removeChild(this._context_bg),
        this._context_bg = null);
    this._context_bg && (this._context_bg.style.display = "");
    if (!this._context_bg) {
      this._context_bg = b.createElement("div");
      this._context_bg.id = this._context_bg_id;
      this._context_bg.style.overflow = "visible";
      this._context_bg.style.position = "static";
      this._context_bg.innerHTML = '<div oncontextmenu="return false" style="filter:alpha(opacity=0); opacity:0.0; -moz-opacity:0.0;  -khtml-opacity: 0.0; background-color:#ffffff; z-index:'
          + this._context_bg_zIndex
          + '; position:absolute; left:0px; top:0px;overflow:hidden; width:1px; height:1px; "></div>';
      b.body.appendChild(this._context_bg);
      var d = function () {
        return function (b) {
          a.hide()
        }
      }();
      KEDITORTOP.RAONKEDITOR.util.addEvent(this._context_bg, "click", d);
      KEDITORTOP.RAONKEDITOR.util.addEvent(this._context_bg, "contextmenu", d);
      KEDITORTOP.RAONKEDITOR.util.addEvent(c, "resize",
          KEDITORTOP.G_CURRKEDITOR.context_bg_resize);
      c = "CSS1Compat" == b.compatMode ? b.documentElement.scrollWidth
          : b.body.scrollWidth;
      b = "CSS1Compat" == b.compatMode ? b.documentElement.scrollHeight
          : b.body.scrollHeight;
      c = changeValueForZoom(c, KEDITORTOP.G_CURRKEDITOR);
      b = changeValueForZoom(b, KEDITORTOP.G_CURRKEDITOR);
      this._context_bg.firstChild.style.width = c - 10 + "px";
      this._context_bg.firstChild.style.height = b - 10 + "px"
    }
  }
};

function setDoctypeProperty(a, c, b, d) {
  var e = _iframeDoc.getElementsByTagName("head")[0],
      f = getHeadScriptSrc(e, !0), e = e.outerHTML,
      g = _iframeDoc.body.outerHTML;
  setGlobalTableDefaultValue();
  FixFlashError2(_iframeDoc);
  _iframeDoc.open("text/html", "replace");
  isCustomDomain(document) && (_iframeDoc.domain = document.domain);
  _iframeDoc.write(a + "<html>" + e + g + "</html>");
  _iframeDoc.close();
  setHeadScriptSrc(_iframeDoc, f);
  0 < b.length && (a = _iframeDoc.getElementsByTagName("html")[0], -1
  < b.indexOf("-") && (b = b.split("-")[0]), a.setAttribute("lang",
      b), a.setAttribute("xml:lang", b), 0 < d.length && a.setAttribute("xmlns",
      d));
  "" == c && (c = "utf-8");
  try {
    var h = _iframeDoc.getElementsByTagName("meta")[0];
    h.setAttribute("http-equiv", "Content-Type");
    h.setAttribute("content", "text/html");
    h.setAttribute("charset", c)
  } catch (m) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(m)
  }
  KEDITORTOP.G_CURRKEDITOR._load_editor_frame(!1)
}

function createEditorIframe(a, c, b, d, e, f, g, h, m, q, t, u, v) {
  var w = document.createElement("iframe");
  "" != a.editingAreaBgColor
  && (w.style.backgroundColor = a.editingAreaBgColor);
  c.appendChild(w);
  w.id = b;
  w.title = d;
  w.frameBorder = 0;
  w.style.width = "100%";
  w.style.height = "100%";
  w.style.borderWidth = "0px";
  if (KEDITORTOP.RAONKEDITOR.browser.mobile
      || KEDITORTOP.RAONKEDITOR.browser.iOS) {
    w.style.overflow = "hidden", w.style.display = "inline-block";
  }
  c = "document.open();" + (isCustomDomain(document) ? 'document.domain="'
      + document.domain +
      '";' : "") + " document.close();";
  c = KEDITORTOP.RAONKEDITOR.browser.ie && 12
  > KEDITORTOP.RAONKEDITOR.browser.ieVersion ? "javascript:void(function(){"
      + encodeURIComponent(c) + "}())" : "";
  w.src = c;
  c = getIframeDocument(w);
  "" == t ? t = "1.2" : -1 < t.indexOf("%") && (t = 1 * parseIntOr0(t, 10)
      / 100);
  b = "";
  "" == a.document.docTitle.toString()
  && (a.document.docTitle = RAONKEditor_lang.document.no_title);
  b = ("" == e ? "" : e + "\n") + ("<html><head><title>" + a.document.docTitle
      + "</title>");
  "" != a.imageBaseUrl && (b += '<base href="' + a.imageBaseUrl + '" />');
  "" !=
  a.ieCompatible && (b += '<meta http-equiv="X-UA-Compatible" content="IE='
      + a.ieCompatible + '" />\n');
  b += "<style type=text/css>";
  b += createEditorDefaultStyleInnerHTML(a, m, q, t, u, v);
  b += "</style>";
  "" != a.placeholder.content && "edit" == a.mode
  && (b += '<style type=text/css id="keditor_placeholder">', b += ".keditor_placeholder:before { content: '"
      + a.placeholder.content + "'; color: " + a.placeholder.fontColor
      + "; font-size: " + ("" == a.placeholder.fontSize ? q
          : a.placeholder.fontSize) + "; font-family: " + changeFontFamily(
          "" == a.placeholder.fontFamily ?
              m : a.placeholder.fontFamily)
      + "; display: block; position: absolute; white-space: pre; }", b += "</style>");
  e = "";
  e = KEDITORTOP.RAONKEDITOR.isRelease ? a.webPath.css : a.webPath.css_dev;
  b += '<link href="' + e + "editor_contents.css?t="
      + KEDITORTOP.RAONKEDITOR.UrlStamp
      + '" rel="stylesheet" type="text/css" />';
  if ("1" == a.formMode || "1" == a.userTableLock.use) {
    b += '<link href="' + e
        + "editor_form.css?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp
        + '" rel="stylesheet" type="text/css" />';
  }
  b += "</head>";
  e = "";
  switch (a.scrollOverflow) {
    case "1":
      e =
          'style="overflow-x:scroll;"';
      break;
    case "2":
      e = 'style="overflow-y:scroll;"';
      break;
    case "3":
      e = 'style="overflow-x:scroll;overflow-y:scroll;"';
      break;
    case "4":
      e = 'style="overflow-x:hidden;"';
      break;
    case "5":
      e = 'style="overflow-y:hidden;"';
      break;
    case "6":
      e = 'style="overflow-x:hidden;overflow-y:hidden;"'
  }
  "" != a.editingAreaBgColor && KEDITORTOP.RAONKEDITOR.browser.ie && 9
  > KEDITORTOP.RAONKEDITOR.browser.ieVersion && (e = "" == e
      ? 'style="background-color:' + a.editingAreaBgColor + ';"' : e.substr(0,
          e.length - 1) + a.editingAreaBgColor +
      '"');
  b = "1" == a.setDefaultStyle.value || "2" == a.setDefaultStyle.value ? ""
  != a.defaultMessage ? b + ('<body id="' + a.setDefaultStyle.body_id + '" ' + e
      + ">") : b + ('<body id="' + a.setDefaultStyle.body_id + '" ' + e + ""
      + ("" != a.placeholder.content && "edit" == a.mode
          ? "class='keditor_placeholder'" : "") + ">") : "" != a.defaultMessage
      ? b + ("<body " + e + ">") : b + ("<body " + e + "" + (""
  != a.placeholder.content && "edit" == a.mode ? "class='keditor_placeholder'"
      : "") + ">");
  b += "<p></p></body></html>";
  getDocWindow(c);
  c.open("text/html", "replace");
  isCustomDomain(document) &&
  (c.domain = document.domain);
  c.write(b);
  c.close();
  g && 0 < g.length && (e = c.getElementsByTagName("html")[0], -1 < g.indexOf(
      "-") && (g = g.split("-")[0]), e.setAttribute("lang", g), e.setAttribute(
      "xml:lang", g), 0 < h.length && e.setAttribute("xmlns", h));
  "" == f && (f = "utf-8");
  h = c.getElementsByTagName("head")[0];
  g = c.createElement("meta");
  g.setAttribute("http-equiv", "Content-Type");
  g.setAttribute("content", "text/html");
  g.setAttribute("charset", f);
  h.appendChild(g);
  5 < a.userCssUrl.length && createDynamicCssLinkToHeadTag(c, h, a.userCssUrl);
  5 < a.webFontCssUrl.length && createDynamicCssLinkToHeadTag(c, h,
      a.webFontCssUrl);
  5 < a.userJsUrl.length && createDynamicJsLinkToHeadTag(c, h, a.userJsUrl);
  a = KEDITORTOP.RAONKEDITOR.util.getEditorByName(a.editor_id);
  setZoomValueToBody(c, a);
  return w
}

function setHtmlValueWithDocTypeToEditor(a, c, b) {
  c = b ? b : KEDITORTOP.G_CURRKEDITOR;
  "1" == c._config.enforceDoctype && (a = a.replace(/<!doctype *([^>?+])*>/gi,
      ""));
  b = getRemoveHeadScript(a);
  a = b.html;
  a = addDefaultStyleToEditor(a, c);
  FixFlashError2(_iframeDoc);
  _iframeDoc.open("text/html", "replace");
  isCustomDomain(document) && (_iframeDoc.domain = document.domain);
  _iframeDoc.write(a);
  _iframeDoc.close();
  setHeadScriptSrc(_iframeDoc, b.scriptsAry);
  setScrollStyleForIOS(c);
  showWordCount();
  c._load_editor_frame(!1);
  "1" == c._config.horizontalLine.use ?
      c._BODY.style.marginTop = "0px" : c._BODY.style.margin = "";
  moveStyleTagToHead(c);
  setZoomValueToBody(_iframeDoc, c)
}

function setHtmlValueToEditor(a, c, b) {
  var d;
  d = b ? b : KEDITORTOP.G_CURRKEDITOR;
  "1" == d._config.enforceDoctype && (a = a.replace(/<!doctype *([^>?+])*>/gi,
      ""));
  b = d._docType[d._PageProp.doctype];
  var e = _iframeDoc.getElementsByTagName("head")[0];
  setHeadLinkUrlTimeStamp(e);
  e = getRemoveHeadScript(a);
  a = e.html;
  a = addDefaultStyleToEditor(a, d);
  FixFlashError2(_iframeDoc);
  _iframeDoc.open("text/html", "replace");
  isCustomDomain(document) && (_iframeDoc.domain = document.domain);
  _iframeDoc.write(b + a);
  _iframeDoc.close();
  setHeadScriptSrc(_iframeDoc,
      e.scriptsAry);
  setScrollStyleForIOS(d);
  showWordCount();
  KEDITORTOP.RAONKEDITOR.util.setBodyBackground(d);
  if ("1" == d._config.horizontalLine.use) {
    var f = d._FRAMEWIN;
    setTimeout(function () {
      f.showRuler(d)
    }, 0)
  }
  d._load_editor_frame(!1);
  "1" == d._config.horizontalLine.use ? d._BODY.style.marginTop = "0px"
      : d._BODY.style.margin = "";
  "show_blocks" == d.ShowBlocks && (d.ShowBlocks = "", command_showBlocks(a,
      c));
  moveStyleTagToHead(d);
  setZoomValueToBody(_iframeDoc, d)
}

function setHeadValueToEditor(a, c) {
  var b;
  b = c ? c : KEDITORTOP.G_CURRKEDITOR;
  "1" == b._config.enforceDoctype && (a = a.replace(/<!doctype *([^>?+])*>/gi,
      ""));
  var d = b._docType[b._PageProp.doctype], e = b._PageProp.lang,
      f = b._PageProp.xmlnsname, g = _iframeDoc.getElementsByTagName("body")[0],
      h;
  h = g.style.padding;
  var g = g.style.margin, m = getRemoveHeadScript(a);
  a = m.html;
  a = addDefaultStyleToEditor(a, b);
  FixFlashError2(_iframeDoc);
  _iframeDoc.open("text/html", "replace");
  isCustomDomain(document) && (_iframeDoc.domain = document.domain);
  _iframeDoc.write(d + "<html>" + a + "</html>");
  _iframeDoc.close();
  setHeadScriptSrc(_iframeDoc, m.scriptsAry);
  setScrollStyleForIOS(b);
  showWordCount();
  0 < e.length && (d = _iframeDoc.getElementsByTagName("html")[0], -1
  < e.indexOf("-") && (e = e.split("-")[0]), d.setAttribute("lang",
      e), d.setAttribute("xml:lang", e), 0 < f.length && d.setAttribute("xmlns",
      f));
  0 < h.length && (_iframeDoc.body.style.padding = h);
  0 < g.length && (_iframeDoc.body.style.margin = g);
  b._load_editor_frame(!1);
  "1" == b._config.horizontalLine.use ? b._BODY.style.marginTop =
      "0px" : b._BODY.style.margin = "";
  moveStyleTagToHead(b);
  setZoomValueToBody(_iframeDoc, b)
}

function setBodyValueToEditorEx(a, c) {
  var b;
  b = c ? c : KEDITORTOP.G_CURRKEDITOR;
  "1" == b._config.enforceDoctype && (a = a.replace(/<!doctype *([^>?+])*>/gi,
      ""));
  var d = b._docType[b._PageProp.doctype], e = b._PageProp.lang,
      f = b._PageProp.xmlnsname, g = _iframeDoc.getElementsByTagName("head")[0];
  setHeadLinkUrlTimeStamp(g);
  var h = getHeadScriptSrc(g, !0), g = g.outerHTML,
      m = _iframeDoc.getElementsByTagName("body")[0], q;
  q = m.style.padding;
  m = m.style.margin;
  FixFlashError2(_iframeDoc);
  _iframeDoc.open("text/html", "replace");
  isCustomDomain(document) &&
  (_iframeDoc.domain = document.domain);
  _iframeDoc.write(d + "<html>" + g + a + "</html>");
  _iframeDoc.close();
  setHeadScriptSrc(_iframeDoc, h);
  setScrollStyleForIOS(b);
  showWordCount();
  0 < e.length && (d = _iframeDoc.getElementsByTagName("html")[0], -1
  < e.indexOf("-") && (e = e.split("-")[0]), d.setAttribute("lang",
      e), d.setAttribute("xml:lang", e), 0 < f.length && d.setAttribute("xmlns",
      f));
  0 < q.length && (_iframeDoc.body.style.padding = q);
  0 < m.length && (_iframeDoc.body.style.margin = m);
  -1 < g.indexOf("#" + b._config.setDefaultStyle.body_id) &&
  (_iframeDoc.body.id = b._config.setDefaultStyle.body_id);
  b._load_editor_frame(!1);
  moveStyleTagToHead(b);
  setZoomValueToBody(_iframeDoc, b)
}

function setBodyValueToEditor(a, c) {
  var b;
  b = c ? c : KEDITORTOP.G_CURRKEDITOR;
  "1" == b._config.enforceDoctype && (a = a.replace(/<!doctype *([^>?+])*>/gi,
      ""));
  var d = b._docType[b._PageProp.doctype], e = b._PageProp.lang,
      f = b._PageProp.xmlnsname, g = _iframeDoc.getElementsByTagName("head")[0];
  setHeadLinkUrlTimeStamp(g);
  var h = getHeadScriptSrc(g, !0), m = g.outerHTML,
      q = _iframeDoc.getElementsByTagName("body")[0], t, u, v, w, x,
      g = q.style.padding;
  t = q.style.margin;
  u = q.style.backgroundImage;
  v = q.style.backgroundColor;
  w = q.style.backgroundAttachment;
  x = q.style.backgroundRepeat;
  FixFlashError2(_iframeDoc);
  var q = q.outerHTML, y = q.toLowerCase().indexOf("<body"), z = q.indexOf(">"),
      A = "", A = -1 < y && -1 < z ? q.substring(y, z + 1) : "<body>";
  _iframeDoc.open("text/html", "replace");
  isCustomDomain(document) && (_iframeDoc.domain = document.domain);
  _iframeDoc.write(d + "<html>" + m + A + a + "</body></html>");
  _iframeDoc.close();
  setHeadScriptSrc(_iframeDoc, h);
  setScrollStyleForIOS(b);
  showWordCount();
  0 < e.length && (d = _iframeDoc.getElementsByTagName("html")[0], -1
  < e.indexOf("-") && (e = e.split("-")[0]),
      d.setAttribute("lang", e), d.setAttribute("xml:lang", e), 0 < f.length
  && d.setAttribute("xmlns", f));
  0 < g.length && (_iframeDoc.body.style.padding = g);
  0 < t.length && (_iframeDoc.body.style.margin = t);
  0 < u.length && (_iframeDoc.body.style.backgroundImage = u);
  0 < v.length && (_iframeDoc.body.style.backgroundColor = v);
  0 < w.length && (_iframeDoc.body.style.backgroundAttachment = w);
  0 < x.length && (_iframeDoc.body.style.backgroundRepeat = x);
  try {
    b._load_editor_frame(!1)
  } catch (B) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
    console.log(B)
  }
  moveStyleTagToHead(b);
  "1" == b._config.useHtmlProcessByWorkerSetApi && displayPageBreak(!0);
  setZoomValueToBody(_iframeDoc, b)
}

function setHtmlToPreview() {
  var a = KEDITORTOP.G_CURRKEDITOR;
  "" != a._config.placeholder.content && placeholderControl(a, "remove");
  var c;
  c = a._EDITOR.preview.contentDocument ? a._EDITOR.preview.contentDocument
      : a._EDITOR.preview.contentWindow.document;
  var b = a._docType[a._PageProp.doctype], d = a._PageProp.lang,
      e = a._PageProp.xmlnsname, f = _iframeDoc.getElementsByTagName("head")[0],
      g = getHeadScriptSrc(f, !1), f = f.outerHTML,
      f = f.replace(/<script[^>]*src=([\s\S]*?)[\s\S]*?>[\s\S]*?<\/script>/gi,
          "");
  setMatchSelectedValue(_iframeDoc.body);
  setMatchInputValue(_iframeDoc.body);
  var h = "", m = "", q = "";
  _iframeDoc.body.style.transformOrigin && ""
  != _iframeDoc.body.style.transformOrigin
  && (h = _iframeDoc.body.style.transformOrigin, _iframeDoc.body.style.transformOrigin = "");
  _iframeDoc.body.style.transform && "" != _iframeDoc.body.style.transform
  && (m = _iframeDoc.body.style.transform, _iframeDoc.body.style.transform = "");
  _iframeDoc.body.style.zoom && "" != _iframeDoc.body.style.zoom
  && (q = _iframeDoc.body.style.zoom, _iframeDoc.body.style.zoom = "");
  var t = _iframeDoc.body.outerHTML;
  "" != h && (_iframeDoc.body.style.transformOrigin = h);
  "" != m && (_iframeDoc.body.style.transform = m);
  "" != q && (_iframeDoc.body.style.zoom = q);
  changeBodyImageProperty(!0);
  KEDITORTOP.RAONKEDITOR.browser.ie && 11
  > KEDITORTOP.RAONKEDITOR.browser.ieVersion
  && (t = KEDITORTOP.RAONKEDITOR.util.htmlRevision(t));
  G_BodyFit.noncreationAreaBackgroundStatus && setBodyFitStyle(a, !0);
  a._PageProp.bshowgrid && 1 == a._PageProp.bshowgrid
  && changeBodyImageProperty(!1);
  FixFlashError();
  getDocWindow(c);
  c.open("text/html", "replace");
  isCustomDomain(document) &&
  (c.domain = document.domain);
  c.write(b + "<html>" + f + t + "</html>");
  c.close();
  G_BodyFit.noncreationAreaBackgroundStatus
  && (c.documentElement.style.backgroundColor = a._DOC.documentElement.style.backgroundColor, c.documentElement.style.display = a._DOC.documentElement.style.display, c.documentElement.style.height = a._DOC.documentElement.style.height, c.documentElement.style.width = a._DOC.documentElement.style.width);
  "" != a._config.placeholder.content && placeholderControl(a, "set");
  setHeadScriptSrc(c, g);
  0 < d.length && (b =
      c.getElementsByTagName("html")[0], -1 < d.indexOf("-") && (d = d.split(
      "-")[0]), (g = _iframeDoc.getElementsByTagName("html")[0])
  && g.getAttribute("lang") && "" != g.getAttribute("lang") ? b.setAttribute(
      "lang", d) : b.removeAttribute("lang"), b.setAttribute("xml:lang", d), 0
  < e.length && b.setAttribute("xmlns", e));
  replaceClassForBorder(a, c.body, "hidden");
  replaceClassForBookmark(a, c.body, "hidden");
  hiddenBlocks(c);
  if (KEDITORTOP.RAONKEDITOR.browser.mobile
      || KEDITORTOP.RAONKEDITOR.browser.iOS) {
    try {
      for (var u = c.getElementsByTagName("iframe"),
          v = u.length, e = 0; e < v; e++) {
        var w = u[e], x = c.createElement("div");
        x.style.height = w.height ? w.height + "px" : w.style.height + "px";
        x.style.width = w.width ? w.width + "px" : w.style.width + "px";
        x.style.overflow = "scroll";
        x.style.overflowX = "hidden";
        x.style.WebkitOverflowScrolling = "touch";
        setWrapperToElement(w, x)
      }
    } catch (y) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(y)
    }
  }
  "spellcheck" in c.body && (c.body.spellcheck = !1);
  "contentEditable" in c.body && (c.body.contentEditable = !1);
  if (KEDITORTOP.RAONKEDITOR.browser.ie) {
    try {
      KEDITORTOP.RAONKEDITOR.util.addEvent(a._EDITOR.preview.contentWindow,
          "unload", function () {
            FixFlashError()
          }), KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeWin, "unload",
          function () {
            FixFlashError2(_iframeDoc)
          })
    } catch (z) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(z)
    }
  }
  setAdjustTableBorder(c);
  setZoomValueToBody(c, a);
  KEDITORTOP.RAONKEDITOR.util.addEvent(c.body, "click", function (a) {
    try {
      evt = a ? a : event, evt.srcElement ? elem = evt.srcElement : evt.target
          && (elem = evt.target)
    } catch (b) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(b)
    }
    if (elem &&
        ("a" != elem.tagName.toLowerCase() && (elem = GetParentbyTagName(elem,
            "a")), elem && elem.getAttribute("href") && !(-1
            < elem.getAttribute("href").indexOf("#")))) {
      var c = elem.getAttribute("target");
      elem.setAttribute("target", "_blank");
      setTimeout(function () {
        c && "" != c ? elem.setAttribute("target", c) : elem.removeAttribute(
            "target")
      }, 1)
    }
  });
  KEDITORTOP.RAONKEDITOR.util.addEvent(a._EDITOR.preview.contentWindow,
      "scroll", function (a) {
        moveRulerPosition(a)
      })
}

function setWrapperToElement(a, c) {
  a.nextSibling ? a.parentNode.insertBefore(c, a.nextSibling)
      : a.parentNode.appendChild(c);
  c.appendChild(a)
}

function changeBodyImageProperty(a) {
  var c = KEDITORTOP.G_CURRKEDITOR;
  a ? (c._PageProp.bodyimage && 0 < c._PageProp.bodyimage.length ? 0
          > _iframeDoc.body.style.backgroundImage.indexOf("cid:")
          && (_iframeDoc.body.style.backgroundImage = c._PageProp.bodyimage)
          : _iframeDoc.body.style.removeProperty
              ? _iframeDoc.body.style.removeProperty("background-image")
              : _iframeDoc.body.style.removeAttribute(
                  "backgroundImage"), c._PageProp.bodycolor && 0
      < c._PageProp.bodycolor.length
          ? _iframeDoc.body.style.backgroundColor = c._PageProp.bodycolor :
          _iframeDoc.body.style.removeProperty
              ? _iframeDoc.body.style.removeProperty("background-color")
              : _iframeDoc.body.style.removeAttribute(
                  "backgroundColor"), c._PageProp.bodyattachment && 0
      < c._PageProp.bodyattachment.length
          ? _iframeDoc.body.style.backgroundAttachment = c._PageProp.bodyattachment
          : _iframeDoc.body.style.removeProperty
              ? _iframeDoc.body.style.removeProperty("background-attachment")
              : _iframeDoc.body.style.removeAttribute(
                  "backgroundAttachment"), c._PageProp.bodyrepeat && 0
      < c._PageProp.bodyrepeat.length ?
          _iframeDoc.body.style.backgroundRepeat = c._PageProp.bodyrepeat
          : _iframeDoc.body.style.removeProperty
              ? _iframeDoc.body.style.removeProperty("background-repeat")
              : _iframeDoc.body.style.removeAttribute("backgroundRepeat"))
      : (c._PageProp.gridimage && 0 < c._PageProp.gridimage.length
      && (_iframeDoc.body.style.backgroundImage = c._PageProp.gridimage), c._PageProp.gridattachment
      && 0 < c._PageProp.gridattachment.length
      && (_iframeDoc.body.style.backgroundAttachment = c._PageProp.gridattachment), c._PageProp.gridrepeat
      && 0 < c._PageProp.gridrepeat.length &&
      (_iframeDoc.body.style.backgroundRepeat = c._PageProp.gridrepeat), "1"
      == c._config.horizontalLine.use && "" != c._config.horizontalLine.url
      && (_iframeDoc.body.style.backgroundImage = 'url("'
          + c._config.horizontalLine.url
          + '")', _iframeDoc.body.style.backgroundRepeat = "0"
      == c._config.horizontalLine.repeat ? "repeat-x"
          : "repeat", _iframeDoc.body.style.margin = "0px 10px 10px 10px"))
}

function changeBodyContenteditable(a) {
  a ? KEDITORTOP.G_CURRKEDITOR._config.editorBodyEditable
      && (_iframeDoc.body.contentEditable = a)
      : (_iframeDoc.body.removeAttribute(
          "contentEditable"), _iframeDoc.body.style.removeProperty
          ? (_iframeDoc.body.style.removeProperty(
              "margin-left"), _iframeDoc.body.style.removeProperty(
              "margin-top"), _iframeDoc.body.style.removeProperty(
              "margin-right"), _iframeDoc.body.style.removeProperty(
              "margin-bottom"), _iframeDoc.body.style.removeProperty("margin"))
          : (_iframeDoc.body.style.removeAttribute("marginLeft"),
              _iframeDoc.body.style.removeAttribute(
                  "marginTop"), _iframeDoc.body.style.removeAttribute(
              "marginRight"), _iframeDoc.body.style.removeAttribute(
              "marginBottom"), _iframeDoc.body.style.removeAttribute("margin")))
}

function fakeBodyDivForBackground(a, c) {
  a = a.replace(/(\r\n|\n|\r)/gm, "");
  if (c) {
    var b = a.substr(0, 4), d = a.substr(a.length - 6, 6);
    "<div" == b.toLowerCase() && "</div>" == d.toLowerCase() && (b = b.replace(
        b, "<body"), d = d.replace(d, "</body>"), a = a.substring(4,
        a.length - 6), a = b + a + d)
  } else {
    b = a.substr(0, 5), d = a.substr(a.length - 7, 7), "<body"
    == b.toLowerCase() && "</body>" == d.toLowerCase() && (b = b.replace(b,
        "<div"), d = d.replace(d, "</div>"), a = a.substring(5,
        a.length - 7), a = b + a + d);
  }
  return a
}

function createDynamicCssLinkToHeadTag(a, c, b) {
  try {
    if ("" != b) {
      var d = a.createElement("link");
      d.type = "text/css";
      d.rel = "stylesheet";
      d.href = b;
      c.appendChild(d)
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
}

function clearDynamicCssLinkToHeadTag(a, c) {
  try {
    for (var b = a.getElementsByTagName("link"), d = b.length - 1; 0 < d;
        d--) {
      a.removeChild(b[d]);
    }
    c && 0 < b.length && a.removeChild(b[0])
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
}

function addDynamicCssToHeadTag(a, c, b) {
  try {
    for (var d = c.getElementsByTagName("style"), e = d.length - 1; 0 < e;
        e--) {
      c.removeChild(d[e]);
    }
    if ("" != b) {
      var f = a.createElement("style");
      f.type = "text/css";
      f.styleSheet ? (f.styleSheet.cssText = b, "" == f.innerHTML
      && (f.innerHTML = b)) : f.appendChild(a.createTextNode(b));
      c.appendChild(f)
    }
  } catch (g) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(g)
  }
}

function createDynamicJsLinkToHeadTag(a, c, b) {
  try {
    if ("" != b) {
      var d = a.createElement("script");
      d.type = "text/javascript";
      d.src = b;
      c.appendChild(d)
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
}

function clearDynamicJsLinkToHeadTag(a) {
  try {
    for (var c = a.getElementsByTagName("script"), b = c.length - 1; 0 <= b;
        b--) {
      a.removeChild(c[b])
    }
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
}

function addDynamicJsToHeadTag(a, c, b) {
  try {
    for (var d = c.getElementsByTagName("script"), e = d.length - 1; 0 <= e;
        e--) {
      var f = d[e];
      f.src && "" != f.src || c.removeChild(f)
    }
    if ("" != b) {
      var g = a.createElement("script");
      g.type = "text/javascript";
      g.appendChild(a.createTextNode(b));
      c.appendChild(g)
    }
  } catch (h) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(h)
  }
}

function addDefaultStyleToEditor(a, c) {
  if ("0" != c._config.setDefaultStyle.set_style) {
    var b = ["body", "p", "li"];
    "0" != c._config.setDefaultStyle.value && (b = "#"
        + c._config.setDefaultStyle.body_id, b = [b, b + " p", b + " li"]);
    for (var d = [!1, !1, !1], e = b.length, f = a.toLowerCase(), g = -1,
        h = -1, m = f, q = 0; -1 < m.indexOf("<style");) {
      var g = q + m.indexOf("<style"), h = q + m.indexOf("</style>"),
          t = m.indexOf("\x3c!--"), u = m.indexOf("--\x3e");
      if (-1 == t) {
        break;
      } else if (q + t < g && q + u < g || g > q + t + 4 && h
          + 8 < q + u) {
        m = m.substring(u + 3), q += u + 3;
      } else {
        break
      }
    }
    m = c._setting.line_height;
    "" != m && -1 < m.indexOf("%") && parseIntOr0(m, 10);
    m = "";
    if (-1 < f.toLowerCase().indexOf("<head") && -1 < g && -1 < h) {
      for (var q = "", q = f.substring(g, h), v = q.indexOf(">"),
          f = q.substring(0, v + 1), q = q.substring(v + 1),
          u = q.indexOf("/*"), t = q.indexOf("*/");
          -1 < u && -1 < t;) {
        u = q.substring(0, u), q = q.substring(
            t + 2), q = u + q, u = q.indexOf("/*"), t = q.indexOf("*/");
      }
      t = q.split("}");
      u = t.length;
      for (q = 0; q < u; q++) {
        if (KEDITORTOP.RAONKEDITOR.browser.ie && 7
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && (-1 < t[q].indexOf(
            "\x3c!--") && (t[q] = t[q].replace("\x3c!--",
            "")), -1 < t[q].indexOf("--\x3e") && (t[q] = t[q].replace("--\x3e",
            ""))), v = t[q].indexOf("{"), -1 < v) {
          for (var v = t[q].substring(0, v), w = 0; w < e; w++) {
            var x = KEDITORTOP.RAONKEDITOR.util.trim(v.replace("--\x3e", "")),
                y = b[w].split(" ")[1];
            x == y && (t[q] = "");
            x == b[w] && (t[q] = -1 < v.indexOf("--\x3e") ? "--\x3e" : "")
          }
          m += t[q];
          -1 < t[q].indexOf("{") && (m += "}")
        } else {
          m += t[q];
        }
      }
      u = d.length;
      e = "";
      "2" == c._config.setDefaultStyle.set_style && (e = "font-family:"
          + c._setting.font_family + "; font-size:" + c._setting.font_size
          + ";");
      t = createEditorDefaultStyleInnerHTML(c._config,
          "", "", "", c._setting.word_break_type, c._setting.word_wrap_type);
      for (q = 0; q < u; q++) {
        0 == d[q] && (v = "", reg_exp = new RegExp(
            b[q] + " {([\\w\\W\\s]+?)}", "gi"), (v = t.match(reg_exp))
        && (v = v[0].replace(reg_exp, "$1")), b[q] == b[0] ? m += b[q] + " {"
            + v
            + "}" : (m += b[q] + " {" + v, m += e, m += "}"));
      }
      m = f + m;
      a = a.substring(0, g) + m.toLowerCase() + a.substring(h, a.length)
    } else {
      -1 < f.toLowerCase().indexOf("<head") && 0 > g
      && (v = f.toLowerCase().indexOf("</head"), 0 < v && (e = "", "2"
      == c._config.setDefaultStyle.set_style && (e = "font-family:"
          + c._setting.font_family + "; font-size:" +
          c._setting.font_size + ";"), t = createEditorDefaultStyleInnerHTML(
          c._config, "", "", "", c._setting.word_break_type,
          c._setting.word_wrap_type), t = t.replace("p {",
          "p {" + e), t = t.replace("li {", "li {" + e), m = m
          + '<style type="text/css">' + t, m += "</style>", a = a.substring(0,
              v)
          + m + a.substring(v, a.length)))
    }
  }
  return a
}

function setStyleForTableBorderNodeClass(a) {
  try {
    if (0 == checkIfIncluded("editor_contents.css")) {
      var c = "", c = KEDITORTOP.RAONKEDITOR.isRelease ? a._config.webPath.css
          : a._config.webPath.css_dev;
      KEDITORTOP.RAONKEDITOR.addUserCssUrl(
          c + "editor_contents.css?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp, a.ID)
    }
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
}

function setCssForFormMode(a) {
  try {
    if (("1" == a._config.formMode || "1" == a._config.userTableLock.use) && 0
        == checkIfIncluded("editor_form.css")) {
      var c = "", c = KEDITORTOP.RAONKEDITOR.isRelease ? a._config.webPath.css
          : a._config.webPath.css_dev;
      KEDITORTOP.RAONKEDITOR.addUserCssUrl(
          c + "editor_form.css?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp, a.ID)
    }
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
}

function setHeadLinkUrlTimeStamp(a) {
  a = a.childNodes;
  for (var c = a.length, b = 0; b < c; b++) {
    var d = a[b];
    if (d && d.tagName && "link" == d.tagName.toLowerCase() && !(-1
        < d.href.indexOf("editor_contents.css") || -1 < d.href.indexOf(
            "editor_form.css"))) {
      var e = "";
      try {
        d.outerHTML.match(
            RegExp("(hrefs*=s*(?:\"|')(.*?)(?:\"|'))", "gi")), e = RegExp.$2
      } catch (f) {
        e = d.href
      }
      d = e.split("?");
      if (1 < d.length) {
        for (var e = d[1].split("&"), g = e.length, h = 0; h < g; h++) {
          -1
          < e[h].indexOf("t=") && (e[h] = "t=" + (new Date).getTime());
        }
        a[b].href = d[0] + "?" + e.join("&")
      } else {
        a[b].href =
            d[0] + "?t=" + (new Date).getTime()
      }
    }
  }
}

function getHeadScriptSrc(a, c) {
  for (var b = a.getElementsByTagName("script"), d = [], e = b.length; 0 < e;
      e--) {
    var f = b[e - 1];
    if (f.src && "" != f.src) {
      var g = "";
      try {
        f.outerHTML.match(
            RegExp("(srcs*=s*(?:\"|')(.*?)(?:\"|'))", "gi")), g = RegExp.$2
      } catch (h) {
        g = f.src
      }
      g = g.split("?");
      if (1 < g.length) {
        for (var m = g[1].split("&"), q = m.length, t = 0; t < q; t++) {
          -1
          < m[t].indexOf("t=") && (m[t] = "t=" + (new Date).getTime());
        }
        g = g[0] + "?" + m.join("&")
      } else {
        g = g[0] + "?t=" + (new Date).getTime();
      }
      d.push(g);
      c && a.removeChild(f)
    }
  }
  return d
}

function setHeadScriptSrc(a, c) {
  var b = a.getElementsByTagName("head")[0];
  if (b) {
    for (var d = 0, e = c.length; d < e; d++) {
      createDynamicJsLinkToHeadTag(
          a, b, c[d])
    }
  }
}

function getRemoveHeadScript(a) {
  var c = {html: a, scriptsAry: []}, b = a.toLowerCase().indexOf("<head"),
      d = a.toLowerCase().indexOf("</head>"), e = a.substring(0, b),
      b = a.substring(b, d + 7);
  a = a.substring(d + 7, a.length);
  var d = RegExp("<script[^>]*src=([\\s\\S]*?)>[\\s\\S]*?\x3c/script>", "gi"),
      f = b.match(d);
  if (f) {
    for (var g = f.length, h = 0; g > h; h++) {
      d = RegExp(
          '<script[^>]*src="([\\s\\SS]*?)"([\\s\\S]*?)>[sS]*?\x3c/script>',
          "gi"), d.test(f[h]), c.scriptsAry.push(RegExp.$1);
    }
    d = RegExp("<script[^>]*src=([\\s\\S]*?)>[\\s\\S]*?\x3c/script>",
        "gi");
    b = b.replace(d, "");
    c.html = e + b + a
  }
  return c
}

function addStyleTag(a, c) {
  try {
    for (var b = !1, d = c._DOC.getElementsByTagName("head")[0],
        e = d.getElementsByTagName("style"), f = e.length, g = 0; g < f;
        g++) {
      if ("mobile_style" == e[g].getAttribute("keditor")) {
        b = !0;
        break
      }
    }
    if (!b) {
      var h = a.cssText, m = c._DOC.createElement("style");
      m.type = "text/css";
      for (var q in a.attrObj) {
        a.attrObj[q] && m.setAttribute(q, a.attrObj[q]);
      }
      m.styleSheet ? (m.styleSheet.cssText = h, "" == m.innerHTML
      && (m.innerHTML = h)) : m.appendChild(c._DOC.createTextNode(h));
      d.appendChild(m)
    }
  } catch (t) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
    KEDITORTOP.RAONKEDITOR.logMode && console.log(t)
  }
}

function setScrollStyleForIOS(a) {
  KEDITORTOP.RAONKEDITOR.browser.mobile && KEDITORTOP.RAONKEDITOR.browser.iOS
  && addStyleTag({
    cssText: "html,body{ -webkit-overflow-scrolling : touch !important; overflow: auto !important; height: 100% !important; }",
    attrObj: {keditor: "mobile_style"}
  }, a)
}

function removeScrollStyleForIOS(a) {
  if (KEDITORTOP.RAONKEDITOR.browser.mobile
      && KEDITORTOP.RAONKEDITOR.browser.iOS) {
    a = a._DOC.getElementsByTagName("head")[0];
    for (var c = a.getElementsByTagName("style"), b = c.length - 1; 0 <= b;
        b--) {
      "mobile_style" == c[b].getAttribute("keditor") && a.removeChild(
          c[b])
    }
  }
}

function setEmptyTagWhiteSpace(a, c) {
  if ("0" == a._config.removeEmptyTag) {
    var b = a._DOC;
    c && (b = c);
    for (var b = b.body.getElementsByTagName("p"), d = b.length, e = 0; e < d;
        e++) {
      var f = 0, g = b[e].getElementsByTagName("br"), f = f + g.length;
      0 == f && (g = b[e].getElementsByTagName("input"), f += g.length);
      0 == f && (g = b[e].getElementsByTagName("textarea"), f += g.length);
      0 == f && (g = b[e].getElementsByTagName("img"), f += g.length);
      0 < f || "1" != a._config.removeEmptyTagInsertNbspForLineBreak || ""
      != (void 0 != b[e].innerText ? b[e].innerText : b[e].textContent).replace(
          unescape("%u200B"),
          "") || (f = document.createTextNode("\u00a0"), b[e].appendChild(f))
    }
  }
}

function createEditorDefaultStyleInnerHTML(a, c, b, d, e, f) {
  var g = "";
  if (void 0 == c || "" == c) {
    c = KEDITORTOP.G_CURRKEDITOR._setting.font_family;
  }
  if (void 0 == b || "" == b) {
    b = KEDITORTOP.G_CURRKEDITOR._setting.font_size;
  }
  if (void 0 == d || "" == d) {
    d = KEDITORTOP.G_CURRKEDITOR._setting.line_height;
  }
  if (void 0 == e || "" == e) {
    e = "normal";
  }
  if (void 0 == f || "" == f) {
    f = "normal";
  }
  var h = "";
  "1" == a.defaultImemode && (h = "-ms-image-mode: active; ime-mode: active;");
  "1" == a.autoBodyFit && (f = "break-word");
  var m = "";
  "1" == a.defaultBodySpace.use ? (m = "1" == a.defaultBodySpace.mode ?
      "margin:" : "2" == a.defaultBodySpace.mode ? "margin:0px; padding:"
          : "margin:", m = "1" == a.horizontalLine.use ? m + ("0px "
      + a.defaultBodySpace.configValue.right + " "
      + a.defaultBodySpace.configValue.bottom + " "
      + a.defaultBodySpace.configValue.left + ";") : m
      + (a.defaultBodySpace.configValue.top + " "
          + a.defaultBodySpace.configValue.right + " "
          + a.defaultBodySpace.configValue.bottom + " "
          + a.defaultBodySpace.configValue.left + ";")) : m = "margin:0px;";
  "1" == a.setDefaultStyle.value || "2" == a.setDefaultStyle.value ? (g += "#"
          + a.setDefaultStyle.body_id +
          " { cursor:text; " + m + " font-family:" + changeFontFamily(c)
          + "; font-size:" + b + ";" + h + " word-break:" + e + "; word-wrap:" + f
          + "; }", g += "#" + a.setDefaultStyle.body_id + " p { line-height:" + d
          + "; margin-top:" + a.defaultFontMarginTop + "; margin-bottom:"
          + a.defaultFontMarginBottom + "; }", g += "#" + a.setDefaultStyle.body_id
          + " li { line-height:" + d + "; margin-top:" + a.defaultFontMarginTop
          + "; margin-bottom:" + a.defaultFontMarginBottom + "; }", g += "#"
          + a.setDefaultStyle.body_id
          + " .raon_placeholder { display: inline-block; }", g += "#"
          + a.setDefaultStyle.body_id +
          " .raon_placeholder:empty:before { content: attr(placeholder); color: #EE0000; }", g += "#"
          + a.setDefaultStyle.body_id
          + " .raon_placeholder:focus:before { content: none; }")
      : (g += "body { cursor:text; " + m + " font-family:" + changeFontFamily(c)
          + "; font-size:" + b + ";" + h + " word-break:" + e + "; word-wrap:" + f
          + "; }", g += "p { line-height:" + d + "; margin-top:"
          + a.defaultFontMarginTop + "; margin-bottom:" + a.defaultFontMarginBottom
          + "; }", g += "li { line-height:" + d + "; margin-top:"
          + a.defaultFontMarginTop + "; margin-bottom:" + a.defaultFontMarginBottom
          +
          "; }", g += ".raon_placeholder { display: inline-block; }.raon_placeholder:empty:before { content: attr(placeholder); color: #EE0000; }", g += ".raon_placeholder:focus:before { content: none; }");
  return g
}

function defaultStyleSameCheck(a, c) {
  var b = !1;
  "1" == c._config.setDefaultStyle.value || "2"
  == c._config.setDefaultStyle.value ? -1 < a.indexOf(
      "#" + c._config.setDefaultStyle.body_id) && (b = !0) : 0 > a.indexOf(
          "#" + c._config.setDefaultStyle.body_id) && -1 < a.indexOf("body {") && -1
      < a.indexOf("p {") && -1 < a.indexOf("li {") && (b = !0);
  return b
}

function getDefaultStyleTag(a, c) {
  for (var b = null, d = a.getElementsByTagName("style"), e = d.length, f = 0;
      f < e; f++) {
    if (defaultStyleSameCheck(d[f].innerHTML, c)) {
      b = d[f];
      break
    }
  }
  return b
}

function moveStyleTagToHead(a) {
  try {
    if ("1"
        == a._config.moveStyleTagToHead) {
      for (var c = a._BODY.getElementsByTagName(
          "style"), b = c.length - 1; 0 <= b;
          b--) {
        a._DOC.documentElement.getElementsByTagName("head")[0].appendChild(
            c[b])
      }
    }
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
};var g_findRepalceRange = null;

function command_find(a, c, b, d, e, f, g) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  if (0 != b.length) {
    try {
      a = null;
      if (null == g_findRepalceRange) {
        var h = getFirstRange().range;
        a = rangy.createRange(_iframeDoc);
        a.selectNodeContents(_iframeDoc.body);
        f ? a.setStart(h.startContainer, h.startOffset) : a.setEnd(
            h.startContainer, h.startOffset)
      } else {
        a = g_findRepalceRange;
      }
      d = {
        caseSensitive: d,
        wholeWordsOnly: e,
        direction: f ? "forward" : "backward"
      };
      var m = a.findText(b, d);
      m ? (a.select(), f ? a.collapse(!1) : a.collapse(
          !0), setAutoScrollToRange(
          a),
          g_findRepalceRange = a) : g ? (a = f ? moveCursorToTag(
          _iframeDoc.body,
          !0) : moveCursorToTag(_iframeDoc.body, !1), (m = a.findText(b, d))
          ? (a.select(), f ? a.collapse(!1) : a.collapse(
              !0), setAutoScrollToRange(a), g_findRepalceRange = a) : alert(
              RAONKEditor_lang.find.msg.no_find)) : alert(
          RAONKEditor_lang.find.msg.no_find)
    } catch (q) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(q)
    }
  }
}

function command_replace(a, c, b, d, e, f, g, h, m) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  if (0 != b.length) {
    try {
      var q = null;
      if (null == g_findRepalceRange) {
        var t = getFirstRange().range, q = rangy.createRange(_iframeDoc);
        q.selectNodeContents(_iframeDoc.body);
        q.setStart(t.startContainer, t.startOffset)
      } else {
        q = g_findRepalceRange;
      }
      var u = {
        caseSensitive: e,
        wholeWordsOnly: f,
        direction: g ? "forward" : "backward"
      }, v = !1, w = (t = getFirstRange().range) && t.toString();
      !e && t && (b = b.toLowerCase(), w = w.toLowerCase());
      if (w == b) {
        t.collapse(g);
        q.setStart(t.startContainer, t.startOffset);
        if (v = q.findText(b, u)) {
          q.select();
          q.deleteContents();
          var x = q.getDocument().createTextNode(d);
          q.insertNode(x);
          q.selectNode(x);
          q.select();
          g ? q.collapse(!1) : q.collapse(!0);
          m || command_find(a, c, b, e, f, g, h)
        } else {
          g_findRepalceRange && h && (q = g ? moveCursorToTag(
              _iframeDoc.body, !0) : moveCursorToTag(_iframeDoc.body,
              !1), v = q.findText(b, u))
          && (q.select(), q.deleteContents(), x = q.getDocument().createTextNode(
              d), q.insertNode(x), q.selectNode(x), q.select(), g ? q.collapse(
                  !1)
              : q.collapse(!0),
              command_find(a, c, b, e, f, g, h));
        }
        onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0});
        onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: "replace"})
      } else {
        command_find(a, c, b, e, f, g, h)
      }
    } catch (y) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(y)
    }
  }
}

function command_replaceAll(a, c, b, d, e, f, g, h, m, q) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  if (0 != b.length) {
    try {
      g_findRepalceRange = null;
      range = rangy.createRange(_iframeDoc);
      range.selectNodeContents(_iframeDoc.body);
      a = {
        caseSensitive: e,
        wholeWordsOnly: f,
        direction: g ? "forward" : "backward"
      };
      for (c = 0; range.findText(b, a);) {
        range.select();
        range.deleteContents();
        var t = range.getDocument().createTextNode(d);
        range.insertNode(t);
        q && range.selectNode(t);
        range.select();
        c += 1;
        g ? range.collapse(!1) : range.collapse(!0)
      }
      0 <
      c && !m && alert(c + RAONKEditor_lang.replace.replaceall_result);
      onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0});
      onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: "replace"})
    } catch (u) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(u)
    }
  }
}

function command_changeWordUpperLower(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  a = function (a, c) {
    try {
      var d = c.startContainer;
      d.firstNode && (d = d.firstNode);
      var e = c.startOffset, f = c.endContainer;
      f.lasttNode && (f = f.lasttNode);
      for (var g = c.endOffset, h = a.length, q = 0; q < h; q++) {
        var m = a[q];
        if (3 == m.nodeType) {
          var C = m.nodeValue, D, H, G;
          D = H = G = "";
          m == d && m == f ? (H = C.substring(0, e), D = C.substring(e,
              g), G = C.substring(g, C.length)) : m == d && 0 < e
              ? (H = C.substring(0, e), D = C.substring(e, C.length)) : m == f
              && g < C.length ? (D =
                  C.substring(0, g), H = C.substring(g, C.length)) : D = C;
          if ("UPPER" == b) {
            D = D.toUpperCase();
          } else if ("LOWER"
              == b) {
            D = D.toLowerCase();
          } else if ("FIRSTUPPER" == b) {
            var I = D.substring(0, 1), M = D.substring(1, D.length);
            D = I.toUpperCase() + M.toLowerCase()
          } else {
            break;
          }
          C = m == d && m == f ? H + D + G : m == d && 0 < e ? H + D : D + H;
          m.nodeValue = C
        }
      }
    } catch (K) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(K)
    }
  };
  c = getFirstRange();
  var d = c.range, e = GetTableSelectionCells(), f = e.length;
  if (!d.collapsed || 0 != f) {
    0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount &&
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    if (0 < f) {
      for (var g = d.cloneRange(), h = 0; h < f; h++) {
        var m = getAllTextNodeByNode(e[h]), q = m.length;
        0 < q && (c.sel.removeAllRanges(), d.selectNode(e[h]), c.sel.addRange(
            d), a(m, d), c.sel.removeAllRanges(), c.sel.addRange(g))
      }
    } else {
      m = getSelectionTextNodes(d), q = m.length, 0 < q && (a(m,
          d), d.setStart(m[0], 0), d.setEnd(m[q - 1],
          m[q - 1].length), rangy.getSelection(
          _iframeWin).removeAllRanges(), rangy.getSelection(
          _iframeWin).addRange(
          d));
    }
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount =
        0;
    onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0});
    onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: "tool_replace"})
  }
}

function moveCursorToTag(a, c) {
  if (null != a && void 0 != a) {
    var b = rangy.createRange(_iframeDoc);
    b.selectNodeContents(a);
    try {
      c ? b.collapse(!0) : b.collapse(!1), rangy.getSelection(
          _iframeWin).setSingleRange(b)
    } catch (d) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(d)
    }
    return b
  }
}

function getNextNode(a) {
  if (a.firstChild) {
    return a.firstChild;
  }
  for (; a;) {
    if (a.nextSibling) {
      return a.nextSibling;
    }
    a = a.parentNode
  }
}

function getNodesInRange(a) {
  var c = a.startContainer, b = a.endContainer;
  a = a.commonAncestorContainer;
  var d = [], e;
  for (e = c.parentNode; e && (d.push(e), e != a); e = e.parentNode) {
    ;
  }
  d.reverse();
  for (e = c; e && (d.push(e), e != b); e = getNextNode(e)) {
    ;
  }
  return d
}

function getAllNodesInBody(a, c) {
  var b = [];
  if (c) {
    var d = a.getElementsByTagName("*");
    if (d) {
      for (var e = d.length, f = 0; f < e; f++) {
        var g = d[f];
        g.tagName.toLowerCase();
        1 == g.nodeType && b.push(g)
      }
    }
  } else {
    for (g = a.childNodes[0]; null != g;) {
      if (1 == g.nodeType && b.push(
          g), g.hasChildNodes()) {
        g = g.firstChild;
      } else {
        for (; null == g.nextSibling && g != a;) {
          g = g.parentNode;
        }
        g = g.nextSibling
      }
    }
  }
  return b
}

function setAutoScrollToRange(a) {
  try {
    var c = a.startContainer.parentNode;
    if (c) {
      var b = getElementOffset(c);
      _iframeWin.scroll(b.left, b.top)
    }
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
}

function getNextSiblings(a, c) {
  for (; a = a.nextSibling;) {
    1 != a.nodeType && 3 != a.nodeType || c.push(a)
  }
}

function firstElementChild(a) {
  var c = a.firstElementChild;
  if (!c) {
    for (c = a.firstChild; c && 1 !== c.nodeType;) {
      c = c.nextSibling;
    }
  }
  return c
}

function getTextNodesBetween(a) {
  function c(a) {
    var u = a.nodeValue;
    a == d && a == e && a !== b ? (u && q.push(u.substring(f, g)), h = m = !0)
        : a == d ? (u && q.push(u.substring(f)), h = !0) : a == e ? (u
        && q.push(u.substring(0, g)), m = !0) : 3 == a.nodeType && u && h && !m
            && !/^\s*$/.test(u) && q.push(u);
    for (var u = 0, v = a.childNodes.length; !m && u < v; ++u) {
      c(
          a.childNodes[u])
    }
  }

  var b = a.commonAncestorContainer, d = a.startContainer, e = a.endContainer,
      f = a.startOffset, g = a.endOffset, h = !1, m = !1, q = [];
  c(b);
  return q
}

function getSelectionTextNodes(a) {
  function c(a) {
    var q = a.nodeValue;
    a == d && a == e && a !== b ? (q && h.push(a), f = g = !0) : a == d ? (q
    && h.push(a), f = !0) : a == e ? (q && h.push(a), g = !0) : 3 == a.nodeType
        && q && f && !g && !/^\s*$/.test(q) && h.push(a);
    for (var q = 0, t = a.childNodes.length; !g && q < t; ++q) {
      c(
          a.childNodes[q])
    }
  }

  var b = a.commonAncestorContainer, d = a.startContainer, e = a.endContainer,
      f = !1, g = !1, h = [];
  c(b);
  return h
};var _iframeDoc, _iframeWin, G_CURSOR_BEFORE_INTABLE = !1,
    G_BEFORE_INTABLE = null, G_ImagesBase64Data = [], G_KeyDownUpSync = !1,
    G_M1 = "LSBSQUianzw9OorIEsgVXBsb2FkIEluZm9ybWF0aW9uIC0KQ2xpZW50IFZlciA6IHswfQpTZXJ2ZXIgVmVyIDogezF9ClJ1bnRpbWVzIDogezJ9",
    G_M2 = "UkFPTiianzwBLorIEVkaXRvciBMaWNlbnNlIEluZm9ybWF0aW9uCiAtIENvbXBhbnkgOiB7MH0KIC0gU3lzdGVtIDogezF9CiAtIERvbWFpbiA6IHsyfQogLSBFeHBpcmVEYXRlIDogezN9CiAtIFVzZXIgQ291bnQgOiB7NH0=",
    G_FullScreenCheckObject = [], G_IsPossibleDirty = !1;

function inheritClass(a, c) {
  if (Object.create) {
    a.prototype = Object.create(c.prototype);
  } else {
    var b = function () {
    };
    b.prototype = c.prototype;
    a.prototype = new b
  }
  a.prototype.constructor = a
}

function saveSelection(a, c) {
  if (0 != KEDITORTOP.RAONKEDITOR.browser.ie || 0 != !!c) {
    var b = document.getElementById("keditor_design_" + a);
    keditor_src_init(b);
    var b = _iframeWin.getSelection ? _iframeWin.getSelection()
        : _iframeDoc.selection, d;
    try {
      b && (b.createRange ? d = b.createRange() : b.getRangeAt
          ? d = b.getRangeAt(0) : b.anchorNode && b.focusNode && doc.createRange
          && (d = _iframeDoc.createRange(), d.setStart(b.anchorNode,
              b.anchorOffset), d.setEnd(b.focusNode, b.focusOffset), d.collapsed
          !== b.isCollapsed && (d.setStart(b.focusNode, b.focusOffset),
              d.setEnd(b.anchorNode, b.anchorOffset))))
    } catch (e) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(e)
    }
    return d
  }
}

function restoreSelection(a, c) {
  if (0 != KEDITORTOP.RAONKEDITOR.browser.ie || 0 != !!c) {
    try {
      var b = getEditrFromEvent(null);
      _iframeDoc.body.focus();
      var d = _iframeWin.getSelection ? _iframeWin.getSelection()
          : _iframeDoc.selection;
      if (null == a || void 0 == a) {
        a = b._LastRange;
      }
      d && a && (a.select ? a.select() : d.removeAllRanges && d.addRange
          && (d.removeAllRanges(), d.addRange(a)), b._LastRange = null)
    } catch (e) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(e)
    }
  }
}

function createBookmark() {
  var a = document.getElementById("keditor_design_" + G_USE_EDITOR_ID);
  keditor_src_init(a);
  var a = _iframeWin.getSelection ? _iframeWin.getSelection()
      : _iframeDoc.selection, c;
  try {
    a && (a.createRange ? c = a.createRange() : a.getRangeAt ? c = a.getRangeAt(
        0) : a.anchorNode && a.focusNode && doc.createRange
        && (c = _iframeDoc.createRange(), c.setStart(a.anchorNode,
            a.anchorOffset), c.setEnd(a.focusNode, a.focusOffset), c.collapsed
        !== a.isCollapsed && (c.setStart(a.focusNode, a.focusOffset), c.setEnd(
            a.anchorNode, a.anchorOffset))))
  } catch (b) {
    KEDITORTOP &&
    KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(b)
  }
  return c
}

function goToBookmark(a) {
  if (0 != KEDITORTOP.RAONKEDITOR.browser.ie) {
    try {
      _iframeDoc.body.focus();
      var c = _iframeWin.getSelection ? _iframeWin.getSelection()
          : _iframeDoc.selection;
      c && a && (a.select ? a.select() : c.removeAllRanges && c.addRange
          && (c.removeAllRanges(), c.addRange(a)))
    } catch (b) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(b)
    }
  }
}

function RemoveUnnecessaryChar(a) {
  a = ReplaceAll(a, unescape("%uFEFF"), "");
  return a = ReplaceAll(a, unescape("%u200b"), "")
}

function CleanZeroChar(a) {
  if ("0" == KEDITORTOP.G_CURRKEDITOR._config.removeEmptyTag) {
    return a;
  }
  var c = "span b strong i em strike u sup sub font".split(" "), b = new RegExp(
      "(<span[^>]*?raon_placeholder.*?>)(?:\\s|<br>|<br />|  | |)</span>",
      "gim");
  a = a.replace(b, "$1" + unescape("%u200B") + "</span>");
  for (var b = c.length, d = 0; d < b; d++) {
    a = setCleanTagOrValue(a, c[d], "");
  }
  a = setCleanTagOrValue(a, "font", "");
  for (d = 0; d < b; d++) {
    a = setCleanTagOrValue(a, c[d], "");
  }
  a = setCleanTagOrValue(a, "b", "");
  for (d = 0; d < b; d++) {
    a = setCleanTagOrValue(a,
        c[d], "");
  }
  a = setCleanTagOrValue(a, "strong", "");
  for (d = 0; d < b; d++) {
    a = setCleanTagOrValue(a, c[d], "");
  }
  a = setCleanTagOrValue(a, "i", "");
  for (d = 0; d < b; d++) {
    a = setCleanTagOrValue(a, c[d], "");
  }
  a = setCleanTagOrValue(a, "em", "");
  for (d = 0; d < b; d++) {
    a = setCleanTagOrValue(a, c[d], "");
  }
  a = setCleanTagOrValue(a, "strike", "");
  for (d = 0; d < b; d++) {
    a = setCleanTagOrValue(a, c[d], "");
  }
  a = setCleanTagOrValue(a, "u", "");
  for (d = 0; d < b; d++) {
    a = setCleanTagOrValue(a, c[d], "");
  }
  a = setCleanTagOrValue(a, "sup", "");
  for (d = 0; d < b; d++) {
    a = setCleanTagOrValue(a, c[d], "");
  }
  a = setCleanTagOrValue(a,
      "sub", "");
  for (d = 0; d < b; d++) {
    a = setCleanTagOrValue(a, c[d], "");
  }
  c = "(<span[^>]*?raon_placeholder.*?>)(" + unescape("%u200B") + "?)</span>";
  b = new RegExp(c, "gim");
  return a = a.replace(b, "$1</span>")
}

function replaceEmptySpanTag(a) {
  return a = "1"
  == KEDITORTOP.G_CURRKEDITOR._config.replaceEmptySpanTagInSetapiOnlyTable
      ? a.replace(/<table [^>]+>([\s\S]*?)<\/table>/gim, function (a) {
        return replaceEmptySpanTagEx(a)
      }) : replaceEmptySpanTagEx(a)
}

function replaceEmptySpanTagEx(a) {
  return a.replace(RegExp("(<span[^>]*?>)(?:| |)</span>", "gim"),
      "$1" + unescape("%u200B") + "</span>")
}

function setCleanTagOrValue(a, c, b) {
  for (; ;) {
    var d, e;
    "span" == c ? (d = "<" + c + "></" + c + ">", e = "<" + c + " [^>]*></" + c
        + ">") : (d = "<" + c + ">(?:\\s|<br>|<br />|  | |)</" + c
        + ">", e = "<" + c + " [^>]*>(?:\\s|<br>|<br />|  | |)</" + c + ">");
    d = new RegExp(d, "gim");
    a = a.replace(d, b);
    e = new RegExp(e, "gim");
    a = a.replace(e, b);
    if (0 == d.test(a) && 0 == e.test(a)) {
      break
    }
  }
  return a
}

function getApplyDragResize(a) {
  var c = !1;
  if ("1" == a._config.dragResize && !KEDITORTOP.RAONKEDITOR.browser.mobile
      || KEDITORTOP.RAONKEDITOR.browser.mobile && "1"
      == a._config.useAutoToolbar) {
    if (0
        < a._config.dragResizeApplyBrowser.length) {
      for (var b = a._config.dragResizeApplyBrowser.length,
          d = 0, e; d < b;
          d++) {
        switch (e = a._config.dragResizeApplyBrowser[d].toLowerCase(), e) {
          case "ie":
            KEDITORTOP.RAONKEDITOR.browser.ie && 7
            <= KEDITORTOP.RAONKEDITOR.browser.ieVersion && 11
            >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && (c = !0);
            break;
          case "edge":
            KEDITORTOP.RAONKEDITOR.browser.ie &&
            12 <= KEDITORTOP.RAONKEDITOR.browser.ieVersion && (c = !0);
            break;
          case "firefox":
            KEDITORTOP.RAONKEDITOR.browser.gecko && (c = !0);
            break;
          case "chrome":
            KEDITORTOP.RAONKEDITOR.browser.chrome && (c = !0);
            break;
          case "opera":
            KEDITORTOP.RAONKEDITOR.browser.opera && (c = !0);
            break;
          case "safari":
            KEDITORTOP.RAONKEDITOR.browser.safari && (c = !0)
        }
      }
    } else {
      c = !0;
    }
  }
  a._config.useMouseTableInoutdent && !KEDITORTOP.RAONKEDITOR.browser.mobile
  && (c = !0);
  return c
}

function keditor_src_init_once(a, c) {
  rangy.init();
  _iframeWin = rangy.dom.getIframeWindow(a);
  _iframeDoc = rangy.dom.getIframeDocument(a);
  createTableResizeBar(_iframeDoc);
  if (getApplyDragResize(c)) {
    try {
      c.keditor_dragresize && c.keditor_dragresize.remove(
          _iframeDoc), c.keditor_dragresize = new keditorDragResize, c.keditor_dragresize.apply(
          _iframeDoc)
    } catch (b) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(b)
    }
  }
  KEDITORTOP.RAONKEDITOR.util.addEventEx(document, "keyup", _editoriframe_Keyup,
      !1);
  KEDITORTOP.RAONKEDITOR.util.addEventEx(document, "keydown",
      _editoriframe_Keydown, !1);
  KEDITORTOP.RAONKEDITOR.util.addEventEx(window, "unload",
      _editoriframe_Unload);
  KEDITORTOP.RAONKEDITOR.util.addEventEx(window, "beforeunload",
      _editoriframe_BeforeUnload);
  0 == (KEDITORTOP.RAONKEDITOR.browser.mobile && "1" == c._config.useAutoToolbar
      && KEDITORTOP.RAONKEDITOR.browser.iOS)
  && (KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "mousedown",
      _iframeDoc_MouseDown, !0), KEDITORTOP.RAONKEDITOR.util.addEvent(
      _iframeDoc, "mouseup",
      _iframeDoc_MouseUp, !0), KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc,
      "mouseup", _iframeDoc_MouseUpMenu));
  KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "mousemove",
      _iframeDoc_MouseMove, !0);
  "1" == KEDITORTOP.G_CURRKEDITOR._config.clickCtrlHyperlink
  && KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "mouseout",
      _iframeDoc_MouseOut, !0);
  "1" != c._config.contextMenuDisable && KEDITORTOP.RAONKEDITOR.util.addEvent(
      _iframeDoc, "contextmenu", _iframeDoc_ContextMenu);
  KEDITORTOP.RAONKEDITOR.util.addEventEx(document,
      "contextmenu", editorContextmenuEvt);
  KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "dblclick",
      _iframeDoc_DBClick);
  KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "click", _iframeBody_Click);
  KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "keyup", _iframeDoc_Keyup);
  KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "keydown",
      _iframeDoc_Keydown);
  KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "keypress",
      _iframeDoc_Keypress);
  "1" != c._config.useKManager && (KEDITORTOP.RAONKEDITOR.browser.ie && 11
      >= KEDITORTOP.RAONKEDITOR.browser.ieVersion ||
      KEDITORTOP.RAONKEDITOR.browser.chrome
      || KEDITORTOP.RAONKEDITOR.browser.opera
      || KEDITORTOP.RAONKEDITOR.browser.safari && "windows"
      != KEDITORTOP.RAONKEDITOR.UserAgent.os.name.toLowerCase())
  && (KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc.body, "paste",
      _iframeDoc_Paste), KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc.body,
      "beforepaste", _iframeDoc_BeforePaste));
  try {
    KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "input", _iframeDoc_input)
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
    console.log(d)
  }
  KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "copy", _iframeDoc_Copy);
  KEDITORTOP.RAONKEDITOR.util.addEventEx(document, "dragover",
      _iframeDoc_OnDropOver);
  "1" == c._config.dragAndDropAllow && (KEDITORTOP.RAONKEDITOR.browser.chrome
      || KEDITORTOP.RAONKEDITOR.browser.opera
      || KEDITORTOP.RAONKEDITOR.browser.safari)
  || KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeWin, "dragover",
      _iframeDoc_OnDropOver);
  KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "dragstart",
      _iframeDoc_DragStart);
  KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeWin,
      "scroll", _iframeDoc_Scroll);
  KEDITORTOP.RAONKEDITOR.browser.ie ? (KEDITORTOP.RAONKEDITOR.util.addEvent(
          _iframeDoc.body, "beforedeactivate",
          _iframeDoc_BlurHandler), KEDITORTOP.RAONKEDITOR.util.addEvent(
          _iframeDoc.body, "focus", _iframeDoc_FocusHandler))
      : (KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeWin, "blur",
          _iframeDoc_BlurHandler), KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeWin,
          "focus", _iframeDoc_FocusHandler));
  "1" == c._config.useKManager && "1" == c._config.dragAndDropAllow
  && KEDITORTOP.RAONKEDITOR.util.addEventEx(c._DOC.documentElement,
      "dragenter", editorDragenterEvt);
  if ("0" == c._config.dragAndDropAllow || "view"
      == c._config.mode) {
    KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc,
        "drop", function (a) {
          KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
          return !1
        }), KEDITORTOP.RAONKEDITOR.util.addEventEx(document, "drop",
        editorDropEvt);
  } else if ("1" == c._config.dragAndDropAllow && 0
  == KEDITORTOP.RAONKEDITOR.browser.ie && KEDITORTOP.RAONKEDITOR.util.addEvent(
      _iframeDoc, "dragover",
      showFileDropArea), KEDITORTOP.RAONKEDITOR.browser.gecko) {
    KEDITORTOP.RAONKEDITOR.util.addEvent(
        _iframeDoc,
        "drop", insertDropImage), KEDITORTOP.RAONKEDITOR.util.addEventEx(
        document,
        "drop", insertDropImage);
  } else if (KEDITORTOP.RAONKEDITOR.browser.ie && 9
      < KEDITORTOP.RAONKEDITOR.browser.ieVersion || 0
      == KEDITORTOP.RAONKEDITOR.browser.ie) {
    KEDITORTOP.RAONKEDITOR.util.addEventEx(
        document, "drop",
        insertDropImage), KEDITORTOP.RAONKEDITOR.util.addEvent(
        _iframeDoc, "drop", insertDropImage);
  }
  if (("1" == c._config.view_mode_auto_height || "1"
      == c._config.view_mode_auto_width) && "view" == c._config.mode) {
    var e = document.getElementById("keditor_design_" +
        c.ID);
    KEDITORTOP.RAONKEDITOR.util.addEventEx(e, "load", editorLoadEvt)
  }
  KEDITORTOP.RAONKEDITOR.browser.mobile && KEDITORTOP.RAONKEDITOR.browser.iOS
  && "1" == c._config.useAutoToolbar && (KEDITORTOP.RAONKEDITOR.util.addEvent(
      _iframeDoc.body, "touchstart",
      _iframeDoc_MouseDown), KEDITORTOP.RAONKEDITOR.util.addEvent(
      _iframeDoc.body, "touchmove",
      _iframeDoc_MouseMove), KEDITORTOP.RAONKEDITOR.util.addEvent(
      _iframeDoc.body, "touchend",
      _iframeDoc_MouseUp), KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc.body,
      "touchend", _iframeDoc_MouseUpMenu));
  KEDITORTOP.RAONKEDITOR.browser.ie && KEDITORTOP.RAONKEDITOR.util.addEventEx(
      window.document.body, "keydown", editorIEKeydownEvt);
  try {
    _iframeDoc.execCommand("MultipleSelection", null, !0)
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
  if ("0" == KEDITORTOP.G_CURRKEDITOR._config.autoUrlDetect) {
    try {
      _iframeDoc.execCommand("AutoUrlDetect", !1, !1)
    } catch (g) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(g)
    }
  }
  if (KEDITORTOP.RAONKEDITOR.browser.gecko) {
    try {
      _iframeDoc.execCommand("enableInlineTableEditing",
          !1, !1)
    } catch (h) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(h)
    }
  }
  if (!isViewMode(c)) {
    if ("1" == c._config.defaultImemode && (8
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
        || KEDITORTOP.RAONKEDITOR.browser.quirks)) {
      try {
        var m = _iframeDoc.createElement("input");
        m.style.width = "100px";
        m.style.height = "30px";
        m.type = "text";
        m.style.display = "none";
        m.style.imeMode = "active";
        _iframeDoc.body.appendChild(m);
        m.focus();
        _iframeWin.focus();
        _iframeDoc.body.removeChild(m)
      } catch (q) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
        KEDITORTOP.RAONKEDITOR.logMode && console.log(q)
      }
    }
    "" != c._config.tabIndexObjId ? 0 == KEDITORTOP.RAONKEDITOR.browser.ie
        && setTimeout(function () {
          setBodyDefaultValue(c)
        }, 0) : (!KEDITORTOP.RAONKEDITOR.browser.ie || c._config.initFocus
        && KEDITORTOP.RAONKEDITOR.browser.ie) && setTimeout(function () {
      setBodyDefaultValue(c);
      onChange({editor: c})
    }, 0);
    setTimeout(function () {
      try {
        KEDITORTOP.RAONKEDITOR.browser.ie
            ? KEDITORTOP.RAONKEDITOR.util.addEventEx(document.body, "focus",
                _editorframe_Focus) : KEDITORTOP.RAONKEDITOR.util.addEventEx(window,
                "focus", _editorframe_Focus)
      } catch (a) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(a)
      }
    }, 1E3)
  }
  onInitOnce({editor: c})
}

function _editorframe_Focus(a) {
  setTimeout(function () {
    try {
      var c = getEditrFromEvent(a), b = document.activeElement;
      if (b && 1 == b.nodeType && -1 < ",a,button,".indexOf(
          "," + b.tagName.toLowerCase() + ",")) {
        var d = c.isInitFocusHandler ? !1 : !0;
        "1" == c._config.tabSequenceMode && (d = !0);
        if (0 == d) {
          1 == c.isInitFocusHandler && (c.isInitFocusHandler = !1);
          setFocusToBody();
          KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
          KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
          if (KEDITORTOP.RAONKEDITOR.browser.chrome
              || KEDITORTOP.RAONKEDITOR.browser.opera) {
            var e =
                document.getElementsByTagName("A");
            0 < e.length && (e[0].className = "")
          }
          checkDefaultMessage()
        }
      }
    } catch (f) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(f)
    }
  }, 0)
}

function _iframeDoc_BeforePaste(a) {
  var c = getEditrFromEvent(a);
  setKEDITORWINDOC(c);
  isViewMode(c) ? KEDITORTOP.RAONKEDITOR.util.cancelEvent(a) : (a = a.target
      ? a.target : a.srcElement, a = a.tagName ? a.tagName.toLowerCase()
      : null, (!KEDITORTOP.RAONKEDITOR.browser.ie || "textarea"
      != a.toLowerCase() && "input" != a.toLowerCase())
  && KEDITORTOP.RAONKEDITOR.browser.ie && "paste" != G_LAST_CMD && 1
  == KEDITORTOP.RAONKEDITOR.browser.ie && 11
  >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && setPasteBin())
}

function setPasteBin() {
  try {
    if (KEDITORTOP.RAONKEDITOR.browser.ie) {
      KEDITORTOP.G_CURRKEDITOR._LastRange = saveSelection(
          KEDITORTOP.G_CURRKEDITOR.ID);
      var a = null, c = !1;
      KEDITORTOP.G_CURRKEDITOR.setTextPaste && "1"
      == KEDITORTOP.G_CURRKEDITOR._config.pasteToTextMode && (c = !0);
      a = c ? document.createElement("textarea") : document.createElement(
          "div");
      a.id = "pasteDiv";
      var b = KEDITORTOP.RAONKEDITOR.UserAgent;
      if ("10" != b.os.version || "IE"
          != b.browser.name) {
        a.innerHTML = unescape("%uFEFF");
      }
      a.style.position = "absolute";
      a.style.filter =
          "alpha(opacity=0)";
      a.style.overflow = "hidden";
      KEDITORTOP.RAONKEDITOR.browser.gecko
          ? (a.style.left = "0px", a.style.top = "0px")
          : (a.style.left = "-1000px", a.style.top = "-1000px");
      KEDITORTOP.RAONKEDITOR.browser.ie && 9
      >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
          ? (a.style.width = "999px", a.style.height = "999px")
          : (a.style.width = "0px", a.style.height = "0px");
      a.contentEditable = !0;
      a.onpaste = fn_PasteIE;
      document.body.appendChild(a);
      0 == KEDITORTOP.G_CURRKEDITOR.initPaste ? document.body.focus()
          : KEDITORTOP.G_CURRKEDITOR.initPaste =
              !1;
      a.focus();
      return !0
    }
  } catch (d) {
    return !0
  }
}

function setPasteBinForGecko() {
  if (KEDITORTOP.RAONKEDITOR.browser.gecko || KEDITORTOP.RAONKEDITOR.browser.ie
      && 12 <= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
    KEDITORTOP.G_CURRKEDITOR._LastRange = saveSelection(
        KEDITORTOP.G_CURRKEDITOR.ID);
    var a = document.createElement("iframe");
    a.id = "pasteIframe";
    a.frameBorder = 0;
    a.style.width = "0px";
    a.style.height = "0px";
    a.style.position = "absolute";
    a.style.left = "0px";
    a.style.top = "0px";
    if (KEDITORTOP.RAONKEDITOR.browser.mobile
        || KEDITORTOP.RAONKEDITOR.browser.iOS) {
      a.style.overflow = "hidden",
          a.style.display = "inline-block";
    }
    var c = "document.open();" + (isCustomDomain(document) ? 'document.domain="'
            + document.domain + '";' : "") + " document.close();",
        c = KEDITORTOP.RAONKEDITOR.browser.ie && 12
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            ? "javascript:void(function(){" + encodeURIComponent(c) + "}())"
            : "";
    a.src = c;
    document.body.appendChild(a);
    a = getIframeDocument(a);
    a.open("text/html", "replace");
    isCustomDomain(document) && (a.domain = document.domain);
    a.write('<body contenteditable="true">' + unescape("%uFEFF") + "</body>");
    a.close();
    a.body.contentEditable = !0;
    a.body.onpaste = fn_PasteIE;
    a.body.focus()
  }
}

function _iframeDoc_Paste(a) {
  var c = getEditrFromEvent(a);
  if ("1" == c._config.useHtmlProcessByWorker) {
    if (c.isPasting) {
      KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
      return
    }
    c.isPasting = !0
  }
  setKEDITORWINDOC(c);
  if (isViewMode(c)) {
    KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
  } else {
    if (KEDITORTOP.RAONKEDITOR.browser.ie && 0
        == c.AccessClipboardForIEGecko) {
      return !0;
    }
    var b = a.target ? a.target : a.srcElement,
        b = b.tagName ? b.tagName.toLowerCase() : null;
    if ("textarea" != b.toLowerCase() && "input" != b.toLowerCase()) {
      var b = !1, d = "", e = !1;
      if (a &&
          a.clipboardData && a.clipboardData.getData) {
        for (var f = a.clipboardData.types, g = f.length, h = !1, m = !1,
            q = !1, t = 0; t < g; t++) {
          var u = f[t].toLowerCase();
          -1 < u.indexOf("files") ? h = !0 : -1 < u.indexOf("text/html")
              ? m = !0 : -1 < u.indexOf("text/plain") && (q = !0)
        }
        h && (e = !0);
        if (h && a.clipboardData.getData("text/html") && -1
            < a.clipboardData.getData("text/html").indexOf(
                ">\x3c!--p.")) {
          b = !1;
        } else if (m) {
          d = a.clipboardData.getData(
              "text/html"), b = !0;
        } else if (q && (d = a.clipboardData.getData(
            "text/plain"), b = !0, f = "", g = findUrlInText(d,
            KEDITORTOP.G_CURRKEDITOR),
        "" != g.changedData && (f = d, d = g.changedData), m = function (a) {
          a = "1" == KEDITORTOP.G_CURRKEDITOR._config.pasteTextLineBreak
              ? addLineBreaker("p", a, !0)
              : KEDITORTOP.RAONKEDITOR.util.escapeHtml(a);
          a = a.replace(/\t/g, KEDITORTOP.G_CURRKEDITOR._config.tabSpace);
          a = a.replace(/ {2}/g, "&nbsp; ");
          a = a.replace(/  /g, " &nbsp;");
          G_wordProcessorType = "TEXT";
          return a
        }, d = m(d), "" != g.changedData)) {
          g.changedData = d;
          try {
            d = replaceRealUrl(g)
          } catch (v) {
            d = m(f)
          }
        }
        if (b) {
          try {
            0 > KEDITORTOP.G_CURRKEDITOR._config.disableInsertImage.indexOf(
                ",paste_image,") &&
            (f = function (a) {
              var b = a.clipboardData.getData("text/rtf");
              c._config.clipImageHex = [];
              a = /\{\\pict[\s\S]+?\\bliptag\-?\d+(\\blipupi\-?\d+)?(\{\\\*\\blipuid\s?[\da-fA-F]+)?[\s\}]*?/;
              var d = "";
              if (b = b.match(
                  new RegExp("(?:(" + a.source + "))([\\da-fA-F\\s]+)\\}",
                      "g"))) {
                for (var e = b.length, f = 0; f < e; f++) {
                  if (a.test(
                      b[f])) {
                    if (-1 !== b[f].indexOf("\\pngblip")) {
                      d = "image/png";
                    } else {
                      if (-1 === b[f].indexOf("\\jpegblip")) {
                        continue;
                      }
                      d = "image/jpeg"
                    }
                    c._config.clipImageHex.push({
                      hex: d ? b[f].replace(a, "").replace(/[^\da-fA-F]/g, "")
                          : null,
                      type: d
                    })
                  }
                }
              }
            }, RegExp("<img[^>]+file://[^>]+>", "gi").test(d) ? f(a) : RegExp(
                "<v:imagedata[^>]+file://[^>]+>", "gi").test(d) && f(a))
          } catch (w) {
            c._config.clipImageHex = []
          }
        }
        (KEDITORTOP.RAONKEDITOR.browser.chrome
            || KEDITORTOP.RAONKEDITOR.browser.opera
            || c.AccessClipboardForIEGecko) && b && "" == d && h && (b = !1)
      }
      KEDITORTOP.G_CURRKEDITOR.pasteEvt = a;
      KEDITORTOP.G_CURRKEDITOR.clipData = d;
      KEDITORTOP.G_CURRKEDITOR.bTextorHtmlData = b;
      KEDITORTOP.G_CURRKEDITOR.clipImageBeforePopup = null;
      KEDITORTOP.G_CURRKEDITOR.clipImageBlob = null;
      KEDITORTOP.G_CURRKEDITOR.hasClipSvgText =
          !1;
      if ("1" == KEDITORTOP.G_CURRKEDITOR._config.pasteToImage) {
        try {
          testCanvas = document.createElement("canvas");
          if ("undefined" != typeof testCanvas.toBlob && 1 == e) {
            for (var b = [], x = a.clipboardData.items.length, t = 0; t < x;
                t++) {
              if (/image\//.test(a.clipboardData.items[t].type)) {
                var y = a.clipboardData.items[t].getAsFile();
                y && b.push(y);
                "1"
                == KEDITORTOP.G_CURRKEDITOR._config.compatibility.autoResizePastedImage
                && "image/svg+xml" == a.clipboardData.items[t].type
                && (KEDITORTOP.G_CURRKEDITOR.hasClipSvgText = !0)
              }
            }
            if (1 == b.length) {
              KEDITORTOP.G_CURRKEDITOR.clipImageBlob =
                  b[0];
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              KEDITORTOP.G_CURRKEDITOR._editorCommands(
                  KEDITORTOP.G_CURRKEDITOR.ID, "pastetoimage");
              return
            }
          }
          command_pasteHtml5(KEDITORTOP.G_CURRKEDITOR)
        } catch (z) {
          command_pasteHtml5(KEDITORTOP.G_CURRKEDITOR)
        }
        testCanvas = void 0
      } else {
        try {
          if (1 == e) {
            x = a.clipboardData.items.length;
            for (t = 0; t < x && (!/image\//.test(a.clipboardData.items[t].type)
                || (KEDITORTOP.G_CURRKEDITOR.clipImageBlob = a.clipboardData.items[t].getAsFile(), !KEDITORTOP.G_CURRKEDITOR.clipImageBlob));
                t++) {
              ;
            }
            if (KEDITORTOP.G_CURRKEDITOR.clipImageBlob &&
                "1"
                == KEDITORTOP.G_CURRKEDITOR._config.compatibility.autoResizePastedImage) {
              for (x = a.clipboardData.items.length, t = 0;
                  t < x; t++) {
                "image/svg+xml" == a.clipboardData.items[t].type
                && (KEDITORTOP.G_CURRKEDITOR.hasClipSvgText = !0);
              }
            }
            "usePasteToImage" == KEDITORTOP.G_CURRKEDITOR.html5PasteImageType
                ? (KEDITORTOP.G_CURRKEDITOR.html5PasteImageType = "", KEDITORTOP.G_CURRKEDITOR._editorCommands(
                    KEDITORTOP.G_CURRKEDITOR.ID, "pastetoimage"))
                : command_pasteHtml5(KEDITORTOP.G_CURRKEDITOR)
          } else {
            command_pasteHtml5(KEDITORTOP.G_CURRKEDITOR)
          }
        } catch (A) {
          command_pasteHtml5(KEDITORTOP.G_CURRKEDITOR)
        }
      }
      setTimeout(function () {
        onChange({
          editor: KEDITORTOP.G_CURRKEDITOR,
          isPossibleDirty: !0
        })
      }, 500)
    }
  }
}

function _iframeDoc_Keypress(a) {
  var c = "which" in a ? a.which : a.keyCode;
  try {
    var b = getEditrFromEvent(a);
    setKEDITORWINDOC(b);
    var d = b._config, e = a.target ? a.target : a.srcElement,
        f = e.tagName ? e.tagName.toLowerCase() : null;
    if (!KEDITORTOP.RAONKEDITOR.browser.ie || "textarea" != f.toLowerCase()
        && "input" != f.toLowerCase()) {
      if ("1" != d.formMode && "1" == d.userTableLock.use) {
        var g = getFirstRange().range.startContainer;
        3 == g.nodeType && (g = g.parentNode);
        var h = GetTDTHCell(g), m;
        h && (m = GetParentbyTagName(g, "table"));
        var f = !0, q = d.userTableLock.defaultTableLockMode;
        m && m.getAttribute("lock_mode") && "" != m.getAttribute("lock_mode")
        && (q = m.getAttribute("lock_mode"));
        "1" == q && (f = !1);
        if (h) {
          if (f && checkLockAttr(m)) {
            if (b.lastElemForLock) {
              setFocusForLock(b.lastElemForLock);
            } else {
              var t = findNoLockElem(m);
              t ? setFocusForLock(t) : (window.focus(), document.body.focus())
            }
            KEDITORTOP.RAONKEDITOR.util.stopEvent(event);
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(event);
            return
          }
          if (checkLockAttr(h, !f)) {
            b.lastElemForLock ? setFocusForLock(b.lastElemForLock)
                : setFocusForLock(findNoLockCell(m));
            KEDITORTOP.RAONKEDITOR.util.stopEvent(event);
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(event);
            return
          }
        }
      }
      try {
        if (13 == c && "xp"
            != KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase()
            && KEDITORTOP.RAONKEDITOR.browser.ie && 11
            >= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          var u = getFirstRange().range, v = getMyElementNode(u.startContainer);
          if (1 == v.nodeType && -1
              < ",SPAN,U,I,STRONG,B,S,STRIKE,EM,SUP,SUB,".indexOf(
                  "," + v.tagName + ",")) {
            var w = v.innerHTML.toLowerCase();
            "" == w && 11 >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
                ? v.innerHTML = unescape("%u200B") : "<br>" != w && "<br/>" !=
                w && "<br />" != w || 11
                != KEDITORTOP.RAONKEDITOR.browser.ieVersion
                || (v.innerHTML = unescape("%u200B"))
          }
        }
      } catch (x) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(x)
      }
      if ("1" == d.returnEvent.key_event) {
        try {
          e = getFirstRange().range.startContainer;
          3 == e.nodeType && (e = e.parentNode);
          var e = {strEventName: "keypress", objEvent: a, objElement: e}, y;
          "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.key
              ? y = KEDITORTOP.G_CURRKEDITOR._config.event.key(b.ID, e)
              : "function" === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_KeyEvent
              &&
              (y = KEDITORTOP.KEDITORWIN.RAONKEDITOR_KeyEvent(b.ID, e));
          if (!1 === y) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return
          }
        } catch (z) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(z)
        }
      }
      if ("" != d.enterTag) {
        var b = !1, A, B, C;
        C = d.enterTag;
        if (13 == c) {
          if (!a.shiftKey) {
            if ("undefined" != typeof _iframeWin.getSelection) {
              if (B = _iframeWin.getSelection(), B.getRangeAt && B.rangeCount) {
                A = B.getRangeAt(0);
                A.deleteContents();
                var D = _iframeDoc.createElement(C);
                A.insertNode(D);
                A.setEndAfter(D);
                A.setStartAfter(D);
                A.collapse(!1);
                B.removeAllRanges();
                B.addRange(A);
                if (11 <= KEDITORTOP.RAONKEDITOR.browser.ieVersion || 0
                    == KEDITORTOP.RAONKEDITOR.browser.ie) {
                  var H = D.nextSibling;
                  if (null == H || 3 == H.nodeType && ""
                      == H.nodeValue) {
                    D = _iframeDoc.createElement(
                        C), A.insertNode(D), A.setEndBefore(
                        D), A.setStartBefore(
                        D), A.collapse(!1), B.removeAllRanges(), B.addRange(A)
                  }
                }
                var b = !0, G = D.nextSibling;
                1 != G.nodeType && (G = G.parentElement);
                focusToElement(G)
              }
            } else {
              "undefined" != typeof _iframeDoc.selection
              && (B = _iframeDoc.selection, B.createRange
              && (A = B.createRange(),
                  "div" == C ? (C = getDefaultParagraphValue(
                      !0), pasteHtmlAtCaretHuge(D.outerHTML)) : C = "<" + C
                      + " />", A.pasteHTML(C), A.collapse(
                  !1), A.select(), b = !0));
            }
          }
          b && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
        }
      }
    }
  } catch (I) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(I)
  }
}

var bCtrlKey = !1, startBookmark, endBookmark;

function _iframeDoc_Keydown(a) {
  var c = "which" in a ? a.which : a.keyCode;
  if (!checkDefaultMessage(a)) {
    var b = getEditrFromEvent(a);
    setKEDITORWINDOC(b);
    1 == b.isLoadingFile && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
    if (1 == b.setValueIsBusy) {
      KEDITORTOP.RAONKEDITOR.util.cancelEvent(
          a);
    } else if ("1" == b._config.disableUnnecessaryKeyEvt && 255 == c
        && "Unidentified" == a.key) {
      KEDITORTOP.RAONKEDITOR.util.cancelEvent(
          a);
    } else if (isViewMode(b)) {
      if (0 == (9 == c || 38 == c || 40 == c || 37 == c || 39 == c)) {
        var d = !0;
        if (a.ctrlKey || a.metaKey) {
          "1" == b._config.viewModeAllowCopy &&
          67 == c && (d = !1), 70 == c && (d = !1), 80 == c && (d = !1);
        }
        d && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
      }
    } else {
      getApplyDragResize(b) && b.keditor_dragresize.G_keditorResizeDiv
      && b.keditor_dragresize.keyDown(a);
      var e = a.target ? a.target : a.srcElement,
          f = e.tagName ? e.tagName.toLowerCase() : null;
      if (0 == checkContentEditable(b, e)) {
        d = !0;
        if (a.ctrlKey || a.metaKey) {
          67 == c && (d = !1), 70 == c && (d = !1), 80
          == c && (d = !1);
        }
        d && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
      } else {
        var g = !1;
        if ("textarea" == f || "input" == f) {
          g = !0;
        }
        if (0 == g && "1" != b._config.formMode && "1" ==
            b._config.userTableLock.use) {
          var h = getFirstRange().range.startContainer;
          3 == h.nodeType && (h = h.parentNode);
          var m = GetTDTHCell(h), q;
          m && (q = GetParentbyTagName(h, "table"));
          var t = b._config.userTableLock.defaultTableLockMode;
          q && q.getAttribute("lock_mode") && "" != q.getAttribute("lock_mode")
          && (t = q.getAttribute("lock_mode"));
          var u = !0;
          "1" == t && (u = !1);
          if (m) {
            if (u && checkLockAttr(q)) {
              if (b.lastElemForLock) {
                setFocusForLock(b.lastElemForLock);
              } else {
                var v = findNoLockElem(q);
                v ? setFocusForLock(v) : (window.focus(), document.body.focus())
              }
              KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              return
            }
            if (checkLockAttr(m, !u)) {
              b.lastElemForLock ? setFocusForLock(b.lastElemForLock)
                  : setFocusForLock(findNoLockCell(q));
              KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              return
            }
          }
          if (8 == c || 46 == c) {
            for (var w = GetTableSelectionCells(), x = w.length, y = !1, z = 0;
                z < x; z++) {
              if (checkLockAttr(w[z], !u)) {
                y = !0;
                break
              }
            }
            if (y) {
              KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              return
            }
          }
        }
        var A = a.target ? a.target : a.srcElement,
            B = A.tagName ? A.tagName.toLowerCase() : null;
        if (KEDITORTOP.RAONKEDITOR.browser.mobile && 13
            == c) {
          if (KEDITORTOP.RAONKEDITOR.browser.iOS) {
            try {
              var C = getFirstRange(), D = C.range, H = C.sel;
              if (1 == D.collapsed) {
                var G = D.startContainer;
                3 == G.nodeType && (G = G.parentNode);
                for (var I = !1; ;) {
                  if ("FONT" == G.tagName) {
                    I = !0;
                    break
                  } else if ("P" == G.tagName || "BODY"
                      == G.tagName) {
                    break;
                  } else {
                    G = G.parentNode;
                  }
                }
                if (I) {
                  var M = _iframeDoc.createElement("span");
                  for (G.parentNode.insertBefore(M, G);
                      G.hasChildNodes();) {
                    M.appendChild(G.firstChild);
                  }
                  G.getAttribute("color") &&
                  "" != G.getAttribute("color")
                  && (M.style.color = G.getAttribute(
                      "color"));
                  G.getAttribute("face") && "" != G.getAttribute("face")
                  && (M.style.fontFamily = G.getAttribute("face"));
                  M.style.cssText = G.style.cssText;
                  b.keydownStyleForIOS.currStyle = M.style.cssText;
                  G.getAttribute("size") && "" != G.getAttribute("size")
                  && (b.keydownStyleForIOS.fontSize = KEDITORTOP.RAONKEDITOR.util.getStyle(
                      G,
                      "fontSize"), M.style.fontSize = b.keydownStyleForIOS.fontSize);
                  H.removeAllRanges();
                  G.parentNode.removeChild(G);
                  H.addRange(D);
                  var K = getFirstRange().range.startContainer,
                      A = 3 == K.nodeType ? K.parentNode : K,
                      B = A.tagName.toLowerCase()
                }
              }
            } catch (P) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(P)
            }
          } else if ("android"
              == KEDITORTOP.RAONKEDITOR.UserAgent.os.name.toLowerCase()) {
            try {
              var E = getFirstRange(), L;
              if (E.range.startContainer == E.range.endContainer
                  && E.range.startOffset == E.range.endOffset && 0
                  == E.range.startOffset && (L = E.range.startContainer, 3
                  == L.nodeType && (L = L.parentNode), (L = GetParentbyTagName(
                      L,
                      "p", !0)) && _iframeDoc.body.firstChild == L)) {
                var O = L.innerHTML.toLowerCase();
                if ("" != O && "<br>" != O && "<br />" != O) {
                  var N = rangy.createRange(
                      _iframeDoc).getDocument().createTextNode(
                      unescape("%u200B"));
                  L.insertBefore(N, L.firstChild)
                }
              }
            } catch (F) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(F)
            }
          }
        }
        if ("1" == b._config.returnEvent.key_event) {
          try {
            A = getFirstRange().range.startContainer;
            3 == A.nodeType && (A = A.parentNode);
            var J = {strEventName: "keydown", objEvent: a, objElement: A}, W;
            "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.key
                ? W = KEDITORTOP.G_CURRKEDITOR._config.event.key(b.ID,
                    J) : "function"
                === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_KeyEvent
                && (W = KEDITORTOP.KEDITORWIN.RAONKEDITOR_KeyEvent(b.ID, J));
            if (!1 === W) {
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              return
            }
          } catch (ba) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(ba)
          }
        }
        try {
          var U = G_KPlugin.mention;
          U && (W = U.onKeyDown({evt: a}));
          if (!1 === W) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return
          }
        } catch (V) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(V)
        }
        -1 < b.fixDEXTWINScroll.keyCodeArr.indexOf(c) &&
        (b.fixDEXTWINScroll.backupValue = {
          top: KEDITORTOP.KEDITORWIN.pageYOffset
              || KEDITORTOP.KEDITORWIN.document.documentElement.scrollTop,
          left: KEDITORTOP.KEDITORWIN.pageXOffset
              || KEDITORTOP.KEDITORWIN.document.documentElement.scrollLeft
        }, KEDITORTOP.RAONKEDITOR.util.addEventEx(KEDITORTOP.KEDITORWIN,
            "scroll", b.fixDEXTWINScroll.fn));
        if (KEDITORTOP.RAONKEDITOR.browser.ie && 1 == a.ctrlKey && 65
            == c) {
          try {
            "undefined" != typeof KEDITORTOP.dialogArguments
            && command_selectAll(
                b.ID, b)
          } catch (X) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
            KEDITORTOP.RAONKEDITOR.logMode && console.log(X)
          }
        }
        KEDITORTOP.RAONKEDITOR.browser.gecko
        && (E = getFirstRange().range, E.startContainer
        && E.startContainer.tagName && "BODY" == E.startContainer.tagName
        && E.endContainer && E.endContainer.tagName && "BODY"
        == E.endContainer.tagName && E.endOffset
        == _iframeDoc.body.childNodes.length && (a.ctrlKey && 86 == c || !(0
            != a.ctrlKey || 0 != a.altKey || 38 == c || 40 == c || 37 == c || 39
            == c || 91 <= c && 93 >= c || 33 <= c && 36 >= c || 112 <= c && 123
            >= c) && (32 <= c && 127 >= c || 0 == c || 13 == c || 9 == c || 190
            <= c && 192 >= c || 173 == c || 219 <= c && 222 >=
            c))
        && (_iframeDoc.body.innerHTML = "<p><br></p>", doSetCaretPosition(
            _iframeDoc.body.firstChild)));
        if (!B || "textarea" != B && "input" != B && "select" != B) {
          if ("1"
              == b._config.disableKeydown && 8 != c && 46
              != c) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
          } else {
            if (0 == a.ctrlKey && 112 <= c && 123
                >= c) {
              return KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                  a), KEDITORTOP.RAONKEDITOR.util.stopEvent(a), !1;
            }
            a.ctrlKey && !a.altKey && (d = nextTabKeyAccess(a, c))
            && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            if (d = setTableShortcut(
                a)) {
              return KEDITORTOP.RAONKEDITOR.util.cancelEvent(a),
                  KEDITORTOP.RAONKEDITOR.util.stopEvent(a), !1;
            }
            if (8 == c) {
              var aa = a.srcElement;
              if (aa) {
                if (Mouse_Status == Mouse_IsControlSelecting && 1 == aa.nodeType
                    && "IMG" == aa.tagName) {
                  KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
                  return
                }
                var ha = getFirstRange(), Y = ha.range, Ia = ha.sel;
                if (Ia && Ia.docSelection && "Control"
                    == Ia.docSelection.type) {
                  KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
                  return
                }
                Y && "BODY" == Y.startContainer.nodeName && 0
                < b.UndoManager.charCount && b.UndoManager.putUndo()
              }
            }
            adjustIEEnterBug({keyCode: c, event: a});
            var ta = b._config.undoMode;
            if ("2" == ta && 0 == a.ctrlKey && 0 == a.altKey) {
              if (32 == c || 8 == c) {
                b.UndoManager.putUndo();
              } else {
                var ca = getFirstRange().range,
                    qa = 3 == ca.startContainer.nodeType
                        ? ca.startContainer.parentNode : ca.startContainer,
                    ra = 3 == ca.endContainer.nodeType
                        ? ca.endContainer.parentNode : ca.endContainer;
                b.UndoManager.tempSContainerText = qa.innerText
                    || qa.textContent;
                b.UndoManager.tempEContainerText = ra.innerText
                    || ra.textContent
              }
              b.UndoManager.charCount = 99
            }
            startBookmark = endBookmark = void 0;
            bCtrlKey = a.ctrlKey;
            var la = 229;
            KEDITORTOP.RAONKEDITOR.browser.gecko &&
            (la = 0);
            "1" == ta && 0 == a.ctrlKey && 0 == a.altKey && 0
            == b.UndoManager.arrImageHTML.length && (32 <= c && 127 >= c || c
                == la)
                ? (b.UndoManager.putUndo(), b.UndoManager.charCount = 0, b._iconEnable(
                    "")) : 8 == c || 46 == c || a.shiftKey || 1 == a.ctrlKey || 1
                == a.ctrlKey && 67 == c ? 1 == a.ctrlKey && 0 == a.altKey && 0
                    == a.shiftKey && 67 == c && 0 < GetTableSelectionCells().length
                    && (command_tableCopy(b.ID,
                        b), KEDITORTOP.RAONKEDITOR.util.cancelEvent(a))
                    : (ClearDraggingTableCellSelected(), ActiveCurrTable = null);
            0 == a.shiftKey && 0 == bCtrlKey && 9 == c && "1"
            != b._config.EditorTabDisable &&
            (setTabkeyAction(), KEDITORTOP.RAONKEDITOR.util.cancelEvent(a));
            a.shiftKey && 0 == bCtrlKey && 9 == c && "1"
            != b._config.EditorTabDisable
            && (setShiftTabkeyAction(), KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                a));
            !KEDITORTOP.RAONKEDITOR.browser.chrome || 37 != c && 38 != c && 39
            != c && 40 != c || setArrowKeyAction(37)
            && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            !KEDITORTOP.RAONKEDITOR.browser.chrome
            && !KEDITORTOP.RAONKEDITOR.browser.opera || 39 != c && 37 != c && 38
            != c || 0 != a.ctrlKey || 0 != a.altKey || 0 != a.shiftKey
            || (Y = getFirstRange().range, aa = null,
            Y && Y.startContainer && (aa = getMyElementNode(
                Y.startContainer)), aa
                ? (b.keydownNodeForTableCaret.tdNode = GetTDTHCell(
                    aa), b.keydownNodeForTableCaret.backupRange = Y.cloneRange())
                : (b.keydownNodeForTableCaret.tdNode = null, b.keydownNodeForTableCaret.backupRange = null));
            a.ctrlKey && !a.altKey && 86 == c && 0
            == b.UndoManager.arrImageHTML.length
            && (b.UndoManager.putUndo(), b.UndoManager.charCount = 0, b._iconEnable(
                ""));
            if (1 == bCtrlKey && 0 == a.altKey && 13 == c
                && (Y = getFirstRange().range, aa = null, Y && Y.startContainer
                && (aa = getMyElementNode(Y.startContainer)),
                    aa)) {
              var Q = GetTDTHCell(aa);
              if (null == Q && "tr" == aa.tagName.toLowerCase()) {
                var Aa = aa.cells.length;
                0 < Aa && (Q = aa.cells[Aa - 1])
              }
              if (Q) {
                var Ba = GetParentbyTagName(Q, "tr");
                if (q = GetParentbyTagName(Q, "table")) {
                  var S = Q.cellIndex, ka = Ba.cells.length, ga = Ba.rowIndex,
                      Ta = q.rows.length;
                  1 == Ta ? 0 == S ? insertPtagTableNear(!0, q) : S == ka - 1
                      && insertPtagTableNear(!1, q) : 0 == ga && 0 == S
                      ? insertPtagTableNear(!0, q) : (1 < Q.rowSpan
                      && (ga += Q.rowSpan - 1), ga == Ta - 1 && S == ka - 1
                      && insertPtagTableNear(!1, q));
                  KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
                }
              }
            }
            if (1 ==
                bCtrlKey) {
              if (a.altKey && 191 == c) {
                b._editorCommands(b.ID,
                    "about");
              } else if (a.altKey && 220 == c) {
                b._editorCommands(b.ID,
                    "symbol"), KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                    a);
              } else if (a.altKey && 48 == c) {
                KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
                var fa = KEDITORTOP.RAONKEDITOR.util.makeDecryptReponseMessage(
                        G_M1), fa = fa.replace("{0}",
                        KEDITORTOP.RAONKEDITOR.util.getRV(
                            KEDITORTOP.RAONKEDITOR._$0)),
                    fa = fa.replace("{1}", KEDITORTOP.RAONKEDITOR.util.getRV(
                        KEDITORTOP.RAONKEDITOR._$0S)),
                    Ja = "1" == b._config.useKManager ? "Agent" :
                        "Html5";
                "Agent" == Ja && (Ja += " " + KEDITORTOP.RAONKEDITOR.util.getRV(
                    b.av) + ", " + KEDITORTOP.RAONKEDITOR.util.getRV(b.dv));
                fa = fa.replace("{2}", Ja);
                alert(fa)
              } else if (a.altKey && 76 == c) {
                b._config.useServerLicense
                || (KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                    a), fa = KEDITORTOP.RAONKEDITOR.util.makeDecryptReponseMessage(
                    G_M2), fa = fa.replace("{0}", _0_[1]), fa = fa.replace(
                    "{1}",
                    _0_[2]), fa = fa.replace("{2}", _0_[3]), fa = fa.replace(
                    "{3}",
                    _0_[5]), fa = fa.replace("{4}",
                    "0" == _0_[4] ? "Unlimited" : _0_[4]), alert(
                    fa));
              } else if (!a.altKey &&
                  a.shiftKey && 67 == c) {
                KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                    a), command_tableCopy(b.ID, b);
              } else if (!a.altKey && a.shiftKey
                  && 86 == c) {
                KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                    a), command_intablePaste(b.ID, b);
              } else if (!a.altKey
                  && a.shiftKey && (70 == c || 84
                      == c)) {
                KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                    a), command_tablePaste(b.ID, b);
              } else if (!a.altKey && 86
                  == c) {
                "paste" == G_LAST_CMD && (G_LAST_CMD = null), "1"
                == b._config.useKManager
                    ? (KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                        a), agentPaste())
                    : (KEDITORTOP.RAONKEDITOR.browser.gecko
                    && setPasteBinForGecko(),
                    KEDITORTOP.RAONKEDITOR.browser.ie && "12"
                    <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
                    && setPasteBin());
              } else if (!a.altKey && 83 == c) {
                if ("1"
                    == b._config.setAutoSave.useManuallySaveShortcutKey) {
                  KEDITORTOP.RAONKEDITOR.manuallyTempSave(
                      b.ID);
                } else {
                  for (var Pa = !1, Ca = b.remove_item, Ua = Ca.length, z = 0;
                      z < Ua; z++) {
                    if ("save" == Ca[z]) {
                      Pa = !0;
                      break
                    }
                  }
                  Pa || command_saveAs("", b)
                }
                KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
              } else {
                if (88 == c) {
                  var Da = oneCellAndRowContentsDeleteAction(b, c);
                  Da && (KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                      a), KEDITORTOP.RAONKEDITOR.util.stopEvent(a),
                      b.UndoManager.putUndo(), b.UndoManager.charCount = 0)
                }
              }
            } else if (13 == c) {
              var Qa = !1;
              if (KEDITORTOP.RAONKEDITOR.browser.chrome
                  || KEDITORTOP.RAONKEDITOR.browser.opera
                  || KEDITORTOP.RAONKEDITOR.browser.safari) {
                Qa = !0;
              }
              if (Qa && !a.shiftKey) {
                try {
                  var Ea = getFirstRange().range.startContainer;
                  3 == Ea.nodeType && (Ea = Ea.parentNode);
                  for (var Ra = b.checkEnterKeyTargetTagArr.length, z = 0;
                      z < Ra;
                      z++) {
                    if (GetParentbyTagName(Ea,
                        b.checkEnterKeyTargetTagArr[z], !0)) {
                      b.isEnterKeyInTargetTag = !0;
                      break
                    }
                  }
                  if (1 == b.isEnterKeyInTargetTag) {
                    var ma = Ea;
                    if ("DIV" ==
                        ma.tagName) {
                      b.changeDivTagArr.push(ma);
                    } else {
                      for (var oa = ma; ;) {
                        var ya = oa.tagName;
                        if ("BODY" == ya) {
                          oa = null;
                          break
                        }
                        if (ya && ("LI" == ya || 2 == ya.length && 0
                            == ya.indexOf(
                                "H"))) {
                          break;
                        } else {
                          oa = oa.parentNode
                        }
                      }
                      null == oa && (ma = GetParentbyTagName(ma, "div", !0))
                      && b.changeDivTagArr.push(ma)
                    }
                  }
                } catch (Za) {
                  b.isEnterKeyInTargetTag = !1, b.changeDivTagArr = []
                }
              }
              KEDITORTOP.RAONKEDITOR.browser.ie && setLineHeightForBgColor()
            }
            KEDITORTOP.RAONKEDITOR.browser.ie && 9
            >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && moveRulerPosition(a);
            try {
              if (229 == c || "string" ==
                  typeof a.key && 0 == a.ctrlKey && 1 == a.key.length) {
                var ib = getFirstRange().range.startContainer,
                    Va = GetTDTHCell(ib);
                Va && b.lastCellForUndoManager != Va
                && (b.lastCellForUndoManager = Va, b.UndoManager.putUndo(), b.UndoManager.charCount = 0)
              }
            } catch (jb) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(jb)
            }
            if (KEDITORTOP.RAONKEDITOR.browser.ie && 13 == c && !a.ctrlKey
                && !a.altKey && !a.shiftKey) {
              var $a = getFirstRange(), E = $a.range;
              if ($a.sel.isCollapsed && 3 == E.startContainer.nodeType) {
                var Fa = getMyElementNode(E.startContainer);
                "span" == Fa.tagName.toLowerCase() && Fa.nextSibling && null
                == Fa.nextSibling.nextSibling && 1 == Fa.nextSibling.nodeType
                && "br" == Fa.nextSibling.tagName.toLowerCase()
                && Fa.nextSibling.removeNode(!0)
              }
            }
            if (1 == bCtrlKey && 0 == a.altKey && 89
                == c) {
              b.UndoManager.execRedo(), KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                  a);
            } else if (1 == bCtrlKey && 0 == a.altKey && 90
                == c) {
              getApplyDragResize(b)
              && b.keditor_dragresize.G_keditorResize_elem
              && b.keditor_dragresize.resizeHandleClear(), "1"
              == b._config.undoMode
              && 0 < b.UndoManager.charCount && (b.UndoManager.putUndo(),
                  b.UndoManager.charCount = 0), b.UndoManager.execUndo(), KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                  a);
            } else if (0 == bCtrlKey && 13 == c) {
              var Ka = !0;
              "1" == b._config.useUndoLightMode && (isSelected() || (Ka = !1));
              Ka && (isSelected() && setTimeout(function () {
                b.UndoManager.putUndo();
                b.UndoManager.charCount = 0
              }, 1), b.UndoManager.putUndo(), b.UndoManager.charCount = 0)
            } else if (0 == bCtrlKey && (46 == c || 8 == c)) {
              if (Da = oneCellAndRowContentsDeleteAction(b,
                  c)) {
                KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                    a), KEDITORTOP.RAONKEDITOR.util.stopEvent(a),
                    b.UndoManager.putUndo(), b.UndoManager.charCount = 0;
              }
              if (setDeleteKeyAction()) {
                return "1" == b._config.allowDeleteCount
                    ? (b.UndoManager.charCount += 1, b.UndoManager.charCount
                    >= G_PutUndoCharCount
                    && (b.UndoManager.putUndo(), b.UndoManager.charCount = 0))
                    : (b.UndoManager.putUndo(), b.UndoManager.charCount = 0), KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                    a), KEDITORTOP.RAONKEDITOR.util.stopEvent(a), !0
              }
            }
            if (1 != deleteTableUsingKey(a, b)) {
              if (0 == bCtrlKey && (46 == c || 8 == c)) {
                var wa = getFirstRange().range.startContainer;
                3 == wa.nodeType && (wa =
                    wa.parentNode);
                !KEDITORTOP.RAONKEDITOR.browser.ie || 1 != wa.childNodes.length
                || wa.innerHTML != unescape("%u200B") && wa.innerHTML
                != unescape(
                    "%uFEFF") || (wa.innerHTML = "");
                try {
                  var Ga = getFirstRange(), Sa = Ga.range;
                  if (Sa.startContainer == Sa.endContainer) {
                    var ia = GetParentbyTagName(wa, "p");
                    if (ia) {
                      if (KEDITORTOP.RAONKEDITOR.browser.ie) {
                        var ab = Ga.sel;
                        if (1 == KEDITORTOP.RAONKEDITOR.util.isEmptyContents(
                            ia)) {
                          var La = !1, bb = !1;
                          if (8 == c && ia.previousSibling) {
                            var ea = ia.previousSibling, ua = null;
                            if (1 != ea.nodeType || !ea.childNodes ||
                                0 != ea.childNodes.length) {
                              if (3
                                  == ea.nodeType) {
                                try {
                                  var sa = ea.nodeValue,
                                      sa = sa.replace(/\n/g, ""),
                                      sa = sa.replace(/\r/g, ""),
                                      sa = sa.replace(/\t/g, ""),
                                      sa = sa.replace(/ /g, ""),
                                      sa = sa.replace(/\s/g, "");
                                  if ("" == sa) {
                                    if (ea.previousSibling && 1
                                        == ea.previousSibling.nodeType) {
                                      ua = getMyChildElementNode(
                                          ea.previousSibling), ea.parentNode.removeChild(
                                          ea);
                                    } else {
                                      null == ea.previousSibling && "BODY"
                                      == ea.parentNode.tagName
                                      && (ea.parentNode.removeChild(
                                          ea), KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                                          a));
                                      return
                                    }
                                  } else {
                                    ua = getMyChildElementNode(ea)
                                  }
                                } catch (nb) {
                                  return
                                }
                              } else {
                                ua =
                                    getMyChildElementNode(ea);
                              }
                            }
                            null == ua
                            && (ua = ea, KEDITORTOP.RAONKEDITOR.browser.ie && 8
                            >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
                            && a.srcElement && "BODY" == a.srcElement.tagName
                            && (bb = !0));
                            "BR" == ua.nodeName && (ua = ea);
                            La = !0;
                            if ("HR" == ea.nodeName || "DIV" == ea.nodeName
                                && "keditor_Page_Break"
                                == ea.className) {
                              La = !1, fn_PrevOrNextNodeForkeyDownEvt(
                                  c, Ga, ia, !0)
                              && KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                                  a), ua = ea.previousSibling;
                            }
                            window.setTimeout(function () {
                              doSetCaretPosition(ua, 1)
                            }, 0)
                          } else {
                            46 == c && ia.nextSibling && (La = !0, "HR"
                            == ia.nextSibling.nodeName &&
                            (La = !1, fn_PrevOrNextNodeForkeyDownEvt(c, Ga, ia,
                                !0, 11
                                == KEDITORTOP.RAONKEDITOR.browser.ieVersion)), "DIV"
                            == ia.nextSibling.nodeName && "keditor_Page_Break"
                            == ia.nextSibling.className
                            && ia.nextSibling.parentNode.removeChild(
                                ia.nextSibling));
                          }
                          La && !bb && (ab.removeAllRanges(), Sa.selectNode(
                              ia), ab.addRange(Sa))
                        } else {
                          fn_PrevOrNextNodeForkeyDownEvt(c, Ga, ia, !0)
                          && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
                        }
                      } else {
                        0 == KEDITORTOP.RAONKEDITOR.util.isEmptyContents(ia)
                        && fn_PrevOrNextNodeForkeyDownEvt(c, Ga, ia, !1)
                        && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
                      }
                    }
                  }
                } catch (kb) {
                  KEDITORTOP &&
                  KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
                  && console.log(kb)
                }
                if (KEDITORTOP.RAONKEDITOR.browser.ie && "1"
                    == b._config.allowUnableToDeleteMsg) {
                  var Y = getFirstRange().range, lb = Y.endContainer,
                      cb = GetParentbyTagName(Y.startContainer, "table"),
                      db = GetParentbyTagName(lb, "table");
                  (cb || db) && cb != db && alert(
                      RAONKEditor_lang.msg.unable_to_delete)
                }
                "1" == b._config.allowDeleteCount
                    ? (b.UndoManager.charCount += 1, b.UndoManager.charCount
                    >= G_PutUndoCharCount
                    && (b.UndoManager.putUndo(), b.UndoManager.charCount = 0))
                    : (Ka =
                        !0, "1" == b._config.useUndoLightMode && (isSelected()
                        || (Ka = !1)), Ka && (isSelected() && setTimeout(
                        function () {
                          b.UndoManager.putUndo();
                          b.UndoManager.charCount = 0
                        },
                        1), b.UndoManager.putUndo(), b.UndoManager.charCount = 0));
                if (removePTagNearTable(
                    c)) {
                  return KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                      a), KEDITORTOP.RAONKEDITOR.util.stopEvent(a), !0
                }
              }
              "1" == ta && 0 == bCtrlKey && (32 <= c && 127 >= c || c == la)
              && (0
              == b.UndoManager.index && 0 < b.UndoManager.arrImageHTML.length
                  ? (b.UndoManager.arrImageHTML.length = 1, b.UndoManager.charCount = 0)
                  : b.UndoManager.index <
                  b.UndoManager.arrImageHTML.length
                  && (b.UndoManager.arrImageHTML.length = b.UndoManager.index
                      + 1), 32 < c && 41 > c
              || (b.UndoManager.charCount += 1), 1
              == b.UndoManager.canRedo
              && (b.UndoManager.canRedo = !1, b.UndoManager.canUndo = !0, b._iconEnable(
                  "")), b.UndoManager.charCount >= G_PutUndoCharCount
              && (b.UndoManager.putUndo(), b.UndoManager.charCount = 0));
              !KEDITORTOP.RAONKEDITOR.browser.ie || 37 != c && 38 != c && 39
              != c
              && 40 != c || setTableArrowKeyDownAction(a);
              if (1 == b._config.adjustCursorInTable && 0 == a.shiftKey && 0
                  == a.ctrlKey && 0 == a.altKey &&
                  (38 == c || 40 == c)) {
                var E = getFirstRange().range, Wa = E.startContainer;
                if ((Q = GetTDTHCell(Wa)) && 0 == isSelected()) {
                  var xa = !1, Ma = !1, Xa = function () {
                    try {
                      var a = _iframeDoc.getElementsByTagName("keditor_dummy");
                      if (a) {
                        for (var b = a.length - 1; 0 <= b;
                            b--) {
                          a[b].parentNode.removeChild(a[b])
                        }
                      }
                    } catch (c) {
                      KEDITORTOP && KEDITORTOP.RAONKEDITOR
                      && KEDITORTOP.RAONKEDITOR.logMode && console.log(c)
                    }
                  };
                  if (40 == c) {
                    h = Wa;
                    if (1 == h.nodeType && 0 < h.childNodes.length) {
                      var va = h.childNodes[E.startOffset];
                      if (0 == !!va) {
                        for (z = E.startOffset - 1; 0 <= z; z--) {
                          if (va = h.childNodes[z]) {
                            h =
                                va;
                            break
                          }
                        }
                      } else {
                        h = va
                      }
                    }
                    if (h.nodeType && "BR" == h.tagName && h.nextSibling) {
                      var Na = h.nextSibling;
                      if (1 == Na.nodeType && "BR" == Na.tagName) {
                        null
                        == Na.nextSibling ? xa = !0 : Ma = !0;
                      } else if (3
                          != Na.nodeType || "" != Na.textContent.replace(/\s/g,
                              "")) {
                        Ma = !0
                      }
                    }
                    if (0 == Ma && 0 == xa) {
                      var pa = _iframeDoc.createElement("keditor_dummy");
                      try {
                        1 == h.nodeType ? h.nextSibling
                            ? h.parentNode.insertBefore(pa, h.nextSibling)
                            : h.parentNode.appendChild(pa) : 3 == h.nodeType
                            && E.insertNode(pa)
                      } catch (ob) {
                        Xa()
                      }
                      try {
                        var da = Q.innerHTML.toLowerCase(),
                            Oa = da.indexOf("</keditor_dummy>");
                        -1 < Oa && (da = da.substring(
                            Oa + 13), pa.parentNode.removeChild(pa), 0
                        == da.indexOf("<br") && (da = da.replace(
                            /<br *([^>?+])*>/i, "")), da = da.replace(
                            /<br *([^>?+])*><\//gi, "</"), 0 > da.indexOf("<p")
                        && 0 > da.indexOf("<br") && 0 > da.indexOf("<div") && 0
                        > da.indexOf("<table") && (xa = !0))
                      } catch (pb) {
                        xa = !1
                      }
                    }
                  } else if (38 == c) {
                    h = Wa;
                    if (1 == h.nodeType && 0
                        < h.childNodes.length) {
                      if (va = h.childNodes[E.startOffset], 0
                      == !!va) {
                        for (z = E.startOffset - 1; 0 <= z; z--) {
                          if (va = h.childNodes[z]) {
                            h = va;
                            break
                          }
                        }
                      } else {
                        h = va;
                      }
                    }
                    if (h.nodeType && "BR" == h.tagName && h.previousSibling) {
                      var eb =
                          h.previousSibling;
                      1 == eb.nodeType && "BR" == eb.tagName && (Ma = !0)
                    }
                    if (0 == Ma && 0 == xa) {
                      pa = _iframeDoc.createElement("keditor_dummy");
                      try {
                        1 == h.nodeType ? h.previousSibling
                            ? h.parentNode.insertBefore(pa, h)
                            : h.parentNode.firstChild
                                ? h.parentNode.insertBefore(
                                    pa, h.parentNode.firstChild)
                                : h.parentNode.appendChild(pa) : 3 == h.nodeType
                            && E.insertNode(pa)
                      } catch (qb) {
                        Xa()
                      }
                      try {
                        da = Q.innerHTML.toLowerCase(), Oa = da.indexOf(
                            "<keditor_dummy>"), -1 < Oa && (da = da.substring(0,
                            Oa), pa.parentNode.removeChild(pa), da = da.replace(
                            /<br *([^>?+])*>$/i,
                            ""), da = da.replace(/<br *([^>?+])*><\//gi,
                            "</"), 0
                        > da.indexOf("</p") && 0 > da.indexOf("</div") && 0
                        > da.indexOf("</table") && 0 > da.indexOf("<br")
                        && (xa = !0))
                      } catch (rb) {
                        xa = !0
                      }
                    }
                  }
                  if (xa) {
                    KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
                    KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
                    var Ya = getTopOrBottomBoundNextCell(Q, c);
                    if (Ya.nextCell) {
                      if (40 == c) {
                        for (var ja = Ya.nextCell;
                            ja.firstChild;) {
                          if (ja.firstChild) {
                            ja = ja.firstChild;
                          } else {
                            break;
                          }
                        }
                        3 == ja.nodeType ? ja = ja.parentNode : 1 != ja.nodeType
                            || "BR" != ja.tagName && "IMG" != ja.tagName
                            || (ja = ja.parentNode);
                        doSetCaretPosition(ja, 0)
                      } else {
                        38 == c && (ja = Ya.nextCell, setFocusChildForStyle(ja,
                            1, !0));
                      }
                    } else {
                      q = GetParentbyTagName(Q, "table"), 40 == c
                          ? q.nextSibling && doSetCaretPosition(q.nextSibling,
                          0)
                          : 38 == c && q.previousSibling
                          && setFocusChildForStyle(
                              q.previousSibling, 1, !0)
                    }
                  }
                  Xa()
                }
              }
              if (32 == c && "1" == KEDITORTOP.G_CURRKEDITOR.autoListUse) {
                try {
                  if (Y = getFirstRange().range, 1 == Y.collapsed
                  && (A = getMyElementNode(
                      Y.startContainer), A = GetParentbyTagName(A, "p"))) {
                    var za = function (c, d) {
                          KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
                          b.UndoManager.putUndo();
                          var e = c.innerHTML.substring(0,
                                  c.innerHTML.indexOf("1.")),
                              e = ReplaceAll(e, "&nbsp;", ""),
                              e = KEDITORTOP.RAONKEDITOR.util.rtrim(
                                  KEDITORTOP.RAONKEDITOR.util.ltrim(e)),
                              e = e.replace(/>\s+</gi, "><"),
                              e = e + c.innerHTML.substring(
                                  c.innerHTML.indexOf("1."),
                                  c.innerHTML.length);
                          c.innerHTML = e;
                          e = c;
                          c.firstChild && 1 == c.firstChild.nodeType
                          && (e = c.firstChild);
                          doSetCaretPosition(e, 0);
                          try {
                            for (var f = c.childNodes, g = f.length, h = 0; h < g;
                                h++) {
                              if (3 == f[h].nodeType) {
                                if (0 == ReplaceAll(
                                    f[h].textContent.replace(/\s/g, ""),
                                    unescape("%u200B"),
                                    "").length) {
                                  f[h].textContent =
                                      "";
                                } else {
                                  var q = d.replace(".", "\\.").replace("*", "\\*"),
                                      m = new RegExp(q, ""),
                                      t = f[h].textContent.match(m);
                                  if (t && 0 < t.length) {
                                    f[h].textContent = f[h].textContent.replace(m,
                                        "");
                                    break
                                  }
                                }
                              }
                            }
                            doSetCaretPosition(e, 0)
                          } catch (u) {
                            KEDITORTOP && KEDITORTOP.RAONKEDITOR
                            && KEDITORTOP.RAONKEDITOR.logMode && console.log(u)
                          }
                        }, na = A.innerText, Ha = Y.startContainer.nodeValue,
                        Ha = Ha.substring(0, getFirstRange().range.startOffset),
                        Ha = KEDITORTOP.RAONKEDITOR.util.ltrim(Ha),
                        na = KEDITORTOP.RAONKEDITOR.util.ltrim(na),
                        na = na.substring(0, Ha.length);
                    if (Ha == na) {
                      switch (ReplaceAll(na, unescape("%u200B"), "")) {
                        case "1.":
                          za(A, na);
                          command_insertOrderedList(b.ID, b);
                          break;
                        case "01.":
                          za(A, na);
                          command_listNumberBullets(b.ID, b, "N",
                              "decimal-leading-zero");
                          break;
                        case "i.":
                          za(A, na);
                          command_listNumberBullets(b.ID, b, "N",
                              "lower-roman");
                          break;
                        case "I.":
                          za(A, na);
                          command_listNumberBullets(b.ID, b, "N",
                              "upper-roman");
                          break;
                        case "a.":
                          za(A, na);
                          command_listNumberBullets(b.ID, b, "N",
                              "lower-alpha");
                          break;
                        case "A.":
                          za(A, na);
                          command_listNumberBullets(b.ID, b, "N",
                              "upper-alpha");
                          break;
                        case "*":
                          za(A, na), command_insertUnOrderedList(b.ID, b)
                      }
                    }
                  }
                } catch (mb) {
                  KEDITORTOP && KEDITORTOP.RAONKEDITOR
                  && KEDITORTOP.RAONKEDITOR.logMode && console.log(mb)
                }
              }
              deleteOlUlUsingKey(a, b);
              removeEmptyTagByBackspace(a);
              putUndoWordCount(a);
              setTimeout(function () {
                bCtrlKey = !1
              }, 300);
              if (27 == c) {
                var fb = KEDITORTOP.document.getElementById(
                    "keditor_context_background" + b.ID);
                fb && "none" != fb.style.display && KEDITOR_CONTEXT.hide()
              }
              var gb = a.ctrlKey, hb = a.altKey;
              setTimeout(function () {
                if (0 == g) {
                  var a = getFirstRange().range.startContainer;
                  3 == a.nodeType && (a = a.parentNode);
                  G_CURSOR_ELEMENT = a
                }
                a = !1;
                0 == gb && 0 == hb ? a = 8 <= c && 13 >= c || 32 == c || 46 <= c
                    && 90 >= c || 96 <= c && 111 >= c || 186 <= c && 192 >= c
                    || 219 <= c && 222 >= c || 229 == c : 1 == gb && 0 == hb
                    && (a = 66 == c || 68 == c || 69 == c || 72 == c || 73 == c
                        || 76 == c || 85 == c || 86 == c || 88 == c || 89 == c
                        || 90 == c || 222 == c);
                onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: a})
              }, 10);
              "1" == KEDITORTOP.G_CURRKEDITOR._config.clickCtrlHyperlink
              && b.isAOver.over && !b.isAOver.linkStyle && a.ctrlKey
              && hyperLinkIn()
            }
          }
        }
      }
    }
  }
}

function _iframeDoc_input(a) {
  var c = getEditrFromEvent(a);
  setKEDITORWINDOC(c);
  try {
    var b = G_KPlugin.mention;
    if (b) {
      b.onInput({evt: a})
    }
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
}

function _iframeDoc_Copy(a) {
  var c = getEditrFromEvent(a);
  setKEDITORWINDOC(c);
  var b = c._config.replaceMsoStyle, d = b.settingStyle.length;
  if (0 < d) {
    try {
      for (var e = getFirstRange().range.toHtml(), f = 0; f < d; f++) {
        var g = getReplaceMsoStyleReg(
            b.settingStyle[f].replace("mso", b.replaceAttributeName));
        reg_exp = new RegExp(g, "gi");
        if (reg_exp.test(e)) {
          var h = 0, m = 0;
          if (KEDITORTOP.RAONKEDITOR.browser.ie && 9
              > KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
            try {
              h = Math.max(_iframeDoc.documentElement.scrollLeft,
                  _iframeDoc.body.scrollLeft),
                  m = Math.max(_iframeDoc.documentElement.scrollTop,
                      _iframeDoc.body.scrollTop)
            } catch (q) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(q)
            }
          }
          var t = document.createElement("div");
          t.style.position = "absolute";
          t.style.left = "-5000px";
          t.style.top = m + "px";
          t.id = "raonk_temp_copy_div_number";
          t.style.width = "1px";
          t.style.height = "1px";
          t.innerHTML = e;
          for (var u = 0; u < d; u++) {
            for (var v = b.settingStyle[f],
                w = t.querySelectorAll(
                    "span[" + v.replace("mso", b.replaceAttributeName) + "]"),
                x = 0; x < w.length; x++) {
              if (w[x].parentNode) {
                var y =
                        w[x].outerHTML, z = y.substring(0, y.indexOf(">") + 1),
                    A = y.substring(y.indexOf(">") + 1);
                if (!(-1 < z.indexOf(v))) {
                  if (-1 < z.indexOf("style")) {
                    var B = RegExp("(style=['\"])", "gi");
                    w[x].outerHTML = z.replace(B,
                        "$1" + v + ": "
                        + c._config.replaceMsoStyle.styleValue[v]
                        + "; ") + A
                  } else {
                    B = RegExp("(<span)", "gi"), w[x].outerHTML = z.replace(B,
                        '$1 style="' + v + ": "
                        + c._config.replaceMsoStyle.styleValue[v]
                        + ';"') + A
                  }
                }
              }
            }
          }
          void 0 != a.clipboardData ? (a.clipboardData.setData("text/html",
              t.innerHTML), a.preventDefault()) : setTimeout(function () {
            try {
              _iframeDoc.body.appendChild(t);
              var a = saveSelection(c.ID, !0), b = getFirstRange(), d = b.range,
                  e = b.sel;
              d.setStartBefore(t.firstChild);
              d.setEndAfter(t.firstChild);
              e.removeAllRanges();
              e.addRange(d);
              KEDITORTOP.RAONKEDITOR.util.removeEvent(_iframeDoc, "copy",
                  _iframeDoc_Copy);
              _iframeDoc.execCommand("copy");
              if (a) {
                restoreSelection(a, !0);
                try {
                  KEDITORTOP.RAONKEDITOR.browser.ie && 9
                  > KEDITORTOP.RAONKEDITOR.browser.ieVersion
                  && _iframeWin.scroll(
                      h, m)
                } catch (f) {
                  KEDITORTOP && KEDITORTOP.RAONKEDITOR
                  && KEDITORTOP.RAONKEDITOR.logMode && console.log(f)
                }
              }
              t.parentNode.removeChild(t);
              KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "copy",
                  _iframeDoc_Copy)
            } catch (g) {
              t && t.parentNode && t.parentNode.removeChild(t)
            }
          }, 0)
        }
      }
    } catch (C) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(C)
    }
  }
}

function fn_PrevOrNextNodeForkeyDownEvt(a, c, b, d, e) {
  var f = c.range, g = c.sel;
  c = c.range.cloneRange();
  var h = !1;
  if (46 == a) {
    try {
      var m = f.getBoundingDocumentRect(),
          q = saveSelection(KEDITORTOP.G_CURRKEDITOR.ID, !0);
      g.removeAllRanges();
      KEDITORTOP.RAONKEDITOR.browser.ie ? f.selectNode(b)
          : f.selectNodeContents(
              b);
      1 == e && f.selectNodeContents(b);
      g.addRange(f);
      var t = f.getBoundingDocumentRect();
      restoreSelection(q, !0);
      0 == Math.round(m.width) && Math.round(m.left) == Math.round(m.right)
      && Math.round(m.right) == Math.round(t.right) &&
      (h = !0)
    } catch (u) {
      restoreSelection(c, !0)
    }
  } else {
    8 == a && 0 == f.startOffset && 0 == f.endOffset && (h = !0);
  }
  if (h) {
    G_KeyDownUpSync = d;
    var v;
    8 == a && b.previousSibling ? v = b.previousSibling : 46 == a
        && b.nextSibling && (v = b.nextSibling);
    if (v) {
      if (KEDITORTOP.RAONKEDITOR.browser.ie && 1
          == KEDITORTOP.RAONKEDITOR.util.isEmptyContents(
              v)) {
        v.innerHTML = "";
      } else if ("FIGURE" == v.nodeName || "HR"
          == v.nodeName) {
        KEDITORTOP.RAONKEDITOR.browser.ie
            ? (g.removeAllRanges(), f.selectNode(v), g.addRange(f))
            : v.parentNode.removeChild(v);
      } else if ("DIV" == v.nodeName &&
          "keditor_Page_Break" == v.className) {
        return v.parentNode.removeChild(
            v), !0
      }
    }
  }
}

function fn_PastePlugin_htmlTagRevision_After(a) {
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
  && destoryWebWorkerVar();
  a = removeTagStyle(a);
  a = repairPasteTextInCell(a);
  0 < a.length ? (0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && (KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR._iconEnable(
      "")), "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
      ? (a = KEDITORTOP.RAONKEDITOR.util.officeCleanByDom(a,
          !0), showProcessingBackground(), fn_processHtmlWorker({
        editorBrowser: {
          ie: KEDITORTOP.RAONKEDITOR.browser.ie,
          ieVersion: KEDITORTOP.RAONKEDITOR.browser.ieVersion,
          gecko: KEDITORTOP.RAONKEDITOR.browser.gecko
        },
        editorConfig: KEDITORTOP.G_CURRKEDITOR._config,
        callFn: "KEDITORTOP.RAONKEDITOR.util.officeClean",
        callFnParam: [a, !0, void 0,
          KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType],
        callBackFn: fn_PastePlugin_officeClean_After
      })) : (1 != KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType
      && (a = KEDITORTOP.RAONKEDITOR.util.officeClean(a,
          !0)), fn_PastePlugin_officeClean_After(a))) : "1"
      == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker &&
      hideProcessingBackground()
}

function fn_PastePlugin_officeClean_After(a) {
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
  && destoryWebWorkerVar();
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.tableAutoAdjustInPaste) {
    var c = /<table/i;
    c.test(a) && (a = command_AdjustTableAndCellWidth(
        KEDITORTOP.G_CURRKEDITOR.ID, KEDITORTOP.G_CURRKEDITOR,
        {type: "paste", htmlData: a}))
  }
  a = OfficePasteClean(a);
  c = !0;
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager && (4
  == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType ? c = !1 : 5
      == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType
      && KEDITORTOP.RAONKEDITOR.browser.ie &&
      9 > KEDITORTOP.RAONKEDITOR.browser.ieVersion && (c = !1));
  if ("HWP" == getPasteFormatType()) {
    for (var b = RegExp("(<p [^>]*)(background:#000000;)", "gi");
        b.test(a);) {
      a = a.replace(b, "$1");
    }
    for (b = RegExp("(<p [^>]*)(background: rgb\\(0, 0, 0\\);)", "gi");
        b.test(a);) {
      a = a.replace(b, "$1")
    }
  }
  c && (a = KEDITORTOP.RAONKEDITOR.util.emptyTagRemove(a));
  a = IEPasteRemoveEmptyNodes(a);
  a = KEDITORTOP.RAONKEDITOR.util.htmlRevision(a);
  a = xssReplaceScript(null, a);
  a = removeEditorAttribute(a);
  "1" == KEDITORTOP.G_CURRKEDITOR._config.compatibility.dingBatCharPaste &&
  (a = dingBatFont(a, KEDITORTOP.G_CURRKEDITOR));
  try {
    if ("function" === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste
        || "function"
        === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste) {
      c = a;
      try {
        b = {strHtml: a}, "function"
        === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste
            ? c = KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste(
                KEDITORTOP.G_CURRKEDITOR.ID, b) : "function"
            === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste
            && (c = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste(
                KEDITORTOP.G_CURRKEDITOR.ID,
                b))
      } catch (d) {
        c = a
      }
      if (c) {
        a = c;
      } else if (0 == c || "" == c) {
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
        && hideProcessingBackground();
        return
      }
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
  if (pasteWordCount(a)) {
    0 < a.length && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    -1 < a.indexOf("keditorcustomdata") && (a = checkExistCustomData(a));
    a = externalPageBreakDataRaplaceInEditor(a);
    var b = GetTableSelectionCells(), f = document.createElement("div");
    f.innerHTML = a;
    c =
        f.childNodes;
    if (1 == c.length && c[0].tagName && "table" == c[0].tagName.toLowerCase()
        && 0 < b.length) {
      0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
      && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), command_tablePaste(
          KEDITORTOP.G_CURRKEDITOR.ID, KEDITORTOP.G_CURRKEDITOR,
          c[0]), KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
    } else {
      var g = getFirstRange().range, h = null;
      g.startContainer == g.endContainer && (b = g.startContainer, 3
      == b.nodeType && (b = b.parentNode), h = GetTDTHCell(b));
      b = !1;
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useTablePasteDialog && h && 1
      == c.length && c[0].tagName && "table" == c[0].tagName.toLowerCase()
      && (b = !0);
      if (b) {
        KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableNode = c[0], KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableHtml = a, KEDITORTOP.G_CURRKEDITOR.pasteTableParam.currCellNode = h, KEDITORTOP.G_CURRKEDITOR.pasteTableParam.currTableNode = GetParentbyTagName(
            h, "table"), RAONK_EDITOR.prototype.dialog.show(
            KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
            KEDITORTOP.G_CURRKEDITOR._config.pages.paste_table);
      } else {
        var m = !1, q = !1;
        h && g.startOffset == g.endOffset && !function () {
          var a = !1, b = GetParentbyTagName(h, "table");
          1 < f.getElementsByTagName("p").length && "" == b.style.fontSize
              ? (a = KEDITORTOP.RAONKEDITOR.util.getStyle(b,
                  "fontSize"), b.style.fontSize = a, a = q = !0) : 1
              < f.getElementsByTagName("p").length && "" != b.style.fontSize
                  ? a = !0 : 3 == g.startContainer.nodeType ? a = !1 : 1
                      == g.startContainer.nodeType && 0 == g.startOffset && "P"
                      == g.startContainer.nodeName && 1
                      == g.startContainer.childNodes.length && (1
                          != g.startContainer.childNodes[0].nodeType ||
                          "BR" != g.startContainer.childNodes[0].nodeName && "SPAN"
                          != g.startContainer.childNodes[0].nodeName || (a = !0));
          return a
        }() && (m = !0);
        m || (c = /<h[0-9]/i, m = c.test(a));
        setTimeout(function () {
          if (m || !KEDITORTOP.RAONKEDITOR.browser.chrome
              && !KEDITORTOP.RAONKEDITOR.browser.opera || 1
              == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType) {
            pasteHtmlAtCaretHuge(
                a, !1, !1, !0);
          } else {
            _iframeDoc.execCommand("inserthtml", !1, a);
            q && (GetParentbyTagName(h, "table").style.fontSize = "");
            var b = getFirstRange().range;
            b && (rangy.getSelection(_iframeWin).removeAllRanges(),
                rangy.getSelection(_iframeWin).addRange(b));
            KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo()
          }
          onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0})
        }, 0)
      }
    }
    checkPasteImage(a);
    0 > a.indexOf("keditorcustomdata") && (ReplaceImageToRealObject(
        !0), KEDITORTOP.G_CURRKEDITOR._editorCustomDataMode = !0, removeAllKEditorCustomData(), ReplaceRealObjectToImage(
        !1), ClearDraggingTableAllTable())
  }
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
  && hideProcessingBackground()
}

function removePTagNearTable(a) {
  var c = !1;
  try {
    var b = getFirstRange().range;
    if (0 == b.collapsed) {
      return c;
    }
    var d = null;
    b && b.startContainer && (d = getMyElementNode(b.startContainer));
    if (d && 1 == d.nodeType) {
      var e = d.innerHTML;
      if ("" == e || "<br>" == e || "<br/>" == e || "<br />" == e) {
        if (46 == a
            ? nearElem = d.nextSibling : 8 == a
            && (nearElem = d.previousSibling), nearElem && 1
        == nearElem.nodeType
        && ("table" == nearElem.tagName.toLowerCase() || "blockquote"
            == nearElem.tagName.toLowerCase())) {
          if (46 == a) {
            "table" == nearElem.tagName.toLowerCase()
                ? doSetCaretPosition(nearElem.rows[0].cells[0],
                    0) : doSetCaretPosition(nearElem, 0);
          } else if (8
              == a) {
            if ("table" == nearElem.tagName.toLowerCase()) {
              var f = nearElem.rows.length;
              doSetCaretPosition(
                  nearElem.rows[f - 1].cells[nearElem.rows[f - 1].cells.length
                  - 1],
                  0)
            } else {
              var g = nearElem.childNodes[nearElem.childNodes.length - 1];
              g || (g = nearElem);
              doSetCaretPosition(g, 1)
            }
          }
          d.innerHTML = "";
          d.parentNode.removeChild(d);
          c = !0
        }
      }
    }
  } catch (h) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(h)
  }
  return c
}

function setPasteCellData() {
  var a = getFirstRange().range, c = null;
  if (a && a.startContainer) {
    if (c = DrageStartCell) {
      var b = GetTDTHCell(c);
      if (b) {
        if (null == KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA) {
          return !1;
        }
        for (var d = GetParentbyTagName(b, "tr"),
            a = GetParentbyTagName(b, "table"), b = b.cellIndex, d = d.rowIndex,
            e, f = KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA.length, g = 0, h = 0;
            h < f && void 0 != a.rows[d + h]; h++) {
          for (var g = KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA[h].length, m = 0;
              m < g && !(g > a.rows[d + h].cells.length); m++) {
            void 0
            != a.rows[d + h].cells[b +
            m] && (a.rows[d + h].cells[b
            + m].innerHTML = KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA[h][m], e = a.rows[d
            + h].cells[b + m]);
          }
          try {
            if (a.rows[d + (h + 1)]) {
              for (var q = a.rows[d + (h + 1)].cells,
                  g = 0; g <= q.length; g++) {
                var t = getClientRect(q[g]), u = getClientRect(c);
                if (t.left <= u.left && t.right > u.left) {
                  b = q[g].cellIndex;
                  break
                }
              }
            }
          } catch (v) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode && console.log(v)
          }
        }
        null != e && (doSetCaretPosition(e.childNodes[0],
            1), KEDITORTOP.RAONKEDITOR.browser.ie && 11
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion &&
        "&nbsp;" == e.innerHTML && (e.innerHTML = ""))
      } else {
        if (null == KEDITORTOP.RAONKEDITOR.G_COPIEDTABLE) {
          return !1;
        }
        c = KEDITORTOP.RAONKEDITOR.G_COPIEDTABLE.outerHTML;
        0 == KEDITORTOP.RAONKEDITOR.browser.gecko
        && (c = KEDITORTOP.RAONKEDITOR.browser.ie && 11
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion ? c + "<p></p>" : c
            + getDefaultParagraphValue(!0));
        pasteHtmlAtCaretHuge(c)
      }
    } else {
      if (null == KEDITORTOP.RAONKEDITOR.G_COPIEDTABLE) {
        return !1;
      }
      restoreSelection();
      setFocusToBody();
      a = getFirstRange().range;
      getMyElementNode(a.startContainer);
      c = KEDITORTOP.RAONKEDITOR.G_COPIEDTABLE.outerHTML;
      0 == KEDITORTOP.RAONKEDITOR.browser.gecko
      && (c = KEDITORTOP.RAONKEDITOR.browser.ie && 11
      > KEDITORTOP.RAONKEDITOR.browser.ieVersion ? c + "<p></p>" : c
          + getDefaultParagraphValue(!0));
      pasteHtmlAtCaretHuge(c)
    }
    return !0
  }
  return !1
}

function getEnterTagString(a) {
  var c = "", c = KEDITORTOP.RAONKEDITOR.browser.ie && 11
  > KEDITORTOP.RAONKEDITOR.browser.ieVersion ? "&nbsp;" : "<br />", b = "";
  "br" == a ? b = "<br />" : "p" == a ? b = "<p>" + c + "</p>" : "div" == a
      && (b = "<div>" + c + "</div>");
  return b
}

function _iframeDoc_Keyup(a) {
  var c = getEditrFromEvent(a);
  setKEDITORWINDOC(c);
  if (isViewMode(c)) {
    KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
  } else {
    var b = "which" in a ? a.which : a.keyCode,
        d = a.target ? a.target : a.srcElement,
        e = d.tagName ? d.tagName.toLowerCase() : null;
    "1" == KEDITORTOP.G_CURRKEDITOR._config.clickCtrlHyperlink
    && (c.isAOver.openHelp && 17 != b ? hyperHelpClose() : c.isAOver.over
        && (c.isAOver.node || c.isAOver.nodeChild) && c.isAOver.linkStyle
        && hyperLinkOut());
    if (0 == checkContentEditable(c, d)) {
      c = !0;
      if (a.ctrlKey || a.metaKey) {
        67 ==
        b && (c = !1), 70 == b && (c = !1), 80 == b && (c = !1);
      }
      c && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
    } else {
      d = !1;
      if ("textarea" == e || "input" == e) {
        d = !0;
      }
      if (0 == d) {
        var f = getFirstRange().range.startContainer;
        3 == f.nodeType && (f = f.parentNode);
        G_CURSOR_ELEMENT = f;
        set_ruler_vertical_height(c);
        set_ruler_horizontal_width(c);
        try {
          if (f && 1 == f.nodeType && "hr" == f.tagName.toLowerCase()
              && !a.shiftKey && !a.ctrlKey) {
            if (e = f, 37 == b) {
              for (;
                  e && (1 != e.nodeType || "hr" == e.tagName.toLowerCase());) {
                if (3 == e.nodeType) {
                  e = e.parentNode;
                  break
                }
                if (!e.previousSibling) {
                  var g =
                      _iframeDoc.createElement("p");
                  g.innerHTML = getDefaultParagraphValue(!1);
                  e.parentNode.insertBefore(g, e)
                }
                e = e.previousSibling
              }
              if (e) {
                if (e && "table" == e.tagName.toLowerCase()) {
                  var h = e.rows,
                      m = h[h.length - 1].cells, q = m[m.length - 1],
                      e = q.lastChild;
                } else if ("ul" == e.tagName.toLowerCase()
                    || "ol" == e.tagName.toLowerCase()) {
                  e = e.lastChild;
                }
                if (e.lastChild && 1 == e.lastChild.nodeType && "br"
                    == e.lastChild.tagName.toLowerCase()) {
                  for (var t = e.lastChild.previousSibling; t;) {
                    if (1
                        == t.nodeType && "br"
                        == t.tagName.toLowerCase()) {
                      t = t.previousSibling;
                    } else {
                      break;
                    }
                  }
                  t ? t && 1 == t.nodeType ? e = t : t && 3 == t.nodeType
                      && (e = t) : (doSetCaretPosition(e, 0), f = e, e = null)
                }
                e && (doSetCaretPosition(e, 1), f = e)
              }
            } else if (39 == b) {
              for (;
                  e && (1 != e.nodeType || "hr" == e.tagName.toLowerCase());) {
                if (3 == e.nodeType) {
                  e = e.parentNode;
                  break
                }
                e.nextSibling || (g = _iframeDoc.createElement(
                    "p"), g.innerHTML = getDefaultParagraphValue(
                    !1), e.parentNode.appendChild(g));
                e = e.nextSibling
              }
              if (e) {
                if ("table"
                    == e.tagName.toLowerCase()) {
                  h = e.rows, m = h[0].cells, q = m[0], e = q.firstChild;
                } else if ("ul"
                    == e.tagName.toLowerCase() || "ol" ==
                    e.tagName.toLowerCase()) {
                  e = e.firstChild;
                }
                doSetCaretPosition(e, 0);
                f = e
              }
            }
          }
        } catch (u) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(u)
        }
      }
      if (0 == d && "1" != c._config.formMode && "1"
          == c._config.userTableLock.use) {
        var g = GetTDTHCell(f), v;
        g && (v = GetParentbyTagName(f, "table"));
        f = c._config.userTableLock.defaultTableLockMode;
        v && v.getAttribute("lock_mode") && "" != v.getAttribute("lock_mode")
        && (f = v.getAttribute("lock_mode"));
        h = !0;
        "1" == f && (h = !1);
        if (g) {
          if (h && checkLockAttr(v)) {
            c.lastElemForLock ?
                setFocusForLock(c.lastElemForLock) : (c = findNoLockElem(v))
                    ? setFocusForLock(c) : (window.focus(), document.body.focus());
            KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return
          }
          if (checkLockAttr(g, !h)) {
            if (229 == b) {
              var w = a.code ? a.code.toLowerCase() : "";
              if (-1 < w.indexOf("tab")) {
                b = 9;
              } else if (-1 < w.indexOf(
                  "arrow")) {
                switch (w = w.split("arrow"), w[1]) {
                  case "up":
                    b = 38;
                    break;
                  case "down":
                    b = 40;
                    break;
                  case "right":
                    b = 39;
                    break;
                  case "left":
                    b = 37
                }
              }
            }
            w = !1;
            if (9 == b && 0 == a.shiftKey || 40 == b || 39 == b) {
              w = !0;
            }
            var x =
                null;
            switch (b) {
              case 9:
                x = findNextNoLockCell(g, w, f);
                break;
              case 37:
              case 39:
                0 == a.shiftKey && (x = findNextNoLockCell(g, w, f));
                break;
              case 38:
              case 40:
                0 == a.shiftKey && (x = findNextNoLockCell(g, w, f, b))
            }
            x && (c.lastElemForLock = x);
            c.lastElemForLock ? 38 == b || 37 == b ? setFocusChildForStyle(
                    c.lastElemForLock, 1, !0) : setFocusForLock(c.lastElemForLock)
                : setFocusForLock(findNoLockCell(v));
            KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return
          }
          c.lastElemForLock = g
        } else {
          checkLockElemInSelectionRange()
        }
      }
      f =
          a.target ? a.target : a.srcElement;
      v = f.tagName ? f.tagName.toLowerCase() : null;
      if (KEDITORTOP.RAONKEDITOR.browser.mobile
          && KEDITORTOP.RAONKEDITOR.browser.iOS && 13 == b) {
        try {
          var y = getFirstRange(), z = y.range, A = y.sel, B = z.startContainer;
          3 == B.nodeType && (B = B.parentNode);
          if ("SPAN" == B.tagName && B.firstChild && 1 == B.firstChild.nodeType
              && "BR" == B.firstChild.tagName) {
            B.removeChild(B.firstChild);
            var C = rangy.createRange(_iframeDoc).getDocument().createTextNode(
                unescape("%uFEFF"));
            B.appendChild(C);
            doSetCaretPosition(B, 1)
          }
          for (y =
              !1; ;) {
            if ("FONT" == B.tagName) {
              y = !0;
              break
            } else if ("P" == B.tagName || "BODY"
                == B.tagName) {
              break;
            } else {
              B = B.parentNode;
            }
          }
          if (y) {
            var D = _iframeDoc.createElement("span");
            for (B.parentNode.insertBefore(D, B);
                B.hasChildNodes();) {
              D.appendChild(B.firstChild);
            }
            B.getAttribute("color") && "" != B.getAttribute("color")
            && (D.style.color = B.getAttribute("color"));
            B.getAttribute("face") && "" != B.getAttribute("face")
            && (D.style.fontFamily = B.getAttribute("face"));
            B.getAttribute("size") && "" != B.getAttribute("size")
            && (D.style.fontSize = c.keydownStyleForIOS.fontSize);
            null != c.keydownStyleForIOS.currStyle
            && (D.style.cssText = c.keydownStyleForIOS.currStyle);
            A.removeAllRanges();
            B.parentNode.removeChild(B);
            A.addRange(z);
            var H = getFirstRange().range.startContainer,
                f = 3 == H.nodeType ? H.parentNode : H;
            v = f.tagName.toLowerCase()
          }
          c.keydownStyleForIOS.currStyle = null;
          c.keydownStyleForIOS.fontSize = ""
        } catch (G) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(G)
        }
      }
      z = !1;
      if (KEDITORTOP.RAONKEDITOR.browser.chrome
          || KEDITORTOP.RAONKEDITOR.browser.opera
          || KEDITORTOP.RAONKEDITOR.browser.safari) {
        z =
            !0;
      }
      if (z && 13 == b && !a.shiftKey && c.isEnterKeyInTargetTag) {
        c.isEnterKeyInTargetTag = !1;
        try {
          var I = getFirstRange().range.startContainer;
          3 == I.nodeType && (I = I.parentNode);
          z = I;
          A = !1;
          if ("DIV" == z.tagName) {
            A = !0;
          } else {
            for (B = z; ;) {
              var M = B.tagName;
              if ("BODY" == M) {
                B = null;
                break
              }
              if (M && ("LI" == M || 2 == M.length && 0 == M.indexOf(
                  "H"))) {
                break;
              } else {
                B = B.parentNode
              }
            }
            if (null == B) {
              var K = GetParentbyTagName(z, "div", !0);
              K && (A = !0, z = K)
            }
          }
          if (A) {
            var P = c.changeDivTagArr.length;
            if (0 < P) {
              for (M = P - 1; 0 <= M; M--) {
                var E = _iframeDoc.createElement("p"), L = c.changeDivTagArr[M];
                setCopyAllObjectAtributes(L, E, !0);
                L.parentNode.replaceChild(E, L)
              }
              c.changeDivTagArr = []
            }
            makeRangeSelectionMarkInDesign();
            var O = _iframeDoc.createElement("p"), E = z;
            setCopyAllObjectAtributes(E, O, !0);
            E.parentNode.replaceChild(O, E);
            setRangeSelectionMarkInDesign(!0)
          }
        } catch (N) {
          setRangeSelectionMarkInDesign(
              !0), c.isEnterKeyInTargetTag = !1, c.changeDivTagArr = []
        }
      }
      if ("1" == c._config.returnEvent.key_event) {
        try {
          f = getFirstRange().range.startContainer;
          3 == f.nodeType && (f = f.parentNode);
          var O = {
            strEventName: "keyup", objEvent: a,
            objElement: f
          }, F;
          "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.key
              ? F = KEDITORTOP.G_CURRKEDITOR._config.event.key(c.ID, O)
              : "function" === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_KeyEvent
              && (F = KEDITORTOP.KEDITORWIN.RAONKEDITOR_KeyEvent(c.ID, O));
          if (!1 === F) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return
          }
        } catch (J) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(J)
        }
      }
      if (v && ("textarea" == v || "input" == v || "select" == v)) {
        return !1;
      }
      try {
        var W = G_KPlugin.mention;
        W && (F = W.onKeyUp({evt: a}));
        if (!1 === F) {
          KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
          return
        }
      } catch (ba) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(ba)
      }
      if (8 == b || 46 == b || KEDITORTOP.RAONKEDITOR.browser.gecko && a.ctrlKey
          && 88 == b) {
        if (3 > _iframeDoc.body.childNodes.length
        && (F = _iframeDoc.body.innerHTML, "" == F || "<br>" == F
        || "<div><br></div>" == F)
        && (_iframeDoc.body.innerHTML = "", setBodyDefaultValue()), G_KeyDownUpSync
        && KEDITORTOP.RAONKEDITOR.browser.ie && 11
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          try {
            if (G_KeyDownUpSync =
                !1, w = getFirstRange().range, I = getMyElementNode(
                w.startContainer), "SPAN" == I.nodeName) {
              var U = I.style.cssText, V;
              if (I.nextSibling) {
                var X = I.nextSibling;
                if (("SPAN" == X.nodeName || "FONT" == X.nodeName) && ""
                    == X.className && "" == X.id && null == X.nextSibling
                    && (Y = X.style.cssText, -1 < U.indexOf(Y))) {
                  for (V = saveSelection(c.ID);
                      0 < X.childNodes.length;) {
                    I.appendChild(X.childNodes[0]);
                  }
                  KEDITORTOP.RAONKEDITOR.util.removeElement(X);
                  restoreSelection(V)
                }
              } else if (I.childNodes) {
                X = !1;
                V = saveSelection(c.ID);
                for (var aa = I.childNodes.length -
                    1, ha, Y; 0 <= aa; aa--) {
                  ha = I.childNodes[aa], "SPAN"
                  != ha.nodeName && "FONT" != ha.nodeName || "" != ha.className
                  || ""
                  != ha.id || (Y = ha.style.cssText, -1 < U.indexOf(Y)
                  && (KEDITORTOP.RAONKEDITOR.util.removeElement(ha), X = !0));
                }
                X && restoreSelection(V)
              }
            }
          } catch (Ia) {
            G_KeyDownUpSync = !1
          }
        }
      }
      if (0 == (a.ctrlKey || bCtrlKey)) {
        if (46 == b || 8 == b) {
          removeEmptyTagByBackspace(
              a), _iframeDoc_MouseUpMenu(
              a), KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = null;
        }
        if (!a.shiftKey && 13 == b && "xp"
            != KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase()
            && KEDITORTOP.RAONKEDITOR.browser.ie &&
            11 >= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          setLineHeightForBgColor();
          try {
            if (w = getFirstRange().range, I = getMyElementNode(
                w.startContainer), 1 == I.nodeType && -1
            < ",SPAN,U,I,STRONG,B,S,STRIKE,EM,SUP,SUB,".indexOf(
                "," + I.tagName + ",")) {
              var ta = I.innerHTML.toLowerCase();
              if ("" == ta && 11
                  >= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
                I.innerHTML = unescape(
                    "%u200B");
              } else if (("<br>" == ta || "<br/>" == ta || "<br />"
                      == ta) && 11
                  == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
                I.innerHTML = unescape(
                    "%u200B");
              } else if ("" != ta && "SPAN" == I.nodeName &&
                  (U = I.style.cssText, I.childNodes && 3 >= I.childNodes.length
                  && (1 != I.childNodes.length || "#text"
                      != I.childNodes[0].nodeName))) {
                var ca = I.childNodes;
                V = null;
                "SPAN" != ca[0].nodeName && "FONT" != ca[0].nodeName || ""
                != ca[0].className || "" != ca[0].id ? "#text" == ca[0].nodeName
                    && ("SPAN" != ca[1].nodeName && "FONT" != ca[1].nodeName
                    || "" != ca[1].className || "" != ca[1].id ? 2 == ca.length
                        && "BR" == ca[1].nodeName
                        && ca[1].parentNode.removeChild(ca[1])
                        : (_currFCStyle = ca[1].style.cssText, -1 < U.indexOf(
                            _currFCStyle) && (V = ca[1])))
                    : (_currFCStyle = I.firstChild.style.cssText,
                    -1 < U.indexOf(_currFCStyle) && (V = ca[0]));
                V && (KEDITORTOP.RAONKEDITOR.util.removeElement(
                    V), doSetCaretPosition(I, 0))
              }
            }
          } catch (qa) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode && console.log(qa)
          }
        }
      }
      KEDITORTOP.RAONKEDITOR.browser.ie && 9
      >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && moveRulerPosition(a);
      if (32 == b || 13 == b || 46 == b || 8 == b || 37 == b || 38 == b || 39
          == b || 40 == b || 36 == b || 35 == b || 33 == b || 34 == b) {
        try {
          var ra = getFirstRange(), x = ra.range, I = null;
          if (x && x.startContainer && (U = !0, 32 == b && (U = !1), U)) {
            if ((I = ra.sel.focusNode) &&
                3 == I.nodeType) {
              for (; 1
              != I.nodeType;) {
                if (I.parentNode) {
                  I = I.parentNode;
                } else {
                  break;
                }
              }
            } else {
              I = getMyElementNode(
                  x.startContainer);
            }
            setMenuIconRealable(I)
          }
          c._iconEnableForTextInRange()
        } catch (la) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(la)
        }
        KEDITORTOP.RAONKEDITOR.browser.ie && 11
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion ? setTableArrowKeyUpAction(
            a) : (!KEDITORTOP.RAONKEDITOR.browser.ie
            || KEDITORTOP.RAONKEDITOR.browser.ie && 12
            <= KEDITORTOP.RAONKEDITOR.browser.ieVersion) && 1 == (32 == b ||
            13 == b) && setAutoUrlHyperLink(a, ra)
      }
      ra = 229;
      KEDITORTOP.RAONKEDITOR.browser.gecko && (ra = 0);
      0 == a.ctrlKey && 0 == a.altKey && 1 == c.UndoManager.arrImageHTML.length
      && c.isInitKeydownForSetApi && (32 <= b && 127 >= b || b == ra)
      && (c.isInitKeydown = !1, c.UndoManager.canUndo = !0, c._iconEnable(""));
      if (a.shiftKey && 35 == b) {
        x = getFirstRange().range;
        try {
          if (1 == x.endContainer.nodeType && "BODY"
              == x.endContainer.tagName) {
            for (var Q = x.endContainer.childNodes[x.endOffset - 1];
                3 != Q.nodeType;) {
              Q = Q.lastChild, 1 == Q.nodeType && "BR"
              == Q.tagName && (Q = Q.previousSibling);
            }
            x.setEndAfter(Q);
            getFirstRange().sel.addRange(x);
            x.collapse(!0)
          }
        } catch (Aa) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(Aa)
        }
      }
      -1 < c.fixDEXTWINScroll.keyCodeArr.indexOf(b) && null
      != c.fixDEXTWINScroll.backupValue
      && (KEDITORTOP.RAONKEDITOR.util.removeEvent(KEDITORTOP.KEDITORWIN,
          "scroll",
          c.fixDEXTWINScroll.fn), c.fixDEXTWINScroll.backupValue = null);
      try {
        Q = !1;
        if (KEDITORTOP.RAONKEDITOR.browser.ie
            && KEDITORTOP.RAONKEDITOR.browser.quirks) {
          if (37 == b || 38 == b || 39 == b || 40 == b || 36 == b || 35 ==
              b || 33 == b || 34 == b || a.ctrlKey) {
            Q = !0
          }
        } else {
          Q = !0;
        }
        if (Q) {
          Q = null;
          (x = getFirstRange().range) && 1 == x.collapsed && x.startContainer
          && (Q = getMyElementNode(x.startContainer));
          if ((KEDITORTOP.RAONKEDITOR.browser.chrome
                  || KEDITORTOP.RAONKEDITOR.browser.opera) && (39 == b || 37 == b
                  || 38 == b) && 0 == a.ctrlKey && 0 == a.altKey && 0
              == a.shiftKey) {
            if (c.keydownNodeForTableCaret.tdNode) {
              var Ba = GetParentbyTagName(c.keydownNodeForTableCaret.tdNode,
                  "table");
              if (Q == Ba.parentNode) {
                if (39 == b) {
                  var S = Ba.nextSibling;
                  try {
                    if (null == S) {
                      restoreSelection(
                          c.keydownNodeForTableCaret.backupRange,
                          !0);
                    } else {
                      var ka = !1;
                      if (3 == S.nodeType) {
                        var ga = S.nodeValue, ga = ga.replace(/\n/g, ""),
                            ga = ga.replace(/\t/g, ""),
                            ga = ga.replace(/ /g, "");
                        if ("" == ga) {
                          try {
                            S = Q.childNodes[x.startOffset + 1], 0 == !!S
                            && (ka = !0)
                          } catch (Ta) {
                            ka = !0
                          }
                        }
                      }
                      0 == ka && ("P" == S.tagName || "TABLE" == S.tagName
                      || "DIV"
                      == S.tagName ? S.firstChild
                          && (S = getFirstChildNodeForCaret(
                              S.firstChild), doSetCaretPosition(S,
                              0), setMenuIconRealable(S), Q = S) : ka = !0);
                      ka && restoreSelection(
                          c.keydownNodeForTableCaret.backupRange,
                          !0)
                    }
                  } catch (fa) {
                    KEDITORTOP && KEDITORTOP.RAONKEDITOR
                    && KEDITORTOP.RAONKEDITOR.logMode &&
                    console.log(fa)
                  }
                } else if (37 == b || 38 == b) {
                  S = Ba.previousSibling;
                  try {
                    if (null == S) {
                      restoreSelection(
                          c.keydownNodeForTableCaret.backupRange, !0);
                    } else {
                      ka = !1;
                      if (3 == S.nodeType && (ga = S.nodeValue, ga = ga.replace(
                          /\n/g, ""), ga = ga.replace(/\t/g,
                          ""), ga = ga.replace(
                          / /g, ""), "" == ga)) {
                        try {
                          1 == x.startContainer.nodeType
                              ? S = Q.childNodes[x.startOffset - 2] : 3
                              == x.startContainer.nodeType
                              && (S = x.startContainer.previousSibling), 0
                          == !!S
                          && (ka = !0)
                        } catch (Ja) {
                          ka = !0
                        }
                      }
                      0 == ka && ("P" == S.tagName || "TABLE" == S.tagName
                      || "DIV"
                      == S.tagName ? (S = getLastChildNodeForCaret(S),
                              doSetCaretPosition(S, 1), setMenuIconRealable(
                              S), Q = S)
                          : ka = !0);
                      ka && restoreSelection(
                          c.keydownNodeForTableCaret.backupRange,
                          !0)
                    }
                  } catch (Pa) {
                    KEDITORTOP && KEDITORTOP.RAONKEDITOR
                    && KEDITORTOP.RAONKEDITOR.logMode && console.log(Pa)
                  }
                }
              }
            } else if (("BODY" == Q.tagName || "DIV" == Q.tagName) && 1
                == x.startContainer.nodeType) {
              if (37 == b && 0
                  < x.startOffset) {
                try {
                  var Ca = Q.childNodes[x.startOffset - 1];
                  Ca && "TABLE" == Ca.tagName && (S = getLastChildNodeForCaret(
                      Ca), doSetCaretPosition(S, 1), setMenuIconRealable(
                      S), Q = S)
                } catch (Ua) {
                  KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
                  KEDITORTOP.RAONKEDITOR.logMode && console.log(Ua)
                }
              } else if (39 == b) {
                try {
                  var Da = Q.childNodes[x.startOffset];
                  Da && "TABLE" == Da.tagName
                  && (S = Da.rows[0].cells[0], S.firstChild
                  && (S = getFirstChildNodeForCaret(
                      S.firstChild), doSetCaretPosition(
                      S, 0), setMenuIconRealable(S), Q = S))
                } catch (Qa) {
                  KEDITORTOP && KEDITORTOP.RAONKEDITOR
                  && KEDITORTOP.RAONKEDITOR.logMode && console.log(Qa)
                }
              }
            }
          }
          if ("2" == c._config.toolBarEnableDisableMode) {
            try {
              8 == b ? (w = getFirstRange().range, 0 == w.collapsed
              && _iframeDoc_MouseUpMenu(a, Q)) : !a.ctrlKey && !a.shiftKey || 40
                  !=
                  b && 38 != b && 37 != b && 39 != b && 35 != b && 36 != b && 34
                  != b && 33 != b || _iframeDoc_MouseUpMenu(a, Q)
            } catch (Ea) {
              _iframeDoc_MouseUpMenu(a, Q)
            }
          } else {
            _iframeDoc_MouseUpMenu(a, Q)
          }
        }
        if ("2" == c._config.undoMode && 0 == a.ctrlKey && 0 == a.altKey && 32
            != b && 13 != b && 46 != b && null
            != c.UndoManager.tempSContainerText && null
            != c.UndoManager.tempEContainerText) {
          var Ra = getFirstRange().range, ma = Ra.startContainer,
              oa = Ra.endContainer, ma = 3 == ma.nodeType ? ma.parentNode : ma,
              oa = 3 == oa.nodeType ? oa.parentNode : oa,
              ya = oa.innerText || oa.textContent;
          if ((ma.innerText || ma.textContent) !=
              c.UndoManager.tempSContainerText || ya
              != c.UndoManager.tempEContainerText) {
            c.UndoManager.isInsertData = !0, c.UndoManager.clearNextImgData()
          }
        }
      } catch (Za) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(Za)
      }
      showWordCount(a);
      G_Ruler && "2" == c._config.ruler.mode && G_Ruler.SetRulerPosition();
      onChange({editor: c})
    }
  }
}

function recursionBase64ImageToServer() {
  if (KEDITORTOP.RAONKEDITOR.browser.ie) {
    dummy = document.getElementById(
        "pasteDiv");
  } else {
    try {
      var a = document.getElementById("pasteIframe");
      a && (dummy = getIframeDocument(a).body)
    } catch (c) {
      dummy = null
    }
  }
  for (var b = null, b = dummy ? dummy.getElementsByTagName("img")
      : _iframeDoc.getElementsByTagName("img"), d = b.length - 1; 0 <= d; d--) {
    var a = b[d], e = a.src;
    if ("data:" == e.substring(0, 5)) {
      if (-1
          < KEDITORTOP.G_CURRKEDITOR._config.disableInsertImage.indexOf(
              ",paste_image,")) {
        a.parentNode.removeChild(a);
      } else if ("1"
          == KEDITORTOP.G_CURRKEDITOR._config.paste_image_base64_remove) {
        a.parentNode.removeChild(
            a);
      } else if (e = e.split(","), 2 == e.length) {
        b = getExtFromImageDataSrc(e[0]);
        postBase64ImageToServer(e[1], b, a, !0);
        break
      }
    }
  }
}

function fn_PasteIE(a, c) {
  var b = getEditrFromEvent(a);
  if ("1" == b._config.useHtmlProcessByWorker) {
    if (b.isPasting) {
      a && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
      return
    }
    b.isPasting = !0
  }
  if (a && a.clipboardData && a.clipboardData.getData) {
    try {
      a.clipboardData.items && 0 < a.clipboardData.types.length
      && (KEDITORTOP.G_CURRKEDITOR.AccessClipboardForIEGecko = !0)
    } catch (d) {
      KEDITORTOP.G_CURRKEDITOR.AccessClipboardForIEGecko = !1
    }
    if (0 == KEDITORTOP.G_CURRKEDITOR.AccessClipboardForIEGecko) {
      var e = a.clipboardData.types, f = e.length;
      if (1 < f) {
        for (var g = 0; g < f; g++) {
          if ("text/html"
              == e[g].toLowerCase()) {
            KEDITORTOP.G_CURRKEDITOR.AccessClipboardForIEGecko = !0;
            break
          }
        }
      }
    }
  }
  if (KEDITORTOP.G_CURRKEDITOR.AccessClipboardForIEGecko) {
    try {
      b.isPasting = !1, KEDITORTOP.RAONKEDITOR.browser.ie
          ? (document.getElementById(
              "pasteDiv").blur(), document.body.removeChild(
              document.getElementById("pasteDiv"))) : document.body.removeChild(
              document.getElementById("pasteIframe")), _iframeWin.focus()
    } catch (h) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
      console.log(h)
    }
    _iframeDoc_Paste(a)
  } else {
    setTimeout(function (a, b) {
      if (!b) {
        if (b = null, KEDITORTOP.RAONKEDITOR.browser.ie) {
          b = document.getElementById(
              "pasteDiv");
        } else {
          try {
            var c = document.getElementById("pasteIframe");
            c && (b = getIframeDocument(c).body)
          } catch (d) {
            b = null
          }
        }
      }
      if (b) {
        b.blur();
        var e = "", c = !1;
        KEDITORTOP.G_CURRKEDITOR.setTextPaste && "1"
        == KEDITORTOP.G_CURRKEDITOR._config.pasteToTextMode && (c = !0);
        c ? (e = b.value, e = KEDITORTOP.RAONKEDITOR.util.escapeHtml(
            e), b.parentNode.removeChild(
            b), b = null, b = document.createElement(
            "div"),
            b.id = "pasteDiv", document.body.appendChild(b)) : e = b.innerHTML;
        e = removeDummyDivInHwp(e);
        if ("html5" == KEDITORTOP.G_CURRKEDITOR._config.runtimes) {
          var f = RegExp(
                  "(<p [^>]*)(background:#000000;)", "gi"),
              e = e.replace(f, function (a, b) {
                return -1 < a.indexOf('class="0"') ? b : a
              }), f = RegExp("(<p [^>]*)(background: rgb\\(0, 0, 0\\);)", "gi"),
              e = e.replace(f, function (a, b) {
                return -1 < a.indexOf('class="0"') ? b : a
              });
        }
        KEDITORTOP.G_CURRKEDITOR.setTextPaste
        && (KEDITORTOP.G_CURRKEDITOR.setTextPaste = !1, c ? (e = e.replace(
            /\r\n/g, "<br>"), e = e.replace(/\n/g,
            "<br>")) : e = KEDITORTOP.RAONKEDITOR.ConvertHtmlToText(
            e), b.innerHTML = e);
        e = e.replace(RegExp('(text-underline.*?)(;|(?="))', "gi"), "");
        e = e.replace(RegExp("(<colgroup*[^>?+]*>)<span*[^>?+]*>", "gim"),
            "$1");
        e = e.replace(RegExp("(<col*[^>?+]*>)</span>", "gim"), "$1");
        "0" == KEDITORTOP.G_CURRKEDITOR._config.removeComment && (e = e.replace(
            /--\x3e\s</gi, "--\x3e<"));
        e = dummyTagClassClear(e);
        restoreSelection(KEDITORTOP.G_CURRKEDITOR._LastRange);
        if (0 == b.getElementsByTagName("img").length && 1 == e.length
            && "undefined" != typeof a &&
            1 == KEDITORTOP.RAONKEDITOR.browser.ie && 12
            <= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          try {
            for (var c = -1, f = !0, g = 0; g < a.clipboardData.items.length;
                g++) {
              "file" == a.clipboardData.items[g].kind && "image/png"
              == a.clipboardData.items[g].type ? c = g : f = !1;
            }
            if (f && -1 != c) {
              var h = a.clipboardData.items[c].getAsFile(), z = new FileReader;
              z.onload = function () {
                var a = document.createElement("img");
                a.src = z.result;
                b.appendChild(a);
                var c = z.result;
                if ("data:" == c.substring(0, 5) && (c = c.split(","), 2
                == c.length)) {
                  var d = getExtFromImageDataSrc(c[0]);
                  a.parentNode.removeChild(a);
                  postBase64ImageToServer(c[1], d);
                  checkPasteImage(b.innerHTML);
                  pasteHtmlAtCaretHuge(b.innerHTML);
                  document.body.removeChild(b);
                  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo()
                }
                z = void 0
              };
              z.readAsDataURL(h);
              return null
            }
          } catch (A) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(A)
          }
        }
        checkPasteImage(e);
        (new ProcessImageInHtml5(KEDITORTOP.G_CURRKEDITOR)).inHtml(
            {htmlType: -1, html: e}, function (a) {
              e = a;
              e = removeDummyfontTagInTable(e);
              "1" == KEDITORTOP.G_CURRKEDITOR._config.ie_BugFixed_Hyfont &&
              (e = KEDITORTOP.RAONKEDITOR.util.replaceHyFont(e,
                  KEDITORTOP.G_CURRKEDITOR));
              b.innerHTML = e;
              a = b.innerHTML;
              var c = RegExp("<li.*?(mso-list).*?>", "gi");
              if (KEDITORTOP.RAONKEDITOR.browser.ie && 11
                  <= KEDITORTOP.RAONKEDITOR.browser.ieVersion && c.test(a)) {
                a = b.getElementsByTagName("ol");
                for (var c = a.length, d = b.getElementsByTagName("ul"),
                    f = d.length, g = 0; g < c; g++) {
                  var h = a[g].getElementsByTagName("li")[0];
                  if ("" == h.style.fontFamily) {
                    var m = h.innerHTML,
                        t = RegExp("mso-hansi-font-family:([^;]*)", "g"),
                        u = "";
                    t.exec(m) && (u = RegExp.$1);
                    h.style.fontFamily = "" != u ? u
                        : "\ub9d1\uc740 \uace0\ub515"
                  }
                  "" == h.firstChild.style.fontFamily
                  && (h.firstChild.style.fontFamily = "" != u ? u
                      : "\ub9d1\uc740 \uace0\ub515")
                }
                for (g = 0; g < f; g++) {
                  h = d[g].getElementsByTagName("li")[0], ""
                  == h.style.fontFamily && (m = h.innerHTML, t = RegExp(
                      "mso-hansi-font-family:([^;]*)", "g"), u = "", t.exec(m)
                  && (u = RegExp.$1), h.style.fontFamily = "" != u ? u
                      : "\ub9d1\uc740 \uace0\ub515"), ""
                  == h.firstChild.style.fontFamily
                  && (h.firstChild.style.fontFamily = "" != u ? u
                      : "\ub9d1\uc740 \uace0\ub515")
                }
              }
              u = replaceSpanToDivContainAbsolute(b);
              g = !1;
              a = "";
              c = b.childNodes.length;
              for (d = 0; d < c; d++) {
                f = b.childNodes[d], 1 == f.nodeType
                && "FONT" == f.tagName ? (g = "", "" != f.color
                && (g += "color:"
                    + f.color + ";"), "" != f.face && (g += "font-family:"
                    + f.face
                    + ";"), "" != f.style.cssText && (g += f.style.cssText), 0
                < g.length && (g = " style='" + g + "'"), a += "<span" + g + ">"
                    + f.innerHTML + "</span>", g = !0) : 3 == f.nodeType
                    ? a += f.nodeValue : 8 == f.nodeType ? "0"
                        == KEDITORTOP.G_CURRKEDITOR._config.removeComment
                        && (a += f.text) : a += f.outerHTML;
              }
              if (1 == g || u) {
                e = a;
              }
              if (KEDITORTOP.RAONKEDITOR.browser.ie) {
                document.body.removeChild(b);
              } else {
                try {
                  document.body.removeChild(
                      document.getElementById("pasteIframe"))
                } catch (w) {
                  KEDITORTOP && KEDITORTOP.RAONKEDITOR
                  && KEDITORTOP.RAONKEDITOR.logMode && console.log(w)
                }
              }
              e = execReplaceMsoStyle(e);
              setFocusToBody();
              "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlCorrection
                  ? (u = !1, "1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager
                  && 6 == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType
                  && (u = !0), "1"
                  == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
                      ? (showProcessingBackground(), fn_processHtmlWorker({
                        editorBrowser: {
                          ie: KEDITORTOP.RAONKEDITOR.browser.ie,
                          ieVersion: KEDITORTOP.RAONKEDITOR.browser.ieVersion,
                          gecko: KEDITORTOP.RAONKEDITOR.browser.gecko
                        },
                        editorConfig: KEDITORTOP.G_CURRKEDITOR._config,
                        callFn: "htmlTagRevision",
                        callFnParam: [e, !0, u,
                          KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType],
                        callBackFn: fn_PasteIE_htmlTagRevision_After
                      })) : (e = htmlTagRevision(e, !0,
                          u), fn_PasteIE_htmlTagRevision_After(e)))
                  : fn_PasteIE_htmlTagRevision_After(e)
            })
      }
    }, 0, a), setTimeout(function () {
      onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0})
    }, 500)
  }
}

function fn_PasteIE_htmlTagRevision_After(a) {
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
  && destoryWebWorkerVar();
  a = removeTagStyle(a);
  a = ReplaceAll(a, unescape("%uFEFF"), "");
  a = ReplaceAll(a, unescape("%u200B"), "");
  if (0 < a.length) {
    a = SetCorrectOfficeHtml(a);
    a = SetCorrectOfficeHtmlForDOM(a);
    var c = !1;
    "1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager && 6
    == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType && (c = !0);
    a = execReplaceMsoStyle(a);
    "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker ?
        (a = KEDITORTOP.RAONKEDITOR.util.officeCleanByDom(a,
            c), showProcessingBackground(), fn_processHtmlWorker({
          editorBrowser: {
            ie: KEDITORTOP.RAONKEDITOR.browser.ie,
            ieVersion: KEDITORTOP.RAONKEDITOR.browser.ieVersion,
            gecko: KEDITORTOP.RAONKEDITOR.browser.gecko
          },
          editorConfig: KEDITORTOP.G_CURRKEDITOR._config,
          callFn: "KEDITORTOP.RAONKEDITOR.util.officeClean",
          callFnParam: [a, c, void 0,
            KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType],
          callBackFn: fn_PasteIE_officeClean_After
        })) : (a = KEDITORTOP.RAONKEDITOR.util.officeClean(a,
            c), fn_PasteIE_officeClean_After(a))
  } else {
    "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
    && hideProcessingBackground()
  }
}

function fn_PasteIE_officeClean_After(a) {
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
  && destoryWebWorkerVar();
  0 == /<span[^>]*?mso-bidi-font-family: \+mn-cs;.*?>/i.test(a)
  && (a = KEDITORTOP.RAONKEDITOR.util.emptyTagRemove(a));
  a = IEPasteRemoveEmptyNodes(a);
  a = KEDITORTOP.RAONKEDITOR.util.htmlRevision(a);
  a = xssReplaceScript(null, a);
  if (KEDITORTOP.RAONKEDITOR.browser.ie
      || KEDITORTOP.RAONKEDITOR.browser.gecko) {
    "1" == KEDITORTOP.G_CURRKEDITOR._config.tableAutoAdjustInPaste
    && /<table/i.test(a) && (a = command_AdjustTableAndCellWidth(
        KEDITORTOP.G_CURRKEDITOR.ID,
        KEDITORTOP.G_CURRKEDITOR, {type: "paste", htmlData: a}));
    a = OfficePasteClean(a);
    a = removeEditorAttribute(a);
    "1" == KEDITORTOP.G_CURRKEDITOR._config.compatibility.dingBatCharPaste
    && (a = dingBatFont(a, KEDITORTOP.G_CURRKEDITOR));
    try {
      if ("function" === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste
          || "function"
          === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste) {
        var c = a;
        try {
          var b = {strHtml: a};
          "function"
          === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste
              ? c = KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste(
                  KEDITORTOP.G_CURRKEDITOR.ID,
                  b) : "function"
              === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste
              && (c = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste(
                  KEDITORTOP.G_CURRKEDITOR.ID, b))
        } catch (d) {
          c = a
        }
        if (c) {
          a = c;
        } else if (0 == c || "" == c) {
          "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
          && hideProcessingBackground();
          return
        }
      }
    } catch (e) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(e)
    }
    if (!pasteWordCount(a)) {
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
      && hideProcessingBackground();
      return
    }
    0 <
    a.length && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    a = externalPageBreakDataRaplaceInEditor(a);
    -1 < a.indexOf("keditorcustomdata") && (a = checkExistCustomData(a));
    b = GetTableSelectionCells();
    c = document.createElement("div");
    c.innerHTML = a;
    c = c.childNodes;
    if (1 == c.length && c[0].tagName && "table" == c[0].tagName.toLowerCase()
        && 0 < b.length) {
      0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
      && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), command_tablePaste(
          KEDITORTOP.G_CURRKEDITOR.ID, KEDITORTOP.G_CURRKEDITOR, c[0]),
          KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
    } else {
      b = !1;
      if ("1" == KEDITORTOP.G_CURRKEDITOR._config.useTablePasteDialog) {
        var f = getFirstRange().range, g = null;
        f.startContainer == f.endContainer && (g = f.startContainer, 3
        == g.nodeType && (g = g.parentNode), g = GetTDTHCell(g));
        g && 1 == c.length && c[0].tagName && "table"
        == c[0].tagName.toLowerCase() && (b = !0)
      }
      b
          ? (KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableNode = c[0], KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableHtml = a, KEDITORTOP.G_CURRKEDITOR.pasteTableParam.currCellNode =
              g, KEDITORTOP.G_CURRKEDITOR.pasteTableParam.currTableNode = GetParentbyTagName(
              g, "table"), RAONK_EDITOR.prototype.dialog.show(
              KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
              KEDITORTOP.G_CURRKEDITOR._config.pages.paste_table))
          : pasteHtmlAtCaretHuge(a, !1, !1, !0)
    }
    0 > a.indexOf("keditorcustomdata") && (ReplaceImageToRealObject(
        !0), KEDITORTOP.G_CURRKEDITOR._editorCustomDataMode = !0, removeAllKEditorCustomData(), ReplaceRealObjectToImage(
        !1), ClearDraggingTableAllTable());
    setAdjustTableBorder(KEDITORTOP.G_CURRKEDITOR._DOC)
  }
  "1" ==
  KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
  && hideProcessingBackground()
}

function IEPasteRemoveEmptyNodes(a) {
  function c(a) {
    function b(a) {
      for (var c = a.childNodes, d = [], e = 0, f = c.length; e < f;
          ++e) {
        a = c[e], a.TEXT_NODE == a.nodeType ? d.push(a.data)
            : a.ELEMENT_NODE == a.nodeType && d.push(b(a));
      }
      return d.join("").replace(/\s+/g, " ")
    }

    "string" == typeof a && (a = _iframeDoc.getElementById(a));
    return "string" == typeof a.textContent ? a.textContent : "string"
    == typeof a.innerText ? a.innerText : b(a)
  }

  if (KEDITORTOP.RAONKEDITOR.browser.ie && "1"
      == KEDITORTOP.G_CURRKEDITOR._config.pasteRemoveEmptyTag) {
    try {
      var b = _iframeDoc.createElement("div");
      b.innerHTML = a;
      for (var d, e = b.getElementsByTagName("*"), f, g = newline = !1,
          h = /^\s*$/, m, q, t = 0; t < e.length;
          t++) {
        if (d = e[t], m = new RegExp("\\b" + d.tagName + "\\b",
            "i"), !m.test(
            "base basefont body br col hr html img input isindex link meta param title")
        && m.test("span div b strong i em strike u sup sub") && h.test(c(d))) {
          f = d.getElementsByTagName("*");
          for (var u = 0, v = f.length; u < v; u++) {
            if (q = new RegExp(
                "\\b" + f[u].tagName + "\\b", "i"), q.test(
                "base basefont body br col hr html img input isindex link meta param title")) {
              g = !0;
              break
            }
          }
          var w =
              d.innerHTML;
          -1 < w.indexOf("&nbsp;") && (newline = !0);
          w = w.replace(/(<([^>]+)>)/gi, "");
          " " == w && (g = !0);
          g || newline || (d.parentNode.removeChild(d), --t);
          newline = g = !1
        }
      }
      a = b.innerHTML
    } catch (x) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(x)
    }
  }
  return a
}

function pasteHtmlAtCaretHuge(a, c, b, d, e) {
  try {
    if (0 != a.length) {
      var f, g, h = getFirstRange();
      f = h.sel;
      g = h.range;
      if (f.getRangeAt && f.rangeCount) {
        var m = getBlockContainer(g.startContainer), q, t, u, v;
        if (m) {
          var w = _iframeDoc.createElement("div");
          w.innerHTML = a;
          t = _iframeDoc.createDocumentFragment();
          for (var x = !1; v = w.firstChild;) {
            if (t.appendChild(v), 0 == x && 1
            == v.nodeType) {
              var y = v.tagName.toLowerCase(),
                  z = ",p,table,div,hr,ol,ul,figure,h1,h2,h3,h4,h5,h6,";
              1 != c && (z += "input,select,button,textarea,");
              -1 < z.indexOf("," + y + ",") &&
              (x = !0)
            }
          }
          try {
            w && (w.innerHTML = "", delete null)
          } catch (A) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode && console.log(A)
          }
          var B = m.tagName.toLowerCase();
          "div" == B && (x = !1);
          if (x) {
            if ("1" == KEDITORTOP.G_CURRKEDITOR._config.pasteWhenTableIsLast
                && 1 == d && t.lastChild && 1 == t.lastChild.nodeType && "TABLE"
                == t.lastChild.tagName) {
              var C = _iframeDoc.createElement("p");
              C.innerHTML = getDefaultParagraphValue(!1);
              C.id = "k_paste_caret_node";
              t.appendChild(C)
            }
            g.deleteContents();
            try {
              q = extractBlockContentsFromCaret(!0);
              u = extractBlockContentsFromCaret(!1);
              c = "";
              var D = q.childNodes.length, H, G;
              H = G;
              D = q.childNodes.length;
              h = getFirstRange();
              f = h.sel;
              g = h.range;
              g.selectNode(m);
              g.deleteContents();
              if (0 < D) {
                var I = q.childNodes[0];
                if (1 != D || 3 != I.nodeType || 0 != I.nodeValue.length) {
                  var M = !0;
                  if ("p" == B && 1 == D) {
                    try {
                      if (0 == (I.tagName && -1
                          < ",area,base,basefont,frame,hr,img,input,isindex,link,meta,param,embed,br,".indexOf(
                              "," + I.tagName.toLowerCase() + ","))) {
                        var K = I.innerHTML.toLowerCase(), K = K.replace(
                            /<(span|strong|font|i|u|strike|sup|sub|b|em|s|)>/gi,
                            ""), K = K.replace(
                            /<(span .*?|strong .*?|font .*?|i .*?|u .*?|strike .*?|sup .*?|sub .*?|b .*?|em .*?|s .*?)>/gi,
                            ""), K = K.replace(
                            /<(\/span|\/strong|\/font|\/i|\/u|\/strike|\/sup|\/sub|\/b|\/em|\/s|)>/gi,
                            "");
                        if ("" == K || "<br>" == K || "<br />" == K) {
                          M = !1
                        }
                      }
                    } catch (P) {
                      KEDITORTOP && KEDITORTOP.RAONKEDITOR
                      && KEDITORTOP.RAONKEDITOR.logMode && console.log(P)
                    }
                  }
                  M && (H = _iframeDoc.createElement(B), H.appendChild(
                      q), setCopyAllObjectAtributes(m, H, !1), g.insertNode(
                      H), g.setStartAfter(H), D = u ? u.childNodes.length : 0, 0
                  == D && doSetCaretPosition(H,
                      1), g.collapse(!0), rangy.getSelection(
                      _iframeWin).removeAllRanges(), rangy.getSelection(
                      _iframeWin).addRange(g))
                }
              }
              var E;
              if (KEDITORTOP.RAONKEDITOR.browser.gecko
                  || KEDITORTOP.RAONKEDITOR.browser.ie
                  || b) {
                E = _iframeDoc.createElement(
                    "span"), E.innerHTML = KEDITORTOP.RAONKEDITOR.browser.gecko
                    ? "<br>" : "&nbsp;", g.insertNode(E), g.setStartAfter(
                    E), g.collapse(!0);
              }
              D = u ? u.childNodes.length : 0;
              if (0 < D && (I = u.childNodes[0], 1 != D || 3 != I.nodeType || 0
              != I.nodeValue.length)) {
                M = !0;
                if ("p" == B && 1 == D) {
                  try {
                    0 == (I.tagName && -1
                        < ",area,base,basefont,frame,hr,img,input,isindex,link,meta,param,embed,br,".indexOf(
                            "," +
                            I.tagName.toLowerCase() + ","))
                    && (K = I.innerHTML.toLowerCase(), K = K.replace(
                        /<(span|strong|font|i|u|strike|sup|sub|b|em|s|)>/gi,
                        ""), K = K.replace(
                        /<(span .*?|strong .*?|font .*?|i .*?|u .*?|strike .*?|sup .*?|sub .*?|b .*?|em .*?|s .*?)>/gi,
                        ""), K = K.replace(
                        /<(\/span|\/strong|\/font|\/i|\/u|\/strike|\/sup|\/sub|\/b|\/em|\/s|)>/gi,
                        ""), "" == K || "<br>" == K || "<br />" == K)
                    && (M = !1)
                  } catch (L) {
                    KEDITORTOP && KEDITORTOP.RAONKEDITOR
                    && KEDITORTOP.RAONKEDITOR.logMode && console.log(L)
                  }
                }
                M && (G = _iframeDoc.createElement(B), G.appendChild(u),
                    setCopyAllObjectAtributes(m, G, !1), g.insertNode(
                    G), rangy.getSelection(
                    _iframeWin).removeAllRanges(), g.selectNode(
                    G), g.setEndBefore(G), f.addRange(g), g.collapse(!0))
              }
              c = "";
              var O = t.childNodes.length;
              f = !1;
              for (h = 0; h < O; h++) {
                var N = t.childNodes[h];
                if (1 == N.nodeType && checkBlockTag(N.tagName)) {
                  1 == f
                  && (c += "</p>", f = !1), c += N.outerHTML;
                } else if (1
                    == N.nodeType && 0 == checkBlockTag(N.tagName)) {
                  0 == f
                  && (c += "<p>", f = !0), c += N.outerHTML;
                } else if (3
                    == N.nodeType && 0 < N.nodeValue.length) {
                  var F = N.nodeValue, F = F.replace(/\r\n/g, ""),
                      F = F.replace(/\r/g,
                          ""), F = F.replace(/\n/g, ""),
                      F = F.replace(/\t/g, ""), F = F.replace(/ /g, "");
                  "" != F && (0 == f && (c += "<p>", f = !0), c += N.nodeValue)
                } else {
                  8 == N.nodeType && "0"
                  == KEDITORTOP.G_CURRKEDITOR._config.removeComment
                  && (c += N.text);
                }
                h == O - 1 && 1 == f && (c += "</p>", f = !1)
              }
              if (KEDITORTOP.RAONKEDITOR.browser.gecko
                  || KEDITORTOP.RAONKEDITOR.browser.ie || b) {
                rangy.getSelection(
                    _iframeWin).removeAllRanges(), g.setStartBefore(
                    E), g.setEndBefore(E), E.parentNode.removeChild(
                    E), rangy.getSelection(
                    _iframeWin).removeAllRanges(), rangy.getSelection(
                    _iframeWin).addRange(g);
              }
              pasteHtmlAtCaretMini(c, d, e);
              try {
                if (KEDITORTOP.RAONKEDITOR.browser.gecko
                    || KEDITORTOP.RAONKEDITOR.browser.ie) {
                  E.removeNode
                      ? E.removeNode()
                      : E.outerHTML = "";
                } else if (!(_iframeWin.getSelection || 9
                    <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
                    && KEDITORTOP.RAONKEDITOR.browser.quirks)) {
                  var J = m.lastChild;
                  J && "table" == J.tagName.toLowerCase() && doSetCaretPosition(
                      J.cells[0], 1)
                }
              } catch (W) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(W)
              }
            } catch (ba) {
              pasteHtmlAtCaretMini(a, !1, e)
            }
          } else {
            pasteHtmlAtCaretMini(a,
                !1, e)
          }
        } else {
          pasteHtmlAtCaretMini(a, !1, e)
        }
      }
    }
  } catch (U) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(U)
  }
}

function pasteHtmlAtCaretMini(a, c, b) {
  if (0 != a.length) {
    a = insertCarriageReturnBeforeCloseCell(a);
    var d, e, f = getFirstRange();
    d = f.sel;
    e = f.range;
    if (_iframeWin.getSelection || 9 <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
        && KEDITORTOP.RAONKEDITOR.browser.quirks) {
      if (d.getRangeAt && d.rangeCount || 9
          <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
          && KEDITORTOP.RAONKEDITOR.browser.quirks) {
        e.deleteContents(!0);
        var g;
        try {
          if ("" == _iframeDoc.body.innerHTML) {
            g = _iframeDoc.createElement("div");
            g.innerHTML = a;
            for (var h = g.childNodes,
                f = "", m = !0, q = h.length, t = 0; t < q; t++) {
              var u = h[t];
              if (!u || 1 != u.nodeType || "P" != u.tagName && "TABLE"
                  != u.tagName && "DIV" != u.tagName && "HR" != u.tagName
                  && "OL" != u.tagName && "UL" != u.tagName && "H1" != u.tagName
                  && "H2" != u.tagName && "H3" != u.tagName && "H4" != u.tagName
                  && "H5" != u.tagName && "H6" != u.tagName) {
                if (3
                    == u.nodeType) {
                  var v = u.nodeValue, v = v.replace(/&/g, "&amp;"),
                      v = v.replace(/</g, "&lt;"), v = v.replace(/>/g, "&gt;"),
                      v = v.replace(/\r\n/g, "<br />"),
                      v = v.replace(/\r?\n/g, "<br />"),
                      v = v.replace(/\n/g, "<br />");
                  0 == m ? f += v : (f = f + "<p>" + v, m = !1)
                } else {
                  8 !=
                  u.nodeType ? 0 == m ? f += u.outerHTML : (f = f + "<p>"
                      + u.outerHTML, m = !1) : "0"
                      == KEDITORTOP.G_CURRKEDITOR._config.removeComment
                      && (f += u.text);
                }
              } else {
                0 == m
                && (f += "</p>", m = !0), f += u.outerHTML, m = !0
              }
            }
            0 == m && (f += "</p>");
            0 < f.length && (a = f)
          }
        } catch (w) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(w)
        }
        try {
          g && (g.innerHTML = "", delete null)
        } catch (x) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(x)
        }
        g = _iframeDoc.createElement("div");
        g.innerHTML = a;
        if ((a = getMyElementNode(e.startContainer)) &&
            1 == a.nodeType && "BODY" == a.tagName) {
          h = g.childNodes;
          f = "";
          m = !0;
          q = h.length;
          for (t = 0; t < q; t++) {
            !(u = h[t]) || 1 != u.nodeType || "P"
            != u.tagName && "TABLE" != u.tagName && "DIV" != u.tagName && "HR"
            != u.tagName && "OL" != u.tagName && "UL" != u.tagName ? 3
            == u.nodeType ? (v = u.nodeValue, v = v.replace(/&/g,
                "&amp;"), v = v.replace(/</g, "&lt;"), v = v.replace(/>/g,
                "&gt;"), v = v.replace(/\r\n/g, "<br />"), v = v.replace(
                /\r?\n/g,
                "<br />"), v = v.replace(/\n/g, "<br />"), 0 == m ? f += v
                : (f = f + "<p>" + v, m = !1)) : 8 != u.nodeType && (0 == m
                ? f += u.outerHTML : (f = f + "<p>" + u.outerHTML, m =
                    !1)) : (0 == m
            && (f += "</p>", m = !0), f += u.outerHTML, m = !0);
          }
          0 == m && (f += "</p>");
          0 < f.length && (a = f)
        }
        a = _iframeDoc.createDocumentFragment();
        for (var y; u = g.firstChild;) {
          y = a.appendChild(u);
        }
        try {
          e.insertNode(a)
        } catch (z) {
          d.collapse(_iframeDoc.body.firstChild, 0), e = d.getRangeAt(
              0), e.insertNode(a)
        }
        if (y) {
          if (3 == y.nodeType) {
            e.selectNodeContents(y);
            e = e.cloneRange();
            try {
              e.setEnd(e.endContainer, e.endOffset), e.collapse(!1)
            } catch (A) {
              e.setStartBefore(y), e.collapse(!0)
            }
            d.removeAllRanges();
            d.addRange(e)
          } else if (!y || 1 != y.nodeType || 0 !=
              y.outerHTML.indexOf("<table") && 0 != y.outerHTML.indexOf(
                  "<TABLE")) {
            e.selectNodeContents(y);
            e = e.cloneRange();
            try {
              "IMG" == y.tagName || "HR" == y.tagName || "IFRAME" == y.tagName
              || "EMBED" == y.tagName ? (e.setStartAfter(y), e.collapse(!0))
                  : (KEDITORTOP.RAONKEDITOR.browser.gecko || 8
                  < KEDITORTOP.RAONKEDITOR.browser.ieVersion ? (e.setEnd(
                          e.endContainer, e.endOffset), e.collapse(!1))
                      : (e.setStartAfter(y), e.collapse(!0)), "OL" != y.tagName
                  && "UL" != y.tagName || setTimeout(function () {
                    doSetCaretPosition(e.endContainer.lastChild.lastChild,
                        1)
                  }, 0))
            } catch (B) {
              e.setStartBefore(y), e.collapse(!0)
            }
            try {
              d.removeAllRanges(), d.addRange(e)
            } catch (C) {
              e.startContainer && 1 == e.startContainer.nodeType && setTimeout(
                  function () {
                    doSetCaretPosition(e.startContainer, 1)
                  }, 0)
            }
          } else if (a = y.getElementsByTagName("td")) {
            var D = a[a.length - 1].childNodes[0];
            if (0 == D.length) {
              doSetCaretPosition(cell, 1);
            } else {
              for (; 0 != D.childNodes.length && "BR"
              != D.childNodes[0].tagName;) {
                D = D.childNodes[0];
              }
              doSetCaretPosition(D, 0)
            }
          }
        }
        try {
          g && (g.innerHTML = "", delete null)
        } catch (H) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
          KEDITORTOP.RAONKEDITOR.logMode && console.log(H)
        }
      }
    } else {
      (d = _iframeDoc.selection) && "Control" != d.type
      && (u = d.createRange(), u.collapse(!0), d.createRange().pasteHTML(
          a), e = d.createRange(), e.setEndPoint("StartToStart", u));
    }
    try {
      if (c) {
        if (D = _iframeDoc.getElementById("k_paste_caret_node")) {
          var G = getFirstRange().range;
          G.setStart(D, 0);
          G.setEnd(D, 0);
          rangy.getSelection(_iframeWin).removeAllRanges();
          rangy.getSelection(_iframeWin).addRange(G);
          D.removeAttribute("id")
        }
      } else if (e.startContainer && e.startContainer.tagName &&
          "BR" == e.startContainer.tagName) {
        for (var I = e.startContainer; ;) {
          if (null == I || void 0 == I) {
            I = I.parentNode;
            break
          }
          if ("BR" != I.tagName) {
            break;
          }
          I = I.previousSibling
        }
        e.setStartAfter(I);
        e.collapse(!0);
        d.removeAllRanges();
        d.addRange(e)
      }
      if (e.startContainer && e.startContainer.tagName && "TD"
          == e.startContainer.tagName) {
        var M = y ? y.nextSibling : null;
        M && M.tagName && ("P" == M.tagName || "BR" == M.tagName)
        && IsEmptyNodes(M) && e.startContainer.removeChild(M)
      }
    } catch (K) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
      console.log(K)
    }
    showWordCount();
    b || KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo()
  }
}

function getBlockContainer(a) {
  for (; a;) {
    if (1 == a.nodeType && /^(P|H[1-6]|DIV)$/i.test(a.nodeName)) {
      return a;
    }
    a = a.parentNode
  }
}

function getContainerForRemoveCss(a) {
  for (; a;) {
    if (1 == a.nodeType
        && /^(P|H[1-6]|DIV|LI|BLOCKQUOTE|HR|OL|UL|TD|TH)$/i.test(
            a.nodeName)) {
      return a;
    }
    a = a.parentNode
  }
}

function extractBlockContentsFromCaretForRemoveCss(a) {
  var c = getFirstRange(), b = c.range;
  if (c.sel.rangeCount) {
    if (a) {
      if (a = getContainerForRemoveCss(
          b.startContainer)) {
        return c = b.cloneRange(), c.selectNodeContents(
            a), c.setEnd(b.startContainer, b.startOffset), c.extractContents()
      }
    } else if (a = getContainerForRemoveCss(
        b.endContainer)) {
      return c = b.cloneRange(), c.selectNodeContents(
          a), c.setStart(b.endContainer, b.endOffset), c.extractContents()
    }
  }
}

function extractBlockContentsFromCaret(a) {
  var c = getFirstRange(), b = c.range;
  if (c.sel.rangeCount) {
    if (a) {
      if (c = getBlockContainer(
          b.startContainer)) {
        return a = b.cloneRange(), a.selectNodeContents(
            c), a.setEnd(b.startContainer, b.startOffset), a.extractContents()
      }
    } else if (c = getBlockContainer(b.endContainer)) {
      a = b.cloneRange();
      a.selectNodeContents(c);
      if (KEDITORTOP.RAONKEDITOR.browser.ie) {
        a.setStart(b.endContainer,
            b.endOffset);
      } else {
        c = b.endOffset;
        try {
          0 < b.endOffset && b.endContainer.childNodes.length >= b.endOffset
          && (c = b.endContainer.childNodes.length -
              1 - b.endOffset, 0 > c && (c = 0))
        } catch (d) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(d)
        }
        a.setStart(b.endContainer, c)
      }
      return a.extractContents()
    }
  }
}

function insertNodeAtCaret(a) {
  var c = KEDITORTOP.G_CURRKEDITOR._DOC.createElement("span");
  c.id = a;
  c.innerHTML = "&nbsp;";
  if (a = getFirstRange().range) {
    a.collapse(!1), a.insertNode(c)
  }
}

function replacePasteHTML() {
  if (null != startBookmark && null != endBookmark) {
    try {
      var a = getFirstRange().range;
      a.setStart(startBookmark.startContainer, startBookmark.startOffset);
      a.setEnd(endBookmark.startContainer, endBookmark.startOffset);
      var c = a.toHtml();
      if (0 < c.length) {
        var c = SetCorrectOfficeHtml(c), c = SetCorrectOfficeHtmlForDOM(c),
            b = KEDITORTOP.RAONKEDITOR.util.officeClean(c, !1),
            b = KEDITORTOP.RAONKEDITOR.util.htmlRevision(b),
            b = xssReplaceScript(null, b);
        a && (a.deleteContents(), a.pasteHtml(b))
      }
    } catch (d) {
      KEDITORTOP &&
      KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(d)
    }
  }
}

function keditor_src_init(a) {
  _iframeWin = rangy.dom.getIframeWindow(a);
  _iframeDoc = rangy.dom.getIframeDocument(a)
}

function setBodyDefaultValue(a) {
  try {
    if (0 != getFirstRange().range.collapsed) {
      var c = _iframeDoc.body.childNodes.length, b = _iframeDoc.body.childNodes,
          d = a = null;
      if (0 == c) {
        a = _iframeDoc.createElement(
            "p"), KEDITORTOP.RAONKEDITOR.browser.ie && 11
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion ? a.innerHTML = "&nbsp;"
            : (d = _iframeDoc.createElement("br"), a.appendChild(
                d)), _iframeDoc.body.appendChild(a);
      } else if (3 !== b[0].nodeType
          && 1 == c && 1 === b[0].nodeType) {
        if (a = b[0], "p"
        == a.nodeName.toLowerCase()) {
          "" != a.innerHTML && " " != a.innerHTML &&
          "&nbsp;" != a.innerHTML || KEDITORTOP.RAONKEDITOR.browser.ie && 11
          > KEDITORTOP.RAONKEDITOR.browser.ieVersion
          || (d = _iframeDoc.createElement("br"), a.appendChild(d));
        } else if ("br"
            == a.nodeName.toLowerCase()) {
          var e = _iframeDoc.createElement("p");
          _iframeDoc.body.appendChild(e);
          e.appendChild(a)
        }
      }
    }
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
}

function setFocusToBody(a) {
  var c = !0;
  try {
    var b = KEDITORTOP.G_CURRKEDITOR;
    a && (b = a);
    1 == isViewMode(b) ? c = !1 : 0 == b._config.initFocus
        && b.isInitFocusHandler && (c = !1);
    if (1 == c) {
      if (KEDITORTOP.RAONKEDITOR.browser.ie) {
        try {
          _iframeWin.focus(), _iframeDoc.focus(), _iframeDoc.body.focus()
        } catch (d) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(d)
        }
      } else {
        try {
          _iframeWin.focus(), _iframeDoc.body.focus()
        } catch (e) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(e)
        }
      }
    }
  } catch (f) {
    KEDITORTOP &&
    KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(f)
  }
  return c
}

function _iframeDoc_ContextMenu(a) {
  var c = getEditrFromEvent(a);
  setKEDITORWINDOC(c);
  KEDITORTOP.G_CURRKEDITOR = c;
  if (isViewMode(c)) {
    "0" == c._config.viewModeBrowserMenu
    && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
  } else {
    var b = a ? a : _iframeWin.event;
    currElem = b.target ? b.target : b.srcElement;
    if ("keditorResizeDiv" == currElem.id || null
        != KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
        && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_ResizeHandlerActivatedFlag) {
      currElem = KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem;
    }
    if (0 != checkContentEditable(KEDITORTOP.G_CURRKEDITOR, currElem)) {
      var d = !1;
      if ("textarea" == currElem || "input" == currElem) {
        d = !0;
      }
      var e = GetParentbyTagName(currElem, "div");
      setTimeout(function () {
        if (0 == d) {
          var a = getFirstRange().range.startContainer;
          3 == a.nodeType && (a = a.parentNode);
          G_CURSOR_ELEMENT = e && "keditor_Page_Break" == e.className ? e : a;
          onChange({editor: c})
        }
      }, 10);
      if ("1" != c._config.formMode && "1" == c._config.userTableLock.use) {
        var f = GetTDTHCell(currElem), g;
        f && (g = GetParentbyTagName(currElem, "table"));
        var h = c._config.userTableLock.defaultTableLockMode;
        g && g.getAttribute("lock_mode") && "" != g.getAttribute("lock_mode")
        && (h = g.getAttribute("lock_mode"));
        var m = !0;
        "1" == h && (m = !1);
        if (f) {
          if (checkLockAttr(g)) {
            if (c.lastElemForLock) {
              setFocusForLock(c.lastElemForLock);
            } else {
              var q = findNoLockElem(g);
              q ? setFocusForLock(q) : (window.focus(), document.body.focus())
            }
            KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return
          }
          if (checkLockAttr(f, !m)) {
            c.lastElemForLock ? setFocusForLock(c.lastElemForLock)
                : setFocusForLock(findNoLockCell(g));
            KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return
          }
          c.lastElemForLock = f
        }
      }
      if ("1" == c._config.returnEvent.mouse_event) {
        try {
          var f = {
            strEventName: "contextmenu",
            objEvent: b,
            objElement: currElem
          }, t;
          "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.mouse
              ? t = KEDITORTOP.G_CURRKEDITOR._config.event.mouse(c.ID, f)
              : "function"
              === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_MouseEvent
              && (t = KEDITORTOP.KEDITORWIN.RAONKEDITOR_MouseEvent(c.ID, f));
          if (!1 === t) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(b);
            return
          }
        } catch (u) {
          KEDITORTOP &&
          KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(
              u)
        }
      }
      b = GetParentbyTagName(currElem, "table");
      null == b ? (ClearDraggingTableCellSelected(), ActiveCurrTable = null)
          : (KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = currElem, ActiveCurrTable = b);
      try {
        var v = currElem.tagName.toLowerCase();
        if ("html" == v || "body" == v) {
          b = !1;
          500 > a.clientX && 10 > a.clientY && (b = !0);
          repairBodyFirstLastTag(b);
          if (KEDITORTOP.RAONKEDITOR.browser.ie && 0
              == KEDITORTOP.RAONKEDITOR.browser.quirks && 7
              != KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
            if ((q =
                    getFirstRange().range) && 1 == q.collapsed
                && _iframeDoc.body.createTextRange) {
              var q = _iframeDoc.body.createTextRange(), w = a.clientX,
                  x = a.clientY;
              "None" == c._setting.doctype && (w < q.boundingLeft
              && (w = q.boundingLeft), "html" == v && x > q.boundingHeight
              - (q.offsetTop - q.boundingTop) && ("None" != c._setting.doctype
              && (w = q.boundingWidth + q.boundingLeft), x = q.boundingHeight
                  - (q.offsetTop - q.boundingTop), "None" == c._setting.doctype
              && --x));
              try {
                q.moveToPoint(w, x), q.select()
              } catch (y) {
                c.isInitFocusHandler = !1, setFocusToBody()
              }
            }
            setFocusToBody()
          } else if (KEDITORTOP.RAONKEDITOR.browser.chrome ||
              KEDITORTOP.RAONKEDITOR.browser.opera) {
            var z = getFirstRange().range;
            if (1 == z.collapsed) {
              v = null;
              try {
                createSelectionFromPoint(a.clientX, a.clientY, a.clientX,
                    a.clientY), setFocusToBody(), z = getFirstRange().range, v = _iframeDoc.createElement(
                    "keditortemp"), z.insertNode(v), null != v.nextSibling
                && doSetCaretPosition(v.nextSibling, !1)
              } catch (A) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(A)
              }
              v && v.parentNode.removeChild(v)
            }
          } else {
            setFocusToBody();
          }
          (q = getFirstRange().range) && q.startContainer ==
          q.endContainer && 1 == q.collapsed && (currElem = getMyElementNode(
              q.startContainer));
          setMenuIconRealable(currElem)
        } else {
          setTimeout(function () {
            var a = getFirstRange().range;
            a && a.startContainer == a.endContainer && 1 == a.collapsed
            && (currElem = getMyElementNode(a.startContainer));
            setMenuIconRealable(currElem)
          }, 0)
        }
      } catch (B) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(B)
      }
      if (!IsMousePointOnBorder(a)) {
        if (getApplyDragResize(KEDITORTOP.G_CURRKEDITOR)
            && !KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_showContext) {
          KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_showContext =
              !0;
          KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
          return
        }
        if (KEDITORTOP.RAONKEDITOR.browser.mobile) {
          return;
        }
        if ("1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager && "0"
            == KEDITORTOP.G_CURRKEDITOR._config.pasteToImage) {
          var q = setManagerParam("{}", [["kcmd", "KC32"]]),
              q = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(q),
              C = a;
          KEDITORTOP.RAONKEDITOR.browser.ie && 8
          >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && (C = {
            target: a.target ? a.target : a.srcElement,
            clientX: a.clientX,
            clientY: a.clientY
          });
          sendMessageToAgent(q, function (a) {
            a =
                KEDITORTOP.RAONKSolution.Agent.parseRtn(a);
            var b = a.code;
            a = a.valueArr;
            KEDITORTOP.G_CURRKEDITOR.canPasteToImage = 1E3 == b || 7777 == b
                ? "1" == a[0] ? !0 : !1 : !1;
            setContextMenu(C)
          }, null, !0)
        } else {
          setContextMenu(a)
        }
      }
      "1" == KEDITORTOP.G_CURRKEDITOR._config.clickCtrlHyperlink
      && (KEDITORTOP.G_CURRKEDITOR.isAOver.linkStyle
      && hyperLinkOut(), KEDITORTOP.G_CURRKEDITOR.isAOver.openHelp
      && hyperHelpClose())
    }
    KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
  }
}

function _iframeDoc_BlurHandler(a) {
  var c = getEditrFromEvent(a);
  if (!c._LastRange && !c._RangeBlurBug) {
    c._LastRange = saveSelection(c.ID);
    try {
      "1" == c._config.returnEvent.focus_event && (a = {
        strEventName: "blur",
        objEvent: a
      }, "function" === typeof c._config.event.focus
          ? KEDITORTOP.G_CURRKEDITOR._config.event.focus(c.ID, a) : "function"
          === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_FocusEvent
          && KEDITORTOP.KEDITORWIN.RAONKEDITOR_FocusEvent(c.ID, a))
    } catch (b) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
      console.log(b)
    }
  }
}

function _iframeDoc_FocusHandler(a) {
  if (a.target ? a.target : a.srcElement) {
    var c = getEditrFromEvent(a);
    setCurrentEditor(c);
    1 == c.isInitFocusHandler && (c.isInitFocusHandler = !1);
    if (1 == c._config.initFocus && c._LastRange) {
      var b = null;
      1 == c.isCloseTopMenu && (b = c._LastRange);
      restoreSelection(c._LastRange);
      1 == c.isCloseTopMenu && (c._LastRange = b, c.isCloseTopMenu = !1)
    }
    try {
      "1" == c._config.returnEvent.focus_event && (a = {
        strEventName: "focus",
        objEvent: a
      }, "function" === typeof c._config.event.focus ? c._config.event.focus(
              c.ID, a) :
          "function" === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_FocusEvent
          && KEDITORTOP.KEDITORWIN.RAONKEDITOR_FocusEvent(c.ID, a))
    } catch (d) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(d)
    }
  }
}

function setCurrentEditor(a) {
  var c = a._EDITOR.design;
  a._DOC = c.contentDocument ? c.contentDocument : c.contentWindow.document;
  a._BODY = a._DOC.body;
  KEDITORTOP.G_CURRKEDITOR = a;
  G_USE_EDITOR_ID = a.ID;
  LayerFrame = KEDITORTOP.KEDITORDOC.getElementById(
      "raonk_frame_" + KEDITORTOP.G_CURRKEDITOR.ID);
  keditor_src_init(c)
}

function InsertFontElement(a, c) {
  var b = getFirstRange(), d = b.range;
  if (d) {
    d.collapse(!1);
    var e = null, e = GetParentbyTagName(d.startContainer, "span");
    !e || e.innerHTML != unescape("%u200B") && e.innerHTML != unescape("%uFEFF")
    && "" != e.innerText && "\n" != e.innerHTML && "<br>" != e.innerHTML
    && "<br />" != e.innerHTML && "<br>" != e.innerHTML
        ? (e = _iframeDoc.createElement("span"), 0
        == KEDITORTOP.RAONKEDITOR.browser.gecko
        && (KEDITORTOP.RAONKEDITOR.browser.ie && "xp"
        != KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase() ? e.innerHTML =
            unescape("%u200B") : e.innerHTML = unescape(
            "%uFEFF")), e.style[a] = c, d.insertNode(e), d.selectNodeContents(
            e), rangy.getSelection(_iframeWin).removeAllRanges(), b.sel.addRange(
            d), doSetCaretPosition(e, 1), !KEDITORTOP.RAONKEDITOR.browser.ie
        || "fontFamily" != a && "fontSize" != a
        || (KEDITORTOP.G_CURRKEDITOR._LastRange = saveSelection(
            KEDITORTOP.G_CURRKEDITOR.ID)))
        : (e.style[a] = c, KEDITORTOP.RAONKEDITOR.browser.ie && "xp"
        != KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase()
            ? e.innerHTML = unescape("%u200B") : e.innerHTML =
                unescape("%uFEFF"), d.selectNodeContents(e), rangy.getSelection(
            _iframeWin).removeAllRanges(), b.sel.addRange(d), doSetCaretPosition(e,
            1))
  }
}

function execCommand(a, c, b) {
  c.document = _iframeDoc;
  rangy.execCommand(a, c, b)
}

function getFirstRange() {
  retValue = {};
  try {
    var a = rangy.getSelection(_iframeWin);
    retValue.sel = a;
    if (0 == a.rangeCount) {
      var c = rangy.createRange(_iframeDoc), a = rangy.getSelection(_iframeWin);
      a.setSingleRange(c);
      retValue.sel = a;
      retValue.range = c
    } else {
      retValue.range = a.getRangeAt(
          0), KEDITORTOP.RAONKEDITOR.browser.chrome
      && retValue.range.startContainer == retValue.range.endContainer
      && retValue.range.startOffset == retValue.range.endOffset
      && retValue.range.startContainer.tagName && "br"
      == retValue.range.startContainer.tagName.toLowerCase() &&
      retValue.range.startContainer.parentNode
      && retValue.range.startContainer.parentNode.lastChild
      == retValue.range.startContainer && (retValue.range.setStartBefore(
          retValue.range.startContainer), retValue.range.setEndBefore(
          retValue.range.endContainer), retValue.sel.removeAllRanges(), retValue.sel.addRange(
          retValue.range))
    }
  } catch (b) {
    try {
      c = rangy.createRange(_iframeDoc), a = rangy.getSelection(
          _iframeWin), a.setSingleRange(c), retValue.sel = a, retValue.range = c
    } catch (d) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
      console.log(d)
    }
  }
  return retValue
}

function setRestoreCaretPos(a) {
  var c = getFirstRange().range;
  c && (0 == a && c.collapse(!1), rangy.getSelection(
      _iframeWin).removeAllRanges(), rangy.getSelection(_iframeWin).addRange(c))
}

function DoExecuteCommand(a, c, b, d) {
  var e = function (a) {
    return "underline" != a && "strikeThrough" != a || "2"
    != KEDITORTOP.G_CURRKEDITOR._config.underlineAndStrikeThroughMode || !(0
        == KEDITORTOP.RAONKEDITOR.browser.ie
        || KEDITORTOP.RAONKEDITOR.browser.ie && 11
        <= KEDITORTOP.RAONKEDITOR.browser.ieVersion) ? !1 : !0
  }, f = function (a, b, c) {
    if (KEDITORTOP.RAONKEDITOR.browser.ie) {
      var d = "";
      b = c = "";
      "underline" == a ? (d = "u", c = "underline", b = "textDecoration")
          : "strikeThrough" == a
          && (d = "strike", c = "line-through", b = "textDecoration");
      if ("" != d) {
        for (a =
            _iframeDoc.getElementsByTagName(d), d = a.length - 1; 0 <= d; d--) {
          var e = a[d], f = _iframeDoc.createElement("span");
          f.style[b] = c;
          for (e.parentNode.insertBefore(f, e); e.hasChildNodes();) {
            f.appendChild(
                e.firstChild);
          }
          e.parentNode.removeChild(e)
        }
      }
    } else {
      if (b) {
        for (b = b.getElementsByTagName("span"), a = b.length, d = 0;
            d < a; d++) {
          b[d].style.textDecorationLine
          && (b[d].style.textDecoration = b[d].style.textDecorationLine);
        }
      }
      c && c.style.textDecorationLine
      && (c.style.textDecoration = c.style.textDecorationLine)
    }
  }, g = function (a, b) {
    var c = GetTDTHCell(a),
        d;
    d = b;
    "strikeThrough" == b && (d = "line-through");
    var e = getAllTextNodeByNode(a);
    if (e && 0 < e.length && c) {
      for (var e = e[0], f = "none", g = "none"; e
      != c;) {
        if (e = e.parentNode, f = KEDITORTOP.RAONKEDITOR.util.getStyle(e,
            "textDecorationLine"), (g = KEDITORTOP.RAONKEDITOR.util.getStyle(e,
            "textDecoration")) && -1 != g.indexOf(d) || f && -1 != f.indexOf(
            d)) {
          return !0;
        }
      }
      if (e == c) {
        return !1
      }
    } else {
      return !1
    }
  };
  e(b) && _iframeDoc.execCommand("styleWithCSS", !1, !0);
  var h = function (a) {
    if (a = GetTDTHCell(a).getElementsByTagName("span")) {
      for (var b = a.length,
          c = 0; c < b; c++) {
        if (a[c].style &&
            "normal" == a[c].style.fontWeight) {
          return !0;
        }
      }
    }
    return !1
  };
  try {
    (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
        != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) && 0
    < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    var m = "BackCompat" == KEDITORTOP.G_CURRKEDITOR._DOC.compatMode,
        q = KEDITORTOP.RAONKEDITOR.browser.quirks;
    if (1 == c.collapsed) {
      var t = GetTableSelectionCells();
      if (0 == t.length) {
        try {
          KEDITORTOP.RAONKEDITOR.browser.ie &&
          11 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && "1"
          == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO && 1
          == c.startContainer.nodeType && "" == c.startContainer.innerHTML
          && (c.startContainer.innerHTML = unescape("%u200B"))
        } catch (u) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(u)
        }
        if (e(b)) {
          var v;
          c.startContainer && 3 == c.startContainer.nodeType && "%uFEFF"
          == escape(c.startContainer.nodeValue) ? v = c.startContainer
              : (v = _iframeDoc.createTextNode(
                  unescape("%uFEFF")), c.insertNode(v), v.previousSibling &&
              (3 == v.previousSibling.nodeType && "%uFEFF" == escape(
                      v.previousSibling.nodeValue) || "BR"
                  == v.previousSibling.nodeName) && v.parentNode.removeChild(
                  v.previousSibling));
          c.setStart(v, 0);
          c.setEnd(v, v.length);
          a.removeAllRanges();
          a.addRange(c);
          _iframeDoc.execCommand(b, !1, null);
          var w = v.parentNode;
          f(b, w.parentNode);
          c.setStart(v, v.length);
          c.setEnd(v, v.length);
          a.removeAllRanges();
          a.addRange(c);
          setMenuIconRealable(w)
        } else {
          _iframeDoc.execCommand(b, !1, null), setMenuIconRealable(
              getMyElementNode(c.startContainer))
        }
      } else {
        var x =
            [];
        switch (b) {
          case "bold":
            x = ["b", "strong"];
            break;
          case "italic":
            x = ["em", "i"];
            break;
          case "underline":
            x = ["u"];
            break;
          case "strikeThrough":
            x = ["strike"];
            break;
          case "superscript":
            x = ["sup"];
            break;
          case "subscript":
            x = ["sub"]
        }
        v = !0;
        if (1 < t.length) {
          if ("1"
              == KEDITORTOP.G_CURRKEDITOR._config.applyStyleEmptyTag) {
            for (var y = 0;
                y < t.length; y++) {
              var z = "<(p|span|b|strong|em|i|u|strike|sup|sub)([^>]*?>)<br ?/?></(p|span|b|strong|em|i|u|strike|sup|sub)>",
                  A = new RegExp(z, "gim");
              t[y].innerHTML = t[y].innerHTML.replace(A, "<$1$2&nbsp;</$3>")
            }
          }
          for (var B =
              !1, y = 0; y < t.length; y++) {
            var C = t[y], D = getAllTextNodeByNode(C);
            if (D && 0 < D.length) {
              B = e(b) ? g(C, b) : "th" == C.nodeName.toLowerCase() && "bold"
              == b ? !h(C) : getElementInParentTag(D[0].parentNode, x);
              break
            }
          }
          B && (v = !1)
        }
        for (y = 0; y < t.length; y++) {
          if (a.removeAllRanges(), c.selectNode(
              t[y]), a.addRange(c), "0"
          != KEDITORTOP.G_CURRKEDITOR._config.applyStyleEmptyTag || ""
          != KEDITORTOP.RAONKEDITOR.util.replaceAll(t[y].innerHTML, " ", "")
          && t[y].innerHTML != getCellDefValue() && "<p><br></p>"
          != t[y].innerHTML.toLowerCase() && "<p><br/></p>"
          != t[y].innerHTML.toLowerCase() &&
          "<p><br /></p>" != t[y].innerHTML.toLowerCase()) {
            KEDITORTOP.RAONKEDITOR.browser.ie && (8
                >= KEDITORTOP.RAONKEDITOR.browser.ieVersion || 1 == m || 1 == q)
            && ("<p></p>" == t[y].innerHTML.toLowerCase()
                ? t[y].innerHTML = "<p>&nbsp;</p>" : "<span></span>"
                == t[y].innerHTML.toLowerCase()
                && (t[y].innerHTML = "<span>&nbsp;</span>"));
            "underline" == b || "strikeThrough" == b ? _iframeDoc.execCommand(b,
                !1, null) : (d.ignoreWhiteSpace = !0, rangy.queryCommandValue(b,
                d), execCommand(b, d, c));
            C = !1;
            switch (b) {
              case "bold":
                if (0 < t[y].getElementsByTagName("b").length ||
                    0 < t[y].getElementsByTagName("strong").length || "th"
                    == t[y].nodeName.toLowerCase() && !h(t[y])) {
                  C = !0;
                }
                break;
              case "italic":
                if (0 < t[y].getElementsByTagName("em").length || 0
                    < t[y].getElementsByTagName("i").length) {
                  C = !0;
                }
                break;
              case "underline":
                e(b) ? v || KEDITORTOP.RAONKEDITOR.browser.ie ? (C = g(t[y],
                        "underline")) || 0 < t[y].getElementsByTagName("u").length
                    && (C = !0) : C = _iframeDoc.queryCommandState(b) : 0
                    < t[y].getElementsByTagName("u").length && (C = !0);
                break;
              case "strikeThrough":
                e(b) ? v || KEDITORTOP.RAONKEDITOR.browser.ie ? (C = g(t[y],
                    "strikeThrough")) || 0 < t[y].getElementsByTagName(
                    "strike").length && (C = !0)
                    : C = _iframeDoc.queryCommandState(b) : 0
                    < t[y].getElementsByTagName("strike").length && (C = !0);
                break;
              case "superscript":
                0 < t[y].getElementsByTagName("sup").length && (C = !0);
                break;
              case "subscript":
                0 < t[y].getElementsByTagName("sub").length && (C = !0)
            }
            if (v && !C || !v && C) {
              "underline" == b || "strikeThrough" == b
                  ? _iframeDoc.execCommand(b, !1, null)
                  : (d.ignoreWhiteSpace = !0, rangy.queryCommandValue(b,
                      d), execCommand(b, d, c))
            }
          } else {
            KEDITORTOP.G_CURRKEDITOR._formatPainterList &&
            "1" == KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying
            && (KEDITORTOP.RAONKEDITOR.browser.ie
            && (t[y].innerHTML = "<p>&nbsp;</p>"), "underline" == b
            || "strikeThrough" == b ? _iframeDoc.execCommand(b, !1, null)
                : (d.ignoreWhiteSpace = !0, rangy.queryCommandValue(b,
                    d), execCommand(b, d, c)));
          }
        }
        if (e(b)) {
          var H = GetParentbyTagName(t[0], "table");
          f(b, H)
        }
        if ("1" == KEDITORTOP.G_CURRKEDITOR._config.applyStyleEmptyTag
            && !(KEDITORTOP.RAONKEDITOR.browser.ie && 10
                >= KEDITORTOP.RAONKEDITOR.browser.ieVersion)) {
          for (y = 0;
              y < t.length;
              y++) {
            z = "<(span|b|strong|em|i|u|strike|sup|sub)([^>]*?>)&nbsp;</(span|b|strong|em|i|u|strike|sup|sub)>",
                A = new RegExp(z,
                    "gim"), t[y].innerHTML = t[y].innerHTML.replace(
                A, "<$1$2<br></$3>");
          }
        }
        a.removeAllRanges();
        var G = DrageEndCell.lastChild;
        try {
          for (; G;) {
            if (3 == G.nodeType) {
              G = G.parentNode;
              break
            } else if (1 == G.nodeType && void 0 != G.tagName && -1
                < ",img,br,".indexOf("," + G.tagName.toLowerCase() + ",")) {
              G = G.parentNode;
              break
            }
            G = G.lastChild
          }
          if (!KEDITORTOP.RAONKEDITOR.browser.ie || "td"
              != G.nodeName.toLowerCase() && "th"
              != G.nodeName.toLowerCase()) {
            "<br>" == G.innerHTML
                ? doSetCaretPosition(G, 0) : doSetCaretPosition(G, 1);
          } else {
            var I = getCellLastChildNode(G);
            doSetCaretPosition(I.node, I.position)
          }
        } catch (M) {
          doSetCaretPosition(DrageEndCell.lastChild, 1)
        }
        KEDITORTOP.RAONKEDITOR.browser.ie && (8
            >= KEDITORTOP.RAONKEDITOR.browser.ieVersion || 1 == m || 1 == q)
        && (KEDITORTOP.G_CURRKEDITOR._LastRange = null);
        var K = getFirstRange().range,
            P = getMyChildElementNode(K.startContainer);
        P && K.selectNode(P);
        _iframeDoc_MouseUpMenu(null, DrageEndCell);
        setMenuIconRealable(G)
      }
    } else {
      if ("underline" != b && "strikeThrough" != b
          && KEDITORTOP.RAONKEDITOR.browser.ie) {
        if (d.ignoreWhiteSpace = !0, rangy.queryCommandValue(
            b,
            d), execCommand(b, d, c), KEDITORTOP.RAONKEDITOR.browser.ie && 3
        == c.startContainer.nodeType && 1 == c.endContainer.nodeType
        && (c.endContainer.lastChild && "br"
            == c.endContainer.lastChild.tagName.toLowerCase() || 0
            == c.endContainer.childNodes.length && "strong"
            == c.endContainer.tagName.toLowerCase() && "bold" == b || 0
            == c.endContainer.childNodes.length && "i"
            == c.endContainer.tagName.toLowerCase() && "italic" == b || 0
            == c.endContainer.childNodes.length && "sup"
            == c.endContainer.tagName.toLowerCase() && "superscript" == b || 0
            == c.endContainer.childNodes.length &&
            "sub" == c.endContainer.tagName.toLowerCase() && "subscript"
            == b)) {
          try {
            var E = getFirstRange(), x = E.range, B = E.sel, L = null, O;
            if (x.endContainer && 1 == x.endContainer.nodeType) {
              var N = getNodeLastChildNode(x.endContainer);
              N && (1 == N.nodeType ? (v = x.endContainer.innerText
                      || x.endContainer.textContent, ba = v.length, N = N.firstChild)
                  : 3 == N.nodeType && (ba = N.length));
              L = N;
              O = ba
            } else {
              x.endContainer && 3 == x.endContainer.nodeType
              && (L = x.endContainer, O = x.endContainer.length);
            }
            null == L ? (DEXTTOP.DEXT5.browser.gecko
                && a.removeAllRanges(), a.addRange(c)) :
                (x.setStart(c.startContainer, c.startOffset), x.setEnd(L,
                    O), B.removeAllRanges(), B.addRange(x))
          } catch (F) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(F)
          }
        } else {
          KEDITORTOP.RAONKEDITOR.browser.gecko
          && a.removeAllRanges(), a.addRange(c);
        }
      } else if (_iframeDoc.execCommand(b,
          !1, null), e(b)) {
        f(b, _iframeDoc);
        var E = getFirstRange();
        if (E.sel.isCollapsed) {
          try {
            var J = c.endContainer;
            E.range.setStartBefore(c.startContainer);
            E.range.setEndAfter(J);
            E.sel.removeAllRanges();
            E.sel.addRange(E.range)
          } catch (W) {
            KEDITORTOP &&
            KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(W)
          }
        }
      } else {
        try {
          E = getFirstRange();
          x = E.range;
          B = E.sel;
          a = !1;
          x.startContainer != c.startContainer && 1 == x.startContainer.nodeType
          && 3 == c.startContainer.nodeType && (x.setStart(c.startContainer,
              c.startOffset), a = !0);
          if (x.endContainer && 1 == x.endContainer.nodeType) {
            var L = x.endContainer.childNodes[x.endOffset - 1], ba;
            L && (1 == L.nodeType ? (v = x.endContainer.innerText
                    || x.endContainer.textContent, ba = v.length, L = L.firstChild)
                : 3 == L.nodeType && (ba = L.length));
            x.setEnd(L,
                ba);
            a = !0
          }
          a && (B.removeAllRanges(), B.addRange(x))
        } catch (U) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(U)
        }
      }
      setMenuIconRealable(getMyElementNode(c.startContainer))
    }
    e(b) && _iframeDoc.execCommand("styleWithCSS", !1, !1);
    if (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
        != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) {
      KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount =
          0;
    }
    setTimeout(function () {
      onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0});
      onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: b})
    }, 10)
  } catch (V) {
    e(b) && _iframeDoc.execCommand("styleWithCSS", !1, !1)
  }
}

function getCommandIconState(a) {
  "strikeThrough" == a && (a = "strike_through");
  return -1 < document.getElementById(
      "keditor_span_" + KEDITORTOP.G_CURRKEDITOR.ID + a).className.indexOf(
      "uebutton_span_enter") ? !0 : !1
}

function DoExecuteCommandFormatting(a, c, b) {
  try {
    (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
        != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) && 0
    < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    var d = function (a) {
      "SPAN" == a.tagName && "" != a.style.fontSize
      && (a.style.fontSize = null);
      for (var b = a.childNodes.length, c = 0; c < b; c++) {
        d(a.childNodes[c]);
      }
      return a
    }, e = rangy.getSelection(_iframeWin);
    if (1 == a.collapsed) {
      var f =
          GetTableSelectionCells();
      if (0 == f.length) {
        if (b) {
          KEDITORTOP.RAONKEDITOR.browser.ie && (c = "<" + c + ">");
          try {
            if (KEDITORTOP.RAONKEDITOR.browser.ie && 11
                == KEDITORTOP.RAONKEDITOR.browser.ieVersion && a.startContainer
                == a.endContainer) {
              var g, h = "";
              1 == a.startContainer.nodeType
                  ? (g = a.startContainer, h = a.startContainer.innerHTML) : 3
                  == a.startContainer.nodeType
                  && (g = a.startContainer.parentNode, h = g.innerHTML);
              g && "" != h && (h = h.replace(/<br>$/ig, ""), g.innerHTML = h)
            }
          } catch (m) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            &&
            console.log(m)
          }
          _iframeDoc.execCommand("formatBlock", !1, c);
          if ("0" != KEDITORTOP.G_CURRKEDITOR._config.removeFontSizeApplyHTag) {
            var q = KEDITORTOP.RAONKEDITOR.getCaretElement(
                KEDITORTOP.G_CURRKEDITOR.ID);
            if (q) {
              var t = GetParentbyTagName(q, "h1");
              null == t && (t = GetParentbyTagName(q, "h2"));
              null == t && (t = GetParentbyTagName(q, "h3"));
              null == t && (t = GetParentbyTagName(q, "h4"));
              null == t && (t = GetParentbyTagName(q, "h5"));
              null == t && (t = GetParentbyTagName(q, "h6"));
              null != t && (q = t);
              q = d(q)
            }
          }
        } else if (KEDITORTOP.RAONKEDITOR.browser.ie) {
          var u =
              GetParentbyTagName(a.startContainer, "h1");
          null == u && (u = GetParentbyTagName(a.startContainer, "h2"));
          null == u && (u = GetParentbyTagName(a.startContainer, "h3"));
          null == u && (u = GetParentbyTagName(a.startContainer, "h4"));
          null == u && (u = GetParentbyTagName(a.startContainer, "h5"));
          null == u && (u = GetParentbyTagName(a.startContainer, "h6"));
          if (u) {
            var q = u, v = _iframeDoc.createElement(c);
            v.innerHTML = q.innerHTML;
            "0" != KEDITORTOP.G_CURRKEDITOR._config.removeFontSizeApplyHTag
            && (v = d(v));
            _iframeDoc.body.appendChild(v);
            q.parentNode.replaceChild(v,
                q);
            doSetCaretPosition(v, 0)
          }
        } else {
          if (_iframeDoc.execCommand("formatBlock", !1, c), "0"
          != KEDITORTOP.G_CURRKEDITOR._config.removeFontSizeApplyHTag
          && (q = KEDITORTOP.RAONKEDITOR.getCaretElement(
              KEDITORTOP.G_CURRKEDITOR.ID))) {
            t = GetParentbyTagName(q, "h1"), null
            == t && (t = GetParentbyTagName(q, "h2")), null == t
            && (t = GetParentbyTagName(q, "h3")), null == t
            && (t = GetParentbyTagName(q, "h4")), null == t
            && (t = GetParentbyTagName(q, "h5")), null == t
            && (t = GetParentbyTagName(q, "h6")), null != t && (q = t), q = d(q)
          }
        }
      } else {
        var w = f.length, x = 0;
        for (a = 0; a < w; a++) {
          for (var y =
              getFormattingNode(f[a], c, b, !0), x = y.length, z = 0; z < x;
              z++) {
            q = y[z];
            v = _iframeDoc.createElement(c);
            h = 1 == q.nodeType ? q.innerHTML : q.nodeValue;
            if (KEDITORTOP.RAONKEDITOR.browser.ie && "xp"
                != KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase()
                && 11 == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
              try {
                h = h.replace(/<br>$/ig, ""), "" == h && (h = unescape(
                    "%u200B"))
              } catch (A) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(A)
              }
            }
            v.innerHTML = h;
            "0" != KEDITORTOP.G_CURRKEDITOR._config.removeFontSizeApplyHTag &&
            (v = d(v));
            _iframeDoc.body.appendChild(v);
            q.parentNode.replaceChild(v, q)
          }
          0 == y.length && b && (v = _iframeDoc.createElement(
              c), v.innerHTML = "" == f[a].innerHTML
              ? KEDITORTOP.RAONKEDITOR.browser.ie ? "&nbsp;" : "<br />"
              : f[a].innerHTML, f[a].innerHTML = "", "0"
          != KEDITORTOP.G_CURRKEDITOR._config.removeFontSizeApplyHTag && (v = d(
              v)), f[a].appendChild(v))
        }
        if ("td" == f[w - 1].nodeName.toLowerCase() || "th" == f[w
        - 1].nodeName.toLowerCase()) {
          e.removeAllRanges();
          var B = getCellLastChildNode(f[w - 1]);
          doSetCaretPosition(B.node, B.position)
        }
      }
    } else {
      f =
          [];
      y = getFormattingNode(a, c, b);
      x = y.length;
      if (0 == x && 0 == c.indexOf("h") && 2 == c.length) {
        for (; "BODY"
        != a.commonAncestorContainer.parentNode.tagName;) {
          a.commonAncestorContainer = a.commonAncestorContainer.parentNode;
        }
        y = getFormattingNode(a, c, b);
        x = y.length
      }
      for (z = 0; z < x; z++) {
        if (q = y[z], v = _iframeDoc.createElement(c), !b
        || "td" != q.tagName.toLowerCase() && "th" != q.tagName.toLowerCase()
        || !KEDITORTOP.RAONKEDITOR.browser.ie || "" != q.innerHTML && "&nbsp;"
        != q.innerHTML && q.innerHTML != q.innerText) {
          if (KEDITORTOP.RAONKEDITOR.browser.ie &&
              b && 1 == q.nodeType) {
            var C = q.tagName.toLowerCase();
            if ("h1" != C && "h2" != C && "h3" != C && "h4" != C && "h5" != C
                && "h6" != C && GetTDTHCell(q)) {
              continue
            }
          }
          try {
            if (q && 1 == q.nodeType) {
              h = q.innerHTML;
              if (KEDITORTOP.RAONKEDITOR.browser.ie && "xp"
                  != KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase()
                  && 11 == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
                try {
                  h = q.innerHTML.replace(/<br>$/ig, ""), "" == h
                  && (h = unescape(
                      "%u200B"))
                } catch (D) {
                  KEDITORTOP && KEDITORTOP.RAONKEDITOR
                  && KEDITORTOP.RAONKEDITOR.logMode && console.log(D)
                }
              }
              v.innerHTML = h
            }
          } catch (H) {
            KEDITORTOP &&
            KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(H)
          }
          "0" != KEDITORTOP.G_CURRKEDITOR._config.removeFontSizeApplyHTag
          && (v = d(v));
          _iframeDoc.body.appendChild(v);
          q.parentNode.replaceChild(v, q);
          f.push(v)
        } else {
          v.innerHTML = q.innerHTML, "" == v.innerHTML
          && (v.innerHTML = "&nbsp;"), q.innerHTML = "", "0"
          != KEDITORTOP.G_CURRKEDITOR._config.removeFontSizeApplyHTag && (v = d(
              v)), q.appendChild(v);
        }
      }
      x = f.length;
      if (0 < x) {
        e.removeAllRanges();
        a.selectNodeContents(f[0]);
        var G = a.cloneRange();
        a.selectNodeContents(f[x - 1]);
        a.setStart(G.startContainer, G.startOffset);
        a.setEnd(a.endContainer, a.endOffset);
        e.addRange(a)
      }
    }
    if (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
        != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) {
      KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
    }
    setTimeout(function () {
      onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0});
      onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: "formatting"})
    }, 10)
  } catch (I) {
    KEDITORTOP &&
    KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(I)
  }
}

function getFormattingNode(a, c, b, d) {
  c = [];
  var e = null;
  if (d) {
    if (e = a.childNodes, 0 == e.length) {
      return e
    }
  } else {
    e = getNodesInRange(a);
  }
  for (var f = !1, g = e.length, h = 0; h < g; h++) {
    var m = e[h];
    if (1 == m.nodeType) {
      var q = m.tagName.toLowerCase();
      "html" != q && "body" != q && (f = !0, b ? ("h1" == q || "h2" == q || "h3"
          == q || "h4" == q || "h5" == q || "h6" == q || "p" == q || "pre" == q
          || KEDITORTOP.RAONKEDITOR.browser.ie && 1 != d && ("td" == q || "th"
              == q)) && c.push(m) : "h1" != q && "h2" != q && "h3" != q && "h4"
          != q && "h5" != q && "h6" != q || c.push(m))
    } else {
      d && 3 == m.nodeType && (!KEDITORTOP.RAONKEDITOR.browser.ie ||
          "td" != a.nodeName.toLowerCase() && "th" != a.nodeName.toLowerCase()
          || "\n" != m.data) && b && (f = !0, c.push(m))
    }
  }
  if (0 == f) {
    for (e = getAllNodesInBody(_iframeDoc.body,
        !0), g = e.length, h = 0; h < g; h++) {
      m = e[h], 1 == m.nodeType
          ? (q = m.tagName.toLowerCase(), b ? ("h1" == q || "h2" == q || "h3"
              == q
              || "h4" == q || "h5" == q || "h6" == q || "p" == q || "pre" == q
              || KEDITORTOP.RAONKEDITOR.browser.ie && 1 != d && ("td" == q
                  || "th"
                  == q)) && c.push(m) : "h1" != q && "h2" != q && "h3" != q
              && "h4"
              != q && "h5" != q && "h6" != q || c.push(m)) : d && 3
          == m.nodeType
          && (!KEDITORTOP.RAONKEDITOR.browser.ie || "td"
              != a.nodeName.toLowerCase()
              &&
              "th" != a.nodeName.toLowerCase() || "\n" != m.data) && b
          && c.push(m);
    }
  }
  return c
}

function DoExecuteCommand2(a, c, b, d, e) {
  try {
    (0 == !!e && null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
        != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) && 0
    < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    if (1 == c.collapsed || 0 != c.endOffset) {
      var f = GetTableSelectionCells();
      -1 < b.indexOf("justify") && 7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion
      && null != ActiveCurrTable && 0 == d && (d = !1, "0"
      == KEDITORTOP.G_CURRKEDITOR._config.tableAutoAdjust &&
      (KEDITORTOP.G_CURRKEDITOR._config.tableAutoAdjust = "1", d = !0), setAdjustTableWidthHeight(
          ActiveCurrTable), d
      && (KEDITORTOP.G_CURRKEDITOR._config.tableAutoAdjust = "0"));
      if (0 == f.length) {
        "justifyLeft" != b || KEDITORTOP.RAONKEDITOR.browser.ie
        || _iframeDoc.execCommand("justifyFull", !1, null), -1 < b.indexOf(
            "justify") ? c.commonAncestorContainer && "BODY"
            != c.commonAncestorContainer.tagName && _iframeDoc.execCommand(b,
                !1,
                null) : _iframeDoc.execCommand(b, !1, null), -1 < b.indexOf(
            "justify") && executeTextAlign(c, b), setMenuIconRealable(
            getMyElementNode(c.startContainer));
      } else {
        var g = f.length;
        d = [];
        for (var h = 0; h < g; h++) {
          var m = f[h].innerHTML, m = ReplaceAll(m, unescape("\r\n"), ""),
              m = ReplaceAll(m, unescape("\r"), ""),
              m = ReplaceAll(m, unescape("\n"), ""),
              m = ReplaceAll(m, unescape("%20%20"), "");
          f[h].innerHTML = m;
          a.removeAllRanges();
          c.selectNodeContents(f[h]);
          a.addRange(c);
          "removeFormat" == b && d.push(f[h].getAttribute("cellOrgBgColor"));
          _iframeDoc.execCommand(b, !1, null);
          if (-1 < b.indexOf("justify")) {
            for (var q = f[h].getElementsByTagName("p"), t = q.length,
                u = f[h].getElementsByTagName("div"), v =
                    u.length, w = "",
                w = "justifyFull" == b ? "justify" : b.substring(7), x = null,
                y = 0; y < t; y++) {
              x = q[y], x.style.textAlign != w
              && (x.style.textAlign = w);
            }
            for (y = 0; y < v; y++) {
              x = u[y], x.style.textAlign != w
              && (x.style.textAlign = w)
            }
          }
        }
        a.removeAllRanges();
        if ("removeFormat" == b) {
          for (g = f.length, a = 0; a < g; a++) {
            var z = f[a];
            z.setAttribute("cellOrgBgColor", d[a]);
            z.style.backgroundColor = ColorCellBackColor;
            z.setAttribute("keditor_select", "true")
          }
        }
        if (!KEDITORTOP.RAONKEDITOR.browser.ie || "td"
            != DrageEndCell.nodeName.toLowerCase() && "th"
            != DrageEndCell.nodeName.toLowerCase()) {
          doSetCaretPosition(
              DrageEndCell.childNodes[0],
              1);
        } else {
          var A = getCellLastChildNode(DrageEndCell);
          doSetCaretPosition(A.node, A.position)
        }
        var B = getFirstRange().range,
            C = getMyChildElementNode(B.startContainer);
        B.selectNode(C);
        setMenuIconRealable(C);
        _iframeDoc_MouseUpMenu(null, DrageEndCell)
      }
    } else {
      _iframeDoc.execCommand(b, !1, null), -1 < b.indexOf("justify")
      && executeTextAlign(c, b);
    }
    if (KEDITORTOP.RAONKEDITOR.browser.chrome
        || KEDITORTOP.RAONKEDITOR.browser.opera
        || KEDITORTOP.RAONKEDITOR.browser.safari) {
      if (B = getFirstRange().range, f = null, B
      && B.startContainer && (f =
          getMyElementNode(B.startContainer)), f) {
        var D = GetParentbyTagName(f, "td");
        if (D) {
          for (var H = D.getElementsByTagName("li"), h = H.length - 1; 0 <= h;
              h--) {
            if ("OL" != H[h].parentNode.tagName && "UL"
                != H[h].parentNode.tagName) {
              m = _iframeDoc.createElement("div");
              m.innerHTML = H[h].innerHTML;
              var G = m.firstChild;
              H[h].parentNode.replaceChild(G, H[h]);
              doSetCaretPosition(G, 1)
            }
          }
          if ("<p></p>" == D.innerHTML || ""
              == D.innerHTML) {
            D.innerHTML = getCellDefValue()
          }
        }
      }
    }
    if (0 == !!e && null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        || KEDITORTOP.G_CURRKEDITOR._formatPainterList &&
        "1"
        != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) {
      KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
    }
    setTimeout(function () {
      onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0});
      onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: b})
    }, 10)
  } catch (I) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(I)
  }
}

function DoExecuteCommand3(a, c, b, d, e) {
  try {
    (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
        != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) && 0
    < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    if (1 == c.collapsed) {
      var f = GetTableSelectionCells();
      if (0 == f.length) {
        "fontcolor" == b && (b = "color"), "fontbgcolor" == b
        && (b = "backgroundColor"), "lineheight" == b
        && (b = "lineHeight"), InsertFontElement(b, e);
      } else {
        var g = f.length;
        e = [];
        var h = "BackCompat" == KEDITORTOP.G_CURRKEDITOR._DOC.compatMode,
            m = KEDITORTOP.RAONKEDITOR.browser.quirks;
        if (KEDITORTOP.RAONKEDITOR.browser.ie && (8
            >= KEDITORTOP.RAONKEDITOR.browser.ieVersion || 1 == h || 1
            == m)) {
          for (var q = 0; q < g; q++) {
            var t = f[q];
            "<p></p>" == t.innerHTML.toLowerCase()
                ? t.innerHTML = "<p>&nbsp;</p>"
                : "<span></span>" == t.innerHTML.toLowerCase()
                    ? t.innerHTML = "<span>&nbsp;</span>" : ""
                    == t.innerHTML.toLowerCase() && (t.innerHTML = "&nbsp;")
          }
        }
        for (q = 0; q < g; q++) {
          if ("1" == KEDITORTOP.G_CURRKEDITOR._config.applyStyleEmptyTag) {
            var u =
                    "<(p|span)([^>]*?>)<br ?/?></(p|span)>",
                v = new RegExp(u, "gim");
            f[q].innerHTML = f[q].innerHTML.replace(v, "<$1$2&nbsp;</$3>")
          }
          a.removeAllRanges();
          c.selectNode(f[q]);
          a.addRange(c);
          rangy.queryCommandValue(b, d);
          if ("fontbgcolor" == b && (e.push(f[q].getAttribute(
              "cellOrgBgColor")), KEDITORTOP.RAONKEDITOR.browser.ie)) {
            var w = colorToHex(d.fontcolor),
                x = colorToHex(f[q].style.backgroundColor);
            w == x && (f[q].style.backgroundColor = "")
          }
          execCommand(b, d);
          rangy.getSelection(_iframeWin).removeAllRanges();
          "1" != KEDITORTOP.G_CURRKEDITOR._config.applyStyleEmptyTag ||
          KEDITORTOP.RAONKEDITOR.browser.ie && 10
          >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
          || (u = "(<span[^>]*?>)&nbsp;</span>", v = new RegExp(u,
              "gim"), f[q].innerHTML = f[q].innerHTML.replace(v,
              "$1<br></span>"))
        }
        a.removeAllRanges();
        if ("fontbgcolor" == b) {
          for (g = f.length, a = 0; a < g; a++) {
            var y = f[a];
            y.setAttribute("cellOrgBgColor", e[a]);
            y.style.backgroundColor = ColorCellBackColor;
            y.setAttribute("keditor_select", "true")
          }
        }
        var z = DrageEndCell.lastChild;
        try {
          for (; z;) {
            if (3 == z.nodeType) {
              z = z.parentNode;
              break
            } else if (1 == z.nodeType && void 0 !=
                z.tagName && -1 < ",img,br,".indexOf(
                    "," + z.tagName.toLowerCase() + ",")) {
              z = z.parentNode;
              break
            }
            z = z.lastChild
          }
          if (!KEDITORTOP.RAONKEDITOR.browser.ie || "td"
              != z.nodeName.toLowerCase() && "th"
              != z.nodeName.toLowerCase()) {
            "<br>" == z.innerHTML
                ? doSetCaretPosition(z, 0) : doSetCaretPosition(z, 1);
          } else {
            var A = getCellLastChildNode(z);
            doSetCaretPosition(A.node, A.position)
          }
        } catch (B) {
          doSetCaretPosition(DrageEndCell.childNodes[0], 1)
        }
        !KEDITORTOP.RAONKEDITOR.browser.ie || 8
        != KEDITORTOP.RAONKEDITOR.browser.ieVersion && 1 != h && 1 != m
        || (KEDITORTOP.G_CURRKEDITOR._LastRange =
            null)
      }
    } else {
      d.ignoreWhiteSpace = !0;
      rangy.queryCommandValue(b, d);
      f = null;
      g = "";
      try {
        if ("fontbgcolor" == b) {
          var C = c.commonAncestorContainer.parentNode;
          C && 1 == C.nodeType && (f = GetTDTHCell(C));
          f && (g = f.style.backgroundColor)
        }
      } catch (D) {
        f = null
      }
      if (!c.commonAncestorContainer.tagName || "BODY"
          != c.commonAncestorContainer.tagName && "DIV"
          != c.commonAncestorContainer.tagName) {
        execCommand(b, d, c);
      } else {
        try {
          var H = c.getNodes(), G = H.length;
          if (500 < G) {
            h = [];
            for (q = 0; q < G; q++) {
              if (3 == H[q].nodeType) {
                var I = H[q].parentNode;
                1 == I.nodeType && "BODY" !=
                I.tagName && h.push(I)
              }
            }
            for (q = 0; q < h.length; q++) {
              "fontcolor" == b ? h[q].style.color = e
                  : "fontbgcolor" == b ? h[q].style.backgroundColor = e
                      : "lineheight" == b ? h[q].style.lineHeight = e : "fontSize"
                      == b ? h[q].style.fontSize = e : "fontFamily" == b
                          && (h[q].style.fontFamily = e)
            }
          } else {
            execCommand(b, d, c)
          }
        } catch (M) {
          execCommand(b, d, c)
        }
      }
      f && (f.style.backgroundColor = g);
      KEDITORTOP.RAONKEDITOR.browser.ie && (9
          > KEDITORTOP.RAONKEDITOR.browser.ieVersion
          || KEDITORTOP.RAONKEDITOR.browser.quirks) || a.removeAllRanges();
      a.addRange(c);
      !KEDITORTOP.RAONKEDITOR.browser.ie ||
      "fontFamily" != b && "fontSize" != b
      || (KEDITORTOP.G_CURRKEDITOR._LastRange = saveSelection(
          KEDITORTOP.G_CURRKEDITOR.ID))
    }
    if (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
        != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) {
      KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
    }
    setTimeout(function () {
          onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0});
          onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: b})
        },
        10)
  } catch (K) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(K)
  }
}

function getSelectionTable(a) {
  if (KEDITORTOP.RAONKEDITOR.browser.ie && !(11
      < KEDITORTOP.RAONKEDITOR.browser.ieVersion)) {
    a = getFirstRange().range;
    var c, b, d = a.collapsed, e;
    try {
      if (!d) {
        c = _iframeDoc.createElement("span");
        c.style.display = "none";
        c.innerHTML = "&nbsp;";
        b = a.cloneRange();
        b.collapse();
        b.insertNode(c);
        var f;
        c && (f = c.previousSibling);
        f && 1 == f.nodeType && "table" == f.tagName.toLowerCase() && (e = f)
      }
    } catch (g) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(g)
    }
    c && c.parentNode && c.parentNode.removeChild(c);
    return e
  }
}

function setBlockTag(a, c, b, d) {
  for (var e = "p li dt dd h1 h2 h3 h4 h5 h6 pre table hr blockquote address iframe figure".split(
          " "), f = ["body", "td", "th", "div"],
      g = "b big i small tt abbr acronym cite code dfn em kbd strong samp var a bdo br img map object q script span sub sup button input label select textarea u s strike".split(
          " "), h = a.length, m = 0; m < h; m++) {
    if (a[m]) {
      var q = a[m].tagName;
      q && (q = q.toLowerCase());
      if (3 != a[m].nodeType || /\S/.test(a[m].nodeValue)) {
        if (3 == a[m].nodeType
            || -1 < g.indexOf(q)) {
          for (var t = a[m]; ;) {
            if (-1 <
                e.indexOf(t.parentNode.tagName.toLowerCase())) {
              -1 < c.indexOf(t.parentNode.tagName.toLowerCase())
              && ("lineHeight"
              == b ? "span" == t.parentNode.tagName.toLowerCase() ? ""
                  != t.parentNode.style.lineHeight
                  && (t.parentNode.style.lineHeight = d)
                  : t.parentNode.style.lineHeight = d : "letterSpacing" == b
                  ? "span" == t.parentNode.tagName.toLowerCase() ? ""
                      != t.parentNode.style.letterSpacing
                      && (t.parentNode.style.letterSpacing = d)
                      : t.parentNode.style.letterSpacing = d : "align" == b
                      ? (""
                      != t.parentNode.style.layoutGridMode
                      && (t.parentNode.style.layoutGridMode =
                          "none"), t.parentNode.style.textAlign = d)
                      : "paragraphAttribute" == b && (""
                  != d.marginLeft.toString()
                  && (t.parentNode.style.marginLeft = d.marginLeft
                      + d.marginLeftType), "" != d.marginRight.toString()
                  && (t.parentNode.style.marginRight = d.marginRight
                      + d.marginRightType), "" != d.marginTop.toString()
                  && (t.parentNode.style.marginTop = d.marginTop
                      + d.marginTopType), "" != d.marginBottom.toString()
                  && (t.parentNode.style.marginBottom = d.marginBottom
                      + d.marginBottomType), "" != d.letterSpacing.toString()
                  && (t.parentNode.style.letterSpacing =
                      d.letterSpacing + "px"), "" != d.wordSpacing.toString()
                  && (t.parentNode.style.wordSpacing = d.wordSpacing + "px"), ""
                  != d.textIndent.toString()
                  && (t.parentNode.style.textIndent = d.textIndent
                      + d.textIndentType), "" != d.fontSize.toString()
                  && (t.parentNode.style.fontSize = d.fontSize + d.fontType), ""
                  != d.fontFamily.toString() && ("default" == d.fontFamily
                      ? t.parentNode.style.fontFamily = ""
                      : t.parentNode.style.fontFamily = d.fontFamily)));
              t = null;
              break
            } else if (-1 < f.indexOf(t.parentNode.tagName.toLowerCase())) {
              break;
            }
            t = t.parentNode
          }
          if (t) {
            for (var q =
                [t], u = t.previousSibling; ;) {
              try {
                if (null == u || -1 < e.indexOf(u.tagName.toLowerCase())
                    || "div"
                    == u.tagName.toLowerCase()) {
                  break
                }
              } catch (v) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(v)
              }
              q.unshift(u);
              u = u.previousSibling
            }
            for (t = t.nextSibling; ;) {
              try {
                if (null == t || -1 < e.indexOf(t.tagName.toLowerCase())
                    || "div"
                    == t.tagName.toLowerCase()) {
                  break
                }
              } catch (w) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(w)
              }
              q.push(t);
              t = t.nextSibling
            }
            t = _iframeDoc.createElement("p");
            "lineHeight" == b ? t.style.lineHeight = d : "letterSpacing" == b
                ? t.style.letterSpacing = d : "align" == b
                    ? t.style.textAlign = d
                    : "indent" == b ? (u = parseIntOr0(t.style.marginLeft), 0
                    < u
                        ? t.style.marginLeft = u + d + "px" : (u = parseIntOr0(
                            t.style.paddingLeft), t.style.paddingLeft = u + d
                            + "px")) : "paragraphAttribute" == b && (""
                    != d.marginLeft.toString()
                    && (t.style.marginLeft = d.marginLeft
                        + d.marginLeftType), "" != d.marginRight.toString()
                    && (t.style.marginRight = d.marginRight
                        + d.marginRightType), ""
                    != d.marginTop.toString()
                    && (t.style.marginTop = d.marginTop +
                        d.marginTopType), "" != d.marginBottom.toString()
                    && (t.style.marginBottom = d.marginBottom
                        + d.marginBottomType), "" != d.letterSpacing.toString()
                    && (t.style.letterSpacing = d.letterSpacing + "px"), ""
                    != d.wordSpacing.toString()
                    && (t.style.wordSpacing = d.wordSpacing + "px"), ""
                    != d.textIndent.toString()
                    && (t.style.textIndent = d.textIndent
                        + d.textIndentType), "" != d.fontSize.toString()
                    && (t.style.fontSize = d.fontSize + d.fontType), ""
                    != d.fontFamily.toString() && ("default" == d.fontFamily
                        ? t.style.fontFamily = ""
                        : t.style.fontFamily = d.fontFamily));
            q[0].parentNode.insertBefore(t, q[0]);
            var u = q.length, x, y, z;
            if ("lineHeight" == b || "align" == b || "letterSpacing" == b) {
              try {
                x = getFirstRange(), y = x.range, z = x.sel
              } catch (A) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode
                && console.log(A)
              }
            }
            for (var B = 0; B < u; B++) {
              t.appendChild(q[B]);
            }
            if ("lineHeight" == b || "align" == b || "letterSpacing"
                == b) {
              if (q = KEDITORTOP.G_CURRKEDITOR.beforeOffset) {
                try {
                  var C = GetTableSelectionCells();
                  if (C && 0 == C.length) {
                    var D, H, u = !0;
                    "TD" == q[2].tagName ? D = t : (D = q[2], u = !1);
                    if ("TD" == q[3].tagName) {
                      if (H =
                          t, 0 == u) {
                        for (var u = D, G = u.parentNode;
                            G != t;) {
                          u = G, G = G.parentNode;
                        }
                        H = u.nextSibling;
                        for (var I = q[4],
                            I = I - ((D.innerText || D.textContent).length
                                - q[0]),
                            t = 0; null != H;) {
                          var M = (H.innerText || H.textContent).length;
                          if (I < M) {
                            t = I;
                            q[1] = t;
                            break
                          } else {
                            I -= M, H = H.nextSibling
                          }
                        }
                      }
                    } else {
                      H = q[3];
                    }
                    y.setStart(D.firstChild, q[0]);
                    1 == H.nodeType && (H = H.firstChild);
                    y.setEnd(H, q[1]);
                    z.removeAllRanges();
                    z.addRange(y);
                    KEDITORTOP.G_CURRKEDITOR._LastRange = saveSelection(
                        KEDITORTOP.G_CURRKEDITOR.ID)
                  } else {
                    KEDITORTOP.G_CURRKEDITOR.beforeOffset = null
                  }
                } catch (K) {
                  KEDITORTOP &&
                  KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
                  && console.log(K)
                }
              }
            }
          }
        }
      }
    }
  }
}

function GetParentbyTagName(a, c, b) {
  null == a && 1 == b && (b = getFirstRange().range) && b.startContainer
  && (a = getMyElementNode(b.startContainer), a = GetTDTHCell(
      a), KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a);
  for (; !(null == a || a.tagName && a.tagName.toLowerCase() == c || a.tagName
      && a.tagName.toLowerCase() == c && null
      == a.parentNode);) {
    a = a.parentNode;
  }
  return a
}

function getParentbyTagNameEx(a, c) {
  for (var b = a, d = "," + c + ","; !(null == b || b.tagName && -1 < d.indexOf(
          "," + b.tagName.toLowerCase() + ",") || b.tagName && -1 < d.indexOf(
          "," + b.tagName.toLowerCase() + ",") && null
      == b.parentNode);) {
    b = b.parentNode;
  }
  return b
}

function _iframeDoc_DBClick(a) {
  if (1 != KEDITORTOP.RAONKEDITOR.browser.mobile) {
    var c = getEditrFromEvent(a);
    setKEDITORWINDOC(c);
    if (!isViewMode(c)) {
      var b, d = a ? a : event;
      b = d.target ? d.target : d.srcElement;
      if (0 == checkContentEditable(c,
          b)) {
        KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
      } else {
        if ("1" != KEDITORTOP.G_CURRKEDITOR._config.formMode && "1"
            == KEDITORTOP.G_CURRKEDITOR._config.userTableLock.use) {
          a = GetTDTHCell(b);
          var e;
          a && (e = GetParentbyTagName(b, "table"));
          c = KEDITORTOP.G_CURRKEDITOR._config.userTableLock.defaultTableLockMode;
          e && e.getAttribute("lock_mode") && "" != e.getAttribute("lock_mode")
          && (c = e.getAttribute("lock_mode"));
          var f = !0;
          "1" == c && (f = !1);
          if (a) {
            if (f && checkLockAttr(e)) {
              KEDITORTOP.G_CURRKEDITOR.lastElemForLock ? setFocusForLock(
                      KEDITORTOP.G_CURRKEDITOR.lastElemForLock)
                  : (b = findNoLockElem(e)) ? setFocusForLock(b)
                      : (window.focus(), document.body.focus());
              KEDITORTOP.RAONKEDITOR.util.stopEvent(d);
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(d);
              return
            }
            if (checkLockAttr(a, !f)) {
              KEDITORTOP.G_CURRKEDITOR.lastElemForLock ? setFocusForLock(
                      KEDITORTOP.G_CURRKEDITOR.lastElemForLock) :
                  setFocusForLock(findNoLockCell(e));
              KEDITORTOP.RAONKEDITOR.util.stopEvent(d);
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(d);
              return
            }
          }
        }
        e = b.tagName.toLowerCase();
        "img" != e && "hr" != e && "a" != e && "input" != e && "textarea" != e
        && "select" != e && (a = GetParentbyTagName(b, "a"))
        && (b = a, e = b.tagName.toLowerCase());
        if ("1"
            == KEDITORTOP.G_CURRKEDITOR._config.returnEvent.mouse_event) {
          try {
            a = {strEventName: "dblclick", objEvent: d, objElement: b};
            var g;
            "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.mouse
                ? g = KEDITORTOP.G_CURRKEDITOR._config.event.mouse(
                    KEDITORTOP.G_CURRKEDITOR.ID,
                    a) : "function"
                === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_MouseEvent
                && (g = KEDITORTOP.KEDITORWIN.RAONKEDITOR_MouseEvent(
                    KEDITORTOP.G_CURRKEDITOR.ID, a));
            if (!1 === g) {
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(d);
              return
            }
          } catch (h) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(h)
          }
        }
        if (b.getAttribute("raon_plugin")) {
          switch (d = b.getAttribute(
              "raon_plugin"), e) {
            case "img":
              if (G_KPlugin[d]) {
                if (G_KPlugin[d].onDbClickImage) {
                  G_KPlugin[d].onDbClickImage(b);
                }
                return
              }
            default:
              if (G_KPlugin[d] && G_KPlugin[d].onDbClickElement) {
                G_KPlugin[d].onDbClickElement(b);
                return
              }
          }
        }
        switch (e) {
          case "img":
            KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = b;
            setSelectoinElement(b);
            d = b.getAttribute("keditorcustomdata");
            if (null != d && void 0 != d) {
              b = getKEditorCustomData(d), "iframe"
              == b.type ? RAONK_EDITOR.prototype.dialog.show(
                  KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                  KEDITORTOP.G_CURRKEDITOR._config.pages.iframe) : "flash"
              == b.type ? RAONK_EDITOR.prototype.dialog.show(
                  KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                  KEDITORTOP.G_CURRKEDITOR._config.pages.flash) : "media"
              == b.type ? RAONK_EDITOR.prototype.dialog.show(
                  KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                  KEDITORTOP.G_CURRKEDITOR._config.pages.media) : "link_media"
              == b.type ? RAONK_EDITOR.prototype.dialog.show(
                      KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                      KEDITORTOP.G_CURRKEDITOR._config.pages.insert_link_media)
                  : "hidden" == b.type ? "1"
                      == KEDITORTOP.G_CURRKEDITOR._config.formMode
                      && RAONK_EDITOR.prototype.dialog.show(
                          KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                          KEDITORTOP.G_CURRKEDITOR._config.pages.input_hidden)
                      : "video_media" == b.type
                      && RAONK_EDITOR.prototype.dialog.show(
                          KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                          KEDITORTOP.G_CURRKEDITOR._config.pages.video);
            } else if (b.getAttribute(
                    "raon_chart")
                && G_KPlugin.chart) {
              G_KPlugin.chart.onDbClickImage(b);
            } else {
              ""
              == KEDITORTOP.G_CURRKEDITOR._config.customEventCmd.image.ondbclick
              || b.className
              != KEDITORTOP.G_CURRKEDITOR._config.customEventCmd.image.ondbclick
              && b.alt
              != KEDITORTOP.G_CURRKEDITOR._config.customEventCmd.image.ondbclick
                  ? RAONK_EDITOR.prototype.dialog.show(
                      KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                      KEDITORTOP.G_CURRKEDITOR._config.pages.image)
                  : command_custom(KEDITORTOP.G_CURRKEDITOR.ID,
                      KEDITORTOP.G_CURRKEDITOR,
                      KEDITORTOP.G_CURRKEDITOR._config.customEventCmd.image.ondbclick,
                      b);
            }
            break;
          case "flash":
            KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = b;
            setSelectoinElement(b);
            RAONK_EDITOR.prototype.dialog.show(
                KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                KEDITORTOP.G_CURRKEDITOR._config.pages.flash);
            break;
          case "media":
            KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = b;
            setSelectoinElement(b);
            RAONK_EDITOR.prototype.dialog.show(
                KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                KEDITORTOP.G_CURRKEDITOR._config.pages.media);
            break;
          case "hr":
            KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = b;
            setSelectoinElement(b);
            RAONK_EDITOR.prototype.dialog.show(
                KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                KEDITORTOP.G_CURRKEDITOR._config.pages.horizontal_line);
            break;
          case "a":
            KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = b;
            setSelectoinElement(b);
            d = getFirstRange();
            d = d.range;
            g = getFirstRange().sel;
            g.removeAllRanges();
            d.selectNode(b);
            g.addRange(d);
            d = b.getAttribute("KEditorInsertFile");
            ""
            == KEDITORTOP.G_CURRKEDITOR._config.customEventCmd.hyperLink.ondbclick
            ||
            b.className
            != KEDITORTOP.G_CURRKEDITOR._config.customEventCmd.hyperLink.ondbclick
            && b.title
            != KEDITORTOP.G_CURRKEDITOR._config.customEventCmd.hyperLink.ondbclick
                ? "" == b.href && b.name == b.id
                    ? RAONK_EDITOR.prototype.dialog.show(
                        KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                        KEDITORTOP.G_CURRKEDITOR._config.pages.bookmark) : "" == d
                        ? RAONK_EDITOR.prototype.dialog.show(
                            KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                            KEDITORTOP.G_CURRKEDITOR._config.pages.insert_file)
                        : RAONK_EDITOR.prototype.dialog.show(
                            KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                            KEDITORTOP.G_CURRKEDITOR._config.pages.hyperlink)
                : command_custom(KEDITORTOP.G_CURRKEDITOR.ID,
                    KEDITORTOP.G_CURRKEDITOR,
                    KEDITORTOP.G_CURRKEDITOR._config.customEventCmd.hyperLink.ondbclick,
                    b);
            break;
          case "iframe":
            KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = b;
            setSelectoinElement(b);
            RAONK_EDITOR.prototype.dialog.show(
                KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                KEDITORTOP.G_CURRKEDITOR._config.pages.iframe);
            break;
          case "table":
            KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = b;
            if ("1" == KEDITORTOP.G_CURRKEDITOR._config.formMode ||
                "1"
                != KEDITORTOP.G_CURRKEDITOR._config.userTableLock.use) {
              d = getFirstRange(), (g = d.sel)
              && g.docSelection && "Control" == g.docSelection.type
                  ? RAONK_EDITOR.prototype.dialog.show(
                      KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                      KEDITORTOP.G_CURRKEDITOR._config.pages.table_property,
                      KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT)
                  : (g._ranges.length = g.rangeCount = g.nativeSelection.rangeCount, g.rangeCount
                  && RAONK_EDITOR.prototype.dialog.show(
                      KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                      KEDITORTOP.G_CURRKEDITOR._config.pages.table_property,
                      KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT));
            }
            break;
          case "input":
            KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = b;
            "1" == KEDITORTOP.G_CURRKEDITOR._config.formMode && ("" == b.type
            || "text" == b.type || "password" == b.type
                ? RAONK_EDITOR.prototype.dialog.show(
                    KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                    KEDITORTOP.G_CURRKEDITOR._config.pages.input_text) : "radio"
                == b.type ? RAONK_EDITOR.prototype.dialog.show(
                        KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                        KEDITORTOP.G_CURRKEDITOR._config.pages.input_radio)
                    : "checkbox" == b.type ?
                        RAONK_EDITOR.prototype.dialog.show(
                            KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                            KEDITORTOP.G_CURRKEDITOR._config.pages.input_checkbox)
                        : "button" == b.type || "reset" == b.type || "submit"
                        == b.type ? RAONK_EDITOR.prototype.dialog.show(
                                KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                                KEDITORTOP.G_CURRKEDITOR._config.pages.input_button)
                            : "hidden" == b.type
                                ? RAONK_EDITOR.prototype.dialog.show(
                                    KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                                    KEDITORTOP.G_CURRKEDITOR._config.pages.input_hidden)
                                : "image" == b.type
                                && RAONK_EDITOR.prototype.dialog.show(
                                    KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                                    KEDITORTOP.G_CURRKEDITOR._config.pages.input_image));
            break;
          case "select":
            KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = b;
            "1" == KEDITORTOP.G_CURRKEDITOR._config.formMode
            && RAONK_EDITOR.prototype.dialog.show(
                KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                KEDITORTOP.G_CURRKEDITOR._config.pages.input_select);
            break;
          case "textarea":
            KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = b, "1"
            == KEDITORTOP.G_CURRKEDITOR._config.formMode
            && RAONK_EDITOR.prototype.dialog.show(
                KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
                KEDITORTOP.G_CURRKEDITOR._config.pages.input_textarea)
        }
        "1" ==
        KEDITORTOP.G_CURRKEDITOR._config.clickCtrlHyperlink
        && (KEDITORTOP.G_CURRKEDITOR.isAOver.linkStyle
        && hyperLinkOut(), KEDITORTOP.G_CURRKEDITOR.isAOver.openHelp
        && hyperHelpClose())
      }
    }
  }
}

function setSelectoinElement(a) {
  var c = getFirstRange().range;
  if (c) {
    if ("" == c.toString() && a) {
      var b = getFirstRange().sel;
      b.removeAllRanges();
      c.selectNode(a);
      b.addRange(c)
    } else {
      rangy.getSelection(_iframeWin).removeAllRanges(), rangy.getSelection(
          _iframeWin).addRange(c)
    }
  }
}

function _iframeBody_Click(a) {
  var c = KEDITORTOP.G_CURRKEDITOR.ID, b = getEditrFromEvent(a);
  setKEDITORWINDOC(b);
  c != b.ID && (KEDITORTOP.G_CURRKEDITOR = b);
  if (!checkDefaultMessage(a)) {
    var d, e;
    try {
      e = a ? a : event, e.srcElement ? d = e.srcElement : e.target
          && (d = e.target)
    } catch (f) {
      setFocusToBody();
      return
    }
    if (isViewMode(b) && d) {
      if ("a" != d.tagName.toLowerCase() && (d = GetParentbyTagName(d, "a")), d
      && d.getAttribute("href") && !(-1 < d.getAttribute("href").indexOf(
          "#"))) {
        var g = d.getAttribute("target");
        d.setAttribute("target", "_blank");
        setTimeout(function () {
          g &&
          "" != g ? d.setAttribute("target", g) : d.removeAttribute("target")
        }, 1)
      }
    } else {
      c = !1;
      if (d.tagName && "INPUT" == d.tagName
          && (c = !1, KEDITORTOP.RAONKEDITOR.browser.chrome
          || KEDITORTOP.RAONKEDITOR.browser.opera
          || KEDITORTOP.RAONKEDITOR.browser.safari ? c = !0 : 0
              == d.isContentEditable && (KEDITORTOP.RAONKEDITOR.browser.ie && 8
                  < KEDITORTOP.RAONKEDITOR.browser.ieVersion
                  || KEDITORTOP.RAONKEDITOR.browser.gecko) && (c = !0), c)) {
        var h = null, h = a ? a : _iframeWin.event,
            h = h.target ? h.target : h.srcElement;
        if ("checkbox" == h.type.toLowerCase() || "radio" ==
            h.type.toLowerCase()) {
          if (1 == h.checked) {
            if ("radio"
                == h.type.toLowerCase()) {
              for (var m = _iframeDoc.getElementsByName(
                  h.name), q = m.length, t = 0; t < q;
                  t++) {
                m[t].checked = !1, m[t].removeAttribute("checked");
              }
            }
            h.checked = !0;
            h.setAttribute("checked", "checked")
          } else {
            h.checked = !1, h.removeAttribute("checked")
          }
        }
      }
      if ("1" != KEDITORTOP.G_CURRKEDITOR._config.formMode && "1"
          == KEDITORTOP.G_CURRKEDITOR._config.userTableLock.use) {
        var h = GetTDTHCell(d), u;
        h && (u = GetParentbyTagName(d, "table"));
        m = KEDITORTOP.G_CURRKEDITOR._config.userTableLock.defaultTableLockMode;
        u && u.getAttribute("lock_mode") && "" != u.getAttribute("lock_mode")
        && (m = u.getAttribute("lock_mode"));
        q = !0;
        "1" == m && (q = !1);
        if (h) {
          if (q && checkLockAttr(u)) {
            KEDITORTOP.G_CURRKEDITOR.lastElemForLock ? setFocusForLock(
                KEDITORTOP.G_CURRKEDITOR.lastElemForLock) : (a = findNoLockElem(
                u)) ? setFocusForLock(a)
                : (window.focus(), document.body.focus());
            c || (KEDITORTOP.RAONKEDITOR.util.stopEvent(
                e), KEDITORTOP.RAONKEDITOR.util.cancelEvent(e));
            return
          }
          if (checkLockAttr(h, !q)) {
            KEDITORTOP.G_CURRKEDITOR.lastElemForLock ? setFocusForLock(
                    KEDITORTOP.G_CURRKEDITOR.lastElemForLock) :
                setFocusForLock(findNoLockCell(u));
            c || (KEDITORTOP.RAONKEDITOR.util.stopEvent(
                e), KEDITORTOP.RAONKEDITOR.util.cancelEvent(e));
            return
          }
          b.lastElemForLock = h
        }
      }
      if ("1" == b._config.returnEvent.mouse_event) {
        try {
          var c = {strEventName: "click", objEvent: e, objElement: d}, v;
          "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.mouse
              ? v = KEDITORTOP.G_CURRKEDITOR._config.event.mouse(b.ID, c)
              : "function"
              === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_MouseEvent
              && (v = KEDITORTOP.KEDITORWIN.RAONKEDITOR_MouseEvent(b.ID, c));
          if (!1 ===
              v) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(e);
            return
          }
        } catch (w) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(w)
        }
      }
      if ((v = d.tagName ? d.tagName.toLowerCase() : null) && ("textarea" == v
          || "input" == v || "select" == v || "div" == v)) {
        return !1;
      }
      if (0 == KEDITORTOP.RAONKEDITOR.browser.ie && 3 == e.detail
          && GetParentbyTagName(d, "table")) {
        e = getFirstRange();
        var x = e.range;
        e = e.sel;
        x.collapse(!0);
        e.removeAllRanges();
        x.selectNode(d);
        e.addRange(x)
      }
      if (KEDITORTOP.RAONKEDITOR.browser.ie && 7
          == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
        try {
          if ((x =
              getFirstRange().range) && x.startContainer
          && (d = getMyElementNode(
              x.startContainer)), void 0 == d) {
            return
          }
        } catch (y) {
          return
        }
      }
      e = d.tagName.toLowerCase();
      if (d.getAttribute("raon_plugin")) {
        switch (v = d.getAttribute(
            "raon_plugin"), e) {
          default:
            if (G_KPlugin[v] && G_KPlugin[v].onClickElement) {
              G_KPlugin[v].onClickElement(d);
              return
            }
        }
      }
      try {
        if ("html" == e || "body" == e) {
          v = !1;
          500 > a.clientX && 10 > a.clientY && (v = !0);
          repairBodyFirstLastTag(v);
          var z = getFirstRange().range, A = z.startOffset, B = z.endOffset;
          if ("body" == z.endContainer.nodeName.toLowerCase() &&
              A == B) {
            var C = _iframeDoc.body, z = null;
            if (C.childNodes[A] && "table"
                == C.childNodes[A].nodeName.toLowerCase()) {
              z = C.childNodes[A].getElementsByTagName(
                  "td")[0];
            } else if (C.childNodes[A - 1] && "table"
                == C.childNodes[A
                - 1].nodeName.toLowerCase()) {
              var D = C.childNodes[A
              - 1].getElementsByTagName("td"), z = D[D.length - 1];
            }
            doSetCaretPosition(z, 1)
          }
          if (KEDITORTOP.RAONKEDITOR.browser.ie && 0
              == KEDITORTOP.RAONKEDITOR.browser.quirks && 7
              != KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
            if ((x = getFirstRange().range) && 1 == x.collapsed
                && _iframeDoc.body.createTextRange) {
              var x =
                      _iframeDoc.body.createTextRange(), H = a.clientX,
                  G = a.clientY;
              "None" == b._setting.doctype && (H < x.boundingLeft
              && (H = x.boundingLeft), "html" == e && G > x.boundingHeight
              - (x.offsetTop - x.boundingTop) && ("None" != b._setting.doctype
              && (H = x.boundingWidth + x.boundingLeft), G = x.boundingHeight
                  - (x.offsetTop - x.boundingTop), "None" == b._setting.doctype
              && --G));
              x.moveToPoint(H, G);
              x.select()
            }
            setFocusToBody()
          } else if (KEDITORTOP.RAONKEDITOR.browser.chrome
              || KEDITORTOP.RAONKEDITOR.browser.opera) {
            var I = getFirstRange().range;
            if (1 == I.collapsed) {
              b =
                  null;
              try {
                createSelectionFromPoint(a.clientX, a.clientY, a.clientX,
                    a.clientY), setFocusToBody(), I = getFirstRange().range, b = _iframeDoc.createElement(
                    "keditortemp"), I.insertNode(b), null != b.nextSibling
                && doSetCaretPosition(b.nextSibling, !1)
              } catch (M) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(M)
              }
              b && b.parentNode.removeChild(b)
            }
          } else {
            setFocusToBody();
          }
          if ((d = getFirstRange().sel.focusNode) && 3 == d.nodeType) {
            for (; 1
            != d.nodeType;) {
              if (d.parentNode) {
                d = d.parentNode;
              } else {
                break;
              }
            }
          } else {
            (x = getFirstRange().range)
            &&
            x.startContainer == x.endContainer && 1 == x.collapsed
            && (d = getMyElementNode(x.startContainer));
          }
          setMenuIconRealable(d)
        } else {
          setTimeout(function () {
            if ((d = getFirstRange().sel.focusNode) && 3 == d.nodeType) {
              for (; 1
              != d.nodeType;) {
                if (d.parentNode) {
                  d = d.parentNode;
                } else {
                  break;
                }
              }
            } else {
              var a = getFirstRange().range;
              a && a.startContainer == a.endContainer && 1 == a.collapsed
              && (d = getMyElementNode(a.startContainer))
            }
            setMenuIconRealable(d)
          }, 0)
        }
      } catch (K) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(K)
      }
    }
  }
}

function createCollapsedRangeFromPoint(a, c) {
  var b = _iframeDoc, d, e = null;
  if ("undefined"
      != typeof b.body.createTextRange) {
    e = b.body.createTextRange(), e.moveToPoint(
        a, c);
  } else if ("undefined"
      != typeof b.caretPositionFromPoint) {
    d = b.caretPositionFromPoint(a,
        c), e = b.createRange(), e.setStart(d.offsetNode, d.offset), e.collapse(
        !0);
  } else if ("undefined"
      != typeof b.caretRangeFromPoint) {
    b.caretRangeFromPoint(a,
        c);
  } else {
    return e
  }
}

function insertPtagTableNear(a, c) {
  var b = getFirstRange().range;
  if (b && c) {
    b.selectNode(c);
    a ? (b.setStartBefore(c), b.collapse(!0)) : (b.setEndAfter(c), b.collapse(
        !1));
    var d = _iframeDoc.createElement("p");
    KEDITORTOP.RAONKEDITOR.browser.ie && 11
    > KEDITORTOP.RAONKEDITOR.browser.ieVersion
    || (d.innerHTML = getDefaultParagraphValue(!1));
    b.insertNode(d);
    doSetCaretPosition(d, 0)
  }
}

function moveCaret(a) {
  var c;
  if (_iframeWin.getSelection) {
    if (c = _iframeWin.getSelection(), 0 < c.rangeCount) {
      var b = c.focusNode;
      c.collapse(b, Math.min(b.length, c.focusOffset + a))
    }
  } else {
    (c = _iframeDoc.selection) && "Control" != c.type
    && (c = c.createRange(), c.move("character", a), c.select())
  }
}

function setMenuIconRealable(a) {
  if (null != a && void 0 != a) {
    if ("body" == a.tagName.toLowerCase()) {
      var c = getSelectionTable(KEDITORTOP.G_CURRKEDITOR);
      c && (a = c)
    }
    KEDITORTOP.RAONKEDITOR.browser.ie && ("td" == a.nodeName.toLowerCase()
        || "th" == a.nodeName.toLowerCase()) && a.lastChild
    && a.lastChild.previousSibling && (3 == a.lastChild.nodeType && "\n"
    == a.lastChild.data && 3 != a.lastChild.previousSibling.nodeType
        ? a = a.lastChild.previousSibling : 3 != a.lastChild.nodeType
        && (a = a.lastChild));
    var c = getElementInParentTag(a, G_FORMATTING), b =
        "";
    try {
      b = getFontStyle(a).fontFamily
    } catch (d) {
      b = getElementInParentStyleProperty(a, "fontFamily")
    }
    var e = getElementInParentStyleProperty(a, "fontSize"),
        f = getElementInParentStyleProperty(a, "lineHeight");
    "1" != KEDITORTOP.G_CURRKEDITOR._config.lineHeightMode
    && (b = getFontFamilyStyle(b), "" == e
    && (e = KEDITORTOP.RAONKEDITOR.util.getStyle(a, "fontSize")), "" == f
    && (f = KEDITORTOP.RAONKEDITOR.util.getStyle(a, "lineHeight")), "number"
    == typeof e && (e = ""), e = getFontSizeStyle(e, f), f = getLineHeightStyle(
        e, f, a), -1 < f.toString().indexOf("normal") ||
    -1 < f.toString().indexOf("inherit"))
    && (f = RAONKEditor_lang.icon.line_height);
    var g = getElementInParentStyleProperty(a, "letterSpacing");
    "" == g && (g = RAONKEditor_lang.icon.letter_spacing);
    if ("0" == KEDITORTOP.G_CURRKEDITOR._setting.show_font_real) {
      e
      == KEDITORTOP.G_CURRKEDITOR._setting.font_size
      && (e = RAONKEditor_lang.icon.font_size), b
      == KEDITORTOP.G_CURRKEDITOR._setting.font_family
      && (b = RAONKEditor_lang.icon.font_family), "" == e
      && (e = RAONKEditor_lang.icon.font_size), "" == b
      && (b = RAONKEditor_lang.icon.font_family), "" ==
      f && (f = RAONKEditor_lang.icon.line_height);
    } else {
      var h, m, q;
      if ("" == e || "" == b || "" == f) {
        m = getFontStyle(
            a), h = m.fontFamily, q = m.lineHeight, m = getFontStyle(a,
            !0), m = m.fontSize;
      }
      "" == e && (e = "" != m && void 0 != m ? m
          : RAONKEditor_lang.icon.font_size);
      "" == b && (b = "" != h ? h : RAONKEditor_lang.icon.font_family);
      "" == f && (f = q && "" != q && "normal" != q ? q
          : RAONKEditor_lang.icon.line_height);
      if (KEDITORTOP.RAONKEDITOR.browser.ie && 8
          < KEDITORTOP.RAONKEDITOR.browser.ieVersion && 11
          >= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
        try {
          f = f.toString()
        } catch (t) {
          f =
              ""
        }
        try {
          if (h = !1, 0 > f.indexOf("%") && 0 > f.indexOf("px") && 0
          > f.indexOf("pt") && 0 > f.indexOf("em") && (h = !0), "1"
          != KEDITORTOP.G_CURRKEDITOR._config.lineHeightMode) {
            if (h) {
              u = KEDITORTOP.G_CURRKEDITOR._setting.line_height, v = "", -1
              < u.indexOf("%") ? v = parseInt(u, 10) / 100 + .01 : 0
                  > u.indexOf(
                      "px") && 0 > u.indexOf("pt") && 0 > u.indexOf("em")
                  && (v = parseFloat(u) + .01), v = v.toString(), f == v && (-1
              < u.indexOf("%") ? f = parseFloat(u) / 100 : 0 > u.indexOf("px")
                  && 0
                  > u.indexOf("pt") && 0 > u.indexOf("em") && (f = u));
            } else {
              if (-1 < f.indexOf("%")) {
                var u = KEDITORTOP.G_CURRKEDITOR._setting.line_height,
                    v = "";
                -1 < u.indexOf("%") ? v = parseInt(u, 10) + 1 : 0 > u.indexOf(
                        "px") && 0 > u.indexOf("pt") && 0 > u.indexOf("em")
                    && (v = 100 * parseFloat(u) + 1);
                v = v.toString();
                f == v + "%" && (-1 < u.indexOf("%") ? f = u + "%" : 0
                    > u.indexOf("px") && 0 > u.indexOf("pt") && 0 > u.indexOf(
                        "em") && (f = 100 * parseFloat(u) + "%"))
              }
            }
          } else {
            u = KEDITORTOP.G_CURRKEDITOR._setting.line_height, v = "", -1
            < u.indexOf("%") ? v = parseInt(u, 10) / 100 + .01 : 0 > u.indexOf(
                    "px") && 0 > u.indexOf("pt") && 0 > u.indexOf("em")
                && (v = parseFloat(u) + .01), v = v.toString(), f == v
            && (f = 100
                * parseFloat(u) + "%")
          }
        } catch (w) {
          KEDITORTOP &&
          KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(w)
        }
      }
    }
    "" == c && (c = RAONKEditor_lang.icon.formatting);
    if (u = document.getElementById("ue_" + KEDITORTOP.G_CURRKEDITOR.ID
        + "formatting")) {
      u.innerHTML = "<span>" + c + "</span>";
    }
    u = null;
    if ("1" == KEDITORTOP.G_CURRKEDITOR._config.useLineHeightKeyin) {
      if (u = document.getElementById(
          "txtara_" + KEDITORTOP.G_CURRKEDITOR.ID + "line_height")) {
        u.value = f
      }
    } else if (u = document.getElementById("ue_" + KEDITORTOP.G_CURRKEDITOR.ID
        + "line_height")) {
      u.innerHTML = "<span>" + f + "</span>";
    }
    u = null;
    if (u = "1" == KEDITORTOP.G_CURRKEDITOR._config.useFontSizeKeyin
        ? document.getElementById(
            "txtara_" + KEDITORTOP.G_CURRKEDITOR.ID + "font_size")
        : document.getElementById(
            "ue_" + KEDITORTOP.G_CURRKEDITOR.ID + "font_size")) {
      try {
        if (-1 < e.indexOf(".") && (v = "", -1 < e.indexOf("px") || -1
        < e.indexOf("pt") || -1 < e.indexOf("em") ? v = e.substring(
            e.length - 2) : -1 < e.indexOf("%") && (v = e.substring(
            e.length - 1)), "pt" != v)) {
          var x = parseFloat(e),
              x = Math.round(10 * x) / 10, e = x + v
        }
      } catch (y) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        &&
        console.log(y)
      }
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useFontSizeKeyin ? u.value = e
          : u.innerHTML = "<span>" + e + "</span>"
    }
    x = null;
    if ("1" == KEDITORTOP.G_CURRKEDITOR._config.useFontFamilyKeyin) {
      if (x = document.getElementById("txtara_" + KEDITORTOP.G_CURRKEDITOR.ID
          + "font_family")) {
        u = getDisplayFontName(b), x.value = u
      }
    } else if (x = document.getElementById("ue_" + KEDITORTOP.G_CURRKEDITOR.ID
        + "font_family")) {
      u = getDisplayFontName(b), x.innerHTML = "<span>" + u
          + "</span>";
    }
    if (x = document.getElementById(
        "ue_" + KEDITORTOP.G_CURRKEDITOR.ID + "letter_spacing")) {
      x.innerHTML =
          "<span>" + g + "</span>";
    }
    v = GetTDTHCell(a);
    x = [];
    u = a;
    KEDITORTOP.RAONKEDITOR.browser.ie && (u = getNodeLastChildNode(a));
    if (!(h = "" != getElementInParentTag(u, ["b", "strong"])) && (h = v && "th"
        == v.nodeName.toLowerCase())) {
      a:{
        if (v = GetTDTHCell(v).getElementsByTagName(
            "span")) {
          for (h = v.length, q = 0; q < h; q++) {
            if (v[q].style
                && "normal" == v[q].style.fontWeight) {
              v = !0;
              break a
            }
          }
        }
        v = !1
      }
      h = !v
    }
    h && x.push("bold");
    "" != getElementInParentTag(u, ["em", "i"]) && x.push("italic");
    "" != getElementInParentTag(u, ["u"]) && x.push("underline");
    "" != getElementInParentTag(u,
        ["strike"]) && x.push("strike_through");
    "" != getElementInParentTag(u, ["sup"]) && x.push("superscript");
    "" != getElementInParentTag(u, ["sub"]) && x.push("subscript");
    "" != getElementInParentTag(u, ["ol"]) && x.push("list_number");
    "" != getElementInParentTag(u, ["ul"]) && x.push("list_bullets");
    var z;
    KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
    && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem
    && (z = GetParentbyTagName(
        KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem,
        "figure"));
    if ("table" ==
        a.tagName.toLowerCase()) {
      if (z = a.getAttribute("align"), null == z || "" == z) {
        z = "justify"
      }
    } else {
      z ? (z = "cssFloat" in z.style ? z.style.cssFloat
              : z.style.styleFloat, "" == z
          && (z = KEDITORTOP.RAONKEDITOR.util.getStyle(a, "textAlign"), "" == z
          && (z = getElementInParentProperty(a, "align"))))
          : (z = KEDITORTOP.RAONKEDITOR.util.getStyle(a, "textAlign"), "" == z
          && (z = getElementInParentProperty(a, "align")));
    }
    "left" == z && x.push("align_left");
    "center" == z && x.push("align_center");
    "right" == z && x.push("align_right");
    "justify" == z && x.push("align_full");
    z = getElementInParentProperty(a, "dir").toLowerCase();
    "rtl" == z && x.push("dirrtl");
    "ltr" == z && x.push("dirltr");
    try {
      null == DrageEndCell && "" == getElementInParentTag(a,
          "h1 h2 h3 h4 h5 h6".split(" ")) && (_iframeDoc.queryCommandState(
          "bold") ? x.push("bold") : removeArrayItemByValue(x, "bold"))
    } catch (A) {
      removeArrayItemByValue(x, "bold")
    }
    try {
      null == DrageEndCell && (_iframeDoc.queryCommandState("italic") ? x.push(
          "italic") : removeArrayItemByValue(x, "italic"))
    } catch (B) {
      removeArrayItemByValue(x, "italic")
    }
    try {
      _iframeDoc.queryCommandState("underline") ?
          x.push("underline") : removeArrayItemByValue(x, "underline")
    } catch (C) {
      removeArrayItemByValue(x, "underline")
    }
    try {
      _iframeDoc.queryCommandState("strikeThrough") ? x.push("strike_through")
          : removeArrayItemByValue(x, "strike_through")
    } catch (D) {
      removeArrayItemByValue(x, "strike_through")
    }
    try {
      null == DrageEndCell && (_iframeDoc.queryCommandState("superscript")
          ? x.push("superscript") : removeArrayItemByValue(x, "superscript"))
    } catch (H) {
      removeArrayItemByValue(x, "superscript")
    }
    try {
      null == DrageEndCell && (_iframeDoc.queryCommandState("subscript") ?
          x.push("subscript") : removeArrayItemByValue(x, "subscript"))
    } catch (G) {
      removeArrayItemByValue(x, "subscript")
    }
    try {
      null == DrageEndCell && (_iframeDoc.queryCommandState("insertOrderedList")
          ? x.push("list_number") : removeArrayItemByValue(x, "list_number"))
    } catch (I) {
      removeArrayItemByValue(x, "list_number")
    }
    try {
      null == DrageEndCell && (_iframeDoc.queryCommandState(
          "insertUnOrderedList") ? x.push("list_bullets")
          : removeArrayItemByValue(x, "list_bullets"))
    } catch (M) {
      removeArrayItemByValue(x, "list_bullets")
    }
    "full_size" == KEDITORTOP.G_CURRKEDITOR.FrameStatus ?
        x.push("full_screen") : removeArrayItemByValue(x, "full_screen");
    "show_blocks" == KEDITORTOP.G_CURRKEDITOR.ShowBlocks ? x.push("show_blocks")
        : removeArrayItemByValue(x, "show_blocks");
    1 == KEDITORTOP.G_CURRKEDITOR.ShowTableBorder ? x.push("table_border")
        : removeArrayItemByValue(x, "table_border");
    z = GetTDTHCell(a);
    checkLockAttr(z, !0) ? x.push("cell_lock") : removeArrayItemByValue(x,
        "cell_lock");
    a = GetParentbyTagName(a, "table");
    checkLockAttr(a, !0) ? x.push("table_lock") : removeArrayItemByValue(x,
        "table_lock");
    KEDITORTOP.G_CURRKEDITOR._iconSelected(x);
    return {
      formattingVal: c,
      lineHeightVal: f,
      fontSizeVal: e,
      fontFamilyVal: b,
      fontLetterSpacingVal: g
    }
  }
}

Array.prototype.indexOf || (Array.prototype.indexOf = function (a, c) {
  c = c || 0;
  for (var b = this.length; c < b;) {
    if (this[c] === a) {
      return c;
    }
    ++c
  }
  return -1
});
KEDITORTOP.Array.prototype.indexOf
|| (KEDITORTOP.Array.prototype.indexOf = function (a, c) {
  c = c || 0;
  for (var b = this.length; c < b;) {
    if (this[c] === a) {
      return c;
    }
    ++c
  }
  return -1
});
try {
  HTMLCanvasElement && !HTMLCanvasElement.prototype.toBlob
  && Object.defineProperty(HTMLCanvasElement.prototype, "toBlob", {
    value: function (a, c, b) {
      var d = this;
      setTimeout(function () {
        for (var e = atob(d.toDataURL(c, b).split(",")[1]), f = e.length,
            g = new Uint8Array(f), h = 0; h < f; h++) {
          g[h] = e.charCodeAt(h);
        }
        a(new Blob([g], {type: c || "image/png"}))
      })
    }
  })
} catch (e$$228) {
  KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
  && console.log(e$$228)
}

function removeArrayItemByValue(a) {
  for (var c, b = arguments, d = b.length, e;
      1 < d && a.length;) {
    for (c = b[--d]; -1 !== (e = a.indexOf(c));) {
      a.splice(
          e, 1)
    }
  }
}

function dialogCancel() {
  var a = getEditrFromEvent(null);
  "shortcut" == G_LAST_CMD && G_ShortCutClick
      ? (G_ShortCutClose = !0, G_ShortCutClick = !1, 0
      == KEDITORTOP.RAONKEDITOR.browser.ie
      && window.focus(), document.getElementById("ue_" + a.ID + "shortcut").focus())
      : ((a._LastRange || void 0 != a._LastRange) && restoreSelection(
          a._LastRange), setFocusToBody())
}

function RepaireTagInTag(a, c) {
  for (var b = _iframeDoc.body.getElementsByTagName(c), d = b.length, e = null,
      f = 0; f < d; f++) {
    var e = b[f], g = GetParentbyTagName(e, a);
    g && (g.removeChild(e), e = getFirstRange().range) && (e.selectNode(
        g), e.setStartBefore(g), e.collapse(!0), g = _iframeDoc.createElement(
        "hr"), e.insertNode(g), e.selectNode(g), e.collapse(
        !1), rangy.getSelection(_iframeWin).removeAllRanges())
  }
}

function doSetCaretPosition(a, c, b) {
  try {
    var d = KEDITORTOP.G_CURRKEDITOR;
    b && (d = b);
    0 == d._config.initFocus && d.isInitFocusHandler || "view" == d._config.mode
    || (b = !0, 0 < c && (b = !1), moveCursorToTag(a, b))
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
}

function setFocusTopWindow() {
  try {
    KEDITORTOP.RAONKEDITOR.browser.ie
    || KEDITORTOP.KEDITORWIN.focus(), KEDITORTOP.KEDITORDOC.body.focus()
  } catch (a) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(a)
  }
}

function setKEditorCustomData(a, c) {
  c.keyid = getNextNumber();
  a.setAttribute("keditorcustomdata", c.keyid);
  KEDITORTOP.G_CURRKEDITOR._editorCustomData.push(c);
  return c.keyid
}

function getKEditorCustomData(a) {
  for (var c = KEDITORTOP.G_CURRKEDITOR._editorCustomData.length, b = 0; b < c;
      b++) {
    if (KEDITORTOP.G_CURRKEDITOR._editorCustomData[b].keyid
        == a) {
      return KEDITORTOP.G_CURRKEDITOR._editorCustomData[b];
    }
  }
  return null
}

function removeKEditorCustomData(a) {
  for (var c = KEDITORTOP.G_CURRKEDITOR._editorCustomData.length, b = 0; b < c;
      b++) {
    KEDITORTOP.G_CURRKEDITOR._editorCustomData[b].keyid === a
    && KEDITORTOP.G_CURRKEDITOR._editorCustomData.splice(b, 1)
  }
}

function removeAllKEditorCustomData() {
  KEDITORTOP.G_CURRKEDITOR._editorCustomData = []
}

function getKEditorVideoData(a) {
  var c = {};
  if (a) {
    c.type = "video_media";
    c.src = "";
    c.source = [];
    try {
      if (null != a.getAttribute("src")) {
        c.src = a.getAttribute(
            "src");
      } else if (0 != a.getElementsByTagName("source").length) {
        var b = a.getElementsByTagName("source");
        if (null != b[0].getAttribute("src")) {
          c.source.push({src: b[0].getAttribute("src")});
          try {
            "undefined" != typeof b[1] && (b[1].src = ""), "undefined"
            != typeof b[2] && (b[2].src = "")
          } catch (d) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode && console.log(d)
          }
        }
      }
    } catch (e) {
      KEDITORTOP &&
      KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(e)
    }
    c.width = "";
    c.height = "";
    "" != a.style.width ? c.width = a.style.width : null != a.getAttribute(
        "width") && (c.width = a.getAttribute("width"));
    null != a.getAttribute("data-responsive") || "auto" === a.style.height
    && "100%" === a.style.maxWidth ? (c.responsiveWidth = !0, null
        != a.getAttribute("height") && (c.height = a.getAttribute(
            "height")), a.setAttribute("data-responsive", ""))
        : (c.responsiveWidth = !1, "" != a.style.height
            ? c.height = a.style.height : null != a.getAttribute("height") &&
            (c.height = a.getAttribute("height")));
    c.autoPlay = null == a.getAttribute("autoplay") ? !1 : !0;
    c.loop = null == a.getAttribute("loop") ? !1 : !0;
    c.controls = null == a.getAttribute("controls") ? !1 : !0;
    c.muted = null == a.getAttribute("muted") ? !1 : !0;
    c.poster = null == a.getAttribute("poster") ? "" : a.getAttribute("poster");
    c.allowDownload = null !== a.getAttribute("controlslist") && "nodownload"
    === a.getAttribute("controlslist") ? !1 : !0;
    "object" == typeof a.attributes && (c.attributes = a.attributes)
  }
  return c
}

var getNextNumber = function () {
  var a = 0;
  return function () {
    return ++a + ""
  }
}();

function isSameCustomData(a) {
  for (var c = KEDITORTOP.G_CURRKEDITOR._editorCustomData.length, b = 0; b < c;
      b++) {
    if (KEDITORTOP.G_CURRKEDITOR._editorCustomData[b].keyid
        === a) {
      return KEDITORTOP.G_CURRKEDITOR._editorCustomData[b];
    }
  }
  return null
}

function ReplaceImageToRealObject(a, c) {
  if ((0 != !!c || "0" != KEDITORTOP.G_CURRKEDITOR._config.useReplaceImage) && 1
      != KEDITORTOP.G_CURRKEDITOR._editorCustomDataMode) {
    KEDITORTOP.G_CURRKEDITOR._editorCustomDataMode = !0;
    displayPageBreak(!1);
    for (var b = _iframeDoc.getElementsByTagName("img"), d = b.length - 1;
        0 <= d; d--) {
      var e = b[d], f = e.getAttribute("keditorcustomdata");
      if (null != f && void 0 != f && (f = getKEditorCustomData(
          f))) {
        if ("iframe" == f.type || "iframe" == f.type2) {
          var g = _iframeDoc.createElement("iframe");
          if ("undefined" != typeof f.attributes) {
            for (var h =
                "src id name title width height align scrolling frameBorder class".split(
                    " "), m = f.attributes.length, q = 0; q < m; q++) {
              var t = f.attributes[q];
              t.specified && 0 > h.indexOf(t.name.toLowerCase()) && ("style"
              == t.name.toLowerCase() ? g.style.cssText = t.value
                  : g.setAttribute(
                      t.name, t.value))
            }
          }
          g.style.width = "" != e.style.width ? 0 == parseIntOr0(e.style.width)
              ? e.width : e.style.width : "";
          g.style.height = "" != e.style.height ? 0 == parseIntOr0(
              e.style.height)
              ? e.height : e.style.height : "";
          -1 < f.src.indexOf("keditorplayer/media_player")
              ? (q = f.src.lastIndexOf("&"),
                  q = f.src.substring(0, q), q += "&size=" + parseIntOr0(g.width)
                  + "^" + parseIntOr0(g.height), g.src = q) : g.src = f.src;
          g.id = f.id;
          g.name = f.name;
          g.title = f.title;
          g.className = f.className;
          null != e.align && void 0 != e.align && (f.align = e.align);
          g.align = f.align;
          g.scrolling = f.scrolling;
          g.frameBorder = f.frameBorder ? 1 : 0;
          f.caption && "" != f.caption && g.setAttribute(
              "K_edITor_Media_Caption",
              f.caption);
          g.style.position = e.style.position;
          g.style.left = e.style.left;
          g.style.top = e.style.top;
          e.parentNode.replaceChild(g, e)
        } else if ("flash" == f.type ||
            "flash" == f.type2) {
          g = _iframeDoc.createElement(
              "div"), q = "", q += "<embed src='" + f.src + "'", "" != f.hspace
          && (q += " hspace='" + f.hspace + "px'"), "" != f.vspace
          && (q += " vspace='" + f.vspace + "px'"), "" != f.scale
          && (q += " scale='" + f.scale + "'"), "" != f.allowScriptAccess
          && (q += " allowScriptAccess='" + f.allowScriptAccess + "'"), ""
          != f.quality && (q += " quality='" + f.quality + "'"), "" != f.align
          && (q += " align='" + f.align + "'"), q = 0 == f.menu ? q
              + " menu='false'" : q + " menu='true'", q = 0 == f.play ? q
              + " play='false'" : q + " play='true'", q = 0 == f.loop ? q
              + " loop='false'" :
              q + " loop='true'", q = 0 == f.allowFullScreen ? q
              + " allowFullScreen='false'" : q
              + " allowFullScreen='true'", f.flashvars && "" != f.flashvars
          && (q += " flashvars='" + f.flashvars + "'"), f.caption && ""
          != f.caption
          && (q += " K_edITor_Media_Caption='" + f.caption + "'"), 0
          > f.src.indexOf("keditorplayer/")
          && (q += ' wmode="transparent"'), q += " pluginspage='http://www.macromedia.com/go/getflashplayer' type='application/x-shockwave-flash' />", g.innerHTML = q, f = g.firstChild, f.style.marginLeft = e.style.marginLeft, f.style.marginRight = e.style.marginRight,
              f.style.marginTop = e.style.marginTop, f.style.marginBottom = e.style.marginBottom, f.style.width = ""
          != e.style.width ? 0 == parseIntOr0(e.style.width) ? e.width
              : e.style.width : "", f.style.height = "" != e.style.height ? 0
              == parseIntOr0(e.style.height) ? e.height : e.style.height
              : "", f.style.position = e.style.position, f.style.left = e.style.left, f.style.top = e.style.top, e.parentNode.replaceChild(
              f, e);
        } else if ("media" == f.type) {
          g = _iframeDoc.createElement("div");
          h = "";
          h += "<embed style='width:" + f.width + "px; height:" + f.height
              + "px;' ";
          h += " type='application/x-mplayer2'";
          h += " pluginspage='http://www.microsoft.com/windows/windowsmedia/download/' ";
          h += " src='" + f.src + "'";
          q = 1 == f.autoStart ? "1" : "0";
          h += " AutoStart='" + q + "'";
          q = 1 == f.playCount ? "1" : "0";
          h += " loop='" + q + "'";
          q = 1 == f.showTracker ? "1" : "0";
          h += " ShowTracker='" + q + "'";
          q = 1 == f.showStatusBar ? "1" : "0";
          h += " ShowStatusBar='" + q + "'";
          q = 1 == f.showControls ? "1" : "0";
          h += " ShowControls='" + q + "'";
          q = 1 == f.showAudioControls ? "1" : "0";
          h += " ShowAudioControls='" + q + "'";
          q = 1 == f.showDisplay ? "1" : "0";
          h += " ShowDisplay='" +
              q + "'";
          q = 1 == f.showPositionControls ? "1" : "0";
          h += " ShowPositionControls='" + q + "'";
          h += " />";
          g.innerHTML = h;
          var u = g.firstChild;
          u.style.width = "" != e.style.width ? 0 == parseIntOr0(e.style.width)
              ? e.width : e.style.width : "";
          u.style.height = "" != e.style.height ? 0 == parseIntOr0(
              e.style.height)
              ? e.height : e.style.height : "";
          u.style.position = e.style.position;
          u.style.left = e.style.left;
          u.style.top = e.style.top;
          e.parentNode.replaceChild(u, e);
          g.innerHTML = ""
        } else if ("hidden" == f.type) {
          g = _iframeDoc.createElement(
              "input"), g.type = f.type,
              g.id = f.id, g.name = f.name, g.value = f.value, g.className = f.className, g.title = f.title, e.parentNode.replaceChild(
              g, e);
        } else if ("video_media" == f.type) {
          g = _iframeDoc.createElement("div");
          h = "";
          h += "<video";
          q = "" != e.style.width ? e.style.width : e.width;
          m = "" != e.style.height ? e.style.height : e.height;
          0 < q && -1 == (q + "").toLowerCase().indexOf("px") && -1 == (q
              + "").toLowerCase().indexOf("%") && (q += "px");
          0 < m && -1 == (m + "").toLowerCase().indexOf("px") && -1 == (m
              + "").toLowerCase().indexOf("%") && (m += "px");
          q != f.width && (f.width = q);
          m != f.height &&
          (f.height = m);
          if ("" != f.width || "" != f.height) {
            q = "", 1 == f.responsiveWidth
            && (q += ' style="max-width:100%; height:auto;"', q += " data-responsive "), ""
            != f.width && (q += ' width="' + f.width + '" '), "" != f.height
            && (q += ' height="' + f.height + '" '), h += q;
          }
          q = f.source ? f.source.length : 0;
          "" != f.src && 0 == q && ("1"
          == KEDITORTOP.G_CURRKEDITOR._config.insertSourceTagInVideo ? f.isFirst
              || (h += " src='" + f.src + "'") : h += " src='" + f.src + "'");
          1 == f.autoPlay && (h += " autoplay=''");
          1 == f.loop && (h += " loop=''");
          1 == f.controls && (h += " controls=''");
          1 == f.muted &&
          (h += " muted=''");
          void 0 != f.poster && "" != f.poster && (h += " poster='" + f.poster
              + "'");
          0 == f.allowDownload && (h += " controlslist='nodownload'");
          h += ">";
          if ("" != f.src || "undefined" != typeof f.source && 0
              < f.source.length) {
            m = "";
            if (f.isFirst && "1"
                == KEDITORTOP.G_CURRKEDITOR._config.insertSourceTagInVideo) {
              t = f.src.slice(f.src.lastIndexOf(".") + 1, f.src.length);
              if (f.isUrl) {
                h += "<source src='" + f.src + "' type='video/"
                    + ("ogv" == t ? "ogg" : t)
                    + "' />";
              } else {
                for (h += "<source src='" + f.src
                    + "' type='video/" + ("ogv" == t ? "ogg" : t)
                    + "' />", u = KEDITORTOP.G_CURRKEDITOR._config.allowVideoFileType.length,
                    q = 0; q < u;
                    q++) {
                  m = KEDITORTOP.G_CURRKEDITOR._config.allowVideoFileType[q], m
                  != t && (h += "<source src='" + f.src.slice(0,
                          f.src.lastIndexOf(".")) + "." + m + "' type='video/"
                      + ("ogv"
                      == m ? "ogg" : m) + "' />");
                }
              }
              h += "HTML5 Video\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294 \ube0c\ub77c\uc6b0\uc800"
            } else {
              for (t = 0; t < q; t++) {
                m = f.source[t].src.slice(
                    f.source[t].src.lastIndexOf(".") + 1), h += "<source src='"
                    + f.source[t].src.slice(0, f.source[t].src.lastIndexOf("."))
                    + "." + m + "' type='video/" + ("ogv" == m ? "ogg" : m)
                    + "' />";
              }
              h += f.textContent
            }
            h += "</video>"
          }
          g.innerHTML =
              h;
          u = g.firstChild;
          if ("undefined"
              != typeof f.attributes) {
            for (h = ",src,width,height,autoplay,loop,controls,muted,poster,", m = f.attributes.length, q = 0;
                q < m; q++) {
              t = f.attributes[q], t.specified && 0 > h.indexOf(
                  "," + t.name.toLowerCase() + ",") && ("style"
              == t.name.toLowerCase() ? u.style.cssText = t.value : "class"
              == t.name.toLowerCase() ? u.className = t.value : u.setAttribute(
                  t.name, t.value));
            }
          }
          1 == f.responsiveWidth
          && (u.style.maxWidth = "100%", u.style.height = "auto");
          "" !== f.width ? u.setAttribute("width", f.width) : u.removeAttribute(
              "width");
          "" !== f.height ? u.setAttribute("height", f.height)
              : u.removeAttribute("height");
          u.style.position = e.style.position;
          u.style.left = e.style.left;
          u.style.top = e.style.top;
          e.parentNode.replaceChild(u, e);
          g.innerHTML = ""
        }
      }
    }
  }
}

function ReplaceRealObjectToImage(a) {
  if ("0" != KEDITORTOP.G_CURRKEDITOR._config.useReplaceImage && "view"
      != KEDITORTOP.G_CURRKEDITOR._config.mode && 0
      != KEDITORTOP.G_CURRKEDITOR._editorCustomDataMode) {
    KEDITORTOP.G_CURRKEDITOR._editorCustomDataMode = !1;
    0 != a && removeAllKEditorCustomData();
    displayPageBreak(!0);
    var c = _iframeDoc.getElementsByTagName("iframe");
    for (a = c.length - 1; 0 <= a; a--) {
      var b = c[a], d = {}, e = getLinkMediaType(b.src);
      d.type = "" == e ? "iframe" : e;
      d.type2 = "iframe";
      d.src = b.getAttribute("src");
      try {
        d.src || (d.src =
            ""), b.src = ""
      } catch (f) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(f)
      }
      d.id = b.id;
      d.name = b.name;
      d.title = b.title;
      d.className = b.className;
      d.width = "" == b.style.width && 0 == parseIntOr0(b.style.width) ? b.width
          : b.style.width;
      d.height = "" == b.style.height && 0 == parseIntOr0(b.style.height)
          ? b.height : b.style.height;
      d.align = b.align;
      d.scrolling = b.scrolling;
      d.frameBorder = "1" == b.frameBorder ? !0 : !1;
      b.getAttribute("K_edITor_Media_Caption") && (d.caption = b.getAttribute(
          "K_edITor_Media_Caption"));
      b.getAttribute("raon_plugin") && (d.raon_plugin = b.getAttribute(
          "raon_plugin"));
      d.attributes = b.attributes;
      d = makeImageElementForObject(d);
      d.style.position = b.style.position;
      d.style.left = b.style.left;
      d.style.top = b.style.top;
      b.parentNode.replaceChild(d, b)
    }
    c = _iframeDoc.getElementsByTagName("embed");
    for (a = c.length - 1; 0 <= a; a--) {
      b = c[a];
      d = b.getAttribute("type");
      if (void 0 == d || null == d) {
        d = "";
      }
      if (b.getAttribute("wmode") || -1 < d.indexOf("x-shockwave-flash") || -1
          < b.src.indexOf("keditorplayer/")) {
        d = {};
        e = getLinkMediaType(b.src);
        d.type = "" == e ? "flash" : e;
        d.type2 = "flash";
        d.src = b.getAttribute("src");
        try {
          b.src = ""
        } catch (g) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(g)
        }
        d.width = "" == b.style.width && 0 == parseIntOr0(b.style.width)
            ? b.width : b.style.width;
        d.height = "" == b.style.height && 0 == parseIntOr0(b.style.height)
            ? b.height : b.style.height;
        d.hspace = null == b.getAttribute("hspace") ? "" : b.getAttribute(
            "hspace").replace("px", "");
        d.vspace = null == b.getAttribute("vspace") ? "" : b.getAttribute(
            "vspace").replace("px",
            "");
        d.scale = null == b.getAttribute("scale") ? "" : b.getAttribute(
            "scale");
        d.allowScriptAccess = null == b.getAttribute("allowScriptAccess") ? ""
            : b.getAttribute("allowscriptaccess");
        d.quality = null == b.getAttribute("quality") ? "" : b.getAttribute(
            "quality");
        d.align = null == b.getAttribute("align") ? "" : b.getAttribute(
            "align");
        d.margin_left = b.style.marginLeft;
        d.margin_right = b.style.marginRight;
        d.margin_top = b.style.marginTop;
        d.margin_bottom = b.style.marginBottom;
        null == b.getAttribute("menu") ? d.menu = !0 : d.menu = b.getAttribute(
            "menu");
        null == b.getAttribute("play") ? d.play = !0 : d.play = b.getAttribute(
            "play");
        null == b.getAttribute("loop") ? d.loop = !0 : d.loop = b.getAttribute(
            "loop");
        null == b.getAttribute("allowFullScreen") ? d.allowFullScreen = !0
            : d.allowFullScreen = b.getAttribute("allowFullScreen");
        null == b.getAttribute("K_edITor_Media_Caption") ? d.caption = ""
            : d.caption = b.getAttribute("K_edITor_Media_Caption");
        b.getAttribute("flashvars") && (d.flashvars = b.getAttribute(
            "flashvars"));
        d = makeImageElementForObject(d);
        d.style.position = b.style.position;
        d.style.left =
            b.style.left;
        d.style.top = b.style.top;
        b.parentNode.replaceChild(d, b)
      } else if (b.getAttribute("AutoStart")) {
        d = {type: "media"};
        d.src = b.getAttribute("src");
        try {
          b.src = ""
        } catch (h) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(h)
        }
        d.width = "" == b.style.width && 0 == parseIntOr0(b.style.width)
            ? b.width : b.style.width;
        d.height = "" == b.style.height && 0 == parseIntOr0(b.style.height)
            ? b.height : b.style.height;
        1 == b.getAttribute("AutoStart") ? d.autoStart = !0 : d.autoStart = !1;
        1 == b.getAttribute("loop") ?
            d.playCount = !0 : d.playCount = !1;
        1 == b.getAttribute("ShowTracker") ? d.showTracker = !0
            : d.showTracker = !1;
        1 == b.getAttribute("ShowStatusBar") ? d.showStatusBar = !0
            : d.showStatusBar = !1;
        1 == b.getAttribute("ShowControls") ? d.showControls = !0
            : d.showControls = !1;
        1 == b.getAttribute("ShowAudioControls") ? d.showAudioControls = !0
            : d.showAudioControls = !1;
        1 == b.getAttribute("ShowDisplay") ? d.showDisplay = !0
            : d.showDisplay = !1;
        1 == b.getAttribute("ShowPositionControls")
            ? d.showPositionControls = !0 : d.showPositionControls = !1;
        d = makeImageElementForObject(d);
        d.style.position = b.style.position;
        d.style.left = b.style.left;
        d.style.top = b.style.top;
        b.parentNode.replaceChild(d, b)
      }
    }
    e = _iframeDoc.getElementsByTagName("input");
    for (a = e.length - 1; 0 <= a; a--) {
      c = e[a], "hidden" == c.type
      && (d = {type: "hidden"}, d.id = c.id, d.name = c.name, d.value = c.value, d.className = c.className, d.title = c.title, d = makeImageElementForObject(
          d), c.parentNode.replaceChild(d, c));
    }
    e = _iframeDoc.getElementsByTagName("video");
    for (a = e.length - 1; 0 <= a; a--) {
      c = e[a];
      d = {type: "video_media", source: [], src: "", isFirst: !1};
      d.textContent =
          c.textContent ? c.textContent : "";
      var m = c.getElementsByTagName("source");
      if (0 != m.length) {
        for (b = 0, m = m.length; b < m; b++) {
          null
          != c.getElementsByTagName("source")[b].getAttribute("src")
          && d.source.push({
            src: c.getElementsByTagName("source")[b].getAttribute("src")
          });
        }
      } else {
        b = c.getAttribute("src"), null != b && (d.src = b);
      }
      d.width = "";
      d.height = "";
      null != c.getAttribute("data-responsive") ? d.responsiveWidth = !0
          : d.responsiveWidth = !1;
      d.width = c.getAttribute("width");
      if ("" === d.width || null === d.width) {
        d.width = c.style.width;
      }
      d.height = c.getAttribute("height");
      if ("" === d.height || null === d.height) {
        d.height = c.style.height;
      }
      d.autoPlay = null == c.getAttribute("autoplay") ? !1 : !0;
      d.loop = null == c.getAttribute("loop") ? !1 : !0;
      d.controls = null == c.getAttribute("controls") ? !1 : !0;
      d.muted = null == c.getAttribute("muted") ? !1 : !0;
      d.allowDownload = null !== c.getAttribute("controlslist") && "nodownload"
      === c.getAttribute("controlslist") ? !1 : !0;
      d.poster = null == c.getAttribute("poster") ? "" : c.getAttribute(
          "poster");
      "object" == typeof c.attributes && (d.attributes = c.attributes);
      d.isUrl = 1 == d.source.length &&
          1 != KEDITORTOP.G_CURRKEDITOR._config.allowVideoFileType;
      d = makeImageElementForObject(d);
      d.style.position = c.style.position;
      d.style.left = c.style.left;
      d.style.top = c.style.top;
      c.parentNode.replaceChild(d, c)
    }
  }
}

function ReplaceBase64ImageToArray(a, c) {
  if ("html5" == a.runtimes && "base64" == a.uploadMethod) {
    try {
      var b = c.getElementsByTagName("img");
      if (b && 0 < b.length) {
        G_ImagesBase64Data = [];
        for (var d = 0, e = b.length; d < e; d++) {
          G_ImagesBase64Data.push(
              b[d].src), b[d].removeAttribute("src"), b[d].setAttribute(
              "raon-tsrc",
              "KEDITORImagesBase64Data_" + d.toString())
        }
      }
    } catch (f) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(f)
    }
  }
}

function ReplaceArrayToBase64Image(a, c, b) {
  var d = b;
  if ("html5" == a.runtimes && "base64" == a.uploadMethod) {
    try {
      var e = c.getElementsByTagName("img");
      if (e && 0 < e.length) {
        for (var f = 0, g = e.length; f < g;
            f++) {
          e[f].src = G_ImagesBase64Data[f], d = d.replace(
              new RegExp("<img[^>]*KEDITORImagesBase64Data_" + f, "i"),
              function (a) {
                return a.replace("raon-tsrc", "src").replace(
                    "KEDITORImagesBase64Data_" + f, G_ImagesBase64Data[f])
              })
        }
      }
    } catch (h) {
      d = b
    }
    G_ImagesBase64Data = []
  }
  return d
}

function FixFlashError() {
  var a = KEDITORTOP.G_CURRKEDITOR;
  if (null != a) {
    var c;
    if (c = a._EDITOR.preview.contentDocument
        ? a._EDITOR.preview.contentDocument
        : a._EDITOR.preview.contentWindow.document) {
      for (var b = c.getElementsByTagName("iframe"), a = b.length - 1; 0 <= a;
          a--) {
        var d = b[a];
        try {
          d.src = "", d.parentNode.removeChild(d)
        } catch (e) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(e)
        }
      }
      c = c.getElementsByTagName("embed");
      for (a = c.length - 1; 0 <= a; a--) {
        b = c[a];
        try {
          b.src = "", b.parentNode.removeChild(b)
        } catch (f) {
          KEDITORTOP &&
          KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(f)
        }
      }
    }
  }
}

function FixFlashError2(a) {
  if (a) {
    for (var c = a.getElementsByTagName("iframe"), b = c.length - 1; 0 <= b;
        b--) {
      var d = c[b];
      try {
        d.src = "", d.parentNode.removeChild(d)
      } catch (e) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(e)
      }
    }
    a = a.getElementsByTagName("embed");
    for (b = a.length - 1; 0 <= b; b--) {
      c = a[b];
      try {
        c.src = "", c.parentNode.removeChild(c)
      } catch (f) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(f)
      }
    }
  }
}

function makeImageElementForObject(a) {
  var c = "";
  "iframe" == a.type ? c = -1 < a.src.indexOf("keditorplayer/media_player")
      ? "dialog/custom_insert_image.jpg" : "dialog/objectiframe.jpg" : "flash"
  == a.type ? c = -1 < a.src.indexOf("keditorplayer/")
      ? "dialog/custom_insert_image.jpg" : "dialog/objectflash.jpg" : "media"
  == a.type ? c = "dialog/objectmedia.jpg" : "youtube" == a.type
      ? c = "dialog/youtube.jpg" : "daum" == a.type ? c = "dialog/daum.jpg"
          : "naver" == a.type ? c = "dialog/naver.jpg" : "link_media" == a.type
              ? c = "dialog/link_media.jpg" : "hidden" == a.type ?
                  c = "dialog/hidden.jpg" : "video_media" == a.type
                  && (c = "dialog/video.jpg");
  var b = _iframeDoc.createElement("img");
  b.src = KEDITORTOP.G_CURRKEDITOR._config.webPath.image + c;
  c = {};
  "undefined" !== typeof a.raon_plugin
  && (c.raon_plugin = a.raon_plugin, c.customImagesrc = a.customImagesrc, b.setAttribute(
      "raon_plugin",
      a.raon_plugin), b.src = KEDITORTOP.G_CURRKEDITOR._config.webPath.plugin
      + a.raon_plugin + "/images/replaceImage.jpg");
  if ("iframe" == a.type || "iframe"
      == a.type2) {
    c.type = a.type, c.type2 = a.type2, c.src = a.src ? a.src
        : "", c.id = a.id ?
        a.id : "", c.name = a.name ? a.name : "", c.title = a.title ? a.title
        : "", c.className = a.className ? a.className : "", c.width = a.width
        ? a.width : "", c.height = a.height ? a.height : "", c.align = a.align
        ? a.align : "", c.scrolling = a.scrolling ? a.scrolling
        : "", c.frameBorder = a.frameBorder ? a.frameBorder
        : "", c.attributes = a.attributes ? a.attributes
        : "", c.caption = a.caption ? a.caption : "", "" != a.width && null
    != a.width && void 0 != a.width && (a.width = a.width.toString(), -1
    < a.width.indexOf("px") || -1 < a.width.indexOf("%") || -1
    < a.width.indexOf(
        "pt") ? b.style.width =
        a.width : "" != a.width && (b.style.width = a.width + "px")), ""
    != a.height && null != a.height && void 0 != a.height
    && (a.height = a.height.toString(), -1 < a.height.indexOf("px") || -1
    < a.height.indexOf("%") || -1 < a.height.indexOf("pt")
        ? b.style.height = a.height : b.style.height = a.height
            + "px"), b.align = a.align;
  } else if ("flash" == a.type || "flash"
      == a.type2) {
    c.type = a.type;
    c.type2 = a.type2;
    c.src = a.src;
    c.width = a.width;
    c.height = a.height;
    c.hspace = a.hspace ? a.hspace : "";
    c.vspace = a.vspace ? a.vspace : "";
    c.margin_left = a.margin_left;
    c.margin_right = a.margin_right;
    c.margin_top = a.margin_top;
    c.margin_bottom = a.margin_bottom;
    c.scale = a.scale;
    c.allowScriptAccess = a.allowScriptAccess;
    c.quality = a.quality;
    c.align = "";
    c.menu = a.menu;
    c.play = a.play;
    c.loop = a.loop;
    c.allowFullScreen = a.allowFullScreen;
    c.flashvars = a.flashvars;
    c.caption = a.caption;
    "" != a.width && null != a.width && void 0 != a.width
    && (a.width = a.width.toString(), -1 < a.width.indexOf("px") || -1
    < a.width.indexOf("%") || -1 < a.width.indexOf("pt")
        ? b.style.width = a.width : b.style.width = a.width + "px");
    "" != a.height && null != a.height && void 0 !=
    a.height && (a.height = a.height.toString(), -1 < a.height.indexOf("px")
    || -1 < a.height.indexOf("%") || -1 < a.height.indexOf("pt")
        ? b.style.height = a.height : b.style.height = a.height + "px");
    a.hspace && (b.hspace = a.hspace);
    a.vspace && (b.vspace = a.vspace);
    a.margin_left && (-1 < a.margin_left.indexOf("px") || -1
    < a.margin_left.indexOf("%") || -1 < a.margin_left.indexOf("pt")
        ? b.style.marginLeft = a.margin_left
        : b.style.marginLeft = a.margin_left + "px");
    a.margin_right && (-1 < a.margin_right.indexOf("px") || -1
    < a.margin_right.indexOf("%") || -1 < a.margin_right.indexOf("pt") ?
        b.style.marginRight = a.margin_right
        : b.style.marginRight = a.margin_right + "px");
    a.margin_top && (-1 < a.margin_top.indexOf("px") || -1
    < a.margin_top.indexOf("%") || -1 < a.margin_top.indexOf("pt")
        ? b.style.marginTop = a.margin_top : b.style.marginTop = a.margin_top
            + "px");
    a.margin_bottom && (-1 < a.margin_bottom.indexOf("px") || -1
    < a.margin_bottom.indexOf("%") || -1 < a.margin_bottom.indexOf("pt")
        ? b.style.marginBottom = a.margin_bottom
        : b.style.marginBottom = a.margin_bottom + "px");
    b.align = "";
    for (var d = "absbottom absmiddle absmiddle bottom left middle right texttop top".split(
            " "),
        e = d.length, f = 0; f < e; f++) {
      if (a.align == d[f]) {
        b.align = a.align;
        c.align = a.align;
        break
      }
    }
  } else {
    "media" == a.type
        ? (c.type = a.type, c.src = a.src, c.width = a.width, c.height = a.height, c.autoStart = a.autoStart, c.playCount = a.playCount, c.showTracker = a.showTracker, c.showStatusBar = a.showStatusBar, c.showControls = a.showControls, c.showAudioControls = a.showAudioControls, c.showDisplay = a.showDisplay, c.showPositionControls = a.showPositionControls, ""
        != a.width && null != a.width && void 0 != a.width
        && (a.width = a.width.toString(), -1 < a.width.indexOf("px") ||
        -1 < a.width.indexOf("%") || -1 < a.width.indexOf("pt")
            ? b.style.width = a.width : b.style.width = a.width + "px"), ""
        != a.height && null != a.height && void 0 != a.height
        && (a.height = a.height.toString(), -1 < a.height.indexOf("px") || -1
        < a.height.indexOf("%") || -1 < a.height.indexOf("pt")
            ? b.style.height = a.height : b.style.height = a.height + "px"))
        : "hidden" == a.type
            ? (c.type = a.type, c.id = a.id, c.name = a.name, c.value = a.value, c.className = a.className, c.title = a.title)
            : "video_media" == a.type
            && (c.type = a.type, c.src = a.src, c.width = a.width, c.height = a.height,
                c.autoPlay = a.autoPlay, c.loop = a.loop, c.controls = a.controls, c.muted = a.muted, c.responsiveWidth = a.responsiveWidth, c.allowDownload = a.allowDownload, c.isUrl = a.isUrl, c.isFirst = a.isFirst, c.textContent = a.textContent
                ? a.textContent
                : "", c.poster = a.poster, c.source = a.source, "object"
            == typeof a.attributes
            && (c.attributes = a.attributes), b.setAttribute("width",
                a.width), b.setAttribute("height", a.height), !0
            === a.responsiveWidth
            && (b.style.maxWidth = "100%", b.style.height = "auto"));
  }
  setKEditorCustomData(b, c);
  return b
}

var dragPopup = null, currentScrollPos;

function startDrag(a) {
  var c = getDialogWindow(), b = getDialogDocument();
  a || (a = c.event);
  offsetX = a.clientX;
  offsetY = a.clientY;
  0 == isMobileAndFixBottom() && (dragPopup.style.left
  || (dragPopup.style.left = "0px"), dragPopup.style.top
  || (dragPopup.style.top = "0px"));
  var c = dragPopup.getElementsByTagName("div")[1], d = !1;
  c && (c = getClientRect(c), d = point_in_rectagnle(offsetX, offsetY, c.left,
      c.top, c.right, c.bottom));
  0 == d && (coordX = parseInt(dragPopup.style.left), coordY = parseInt(
      dragPopup.style.top), drag = !0, KEDITORTOP.RAONKEDITOR.util.addEventEx(b,
      "mousemove", dragDiv), KEDITORTOP.RAONKEDITOR.util.addEventEx(b,
      "mouseup", stopDrag), 11 <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
  && dragPopup.getElementsByTagName("iframe")[0].focus());
  KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
}

function dragDiv(a) {
  if (drag) {
    var c = getDialogWindow();
    getDialogDocument();
    a || (a = c.event);
    var b = dragPopup.getElementsByTagName("iframe")[0],
        d = dragPopup.getElementsByTagName("div")[2],
        e = dragPopup.getElementsByTagName("iframe")[1];
    d.style.width = "100%";
    d.style.height = "100%";
    b && d && e && (b.style.zIndex = "-1");
    b = getWindowClientSize(c);
    d = [dragPopup.offsetWidth || 0, dragPopup.offsetHeight || 0];
    currentScrollPos = getWindowScrollPos(c);
    c = coordX + a.clientX - offsetX;
    e = coordY + a.clientY - offsetY;
    0 >= c - currentScrollPos[0] && (c =
        currentScrollPos[0]);
    0 >= e - currentScrollPos[1] && (e = currentScrollPos[1]);
    c + d[0] >= b[0] + currentScrollPos[0] && (c = b[0] - d[0]
        + currentScrollPos[0]);
    e + d[1] >= b[1] + currentScrollPos[1] && (e = b[1] - d[1]
        + currentScrollPos[1]);
    dragPopup.style.left = c + "px";
    dragPopup.style.top = e + "px";
    KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
    KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
  }
}

function stopDrag(a) {
  a = getDialogDocument();
  drag = !1;
  dragPopup.style.cursor = "";
  var c = dragPopup.getElementsByTagName("iframe")[0],
      b = dragPopup.getElementsByTagName("div")[2],
      d = dragPopup.getElementsByTagName("iframe")[1];
  c && b && d && (c.style.zIndex = "1");
  KEDITORTOP.RAONKEDITOR.util.removeEvent(a, "mousemove", dragDiv);
  KEDITORTOP.RAONKEDITOR.util.removeEvent(a, "mouseup", stopDrag)
}

function makeDragPopup(a) {
  drag = !1;
  var c = getDialogWindow();
  KEDITORTOP.RAONKEDITOR.util.addEventEx(a, "mousedown", startDrag);
  KEDITORTOP.RAONKEDITOR.util.addEventEx(c, "scroll", editorDialogScrollEvt);
  dragPopup = a
}

var originScrollSize = null, originfull = {}, relativePos = !1,
    originStylebackup = [];

function isRelativePosition(a) {
  for (; null != a && (!a.tagName || "body"
      != a.tagName.toLowerCase());) {
    if (a = a.parentNode, "relative"
    == a.style.position) {
      return !0;
    }
  }
  return !1
}

function setBackupHiddenStyle(a, c) {
  originStylebackup = [];
  for (var b = a;
      null != b && (!b.tagName || "body" != b.tagName.toLowerCase());) {
    if (b != a) {
      var d;
      (d = c.getComputedStyle ? c.getComputedStyle(b, "") : b.currentStyle)
      && d.overflow && "hidden" == d.overflow && (originStylebackup.push(
          b), b.style.setProperty ? b.style.setProperty("overflow", "visible",
          null) : b.style.setAttribute("overflow", "visible"))
    }
    b = b.parentNode
  }
}

function setRestorreHiddenStyle() {
  for (var a = originStylebackup.length, c = 0; c < a; c++) {
    var b = originStylebackup[c];
    b.style.setProperty ? b.style.setProperty("overflow", "hidden", null)
        : b.style.setAttribute("overflow", "hidden")
  }
  originStylebackup = []
}

function resizeKeditorWin() {
  var a = KEDITORTOP.G_CURRKEDITOR._config.fullScreenTop,
      c = KEDITORTOP.G_CURRKEDITOR._config.fullScreenLeft,
      b = KEDITORTOP.G_CURRKEDITOR._config.fullScreenRight,
      d = KEDITORTOP.G_CURRKEDITOR._config.fullScreenBottom,
      e = window.frameElement, f = getWindowClientSize(KEDITORTOP.KEDITORWIN);
  if (relativePos) {
    e.style.left = "0px";
    e.style.top = "0px";
    var g = getClientRect(e), h = 0, m = 0, h = -1 * g.left, m = -1 * g.top;
    e.style.left = parseIntOr0(e.style.left) + h + "px";
    e.style.top = parseIntOr0(e.style.top) + m + "px"
  } else {
    1 ==
    KEDITORTOP.RAONKEDITOR.browser.ie && 1
    == KEDITORTOP.RAONKEDITOR.browser.quirks
        ? (e.style.left = originScrollSize[0]
            + "px", e.style.top = originScrollSize[1] + "px")
        : (e.style.left = "0px", e.style.top = "0px");
  }
  0 < c && (e.style.left = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(e.style.left)
      + c + "px");
  0 < a && (e.style.top = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(e.style.top)
      + a + "px");
  0 < b && (e.style.right = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
      e.style.right) + b + "px");
  0 < d && (e.style.bottom = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          e.style.bottom) +
      d + "px");
  var q = document.getElementById(
      "ue_editor_holder_" + KEDITORTOP.G_CURRKEDITOR.ID), c = f[0] - c - b;
  0 < c && (e.style.width = c + "px");
  a = f[1] - a - d;
  0 < a && (e.style.height = a + "px");
  setTimeout(function () {
    var a = document.getElementById(
            "keditor_topstatusbar_" + KEDITORTOP.G_CURRKEDITOR.ID),
        b = document.getElementById(
            "keditor_menu_" + KEDITORTOP.G_CURRKEDITOR.ID),
        c = document.getElementById(
            "keditor_toolbar_" + KEDITORTOP.G_CURRKEDITOR.ID),
        d = document.getElementById(
            "keditor_statusbar_" + KEDITORTOP.G_CURRKEDITOR.ID), f, g, h, m;
    a &&
    (f = getClientRect(a));
    b && (g = getClientRect(b));
    c && (h = getClientRect(c));
    d && (m = getClientRect(d));
    a = 0;
    g && (a += g.bottom - g.top);
    h && (a += h.bottom - h.top);
    a = f ? a + (f.bottom - f.top) : a + 1;
    a = m ? a + (m.bottom - m.top) : a + 1;
    KEDITORTOP.G_CURRKEDITOR.baseMenuToolbarHeight = a;
    f = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(e.style.height)
        - KEDITORTOP.G_CURRKEDITOR.baseMenuToolbarHeight;
    0 < f && (q.style.height = f + "px")
  }, 50)
}

function getCustomParam(a, c) {
  var b = {}, d = getDocumentForDummy().createElement("div");
  d.innerHTML = a;
  var e = d.getElementsByTagName("embed")[0],
      f = d.getElementsByTagName("iframe")[0];
  if (null != e) {
    var g = e.getAttribute("src") ? e.getAttribute("src") : "",
        h = checkXssContentType(g);
    if (h) {
      return null;
    }
    b.src = g;
    b.attributes = e.attributes;
    g = 0 != parseIntOr0(e.style.width) ? e.style.width : e.getAttribute(
        "width");
    0 == parseIntOr0(g) && (g = "300");
    b.width = g;
    g = 0 != parseIntOr0(e.style.height) ? e.style.height : e.getAttribute(
        "height");
    0 ==
    parseIntOr0(g) && (g = "300");
    b.height = g;
    b.hspace = e.getAttribute("hspace") ? e.getAttribute("hspace") : "";
    b.vspace = e.getAttribute("vspace") ? e.getAttribute("vspace") : "";
    b.margin_left = e.style.marginLeft;
    b.margin_right = e.style.marginRight;
    b.margin_top = e.style.marginTop;
    b.margin_bottom = e.style.marginBottom;
    b.scale = e.getAttribute("scale") ? e.getAttribute("scale") : "";
    b.allowScriptAccess = e.getAttribute("allowScriptAccess") ? e.getAttribute(
        "allowScriptAccess") : "";
    b.quality = e.getAttribute("quality") ? e.getAttribute("quality") :
        "";
    b.align = e.getAttribute("align") ? e.getAttribute("align") : "";
    b.menu = e.getAttribute("menu") ? e.getAttribute("menu") : !1;
    b.play = e.getAttribute("play") ? e.getAttribute("play") : !1;
    b.loop = e.getAttribute("loop") ? e.getAttribute("loop") : !1;
    b.allowFullScreen = e.getAttribute("allowFullScreen") ? e.getAttribute(
        "allowFullScreen") : !0;
    e.getAttribute("flashvars") && (b.flashvars = e.getAttribute("flashvars"));
    e = getLinkMediaType(b.src);
    b.type = "" == e ? "flash" : e;
    b.type2 = "flash"
  } else if (null != f) {
    c && c.forceFullSreenAllow && f.setAttribute("allowFullscreen",
        "true");
    b.attributes = f.attributes;
    g = f.getAttribute("src") ? f.getAttribute("src") : "";
    if (h = checkXssContentType(g)) {
      return null;
    }
    b.src = g;
    b.id = f.getAttribute("id") ? f.getAttribute("id") : "";
    b.name = f.getAttribute("name") ? f.getAttribute("name") : "";
    b.title = f.getAttribute("title") ? f.getAttribute("title") : "";
    g = 0 != parseIntOr0(f.style.width) ? f.style.width : f.getAttribute(
        "width");
    0 == parseIntOr0(g) && (g = "300");
    b.width = g;
    g = 0 != parseIntOr0(f.style.height) ? f.style.height : f.getAttribute(
        "height");
    0 == parseIntOr0(g) && (g = "300");
    b.height = g;
    b.align = f.getAttribute("align") ? f.getAttribute("align") : "";
    b.scrolling = f.getAttribute("scrolling") ? f.getAttribute("scrolling")
        : "no";
    f.getAttribute("frameBorder") && ("yes" == f.getAttribute(
        "frameBorder").toLowerCase() || "1" == f.getAttribute("frameBorder")
        ? b.frameBorder = !0 : ("no" == f.getAttribute("frameBorder")
        || f.getAttribute("frameBorder"), b.frameBorder = !1));
    e = getLinkMediaType(b.src);
    b.type = "" == e ? "iframe" : e;
    b.type2 = "iframe"
  }
  d.innerHTML = "";
  return b
}

function getLinkMediaType(a) {
  var c = "";
  -1 != a.search("youtube.com/embed/") ? c = "link_media" : -1 != a.search(
      "videofarm.daum.net/") ? c = "link_media" : -1 != a.search(
      "naver.com/flash/") ? c = "link_media" : -1 != a.search(
      "channel.pandora.tv/") || -1 != a.search("flvr.pandora.tv/")
      ? c = "link_media" : -1 != a.search("mgoon.com/Video") ? c = "link_media"
          : -1 != a.search("keditorplayer/media_player") && (c = "iframe");
  return c
}

function getEditrFromEvent(a) {
  var c = null;
  try {
    if (null != a) {
      var b = a.target ? a.target : a.srcElement;
      if (b) {
        a = null;
        b.document && 9 == b.document.nodeType && (b = b.document);
        a = 9 != b.nodeType ? b.ownerDocument : b;
        try {
          a = a.defaultView ? a.defaultView
              : a.parentWindow, c = KEDITORTOP.RAONKEDITOR.RAONKMULTIPLE[a
          == window ? a.frameElement.id : a.parent.frameElement.id], 0 == !!c
          && (c = KEDITORTOP.G_CURRKEDITOR)
        } catch (d) {
          c = KEDITORTOP.G_CURRKEDITOR
        }
      } else {
        c = KEDITORTOP.G_CURRKEDITOR
      }
    } else {
      c = KEDITORTOP.G_CURRKEDITOR
    }
  } catch (e) {
    c = KEDITORTOP.G_CURRKEDITOR
  }
  return c
}

function getEditorFromUnloadEvent(a) {
  var c = null;
  try {
    if (null != a) {
      var b = a.target ? a.target : a.srcElement;
      if (b) {
        try {
          a = "", b._k_editor ? a = "raonk_frame_" + b._k_editor.ID
              : b.defaultView && (a = "raonk_frame_"
              + b.defaultView.G_USE_EDITOR_ID), c = KEDITORTOP.RAONKEDITOR.RAONKMULTIPLE[a]
        } catch (d) {
          c = KEDITORTOP.G_CURRKEDITOR
        }
      } else {
        c = KEDITORTOP.G_CURRKEDITOR
      }
    } else {
      c = KEDITORTOP.G_CURRKEDITOR
    }
  } catch (e) {
    c = KEDITORTOP.G_CURRKEDITOR
  }
  return c
}

function setPasteImageFromClipboard(a, c) {
  if (!(-1 < KEDITORTOP.G_CURRKEDITOR._config.disableInsertImage.indexOf(
          ",paste_image,") || 0
      == KEDITORTOP.G_CURRKEDITOR.AccessClipboardForIEGecko
      && KEDITORTOP.RAONKEDITOR.browser.gecko)) {
    try {
      if (0 == KEDITORTOP.RAONKEDITOR.browser.ie
          || KEDITORTOP.G_CURRKEDITOR.AccessClipboardForIEGecko) {
        var b = a.clipboardData.items, d = a.clipboardData.items.length, e = [],
            f = function (a, b) {
              if ("string" != typeof a.name) {
                var c = "image." + a.type.split("/")[1];
                a.name = c
              }
              c = {};
              c.fileObj = a;
              c.name = a.name;
              c.size = a.size;
              b && ("number" == typeof b.width && (c.width = b.width), "number"
              == typeof b.height && (c.height = b.height), !0
              === b.checkOriginSize && (c.applyAutoFit = !1));
              e.push(c)
            };
        if (1 >= d && KEDITORTOP.G_CURRKEDITOR.clipImageBlob) {
          f(
              KEDITORTOP.G_CURRKEDITOR.clipImageBlob, c);
        } else {
          for (var g = 0;
              g < d; g++) {
            if ("file" == b[g].kind && -1 !== b[g].type.indexOf(
                "image/")) {
              var h = b[g].getAsFile();
              h && f(h)
            }
          }
        }
        0 < e.length && (b = {files: e}, (new ProcessImageInHtml5(
            KEDITORTOP.G_CURRKEDITOR)).inFileObject(b))
      } else if (11 <= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
        for (var b =
            _iframeWin.clipboardData, f = b.files, m = f.length, g = 0; g < m;
            g++) {
          var q = f[g], t = URL.createObjectURL(q);
          a.msConvertURL(q, "base64", t);
          var u = new FileReader;
          u.onload = function (a) {
            a = a.target.result.split(",");
            if (2 == a.length) {
              var b = getExtFromImageDataSrc(a[0]);
              postBase64ImageToServer(a[1], b)
            }
            u = void 0
          };
          u.readAsDataURL(q)
        }
      }
    } catch (v) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(v)
    }
  }
}

function postBase64ImageToServer(a, c, b, d, e, f, g) {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.paste_image_base64) {
    if (void 0 == b || null == b) {
      var h = _iframeDoc.createElement("img");
      h.onload = function (a) {
        if (h) {
          0 == !!e && "" == h.style.width && h.width && (e = {
            width: 0,
            height: 0,
            checkOriginSize: !1
          }, e.width = h.width, "" == h.style.height && h.height
          && (e.height = h.height));
          e && 0 < e.width && 0 < e.height && (h = SetImageAutoFitSize(h, h.src,
              e));
          a = h.outerHTML;
          h = null;
          h = void 0;
          var b = getFirstRange().range;
          b.deleteContents();
          b.collapse(!0);
          b.pasteHtml(a);
          b.collapse(!1)
        }
      };
      h.src = "data:image/" + c + ";base64," + a;
      h.alt = ""
    } else {
      void 0 != c && "" != c && void 0 != a && "" != a
      && (b.src = "data:image/" + c + ";base64," + a, "" == b.style.width
      && b.width && (b.src += "?" + b.width, "" == b.style.height && b.height
      && (b.src += "^" + b.height)), b = SetImageAutoFitSize(b, b.src, e));
    }
    if ("0" == KEDITORTOP.G_CURRKEDITOR._config.uploadImageFileObject || "1"
        == KEDITORTOP.G_CURRKEDITOR._config.paste_image_base64 && !f) {
      return
    }
  }
  var m = function (h) {
    var m = "", u = null;
    "1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager && "" != h && (u = h);
    if (null != u || "" == KEDITORTOP.G_CURRKEDITOR._config.proxy_url || "1"
        == KEDITORTOP.G_CURRKEDITOR._config.uploadImageFileObject) {
      if ("0" == KEDITORTOP.G_CURRKEDITOR._config.useKManager) {
        u = f ? f.name : KEDITORTOP.RAONKEDITOR.util.makeGuid() + "." + c;
        h = "" + ("kc" + KEDITORTOP.RAONKSolution.Agent.formfeed + "c01"
            + KEDITORTOP.RAONKSolution.Agent.vertical);
        h += "k01" + KEDITORTOP.RAONKSolution.Agent.formfeed
            + KEDITORTOP.G_CURRKEDITOR._config.security.encryptParam
            + KEDITORTOP.RAONKSolution.Agent.vertical;
        h += "k14" + KEDITORTOP.RAONKSolution.Agent.formfeed +
            u + KEDITORTOP.RAONKSolution.Agent.vertical;
        h += "k15" + KEDITORTOP.RAONKSolution.Agent.formfeed
            + KEDITORTOP.G_CURRKEDITOR._config.saveFileNameRule
            + KEDITORTOP.RAONKSolution.Agent.vertical;
        h += "k16" + KEDITORTOP.RAONKSolution.Agent.formfeed
            + KEDITORTOP.G_CURRKEDITOR._config.saveFileNameRuleEx
            + KEDITORTOP.RAONKSolution.Agent.vertical;
        h += "k17" + KEDITORTOP.RAONKSolution.Agent.formfeed
            + KEDITORTOP.G_CURRKEDITOR._config.saveFolderNameRule
            + KEDITORTOP.RAONKSolution.Agent.vertical;
        h += "k20" + KEDITORTOP.RAONKSolution.Agent.formfeed +
            "image";
        "1" != KEDITORTOP.G_CURRKEDITOR._config.uploadImageFileObject
        && (h += KEDITORTOP.RAONKSolution.Agent.vertical + "k19"
            + KEDITORTOP.RAONKSolution.Agent.formfeed + a);
        h = KEDITORTOP.RAONKEDITOR.util.makeEncryptParam(h);
        u = new FormData;
        u.append("k00", h);
        h = G_FormData.length;
        for (var v = 0; v < h; v++) {
          var w = G_FormData[v].form_value,
              w = "1" == KEDITORTOP.G_CURRKEDITOR._config.security.encryptParam
                  ? KEDITORTOP.RAONKEDITOR.util.makeEncryptParam(w)
                  : encodeURIComponent(w);
          u.append(G_FormData[v].form_name, w)
        }
        "1" == KEDITORTOP.G_CURRKEDITOR._config.uploadImageFileObject &&
        (0 == !!f ? (h = a, 0 > h.indexOf("data:image/") && (h = c, "jpg" == h
            && (h = "jpeg"), h = "data:image/" + c + ";base64,"
                + a), h = KEDITORTOP.RAONKEDITOR.util.dataURItoBlob(h), u.append(
                KEDITORTOP.G_CURRKEDITOR._config.fileFieldID, h, "image." + c))
            : (h = f.name, h = getUploadOriginalFileName(h,
                KEDITORTOP.G_CURRKEDITOR._config), u.append(
                KEDITORTOP.G_CURRKEDITOR._config.fileFieldID, f, h)));
        if ((u = KEDITORTOP.RAONKEDITOR.ajax.postMultiPart(
                KEDITORTOP.G_CURRKEDITOR._config.handlerUrl, u)) && ""
            != u) {
          if (u = KEDITORTOP.RAONKEDITOR.util.parseDataFromServer(u),
          0 == u.indexOf("[OK]")) {
            u = u.replace("[OK]", "");
            u = KEDITORTOP.RAONKEDITOR.util.makeDecryptReponseMessage(u);
            u = web_url_remove_char(u);
            if (g) {
              var x = u.split("?");
              if (2 == x.length) {
                if (m = x[0], u = x[1].split("^"), 2
                == u.length) {
                  m += "?" + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                          KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                              b.style.width))
                      + "^" + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                          KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                              b.style.height));
                } else if (3 == u.length) {
                  -1
                  < u[1].indexOf("|") ? (x = u[1].indexOf(
                      "|"), h = u[1].substring(x,
                      u[1].length) + "^" + u[2], m += "?"
                      + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                          KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                              b.style.width)) + "^"
                      + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                          KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                              b.style.height)) + h) : m += "?"
                      + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                          KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                              b.style.width)) + "^"
                      + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                          KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                              b.style.height)) + "^" + u[2];
                } else if (3 < u.length) {
                  x = u[1].indexOf("|");
                  0 > x && (x = 0);
                  h = u[1].substring(x, u[1].length);
                  v = u.length;
                  for (x = 2; x < v; x++) {
                    h += "^" + u[x];
                  }
                  m += "?" + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                          KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                              b.style.width))
                      + "^" + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                          KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                              b.style.height)) + h
                }
              }
              u = m
            }
            try {
              var x = {strUrl: u}, y;
              "function"
              === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforeInsertUrl
                  ? y = KEDITORTOP.G_CURRKEDITOR._config.event.beforeInsertUrl(
                      KEDITORTOP.G_CURRKEDITOR.ID, x) : "function" ===
                  typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeInsertUrl
                  && (y = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeInsertUrl(
                      KEDITORTOP.G_CURRKEDITOR.ID, x));
              null != y && void 0 != y && (u = y)
            } catch (z) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(z)
            }
          } else if (0 == u.indexOf("[FAIL]")) {
            u = u.replace("[FAIL]", "");
            u = "[FAIL]"
                + KEDITORTOP.RAONKEDITOR.util.makeDecryptReponseMessage(
                    u);
            try {
              if (x = {strType: "imageUpload", strMessage: u}, "function"
              === typeof KEDITORTOP.G_CURRKEDITOR._config.event.onError) {
                KEDITORTOP.G_CURRKEDITOR._config.event.onError(
                    KEDITORTOP.G_CURRKEDITOR.ID,
                    x);
              } else {
                "function"
                === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_OnError
                && KEDITORTOP.KEDITORWIN.RAONKEDITOR_OnError(
                    KEDITORTOP.G_CURRKEDITOR.ID, x)
              }
            } catch (A) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(A)
            }
          }
        }
      }
      if (void 0 == b || null == b) {
        y = _iframeDoc.createElement("img");
        y = SetImageAutoFitSize(y, u, e);
        m = y.outerHTML;
        try {
          if ("function"
              === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste
              || "function"
              === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste) {
            y = m;
            try {
              x = {strHtml: m},
                  "function"
                  === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste
                      ? y = KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste(
                          KEDITORTOP.G_CURRKEDITOR.ID, x) : "function"
                      === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste
                      && (y = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste(
                          KEDITORTOP.G_CURRKEDITOR.ID, x))
            } catch (B) {
              y = m
            }
            if (y) {
              m = y;
            } else if (0 == y || "" == y) {
              return
            }
          }
        } catch (C) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(C)
        }
        pasteWordCount(m) && (0 < m.length
        && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(),
            m = externalPageBreakDataRaplaceInEditor(
                m), KEDITORTOP.RAONKEDITOR.browser.chrome
        || KEDITORTOP.RAONKEDITOR.browser.opera
        || KEDITORTOP.RAONKEDITOR.browser.gecko ? (_iframeDoc.execCommand(
                "inserthtml", !1, m), "" != m
            && (KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0))
            : pasteHtmlAtCaretHuge(m, !0), onChange({
          editor: KEDITORTOP.G_CURRKEDITOR,
          isPossibleDirty: !0
        }), m = getFirstRange().range) && (rangy.getSelection(
            _iframeWin).removeAllRanges(), rangy.getSelection(
            _iframeWin).addRange(m))
      } else {
        b =
            SetImageAutoFitSize(b, u), d && recursionBase64ImageToServer()
      }
    } else if ("0" == KEDITORTOP.G_CURRKEDITOR._config.useKManager) {
      var D = document.createElement("form");
      D.method = "post";
      D.target = "upload_frame";
      D.enctype = "multipart/form-data";
      m = '<input type="hidden" id="imagedata" name="imagedata" value="' + a
          + '" />';
      m += '<input type="hidden" id="'
          + KEDITORTOP.G_CURRKEDITOR._config.userFieldID + '" name="'
          + KEDITORTOP.G_CURRKEDITOR._config.userFieldID + '" value="'
          + KEDITORTOP.G_CURRKEDITOR._config.userFieldValue + '" />';
      D.innerHTML =
          m
          + '<iframe id="upload_frame" name="upload_frame" frameborder="0" style="width:0px; height:0px;" title="RAON K Editor Upload"></iframe>';
      document.body.appendChild(D);
      D.action = KEDITORTOP.G_CURRKEDITOR._config.handlerUrl;
      D.submit();
      var H = document.getElementById("upload_frame");
      KEDITORTOP.RAONKEDITOR.util.addEventEx(H, "load", function () {
        var a;
        try {
          a = H.contentDocument ? H.contentDocument.body
              : H.contentWindow.document.body
        } catch (c) {
          a = H.document.body
        }
        a = "textContent" in a ? a.textContent : a.innerText;
        document.body.removeChild(D);
        if (a && "" != a) {
          try {
            var e = {strUrl: a}, f;
            "function"
            === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforeInsertUrl
                ? f = KEDITORTOP.G_CURRKEDITOR._config.event.beforeInsertUrl(
                    KEDITORTOP.G_CURRKEDITOR.ID, e) : "function"
                === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeInsertUrl
                && (f = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeInsertUrl(
                    KEDITORTOP.G_CURRKEDITOR.ID, e));
            null != f && void 0 != f && (a = f)
          } catch (g) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(g)
          }
        }
        if ("[FAIL]" == a.substring(0, 6)) {
          try {
            if (e =
                {strType: "imageUpload", strMessage: a}, "function"
            === typeof KEDITORTOP.G_CURRKEDITOR._config.event.onError) {
              KEDITORTOP.G_CURRKEDITOR._config.event.onError(
                  KEDITORTOP.G_CURRKEDITOR.ID, e);
            } else {
              "function"
              === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_OnError
              && KEDITORTOP.KEDITORWIN.RAONKEDITOR_OnError(
                  KEDITORTOP.G_CURRKEDITOR.ID, e)
            }
          } catch (h) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(h)
          }
        }
        if (void 0 == b || null == b) {
          e = _iframeDoc.createElement(
              "img"), e = SetImageAutoFitSize(e, a), a = getFirstRange().range,
              a.collapse(!0), a.insertNode(e), a.selectNode(e), a.collapse(
              !1), rangy.getSelection(
              _iframeWin).removeAllRanges(), rangy.getSelection(
              _iframeWin).addRange(a);
        } else {
          if (e = _iframeDoc.getElementsByTagName("img")) {
            f = e.length;
            for (var m = 0; m < f; m++) {
              if (e[m].src == b.src) {
                var q = _iframeDoc.createElement("img");
                q.attributes = e[m].attributes;
                q.src = a;
                e[m].parentNode.replaceChild(q, e[m]);
                b = q
              }
            }
          }
          b = SetImageAutoFitSize(b, a);
          d && recursionBase64ImageToServer()
        }
      }, !0)
    } else if (m = u, void 0 == b || null == b) {
      y = _iframeDoc.createElement(
          "img"),
          y = SetImageAutoFitSize(y, m), m = getFirstRange().range, m.collapse(
          !0), m.insertNode(y), m.selectNode(y), m.collapse(
          !1), rangy.getSelection(
          _iframeWin).removeAllRanges(), rangy.getSelection(
          _iframeWin).addRange(
          m);
    } else {
      if (y = _iframeDoc.getElementsByTagName("img")) {
        for (u = y.length, x = 0;
            x < u; x++) {
          y[x].src == b.src && (h = _iframeDoc.createElement(
              "img"), h.attributes = y[x].attributes, h.src = m, y[x].parentNode.replaceChild(
              h, y[x]), b = h);
        }
      }
      b = SetImageAutoFitSize(b, m);
      d && recursionBase64ImageToServer()
    }
  };
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager ?
      base64ToLocalImage({
        ext: c, base64Data: a, fn_callback: function (a) {
          m(a)
        }
      }) : m()
}

function applyImageAutoFit(a, c) {
  var b = c.urlInfo, d = b.originalWidth, e = b.originalHeight;
  "number" == typeof c.width && c.width != d && (d = c.width);
  "number" == typeof c.height && c.height != e && (e = c.height);
  a.src = b.url;
  for (var f = 0; f < b.imgAttrInfoArr.length; f++) {
    var g = b.imgAttrInfoArr[f];
    a.setAttribute(g.name, g.value)
  }
  f = b = "";
  0 > KEDITORTOP.G_CURRKEDITOR._config.imgDefaultWidth.indexOf("%")
  && (b = KEDITORTOP.G_CURRKEDITOR._config.imgDefaultWidth, f = KEDITORTOP.G_CURRKEDITOR._config.imgDefaultHeight);
  g = !1;
  "" != b ? KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d) >
      KEDITORTOP.RAONKEDITOR.util.parseIntOr0(b)
      && (d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(e, 10)
          * KEDITORTOP.RAONKEDITOR.util.parseIntOr0(b, 10)
          / KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d, 10), e = isNaN(d) ? e
          : Math.round(d), d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          b), g = !0) : "" != f && KEDITORTOP.RAONKEDITOR.util.parseIntOr0(e)
      > KEDITORTOP.RAONKEDITOR.util.parseIntOr0(f)
      && (e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d, 10)
          * KEDITORTOP.RAONKEDITOR.util.parseIntOr0(f, 10)
          / KEDITORTOP.RAONKEDITOR.util.parseIntOr0(e, 10), d = isNaN(e) ?
          d : Math.round(e), e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          f), g = !0);
  !1 === c.applyAutoFit && (g = !0);
  if (0 == g) {
    if (g = getWidthForAutoBodyFit(KEDITORTOP.G_CURRKEDITOR,
        "img"), "1" == KEDITORTOP.G_CURRKEDITOR._config.imageAutoConvert) {
      var g = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              KEDITORTOP.G_CURRKEDITOR._config.image_convert_width),
          h = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              KEDITORTOP.G_CURRKEDITOR._config.image_convert_height), m = !1,
          q = !1, b = e, f = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d),
          b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(b);
      if (0 != g && 0 == h) {
        f > g && (m = !0);
      } else if (0 == g && 0 != h) {
        b > h
        && (q = !0);
      } else {
        var t = 1 * g / f, u = 1 * h / b;
        t < u ? 1 > t && (m = !0) : 1 > u && (q = !0)
      }
      m ? (f = g / f, d = g, e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(f * b))
          : q && (e = h, d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(h / b * f))
    } else {
      "1" == KEDITORTOP.G_CURRKEDITOR._config.image_auto_fit && d > g
          ? (f = g / d, d = g, e = parseInt(f * e)) : "2"
          == KEDITORTOP.G_CURRKEDITOR._config.image_auto_fit && (f = d, b = e, f
          > g
          || b > KEDITORTOP.G_CURRKEDITOR._defaultHeight)
          && (d = KEDITORTOP.G_CURRKEDITOR._defaultHeight, e = d / g, h = b
              / f, h
          > e ? b > d ? (e = d, d =
              Math.round(f * e / b)) : (d = f, e = b) : h < e ? f > g
                  ? (d = g, e = Math.round(b * d / f)) : (d = f, e = b)
              : (d = f, e = b));
    }
  }
  0 < d && 0 < e && (a.style.width = d + "px", a.style.height = e
      + "px", a.removeAttribute("width"), a.removeAttribute("height"));
  "0" == KEDITORTOP.G_CURRKEDITOR._config.allowImgSize
  && (a.style.width = "", a.style.height = "")
}

function SetImageAutoFitSize(a, c, b) {
  var d = 0, e = 0, f = "";
  null != c && void 0 != c && (c = c.replace(/\r\n/g, ""), c = c.replace(/\n/g,
      ""), c = c.replace(/\t/g, ""));
  var f = c, g = [];
  "0" != KEDITORTOP.G_CURRKEDITOR._config.imageCustomPropertyDelimiter
  && (g = c.split(
      KEDITORTOP.G_CURRKEDITOR._config.imageCustomPropertyDelimiter), 1
  < g.length && (c = g[0]));
  c = c.split("?");
  2 == c.length && (f = c[0], c = c[1].split("^"), 2 == c.length
      ? (d = c[0], e = c[1]) : 3 == c.length && (d = c[0], e = c[1], f += "?"
      + c[2]));
  var h = !1;
  b && 0 < b.width && 0 < b.height && (d = b.width, e = b.height,
      h = b.checkOriginSize);
  var m = c = "";
  0 > KEDITORTOP.G_CURRKEDITOR._config.imgDefaultWidth.indexOf("%")
  && (c = KEDITORTOP.G_CURRKEDITOR._config.imgDefaultWidth, m = KEDITORTOP.G_CURRKEDITOR._config.imgDefaultHeight);
  b || ("" != c ? KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d)
      > KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c)
      && (d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(e, 10)
          * KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c, 10)
          / KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d, 10), e = isNaN(d) ? e
          : Math.round(d), d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c),
          h = !0) : "" != m && KEDITORTOP.RAONKEDITOR.util.parseIntOr0(e)
      > KEDITORTOP.RAONKEDITOR.util.parseIntOr0(m)
      && (e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d, 10)
          * KEDITORTOP.RAONKEDITOR.util.parseIntOr0(m, 10)
          / KEDITORTOP.RAONKEDITOR.util.parseIntOr0(e, 10), d = isNaN(e) ? d
          : Math.round(e), e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          m), h = !0));
  if (0 == h) {
    if (m = getWidthForAutoBodyFit(KEDITORTOP.G_CURRKEDITOR,
        "img"), "1" == KEDITORTOP.G_CURRKEDITOR._config.imageAutoConvert) {
      var m = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              KEDITORTOP.G_CURRKEDITOR._config.image_convert_width),
          h = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              KEDITORTOP.G_CURRKEDITOR._config.image_convert_height), q = !1,
          t = !1;
      b = e;
      c = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d);
      b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(b);
      if (0 != m && 0 == h) {
        c > m && (q = !0);
      } else if (0 == m && 0 != h) {
        b > h
        && (t = !0);
      } else {
        var u = 1 * m / c, v = 1 * h / b;
        u < v ? 1 > u && (q = !0) : 1 > v && (t = !0)
      }
      q ? (c = m / c, d = m, e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c * b))
          : t && (e = h, d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(h / b * c))
    } else {
      "1" == KEDITORTOP.G_CURRKEDITOR._config.image_auto_fit && d > m
          ? (c = m / d, d =
              m, e = parseInt(c * e)) : "2"
          == KEDITORTOP.G_CURRKEDITOR._config.image_auto_fit && (c = d, b = e, c
          > m
          || b > KEDITORTOP.G_CURRKEDITOR._defaultHeight)
          && (d = KEDITORTOP.G_CURRKEDITOR._defaultHeight, e = d / m, h = b
              / c, h
          > e ? b > d ? (e = d, d = Math.round(c * e / b)) : (d = c, e = b) : h
          < e
              ? c > m ? (d = m, e = Math.round(b * d / c)) : (d = c, e = b)
              : (d = c, e = b));
    }
  }
  a.src = f;
  0 < d && 0 < e && (a.style.width = d + "px", a.style.height = e
      + "px", a.removeAttribute("width"), a.removeAttribute("height"));
  "0" == KEDITORTOP.G_CURRKEDITOR._config.allowImgSize
  && (a.style.width = "", a.style.height = "");
  if (g && 1 < g.length) {
    for (d =
        g.length, e = 1; e < d; e++) {
      b = g[e].split("^"), 2 == b.length
      && a.setAttribute(b[0], b[1]);
    }
  }
  insertImageSrc(KEDITORTOP.G_CURRKEDITOR, f);
  return a
}

function SetCorrectOfficeHtmlForDOM(a) {
  var c = a;
  try {
    var b = document.createElement("div");
    b.innerHTML = a;
    for (var d = b.getElementsByTagName("table"), e = d.length, f = 0; f < e;
        f++) {
      var g = 0, h = 0;
      null != d[f].getAttribute("width") && "" != d[f].getAttribute("width")
      && 0 > d[f].getAttribute("width").indexOf("%") && (g = parseInt(
          d[f].getAttribute("width"), 10), d[f].removeAttribute("width"));
      null != d[f].getAttribute("height") && "" != d[f].getAttribute("height")
      && (h = parseInt(d[f].getAttribute("height"), 10), d[f].removeAttribute(
          "height"));
      "" == d[f].style.width && 0 != g && (d[f].style.width = g + "px");
      "" == d[f].style.height && 0 != h && (d[f].style.height = h + "px")
    }
    if ("HWP" == G_wordProcessorType) {
      for (var m = b.getElementsByTagName("span"), q = m.length, f = 0; f < q;
          f++) {
        var t = m[f];
        if ("#ffffff" == colorToHex(t.style.backgroundColor) || "#ffffff"
            == t.style.backgroundColor) {
          t.style.backgroundColor = ""
        }
      }
      removeDummyDivInHwp(b)
    } else {
      "XLS" == G_wordProcessorType && adjustInnerTableInExcel(b);
    }
    a = b.innerHTML
  } catch (u) {
    a = c
  }
  if ("undefined" != typeof b) {
    try {
      b.innerHTML = "", delete null
    } catch (v) {
      KEDITORTOP &&
      KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(v)
    }
  }
  return a = webOfficePasteWorkForDom(a)
}

function GetMsPptHtml(a) {
  var c = a, c = a.indexOf("\x3c!--StartFragment--\x3e"),
      b = a.indexOf("\x3c!--EndFragment--\x3e");
  if (-1 < c && -1 < b && (c = a.substr(c + 20), b = c.indexOf(
      "\x3c!--EndFragment--\x3e"), -1 < b)) {
    for (; ;) {
      if (a = c.indexOf("\x3c!--EndFragment--\x3e", b + 18), -1
      < a) {
        b = a;
      } else {
        break;
      }
    }
    a = c = c.substring(0, b)
  }
  return a
}

function ReplaceAll(a, c, b) {
  a && "" != a && (a = a.split(c).join(b));
  return a
}

function getExtFromImageDataSrc(a) {
  var c = "";
  a = a.replace("data:", "").split(";");
  0 < a.length && (a = a[0].split("/"), 2 == a.length && (c = a[1]));
  return c
}

function htmlAsciiToChar(a) {
  return a = a.replace(/&#39;/g, "'")
}

function xssReplaceScript(a, c) {
  var b = "", d = c;
  try {
    var b = c = removeGarbageTag(c),
        e = KEDITORTOP.G_CURRKEDITOR._config.xss_use,
        f = KEDITORTOP.G_CURRKEDITOR._config.xss_remove_tags,
        g = KEDITORTOP.G_CURRKEDITOR._config.xss_remove_events;
    if ("1" != e && "" == f && "" == g || null == a && "" == c) {
      return b;
    }
    if (a) {
      var h = getAllNodesInBody(a, !0);
      KEDITORTOP.RAONKEDITOR.util.removeTags(a, f);
      KEDITORTOP.RAONKEDITOR.util.removeEvents(a, g, h);
      if ("1" == e) {
        for (var m = ","
                + KEDITORTOP.G_CURRKEDITOR._config.xss_check_attribute.join(",")
                + ",", q = h.length,
            t = 0; t < q; t++) {
          if (-1 < m.indexOf(",src,")) {
            var u;
            try {
              u = h[t].src
            } catch (v) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(v)
            }
            if (void 0 != u && xssCheckPattern(u)) {
              var w = !0,
                  x = KEDITORTOP.G_CURRKEDITOR._config.xss_allow_url.length;
              if (0 < x) {
                var y = h[t].src.toLowerCase(), z = y.src.indexOf("?t=");
                -1 < z && (y = y.src.substring(0, z));
                for (var A = 0; A < x;
                    A++) {
                  if (KEDITORTOP.G_CURRKEDITOR._config.xss_allow_url[A].toLowerCase()
                      == y) {
                    w = !1;
                    break
                  }
                }
              }
              1 == w && (h[t].src = "")
            }
          }
          -1 < m.indexOf(",background,") && (h[t].background &&
          xssCheckPattern(h[t].background)
          && (h[t].background = ""), h[t].style.backgroundImage
          && xssCheckPattern(h[t].style.backgroundImage)
          && (h[t].style.backgroundImage = ""));
          -1 < m.indexOf(",url,") && h[t].url && xssCheckPattern(h[t].url)
          && (h[t].url = "");
          -1 < m.indexOf(",href,") && h[t].href && xssCheckPattern(h[t].href)
          && (h[t].href = "")
        }
      }
    }
    h = "";
    "1" == e && (h = "script,vbscript");
    m = !1;
    void 0 == c || "" == c ? a && (e = !1, 1 == RegExp(
        "<[^>]+\\skeditorcustomdata\\b[^>]*>", "gim").test(a.innerHTML)
    && (e = !0, ReplaceImageToRealObject(
        !0), KEDITORTOP.G_CURRKEDITOR._editorCustomDataMode =
        !0, removeAllKEditorCustomData()), c = a == _iframeDoc.body
        ? a.innerHTML
        : a.body.innerHTML, c = KEDITORTOP.RAONKEDITOR.util.replaceForXSS(c, h,
        f, g, m), "" != c ? KEDITORTOP.RAONKEDITOR.setBodyValue(c,
        KEDITORTOP.G_CURRKEDITOR._config.editor_id, !0, null, e) : e
        && ReplaceRealObjectToImage(!1)) : ("1" == e
    && (m = !0), c = KEDITORTOP.RAONKEDITOR.util.replaceForXSS(c, h, f, g,
        m), "" != c && (b = c))
  } catch (B) {
    b = d
  }
  return b
}

function removeGarbageTag(a) {
  var c = a;
  if ("string" == typeof a) {
    try {
      var b = RegExp("<\\?xml[^>]*/>", "gim");
      1 == b.test(c) && (c = c.replace(b, ""));
      b = RegExp("</ustyle[^>]*>", "gim");
      1 == b.test(c) && (c = c.replace(b, ""));
      b = RegExp("<ustyle[^>]*>", "gim");
      1 == b.test(c) && (c = c.replace(b, ""))
    } catch (d) {
      c = a
    }
  }
  return c
}

function xssCheckPattern(a) {
  return -1 < a.indexOf("javascript") || -1 < a.indexOf("vbscript") || -1
  < a.indexOf(".js?") || a.lastIndexOf(".js") + 3 == a.length ? !0 : !1
}

function checkCellBRValue() {
  var a = !1;
  "<p><br /></p>" == getCellDefValue() && (a = !0);
  return a
}

function checkCellBRValue2(a) {
  var c = !1;
  a = a.toLowerCase();
  a = ReplaceAll(a, " ", "");
  a = ReplaceAll(a, "<br>", "<br />");
  a = ReplaceAll(a, "<br/>", "<br />");
  "<p><br /></p>" == a && (c = !0);
  return c
}

function checkCellDefValue(a) {
  var c = !1, b = getCellDefValue();
  a = a.toLowerCase();
  KEDITORTOP.RAONKEDITOR.browser.ie && (a = a.replace(
      RegExp("<\\/p>\\n$", "gi"), "</p>"));
  a = ReplaceAll(a, " ", "");
  a = ReplaceAll(a, "<br>", "<br />");
  a = ReplaceAll(a, "<br/>", "<br />");
  b == a && (c = !0);
  return c
}

function getCellDefValue() {
  var a = 10;
  "1" == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO
  && KEDITORTOP.RAONKEDITOR.browser.ie && "0"
  == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_typing_bug_in_table
  && (a = 12);
  return KEDITORTOP.RAONKEDITOR.browser.ie
  && KEDITORTOP.RAONKEDITOR.browser.ieVersion <= a ? "<p>&nbsp;</p>"
      : "<p><br /></p>"
}

function setCellDefValue(a) {
  KEDITORTOP.RAONKEDITOR.browser.ie && a && ("" == a.innerHTML || "<p></p>"
      == a.innerHTML) && (a.innerHTML = getCellDefValue())
}

function setTableAllCellDefValue(a) {
  if (KEDITORTOP.RAONKEDITOR.browser.ie) {
    var c = GetParentbyTagName(a, "table");
    if (c) {
      var b = a.cellIndex, d = GetParentbyTagName(a, "tr").cells;
      a = [];
      for (var e = c.rows.length, f = 0; f < e; f++) {
        c.rows[f]
        && c.rows[f].cells[b] && a.push(c.rows[f].cells[b]);
      }
      c = d.length;
      for (f = 0; f < c; f++) {
        setCellDefValue2(d[f]);
      }
      c = a.length;
      for (f = 0; f < c; f++) {
        setCellDefValue2(a[f])
      }
    }
  }
}

function setCellDefValue2(a) {
  RegExp("<p([^>?+]*)></p>", "gi").test(a.innerHTML);
  var c = ReplaceAll(a.innerHTML, RegExp.$1, "");
  if ("" != RegExp.$1 && "<p></p>" == c) {
    -1 < getCellDefValue().indexOf(
        "&nbsp;") ? a.innerHTML = "<p " + RegExp.$1 + ">&nbsp;</p>"
        : a.innerHTML = "<p " + RegExp.$1 + "><br /></p>";
  } else if (""
      == a.innerHTML || "<p></p>"
      == a.innerHTML) {
    a.innerHTML = getCellDefValue();
  }
  "1" == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO && (RegExp(
      "<p([^>?+]*)><br /></p>", "gi").test(c), c = ReplaceAll(a.innerHTML,
      RegExp.$1, ""), checkCellBRValue2(c) &&
  ("" != RegExp.$1 ? -1 < getCellDefValue().indexOf("&nbsp;")
      ? a.innerHTML = "<p " + RegExp.$1 + ">&nbsp;</p>" : a.innerHTML = "<p "
          + RegExp.$1 + "><br /></p>" : a.innerHTML = getCellDefValue()))
}

function createTableCellDefValue(a) {
  if (a && KEDITORTOP.RAONKEDITOR.browser.ie) {
    var c = GetParentbyTagName(a, "table");
    if (c) {
      for (var b = c.rows.length, d = 0; d < b;
          d++) {
        for (var e = c.rows[d], f = e.cells.length, g = 0; g < f; g++) {
          var h = e.cells[g];
          h != a && "" == h.innerHTML && (h.innerHTML = getCellDefValue())
        }
      }
    }
    3 == a.childNodes[0].nodeType ? a.innerHTML = "" : "" == a.innerHTML
        && (a.innerHTML = getCellDefValue())
  }
  return ""
}

function removeCellDefValue(a, c) {
  var b = "";
  if (a) {
    if (1 == c) {
      var d = b = a.innerHTML,
          b = b.replace(/<p *([^>?+])*>(\s+)*(&nbsp;+)*(\s+)*<\/p>/i, ""),
          d = d.replace(/<p *([^>?+])*>(<br *\/*>+)*<\/p>/i, ""),
          b = 1 == checkCellDefValue(a.innerHTML) || "" == a.innerHTML || ""
          == b
          || "" == d ? "" : a.innerHTML;
    } else {
      var e = GetParentbyTagName(a, "table");
      if (e) {
        for (var f = e.rows.length, d = 0; d < f;
            d++) {
          for (var g = e.rows[d], h = g.cells.length, m = 0; m < h; m++) {
            var q = g.cells[m], t = RegExp("<p([^>?+]*)></p>", "gi");
            t.test(q.innerHTML);
            t = ReplaceAll(q.innerHTML, RegExp.$1,
                "");
            if (q != a && ("<p></p>" == t || "" == t)) {
              if ("" != RegExp.$1) {
                -1
                < getCellDefValue().indexOf("&nbsp;") ? q.innerHTML = "<p "
                    + RegExp.$1
                    + ">&nbsp;</p>" : q.innerHTML = "<p " + RegExp.$1
                    + "><br /></p>";
              } else {
                var u;
                "0" == KEDITORTOP.G_CURRKEDITOR._config.setDefaultTagInEmptyCell
                && (u = getClientRect(q), u = u.bottom - u.top);
                q.innerHTML = getCellDefValue();
                "0" == KEDITORTOP.G_CURRKEDITOR._config.setDefaultTagInEmptyCell
                && (t = getClientRect(q), t = t.bottom - t.top, t > u
                && (q.innerHTML = ""))
              }
            }
          }
        }
      }
      if (0 < a.childNodes.length) {
        for (a && a.firstChild && "" == a.innerText &&
        "P" == a.firstChild.nodeName && 1 == a.firstChild.childNodes.length
        && "SPAN" == a.firstChild.firstChild.nodeName && ""
        == a.firstChild.firstChild.innerHTML
        && (a.firstChild.firstChild.innerHTML = KEDITORTOP.RAONKEDITOR.browser.ie
        && 10 >= KEDITORTOP.RAONKEDITOR.browser.ieVersion ? "&nbsp;"
            : "<br />"), e = a.childNodes.length, d = 0;
            d < e && 1 != a.childNodes[d].nodeType; d++) {
          ;
        }
      }
      200 > a.innerHTML.length && (t = RegExp("<p([^>?+]*)>&nbsp;</p>",
          "gi"), t.test(a.innerHTML), t = ReplaceAll(a.innerHTML, RegExp.$1,
          ""), 1 == checkCellDefValue(t) ? ("" != RegExp.$1 ?
          a.innerHTML = "<p " + RegExp.$1 + "></p>" : 0 == checkCellBRValue()
          && (a.innerHTML = "<p></p>"), "view"
      != KEDITORTOP.G_CURRKEDITOR._config.mode && moveCursorToTag(
          a.childNodes[0],
          !0), b = !0) : b = !1)
    }
  }
  return b
}

function setShiftTabkeyAction() {
  var a = getFirstRange().range;
  try {
    var c = null;
    a && a.startContainer && (c = getMyElementNode(a.startContainer));
    if (c) {
      var b = GetTDTHCell(c);
      if (null == b && "tr" == c.tagName.toLowerCase()) {
        var d = c.cells.length;
        0 < d && (b = c.cells[d - 1])
      }
      var d = !1, e = GetParentbyTagName(c, "li");
      if (e) {
        if (b) {
          for (var f = b.getElementsByTagName("li"), g = f.length,
              h = 0; h < g; h++) {
            if (e == f[h]) {
              d = !0;
              break
            }
          }
        } else {
          d = !0;
        }
      }
      var m = c.tagName.toLowerCase();
      if (-1 < ",li,ul,ol,".indexOf("," + m + ",") || d) {
        for (var q = getNodesInRange(a), c = [], t =
            q.length, h = 0; h < t; h++) {
          "1" == q[h].nodeType && "li"
          == q[h].tagName.toLowerCase() && c.push(q[h]);
        }
        for (var u = c.length, v = c[0], w = c[u - 1], q = !0, h = 0; h < u;
            h++) {
          var x = c[h], y = x.parentNode, z = x.nextSibling,
              A = x.previousSibling,
              B = A && A.tagName ? A.tagName.toLowerCase() : "",
              C = z && z.tagName ? z.tagName.toLowerCase() : "";
          if (!(0 > ",li,ul,ol,".indexOf(
              "," + y.parentNode.tagName.toLowerCase() + ","))) {
            if (z && A && (-1 < ",ul,ol,".indexOf("," + B + ",") || -1
                    < ",ul,ol,".indexOf("," + C + ",")) || !z && "li" == B || !A
                && "li" == C || "li" == B && "li" == C || !z && !A) {
              for (var D = document.createElement(x.parentNode.tagName);
                  x.previousSibling;) {
                D.childNodes ?
                    D.insertBefore(x.previousSibling, D.firstChild)
                    : D.appendChild(x.previousSibling);
              }
              for (var H = document.createElement(x.parentNode.tagName);
                  x.nextSibling;) {
                H.appendChild(x.nextSibling);
              }
              for (var G = y.attributes, I = G.length, t = 0; t < I; t++) {
                var M = G[t];
                M.specified && ("style" == M.name.toLowerCase()
                    ? (D.style.cssText = y.style.cssText, H.style.cssText = y.style.cssText)
                    : (D.setAttribute(M.name, M.value), H.setAttribute(M.name,
                        M.value)))
              }
              y.parentNode.insertBefore(H, y);
              H.parentNode.insertBefore(D, H);
              H.parentNode.insertBefore(x,
                  H);
              0 == H.childNodes.length && H.parentNode.removeChild(H);
              0 == D.childNodes.length && D.parentNode.removeChild(D)
            } else {
              !A && -1 < ",ul,ol,".indexOf(
                  "," + y.parentNode.tagName.toLowerCase() + ",")
                  ? y.parentNode.insertBefore(x, y) : !z && -1
                  < ",ul,ol,".indexOf(
                      "," + y.parentNode.tagName.toLowerCase() + ",")
                  && (y.nextSibling ? y.parentNode.insertBefore(x,
                          y.nextSibling)
                      : y.parentNode.appendChild(x));
            }
            1 == u && "" == x.innerText && (q = !1, doSetCaretPosition(x, 0));
            0 == y.childNodes.length && y.parentNode.removeChild(y)
          }
        }
        q && (a.setStartBefore(v.firstChild),
            a.setEndAfter(w.lastChild), rangy.getSelection(
            _iframeWin).removeAllRanges(), rangy.getSelection(
            _iframeWin).addRange(a));
        KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
        KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
      } else if (b && "1" != KEDITORTOP.G_CURRKEDITOR._config.disableTabletap) {
        var K = GetParentbyTagName(b, "tr");
        if (K) {
          var P = b.cellIndex, E = K.rowIndex;
          if (0 < P) {
            var L = K.cells[P - 1];
            if (L) {
              L.focus();
              removeCellDefValue(L, !1);
              var O = getFirstChildNodeForCaret(L);
              doSetCaretPosition(O, 0)
            }
          } else {
            var N = GetParentbyTagName(K,
                "table");
            if (N && (E = K.rowIndex, 0 < E)) {
              var F = N.rows[E - 1];
              F && (L = F.cells[F.cells.length - 1])
              && (L.focus(), removeCellDefValue(L,
                  !1), O = getFirstChildNodeForCaret(L), doSetCaretPosition(O,
                  0))
            }
          }
        }
      }
    }
  } catch (J) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(J)
  }
}

function setTabkeyAction() {
  try {
    var a = null, c = getFirstRange().range;
    c && c.startContainer && (a = getMyElementNode(c.startContainer));
    if (a) {
      var b = GetTDTHCell(a);
      if (null == b && "tr" == a.tagName.toLowerCase()) {
        var d = a.cells.length;
        0 < d && (b = a.cells[d - 1])
      }
      var d = !1, e = GetParentbyTagName(a, "li");
      if (e) {
        if (b) {
          for (var f = b.getElementsByTagName("li"), g = f.length,
              h = 0; h < g; h++) {
            if (e == f[h]) {
              d = !0;
              break
            }
          }
        } else {
          d = !0;
        }
      }
      var m = a.tagName.toLowerCase();
      if (-1 < ",li,ul,ol,".indexOf("," + m + ",") || d) {
        for (var q = getNodesInRange(c), a = [], t = q.length,
            h = 0; h < t; h++) {
          "1" == q[h].nodeType && "li"
          == q[h].tagName.toLowerCase() && a.push(q[h]);
        }
        for (var u = a.length, v, w, q = !0, h = 0; h < u; h++) {
          var x, y = a[h], z = y.previousSibling, A = y.nextSibling,
              B = z && z.tagName ? z.tagName.toLowerCase() : "",
              C = A && A.tagName ? A.tagName.toLowerCase() : "";
          if (!A && "li" == B || !z && "li" == C || "li" == B && "li" == C || !A
              && !z) {
            var D = y.parentNode.style.listStyleType.toLowerCase(),
                H = KEDITORTOP.G_CURRKEDITOR._config.olListStyleTypeSequence[D]
                    ? KEDITORTOP.G_CURRKEDITOR._config.olListStyleTypeSequence[D]
                    : "";
            "" == H
            && (H = KEDITORTOP.G_CURRKEDITOR._config.ulListStyleTypeSequence[D]
                ?
                KEDITORTOP.G_CURRKEDITOR._config.ulListStyleTypeSequence[D]
                : "upper-alpha");
            var G = document.createElement(y.parentNode.tagName);
            G.style.listStyleType = H;
            G.innerHTML = y.outerHTML;
            y.parentNode.replaceChild(G, y);
            x = G.firstChild
          } else {
            z && -1 < ",ul,ol,".indexOf("," + B + ",") ? (z.appendChild(
                y), x = z.lastChild) : A && -1 < ",ul,ol,".indexOf(
                    "," + C + ",")
                && (A.insertBefore(y, A.firstChild), x = A.firstChild);
          }
          0 == h && (v = x);
          if (h == u - 1) {
            w = x;
            var I = w.parentNode, M = I.nextSibling;
            if (M && M.tagName && M.tagName == I.tagName) {
              for (; M.childNodes[0];) {
                I.appendChild(M.childNodes[0]);
              }
              M.parentNode.removeChild(M)
            }
          }
          1 == u && "" == x.innerText && (q = !1, doSetCaretPosition(x, 0))
        }
        q && (c.setStartBefore(v.firstChild), c.setEndAfter(
            w.lastChild), rangy.getSelection(
            _iframeWin).removeAllRanges(), rangy.getSelection(
            _iframeWin).addRange(c));
        KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
        KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
      } else if (b && "1" != KEDITORTOP.G_CURRKEDITOR._config.disableTabletap) {
        var K = GetParentbyTagName(b, "tr");
        if (K) {
          var P = b.cellIndex, E = K.rowIndex;
          if (K.cells.length > P + 1) {
            var L = K.cells[P +
            1];
            if (L) {
              L.focus();
              removeCellDefValue(L, !1);
              var O = getFirstChildNodeForCaret(L);
              doSetCaretPosition(O, 0)
            }
          } else {
            var N = GetParentbyTagName(K, "table");
            if (N && (E = K.rowIndex, N.rows.length > E + 1)) {
              var F = N.rows[E + 1];
              F && (L = F.cells[0]) && (L.focus(), removeCellDefValue(L,
                  !1), O = getFirstChildNodeForCaret(L), doSetCaretPosition(O,
                  0))
            }
          }
        }
      } else {
        0 == GetTableSelectionCells().length && (pasteHtmlAtCaretMini(
            KEDITORTOP.G_CURRKEDITOR._config.tabSpace), KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount =
            0)
      }
    }
  } catch (J) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(J)
  }
}

function setTableArrowKeyDownAction(a) {
  G_CURSOR_BEFORE_INTABLE = !1;
  G_BEFORE_INTABLE = null;
  a = "which" in a ? a.which : a.keyCode;
  var c = getFirstRange().range;
  try {
    var b = null;
    c && (b = getMyElementNode(c.startContainer));
    if (b) {
      var d = GetTDTHCell(b);
      if (null == d && "tr" == b.tagName.toLowerCase()) {
        var e = b.cells.length;
        0 < e && (d = b.cells[e - 1])
      }
      if (d) {
        G_CURSOR_BEFORE_INTABLE = !0;
        G_BEFORE_INTABLE = GetParentbyTagName(d, "table");
        var f = GetParentbyTagName(d, "tr");
        if (f) {
          var g = f.cells[d.cellIndex], h = getTopOrBottomBoundNextCell(d, a);
          if (null !=
              h.nextCell) {
            var m = GetParentbyTagName(f, "table");
            if (m) {
              var q = m.rows[h.rowIndex];
              if (q) {
                var t = q.cells[h.cellIndex];
                t && 200 > t.innerHTML.length && ("" == ReplaceAll(t.innerHTML,
                    " ", "") || 1 == checkCellDefValue(t.innerHTML)) && 0
                == checkCellBRValue() && "1"
                != KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO
                && (t.innerHTML = "<p></p>")
              } else {
                setCellDefValue(g)
              }
            }
          } else {
            setCellDefValue(g)
          }
        }
      }
    }
  } catch (u) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(u)
  }
}

function setTableArrowKeyUpAction(a) {
  a = "which" in a ? a.which : a.keyCode;
  var c = getFirstRange().range;
  try {
    var b = null;
    c && (b = getMyElementNode(c.startContainer));
    if (b) {
      var d = GetTDTHCell(b);
      if (null == d && "tr" == b.tagName.toLowerCase()) {
        var e = b.cells.length;
        0 < e && (d = b.cells[e - 1])
      }
      if (d) {
        var f = GetParentbyTagName(d, "tr");
        if (f) {
          var g = f.cells[d.cellIndex];
          "1" == KEDITORTOP.G_CURRKEDITOR._config.setDefaultTagInEmptyCell
          && setTableAllCellDefValue(g);
          if (200 > g.innerHTML.length) {
            RegExp("<p([^>?+]*)>&nbsp;</p>", "gi").test(g.innerHTML);
            var h = ReplaceAll(g.innerHTML, RegExp.$1, "");
            if ("" == ReplaceAll(g.innerHTML, " ", "") || 1
                == checkCellDefValue(h) || h == "<p>" + unescape("%u200B")
                + "</p>") {
              KEDITORTOP.RAONKEDITOR.browser.ie && 11
              == KEDITORTOP.RAONKEDITOR.browser.ieVersion && "1"
              == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO && h
              == "<p>"
              + unescape("%u200b") + "</p>" && (g.innerHTML = "" != RegExp.$1
                  ? "<p " + RegExp.$1 + "></p>" : "<p></p>"), 0
              == checkCellBRValue() && (g.innerHTML = "" != RegExp.$1 ? "<p "
                  + RegExp.$1 + "></p>" : "<p></p>"), doSetCaretPosition(
                  g.childNodes[0], 0)
            }
          }
        }
      } else if (G_CURSOR_BEFORE_INTABLE &&
          "body" == b.tagName.toLowerCase() && (d = !0, 37 == a || 38 == a
              ? null == G_BEFORE_INTABLE.previousSibling && (d = !1) : 39 != a
              && 40 != a || null != G_BEFORE_INTABLE.nextSibling || (d = !1), 0
          == d)) {
        var m = _iframeDoc.createElement("p");
        m.innerHTML = getDefaultParagraphValue(!1);
        c.insertNode(m);
        doSetCaretPosition(m, 0)
      }
    }
  } catch (q) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(q)
  }
}

function getTopOrBottomBoundNextCell(a, c) {
  var b = {rowIndex: -1, cellIndex: -1, nextCell: null}, d;
  switch (c) {
    case 38:
      d = 1;
      break;
    case 39:
      d = 2;
      break;
    case 40:
      d = 3;
      break;
    case 37:
      d = 4;
      break;
    default:
      return b
  }
  try {
    var e = GetParentbyTagName(a, "tr");
    if (e) {
      var f = GetParentbyTagName(a, "table");
      if (f) {
        var g = f.rows.length, h = e.rowIndex, m = a.cellIndex,
            q = e.cells.length, t = 0;
        if ("" == f.style.borderCollapse || "separate"
            == f.style.borderCollapse) {
          var u = f.cellSpacing;
          1 < u && (t = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(u))
        }
        if (1 == d) {
          if (0 == h) {
            return b;
          }
          for (var v = h - 1; 0 <= v; v--) {
            for (var w = f.rows[v],
                x = w.cells.length, y = getClientRect(a), z = 0; z < x; z++) {
              var A = w.cells[z], B = getClientRect(A);
              if (isSameRect(y.top, B.bottom, t) && (y.left <= B.left && y.right
                  >= B.right || y.left >= B.left && y.right <= B.right && 1
                  < A.colSpan)) {
                var C = GetParentbyTagName(A, "tr");
                if (C) {
                  return b.rowIndex = C.rowIndex, b.cellIndex = A.cellIndex, b.nextCell = A, b
                }
              }
            }
          }
        } else if (2 == d) {
          if (m != q - 1 ? (b.rowIndex = h, b.cellIndex = m + 1)
              : (b.rowIndex = e.rowIndex + 1, b.cellIndex = 0), f
          && (w = f.rows[b.rowIndex])) {
            if (A = w.cells[b.cellIndex]) {
              return b.nextCell =
                  A, b
            }
          }
        } else if (3 == d) {
          if (g == h) {
            return b;
          }
          for (v = h + 1; v < g;
              v++) {
            for (w = f.rows[v], x = w.cells.length, y = getClientRect(
                a), z = 0; z < x; z++) {
              if (A = w.cells[z], B = getClientRect(
                  A), isSameRect(y.bottom, B.top, t) && (y.left <= B.left
                  && y.right
                  >= B.right || y.left >= B.left && y.right <= B.right && 1
                  < A.colSpan) && (C = GetParentbyTagName(A,
                  "tr"))) {
                return b.rowIndex = C.rowIndex, b.cellIndex = A.cellIndex, b.nextCell = A, b
              }
            }
          }
        } else if (4 == d) {
          if (0 != m) {
            if (b.rowIndex = h, b.cellIndex = m - 1, f
            && (w = f.rows[b.rowIndex])) {
              if (A = w.cells[b.cellIndex]) {
                return b.nextCell = A, b
              }
            }
          } else if (b.rowIndex =
              h - 1, f
          && (w = f.rows[b.rowIndex])) {
            return b.cellIndex = w.cells.length
                - 1, b.nextCell = w.cells[w.cells.length - 1], b
          }
        }
      }
    }
  } catch (D) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(D)
  }
  return b
}

function setArrowKeyAction(a) {
  return !1
}

function setDeleteKeyAction(a) {
  a = !1;
  try {
    for (var c = GetTableSelectionCells(), b = c.length, d = 0; d < b;
        d++) {
      c[d].innerHTML = getCellDefValue();
    }
    0 < b && (ClearDraggingTableCellSelected(), removeCellDefValue(c[0],
        !1), removeCellDefValue(c[b - 1], !1), doSetCaretPosition(
        c[0].childNodes[0], 0), KEDITORTOP.RAONKEDITOR.browser.ie && 11
    > KEDITORTOP.RAONKEDITOR.browser.ieVersion && "&nbsp;" == c[0].innerHTML
    && (c[0].innerHTML = ""), a = !0)
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
  return a
}

function getCopyCellData(a) {
  KEDITORTOP.RAONKEDITOR.G_COPIEDTABLE = null;
  KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA = null;
  a = !1;
  if (null != ActiveLastTable) {
    var c = CellSelectedCopy(ActiveLastTable);
    1 == c.selected
    && (KEDITORTOP.RAONKEDITOR.G_COPIEDTABLE = c.Table, KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA = c.cellValue, a = !0)
  }
  return a
}

function kEditorWriteLog(a, c) {
  void 0 == c && (c = !1);
  if (0 == KEDITORTOP.RAONKEDITOR.isRelease) {
    try {
      c ? parent.parent.document.getElementById("txtTestValue").value += a
          : parent.parent.document.getElementById("txtTestValue").value = a
    } catch (b) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(b)
    }
  }
}

function _editoriframe_BeforeUnload(a) {
  try {
    var c = getEditorFromUnloadEvent(a);
    if (c) {
      try {
        if ("html5" == c._config.runtimes && KEDITORTOP.window.localStorage) {
          var b = ALS.toString(), b = b.replace(/,/gi, ""),
              d = KEDITORTOP.window.localStorage[b];
          a = !1;
          if (null != d && void 0 != d && "" != d) {
            for (var e = d.split(","),
                f = e.length, g = 0; g < f; g++) {
              if (e[g] == c._config.productKey) {
                a = !0;
                break
              }
            }
          }
          if (null == d || void 0 == d || "" == d || !a) {
            KEDITORTOP.window.localStorage[b] = null == d || void 0 == d || ""
            == d ? c._config.productKey : d + "," + c._config.productKey;
            b = ___;
            -1 <
            b.indexOf("?") && (b = b.substring(0, b.indexOf("?")));
            var h = b.indexOf("//"), b = -1 < h ? b.substring(0,
                    b.substring(h + 2).indexOf("/") + (h + 2) + 1) : b.substring(0,
                    b.indexOf("/") + 1),
                m = KEDITORTOP.RAONKEDITOR.util.makeEncryptParamOld(
                    "ED" + c._config.unitAttributeDelimiter + b
                    + c._config.unitAttributeDelimiter + c._config.productKey);
            try {
              _C = "https:" != location.protocol ? C1.toString()
                  : C2.toString(), _C = _C.replace(/,/gi, ""), _C = _C + "?p="
                  + m, (new Image).src = _C
            } catch (q) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode &&
              console.log(q)
            }
          }
        }
      } catch (t) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(t)
      }
    }
  } catch (u) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(u)
  }
}

function _editoriframe_Unload(a) {
  try {
    var c = getEditorFromUnloadEvent(a);
    if (c) {
      if ("1" == c._config.keepEditorFromDOMChange) {
        var b = KEDITORTOP.RAONKEDITOR.IsEditorLoadedHashTable.getItem(c.ID);
        "undefined" != typeof b && "1" == b
        && KEDITORTOP.RAONKEDITOR.EditorContentsHashTable.setItem(c.ID,
            c._BODY.innerHTML)
      }
      if ("1" == c._config.autoDestroy.use) {
        try {
          KEDITORTOP.RAONKEDITOR.destroy(c)
        } catch (d) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(d)
        }
      }
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
    KEDITORTOP.RAONKEDITOR.logMode && console.log(e)
  }
}

function _editoriframe_Keyup(a) {
  var c = "which" in a ? a.which : a.keyCode,
      b = a.target ? a.target : a.srcElement, d = null,
      d = 9 != b.nodeType ? b.ownerDocument : b;
  if ((d = d.activeElement) && d.tagName && "body" != d.tagName.toLowerCase()
      && "html" != d.tagName.toLowerCase()) {
    var e = d.parentNode, f = d.tagName.toLowerCase(),
        e = e.tagName.toLowerCase();
    if (!("span" != e && "li" != e || "a" != f && "button" != f)) {
      if (13 == c) {
        f = d.id.split(":")[0];
        e = d.id.split(":")[1];
        void 0 == e && (e = f.replace("ue_" + KEDITORTOP.G_CURRKEDITOR.ID, ""));
        "1" == KEDITORTOP.G_CURRKEDITOR._config.tool_bar_grouping &&
        -1 < e.indexOf("tool_bar_grouping")
        && (KEDITORTOP.G_CURRKEDITOR.groupingBoxOpen = !0);
        var g = isMenuItemEnable(f, e);
        !g || "shortcut" == e && 1 == G_ShortCutClose
        || (KEDITORTOP.G_CURRKEDITOR._editorCommands(
            KEDITORTOP.G_CURRKEDITOR.ID,
            e), KEDITORTOP.RAONKEDITOR.util.cancelEvent(
            a), KEDITORTOP.RAONKEDITOR.util.stopEvent(a), G_ShortCutClose = !1)
      } else if (9 == c) {
        f = d.id.split(":")[0], e = d.id.split(":")[1], void 0
        == e && (e = f.replace("ue_" + KEDITORTOP.G_CURRKEDITOR.ID,
            "")), g = isMenuItemEnable(f, e), g || (a = moveNextMenu(f, e))
        && a.focus();
      } else if (39 == c) {
        if (f = d.id.split(":")[0], e = d.id.split(":")[1], void 0 == e
        && (e = f.replace("ue_" + KEDITORTOP.G_CURRKEDITOR.ID,
            "")), d = moveNextMenu(f, e)) {
          for (f = d.id.split(
              ":")[0], e = d.id.split(":")[1]; ;) {
            if (g = isMenuItemEnable(f, e)) {
              d.focus();
              break
            } else if (d = moveNextMenu(f, e)) {
              f = d.id.split(":")[0], e = d.id.split(
                  ":")[1];
            } else {
              break
            }
          }
        }
      } else if (37 == c && (f = d.id.split(":")[0], e = d.id.split(
          ":")[1], void 0 == e && (e = f.replace(
          "ue_" + KEDITORTOP.G_CURRKEDITOR.ID, "")), d = movePrevMenu(f,
          e))) {
        for (f = d.id.split(":")[0], e = d.id.split(":")[1]; ;) {
          if (g =
              isMenuItemEnable(f, e)) {
            d.focus();
            break
          } else if (d = movePrevMenu(f, e)) {
            f = d.id.split(":")[0], e = d.id.split(
                ":")[1];
          } else {
            break;
          }
        }
      }
    }
    if (27 == c && "1" == KEDITORTOP.G_CURRKEDITOR._config.tool_bar_grouping) {
      c = b;
      for (b = !1; "BODY" != c.tagName;) {
        if (-1 < c.id.indexOf(
            "keditor_div_tool_bar_grouping_box")) {
          b = !0;
          break
        } else {
          c = c.parentNode;
        }
      }
      b && (hideGroupingBox(), setTimeout(function () {
        setFocusToBody()
      }, 1))
    }
  }
}

function _editoriframe_Keydown(a) {
  var c = a.target || a.srcElement, b = "which" in a ? a.which : a.keyCode;
  try {
    var d = KEDITORTOP.G_CURRKEDITOR, e = d.getEditorMode();
    if (c && c.tagName && "textarea" == c.tagName.toLowerCase()) {
      if (13 == b) {
        var f = c.id;
        switch (f) {
          case "ue_" + d.ID + "zoom_text":
          case "txtara_" + d.ID + "font_family":
          case "txtara_" + d.ID + "font_size":
          case "txtara_" + d.ID + "line_height":
            KEDITORTOP.RAONKEDITOR.util.stopEvent(
                a), KEDITORTOP.RAONKEDITOR.util.cancelEvent(
                a), d.dextiframeKeydown = !0
        }
        switch (f) {
          case "ue_" + d.ID + "zoom_text":
            command_zoom(d.ID,
                d);
            break;
          case "txtara_" + d.ID + "font_family":
            d._kEditorFontFamily.click_func(d.ID, null, c.value);
            break;
          case "txtara_" + d.ID + "font_size":
            d._kEditorFontSize.click_func(d.ID, null, c.value);
            break;
          case "txtara_" + d.ID + "line_height":
            d._kEditorLineHeight.click_func(d.ID, null, c.value)
        }
      }
      return
    }
    if (8 == b && "design" == e) {
      KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
      return
    }
  } catch (g) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(g)
  }
  a.ctrlKey && !a.altKey && nextTabKeyAccess(a, b)
  && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
}

function nextTabKeyAccess(a, c) {
  var b = !1;
  try {
    var d = null;
    switch (c) {
      case 48:
        var e = KEDITORTOP.KEDITORDOC.getElementById(
            KEDITORTOP.G_CURRKEDITOR._config.nextTabElementId);
        e ? setTimeout(function () {
          e.focus()
        }, 0) : setFocusTopWindow();
        var f = getEditrFromEvent(a);
        f && (f._editorFrameHasFocus = !1);
        b = !0;
        break;
      case 49:
        d = getFirstCmdElementInBar(
            "keditor_tab_menu_" + KEDITORTOP.G_CURRKEDITOR.ID);
        b = !0;
        break;
      case 50:
        d = getFirstCmdElementInBar(
            "keditor_tab_tool1_" + KEDITORTOP.G_CURRKEDITOR.ID);
        b = !0;
        break;
      case 51:
        d = getFirstCmdElementInBar("keditor_tab_tool2_" +
            KEDITORTOP.G_CURRKEDITOR.ID);
        b = !0;
        break;
      case 52:
        setFocusToBody();
        b = !0;
        break;
      case 53:
        d = getFirstCmdElementInBar(
            "keditor_tab_status_" + KEDITORTOP.G_CURRKEDITOR.ID);
        b = !0;
        break;
      case 54:
        var g = document.getElementById(
                "keditor_topstatusbar_" + KEDITORTOP.G_CURRKEDITOR.ID),
            d = g && g.getElementsByTagName("a")[0] ? g.getElementsByTagName(
                "a")[0] : null, b = !0;
        break;
      case 123:
        KEDITORTOP.G_CURRKEDITOR._editorCommands(KEDITORTOP.G_CURRKEDITOR.ID,
            "shortcut");
        b = !0;
        break;
      case 66:
        if (f = getEditrFromEvent(a)) {
          f._editorCommands(f.ID,
              "bold"), b = !0;
        }
        break;
      case 73:
        if (f = getEditrFromEvent(a)) {
          f._editorCommands(f.ID, "italic"), b = !0;
        }
        break;
      case 85:
        if (f = getEditrFromEvent(a)) {
          a.shiftKey ? f._editorCommands(f.ID,
              "insert_row_up") : f._editorCommands(f.ID, "underline"), b = !0;
        }
        break;
      case 68:
        if (f = getEditrFromEvent(a)) {
          a.shiftKey ? f._editorCommands(f.ID,
              "insert_row_down") : f._editorCommands(f.ID,
              "strike_through"), b = !0;
        }
        break;
      case 76:
        if (f = getEditrFromEvent(a)) {
          a.shiftKey ? f._editorCommands(f.ID,
              "insert_column_left") : f._editorCommands(f.ID,
              "align_left"), b = !0;
        }
        break;
      case 69:
        if (f = getEditrFromEvent(a)) {
          f._editorCommands(f.ID,
              "align_center"), b = !0;
        }
        break;
      case 72:
        if (f = getEditrFromEvent(a)) {
          f._editorCommands(f.ID,
              "align_right"), b = !0;
        }
        break;
      case 75:
        if (f = getEditrFromEvent(a)) {
          f._editorCommands(f.ID,
              "hyperlink_property"), b = !0;
        }
        break;
      case 222:
        if (f = getEditrFromEvent(a)) {
          a.shiftKey ? f._editorCommands(f.ID,
              "superscript") : f._editorCommands(f.ID, "subscript"), b = !0;
        }
        break;
      case 221:
        (f = getEditrFromEvent(a)) && a.shiftKey && (f._editorCommands(f.ID,
            "table_indent"), b = !0);
        break;
      case 219:
        (f = getEditrFromEvent(a)) &&
        a.shiftKey && (f._editorCommands(f.ID, "table_outdent"), b = !0);
        break;
      case 70:
        (f = getEditrFromEvent(a)) && "1" == f._config.useFindReplaceShortcut
        && (f._editorCommands(f.ID, "replace"), b = !0);
        break;
      case 82:
        (f = getEditrFromEvent(a)) && a.shiftKey && (f._editorCommands(f.ID,
            "insert_column_right"), b = !0)
    }
    if (d) {
      var h = d.id.split(":")[0], m = d.id.split(":")[1];
      if (isMenuItemEnable(h, m)) {
        if (KEDITORTOP.RAONKEDITOR.browser.chrome) {
          try {
            window.focus()
          } catch (q) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(q)
          }
        }
        d.focus()
      } else {
        var t =
            moveNextMenu(h, m);
        if (t) {
          if (KEDITORTOP.RAONKEDITOR.browser.chrome) {
            try {
              window.focus()
            } catch (u) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(u)
            }
          }
          t.focus()
        }
      }
    }
  } catch (v) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(v)
  }
  return b
}

function isMenuItemEnable(a, c) {
  var b = !0, d = document.getElementById("keditor_span_" + a + c);
  d && (d = KEDITORTOP.RAONKEDITOR.util.getClass(d)) && -1 < d.indexOf("_off")
  && (b = !1);
  return b
}

function moveNextMenu(a, c) {
  var b = null, d = document.getElementById("keditor_span_" + a + c);
  if (d && d.nextSibling) {
    var d = d.nextSibling, e = "";
    d.tagName && (e = d.tagName.toLowerCase());
    "span" == e && 1 == d.childNodes.length && (d = d.nextSibling);
    if ("span" == e && 1 < d.childNodes.length
        && (b = d.childNodes[1], d = b.id.split(":")[1], !isMenuItemEnable(a,
            d))) {
      return moveNextMenu(a, d)
    }
  }
  return b
}

function movePrevMenu(a, c) {
  var b = null, d = document.getElementById("keditor_span_" + a + c);
  if (d && d.previousSibling) {
    var d = d.previousSibling, e = d.tagName.toLowerCase();
    "span" == e && 1 == d.childNodes.length && (d = d.previousSibling);
    if ("span" == e && 1 < d.childNodes.length
        && (b = d.childNodes[1], d = b.id.split(":")[1], !isMenuItemEnable(a,
            d))) {
      return movePrevMenu(a, d)
    }
  }
  return b
}

function getFirstCmdElementInBar(a) {
  var c = null;
  try {
    var b = document.getElementById(a), d = b.childNodes.length;
    for (a = 0; a < d; a++) {
      var e = b.childNodes[a];
      if (1 === e.nodeType && 0 < e.childNodes.length) {
        for (var f = e.childNodes.length, g = 0; g < f; g++) {
          var h = e.childNodes[g];
          if (1 === h.nodeType && ("a" == h.tagName.toLowerCase() || "button"
              == h.tagName.toLowerCase())) {
            c = h;
            break
          }
        }
        if (c) {
          break
        }
      }
    }
  } catch (m) {
    c = null
  }
  return c
}

function getImageAutoFitForPasteHtml(a) {
  var c = document.createElement("div");
  c.innerHTML = a;
  a = !1;
  1 == c.firstChild.nodeType && "IMG" == c.firstChild.tagName && 3
  == c.lastChild.nodeType && "|" == c.lastChild.nodeValue && 2
  == c.childNodes.length && (a = !0, c.removeChild(c.lastChild));
  for (var b = c.getElementsByTagName("img"), d = null, e = b.length, f = 0;
      f < e; f++) {
    var d = b[f], g = d.src,
        h = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d.style.width) + "^"
            + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d.style.height);
    if (0 < h.length) {
      var m = d.style.width.replace("px",
          "");
      "" == m && (m = d.width);
      var q = d.style.height.replace("px", "");
      "" == q && (q = d.height);
      m = m + "^" + q;
      a || m != h || (g = g + "?" + h, SetImageAutoFitSize(d, g))
    }
  }
  return a = c.innerHTML
}

function removeHistory(a) {
}

function set_view_mode_auto_height(a) {
  try {
    setTimeout(function () {
      var b = KEDITORTOP.G_CURRKEDITOR;
      a && (b = a);
      if (("1" == b._config.view_mode_auto_height || "1"
          == b._config.view_mode_auto_width) && "view" == b._config.mode) {
        var c = b._BODY, e = b._DOC.documentElement, f = b._config.style.height,
            g = b._config.style.width, h = 0;
        0 > f.indexOf("%") && (h = parseInt(f, 10));
        var m = 0;
        0 > g.indexOf("%") && (m = parseInt(g, 10));
        var q = 0, t = 0,
            q = KEDITORTOP.document.getElementById(b._config.holderID),
            t = getClientRect(q), u, v;
        void 0 == t.height ? u = q.offsetHeight :
            u = t.height;
        void 0 == t.width ? v = q.offsetWidth : v = t.width;
        u = Math.round(u);
        v = Math.round(v);
        if ("1" == b._config.view_mode_auto_height) {
          f = "";
          KEDITORTOP.RAONKEDITOR.browser.mobile
          && KEDITORTOP.RAONKEDITOR.browser.iOS
          && (f = c.style, c.style = "overflow:initial !important");
          q = Math.max(c.scrollHeight, c.offsetHeight, e.clientHeight,
              e.scrollHeight, e.offsetHeight);
          u > q && (q = u);
          KEDITORTOP.RAONKEDITOR.browser.mobile
          && KEDITORTOP.RAONKEDITOR.browser.iOS && (c.style = f);
          var w = document.body.offsetWidth < c.scrollWidth,
              x = document.body.offsetHeight <
                  c.scrollHeight;
          if (w || x) {
            q += 30
          }
        } else {
          q = h, -1 < f.indexOf("%") && (q = f);
        }
        if ("1" == b._config.view_mode_auto_width) {
          if (t = Math.max(c.scrollWidth, c.offsetWidth, e.clientWidth,
              e.scrollWidth, e.offsetWidth), w || x) {
            t += 10
          }
        } else {
          t = m, -1 < g.indexOf("%") && (t = g);
        }
        v > t && (t = v);
        KEDITORTOP.RAONKEDITOR.setSize(t, q, b.ID)
      }
    }, 250)
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
}

function getFontStyle(a, c) {
  var b, d = {fontFamily: "", fontSize: "", lineHeight: ""};
  c ? window.getComputedStyle ? b = window.getComputedStyle(a, "")
      : a.currentStyle && (b = a.currentStyle) : a.currentStyle
      ? b = a.currentStyle : window.getComputedStyle
      && (b = window.getComputedStyle(a, ""));
  d.fontFamily = getFontFamilyStyle(b.fontFamily);
  d.fontSize = getFontSizeStyle(b.fontSize, b.lineHeight);
  d.lineHeight = getLineHeightStyle(d.fontSize, b.lineHeight, a);
  return d
}

function getFontFamilyStyle(a) {
  0 < a.length && (a = a.replace(/"/gi, ""), a = a.replace(/'/gi,
      ""), a = a.split(",")[0]);
  return a
}

function getFontSizeStyle(a, c) {
  var b, d = "pt";
  try {
    -1
    < KEDITORTOP.G_CURRKEDITOR._kEditorFontSize._fontSize[KEDITORTOP.G_CURRKEDITOR.ID][0].indexOf(
        "px") && (d = "px")
  } catch (e) {
    -1 < KEDITORTOP.G_CURRKEDITOR._config.defaultFontSize.indexOf("px")
    && (d = "px")
  }
  -1 < a.indexOf("px") ? "pt" == d ? (b = .75 * parseFloat(a), b = Math.round(
      10 * b) / 10 + "pt") : "px" == d && (b = a) : -1 < a.indexOf("pt") ? "pt"
  == d ? b = a : "px" == d && (b = parseFloat(a) * (4 / 3), b = Math.round(
      10 * b) / 10 + "px") : -1 < a.indexOf("em") ? "pt" == d ? -1 < c.indexOf(
      "px") ? (b = .75 * parseFloat(c), b *= parseFloat(a),
      b = Math.round(10 * b) / 10 + "pt") : -1 < c.indexOf("pt")
      ? (b = parseFloat(c) * parseFloat(a), b = Math.round(10 * b) / 10 + "pt")
      : b = "" : "px" == d && (-1 < c.indexOf("px") ? (b = parseFloat(c)
      * parseFloat(a), b = Math.round(10 * b) / 10 + "px") : -1 < c.indexOf(
      "pt") ? (b = parseFloat(c) * (4 / 3), b *= parseFloat(a), b = Math.round(
      10 * b) / 10 + "px") : b = "") : b = "";
  return b
}

function getLineHeightStyle(a, c, b) {
  if (!KEDITORTOP.RAONKEDITOR.browser.ie) {
    if (1 == b.nodeType && 0
        > ",p,li,dt,dd,h1,h2,h3,h4,h5,h6,pre,table,hr,blockquote,address,body,td,th,div,".indexOf(
            "," + b.nodeName.toLowerCase() + ",")) {
      for (; 0
      > ",p,li,dt,dd,h1,h2,h3,h4,h5,h6,pre,table,hr,blockquote,address,body,td,th,div,".indexOf(
          "," + b.nodeName.toLowerCase() + ",");) {
        b = b.parentNode;
      }
    }
    b.currentStyle ? compStyle = b.currentStyle : window.getComputedStyle
        && (compStyle = window.getComputedStyle(b, ""));
    a = compStyle.fontSize;
    c = compStyle.lineHeight
  }
  var d =
      !0, e = KEDITORTOP.G_CURRKEDITOR._config.lineHeightList[0];
  e && 0 > e.indexOf("%") && (d = !1);
  e = c;
  -1 < c.indexOf("px") ? (e = parseFloat(a), c = parseFloat(c), -1 < a.indexOf(
      "pt") && (e = 96 * e / 72), c = Math.round(c / e * 10) / 10, e = d
      ? parseInt(100 * c, 10) + "%" : c) : -1 < c.indexOf("pt")
      ? (e = parseFloat(a), c = parseFloat(c), -1 < a.indexOf("pt") && (e = 96
          * e / 72), c = 96 * c / 72 / e, c = Math.round(10 * c) / 10, e = d
          ? parseInt(100 * c, 10) + "%" : c) : -1 < c.indexOf("normal") || -1
      < c.indexOf("inherit") ? e = c : "1"
      != KEDITORTOP.G_CURRKEDITOR._config.lineHeightMode ? e = -1 < c.indexOf(
          "%") ? d ?
          c : parseInt(c, 10) / 100 : d ? parseInt(100 * c, 10) + "%" : c : d
          && (e = Math.round(100 * parseFloat(c)) + "%");
  b = b.tagName.toLowerCase();
  if ("h1" == b || "h2" == b || "h3" == b || "h4" == b || "h5" == b || "h6" == b
      || "" == a) {
    e = "";
  }
  return e
}

function setAutoSave(a, c, b) {
  try {
    var d = a._setting.auto_save.toString().split(",");
    a._setting.auto_save_fn && KEDITORTOP.KEDITORWIN.clearInterval(
        a._setting.auto_save_fn);
    if ("1" == d[0]) {
      KEDITORTOP.KEDITORWIN.localStorage["keditor_" + a.ID
      + "_auto_save"] = d[1];
      var e = a._config.setAutoSave.use_encrypt,
          f = a._config.setAutoSave.unique_key, g = "keditor_" + a.ID;
      "" != f && (g += "_" + f);
      if (c) {
        var h = KEDITORTOP.KEDITORWIN.localStorage["keditor_" + a.ID];
        null != h && void 0 != h && "" == f
        && (KEDITORTOP.RAONKEDITOR.util.saveJsonToLocalStorage(g +
            "_0", {
          date: a._DOC.lastModified,
          html: h
        }), KEDITORTOP.KEDITORWIN.localStorage.removeItem("keditor_" + a.ID))
      }
      localSaveValue(g, e, a._config.setAutoSave.maxCount);
      a._setting.auto_save_fn = fn_AutoSaveInterval(a);
      1 == b && KEDITORTOP.RAONKEDITOR.manuallyTempSave(a.ID);
      var m = KEDITORTOP.KEDITORWIN.localStorage[g + "_0"];
      null != m && void 0 != m && autoSaveEnable(a.ID)
    } else {
      "2" == d[0] && (KEDITORTOP.KEDITORWIN.localStorage.removeItem(
          "keditor_" + a.ID
          + "_auto_save"), KEDITORTOP.KEDITORWIN.localStorage.removeItem(
          "keditor_" + a.ID), a._iconEnable(""))
    }
  } catch (q) {
    KEDITORTOP &&
    KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(q)
  }
}

function getAutoSaveHtml(a) {
  var c = void 0;
  try {
    c = KEDITORTOP.KEDITORWIN.localStorage["keditor_" + a]
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
  return c
}

function getAutoSaveHtml_userID(a, c, b) {
  var d = void 0, e = [], f, g = {}, h = "keditor_" + a;
  "" != c && null != c && void 0 != c && (h += "_" + c);
  try {
    for (c = 0; c < parseIntOr0(b);
        c++) {
      if (d = KEDITORTOP.RAONKEDITOR.util.loadJsonFromLocalStorage(
          h + "_" + c), null != d && void 0 != d) {
        var m = d.html.toLowerCase().indexOf("<html");
        -1 < m ? f = d.html : 0 > m
            && (f = KEDITORTOP.RAONKEDITOR.util.makeDecryptReponseMessage(
                d.html));
        g = {date: d.date, html: f, id: a};
        e.push(g)
      }
    }
  } catch (q) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(q)
  }
  return 0 <
  e.length ? e : d
}

function getAutoSave(a) {
  try {
    var c = KEDITORTOP.KEDITORWIN.localStorage["keditor_" + a.ID
    + "_auto_save"];
    return c ? "1," + c : "2"
  } catch (b) {
    return "0"
  }
}

function _iframeDoc_Scroll(a) {
  setKEDITORWINDOC();
  try {
    if (KEDITORTOP.G_CURRKEDITOR.isStopScroll) {
      var c = Math.max(_iframeDoc.documentElement.scrollLeft,
          _iframeDoc.body.scrollLeft);
      _iframeWin.scroll(c, KEDITORTOP.G_CURRKEDITOR.previousScrollTop);
      KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
      KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
      return !1
    }
    KEDITORTOP.RAONKEDITOR.browser.ie
    && (KEDITORTOP.G_CURRKEDITOR.previousScrollTop = Math.max(
        _iframeDoc.documentElement.scrollTop, _iframeDoc.body.scrollTop))
  } catch (b) {
    KEDITORTOP &&
    KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(b)
  }
  if (getApplyDragResize(
      KEDITORTOP.G_CURRKEDITOR)) {
    if (KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResizeDiv) {
      var c = getElementOffset(_iframeWin.frameElement), d = getClientRect(
          KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem);
      KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResizeDiv.style.left = c.left
          + d.left
          - KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResizeDivBorder
          + "px";
      KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResizeDiv.style.top =
          c.top + d.top
          - KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResizeDivBorder
          + "px";
      KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.setDragResizeDivSize(
          KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResizeDiv);
      KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.setHandlePosition()
    } else {
      null != KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
      && KEDITORTOP.RAONKEDITOR.browser.ie && 8
      >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
      && (KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_ResizeHandlerActivatedFlag = !0), KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.resizeHandleClear();
    }
  }
  moveRulerPosition(a);
  "1" == KEDITORTOP.G_CURRKEDITOR._config.clickCtrlHyperlink
  && KEDITORTOP.G_CURRKEDITOR.isAOver.over
  && (KEDITORTOP.G_CURRKEDITOR.isAOver.node
      || KEDITORTOP.G_CURRKEDITOR.isAOver.nodeChild)
  && KEDITORTOP.G_CURRKEDITOR.isAOver.openHelp && hyperHelpClose();
  if (1
      == KEDITORTOP.G_CURRKEDITOR.preventScrollMove.use) {
    return _iframeDoc.documentElement.scrollTop = KEDITORTOP.G_CURRKEDITOR.preventScrollMove.beforeTop, _iframeDoc.documentElement.scrollLeft = KEDITORTOP.G_CURRKEDITOR.preventScrollMove.beforeLeft,
        KEDITORTOP.RAONKEDITOR.util.cancelEvent(
            a), KEDITORTOP.RAONKEDITOR.util.stopEvent(a), !1
  }
}

function moveRulerPosition(a) {
  var c = getEditrFromEvent(a);
  if (null == c || void 0 == c) {
    c = KEDITORTOP.G_CURRKEDITOR;
  }
  set_horizontal_line_2(c, a);
  if (G_Ruler && G_Ruler.viewRulerStatus && "view" != c._config.mode) {
    getEditorFrameDoc(c);
    var b = G_Ruler.rulerArea;
    if (b && "none" != b.style.display || "1"
        == c._config.ruler.viewGuideLine) {
      var d, e;
      "preview" == c.getEditorMode()
          ? (d = c._EDITOR.preview.contentWindow.document.documentElement, e = c._EDITOR.preview.contentWindow.document.body)
          : (d = c._DOC.documentElement, e = c._BODY);
      var f = b.style.backgroundPosition,
          g = b.style.backgroundPosition.indexOf("px"),
          f = -1 < g ? parseInt(f.substring(0, g), 10) : 0;
      d = d.scrollLeft || e.scrollLeft || 0;
      f != d && (b.style.backgroundPosition = "-" + d
          + "px top", G_Ruler.SetRulerPosition())
    }
    set_ruler_vertical_height(c, a)
  }
}

function set_ruler_horizontal_width(a, c) {
  if (G_Ruler && G_Ruler.viewRulerStatus && ("design" == a._currentMode
      || "preview" == a._currentMode)) {
    var b = getEditorFrameDoc(a), d, e,
        f = b.getElementById("keditor_ruler_horizontal_scroll_" + a.ID);
    if (null != f) {
      "preview" == a.getEditorMode()
          ? (d = a._EDITOR.preview.contentWindow.document.documentElement, e = a._EDITOR.preview.contentWindow.document.body)
          : (d = _iframeDoc.documentElement, e = _iframeDoc.body);
      var g = getClientRect(e);
      if (0 != g.top || 0 != g.right || 0 != g.bottom || 0 != g.left) {
        d = d.scrollLeft ||
            e.scrollLeft || 0;
        for (var h = b.getElementById("h_plus_ruler_area"),
            m = h.childNodes.length,
            q = (a._BODY.scrollWidth > parseIntOr0(getCurrEditorWidth())
                ? a._BODY.scrollWidth : parseIntOr0(getCurrEditorWidth())) / 50;
            m <= q + 1; m++) {
          var t = b.createElement("div");
          t.className = "ruler_horizontal_num";
          t.innerHTML = "<span>" + 50 * m + "</span>";
          h.appendChild(t)
        }
        h = b.getElementById("h_minus_ruler_area");
        t = h.childNodes.length;
        m = t + 1;
        G_Ruler.hRuler0PositionLeft = g.left + d
            + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                KEDITORTOP.RAONKEDITOR.util.getStyle(e,
                    "padding"));
        for (e = Math.ceil(1 * G_Ruler.hRuler0PositionLeft / 50); m <= e;
            m++) {
          t = b.createElement(
              "div"), t.className = "ruler_horizontal_num", t.innerHTML = "<span>"
              + -50 * m + "</span>", h.hasChildNodes() ? h.insertBefore(t,
              h.firstChild) : h.appendChild(t);
        }
        t = h.childNodes.length;
        f.style.left = -1 * (d + (50 * t - G_Ruler.hRuler0PositionLeft)) + "px"
      }
    }
  }
}

function set_ruler_point_position(a) {
  if ("1" == a._config.ruler.mode && "1"
      == a._config.ruler.viewPointer) {
    for (var c = getEditorFrameDoc(a),
        b = G_Ruler.rulerPositionArr, d = G_Ruler.rulerPositionLen, e = 0;
        e < d;
        e++) {
      var f = c.getElementById("keditor_ruler_point_" + e + "_" + a.ID);
      f && (position = G_Ruler.GetLeftPosition(f,
          b[e]), f.style.marginLeft = position + "px", f.style.display = 0
      == position ? "none" : "")
    }
  }
}

function set_ruler_pointline_position(a) {
  if ("1" == a._config.ruler.viewGuideLine) {
    for (var c = getEditorFrameDoc(a),
        b = G_Ruler.rulerPositionArr, d = G_Ruler.rulerPositionLen, e = 0;
        e < d;
        e++) {
      var f = 0, g = 0,
          h = c.getElementById("keditor_ruler_point_" + e + "_" + a.ID);
      h && (f = parseIntOr0(h.style.width), g = G_Ruler.GetLeftPosition(h,
          b[e]));
      if (h = c.getElementById(
          "keditor_ruler_pointline_" + e + "_" + a.ID)) {
        h.style.left = g + f / 2
            + "px", 0 == g ? h.style.display = "none" : "1"
            == a._config.ruler.viewGuideLine && "1"
            == a._config.ruler.defaultView
            && (h.style.display =
                "")
      }
    }
  }
}

function set_ruler_vertical_height(a, c) {
  if (G_Ruler && G_Ruler.viewRulerStatus && "1" == a._config.ruler.useVertical
      && "view" != a._config.mode && ("design" == a._currentMode || "preview"
          == a._currentMode)) {
    var b = getEditorFrameDoc(a), d, e,
        f = b.getElementById("keditor_ruler_vertical_scroll_" + a.ID);
    if (null != f) {
      "design" == a._currentMode ? (d = a._DOC.documentElement, e = a._BODY)
          : "preview" == a._currentMode
          && (e = a._EDITOR.preview.contentWindow.document, d = e.documentElement, e = e.body);
      var g = getClientRect(e);
      if (0 == g.top && 0 == g.right && 0 ==
          g.bottom && 0 == g.left) {
        return;
      }
      d = d.scrollTop;
      0 == d && (d = e.scrollTop);
      for (var h = b.getElementById("v_plus_ruler_area"),
          m = h.childNodes.length,
          q = (a._BODY.scrollHeight > a._defaultHeight ? a._BODY.scrollHeight
              : a._defaultHeight) / 50; m <= q + 1; m++) {
        var t = b.createElement("div");
        t.className = "ruler_vertical_num";
        t.innerText = 50 * m;
        h.appendChild(t)
      }
      h = b.getElementById("v_minus_ruler_area");
      t = h.childNodes.length;
      m = t + 1;
      G_Ruler.vRuler0PositionTop = g.top + d
          + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              KEDITORTOP.RAONKEDITOR.util.getStyle(e,
                  "padding"));
      for (e = Math.ceil(1 * G_Ruler.vRuler0PositionTop / 50); m <= e;
          m++) {
        t = b.createElement(
            "div"), t.className = "ruler_vertical_num", t.innerHTML = "<span>"
            + -50 * m + "</span>", h.hasChildNodes() ? h.insertBefore(t,
            h.firstChild) : h.appendChild(t);
      }
      t = h.childNodes.length;
      f.style.top = -1 * (d + (50 * t - G_Ruler.vRuler0PositionTop)) + "px"
    }
    if ("2" == a._config.ruler.mode) {
      e = f = "0px";
      e = {top: 0, bottom: 0};
      try {
        if (null != G_CURSOR_ELEMENT) {
          var u = GetParentbyTagName(G_CURSOR_ELEMENT, "p");
          null != u && (e = u.getBoundingClientRect())
        }
      } catch (v) {
        KEDITORTOP &&
        KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(
            v)
      }
      f = (0 < e.top ? e.top : 0) + "px";
      e = (0 < e.bottom ? e.bottom : 0) + "px";
      u = b.getElementById("keditor_ruler_vertical_area_0_" + a.ID);
      null != u && (u.style.height = f);
      u = b.getElementById("keditor_ruler_vertical_area_1_" + a.ID);
      null != u && (u.style.top = e)
    }
    "undefined" == typeof c && (u = b.getElementById(
        "keditor_ruler_vertical_" + a.ID), null != u
    && (u.style.height = a._defaultHeight + "px"), u = b.getElementById(
        "ue_editor_holder_" + a.ID), null != u && (u.style.marginLeft = "1"
    == a._config.ruler.view ?
        "18px" : "0px"), u = b.getElementById("keditor_tab_tool3_" + a.ID), null
    != u
    && (u.style.left = "17px", u.style.borderLeft = "1px solid #b8babc"), "2"
    == a._config.ruler.mode && (u = b.getElementById(
        "keditor_tab_tool4_" + a.ID), f = u.getElementsByTagName("div"), null
    != f
        ? (f[1].style.left = "17px", f[1].style.borderLeft = "1px solid #b8babc")
        : null != u
        && (u.style.left = "17px", u.style.borderLeft = "1px solid #b8babc")), u = b.getElementById(
        "keditor_ruler_pointline_0_" + a.ID), null != u
    && (u.style.marginLeft = "18px"), u = b.getElementById(
        "keditor_ruler_pointline_1_" +
        a.ID), null != u && (u.style.marginLeft = "18px"), u = b.getElementById(
        "keditor_ruler_pointline_2_" + a.ID), null != u
    && (u.style.marginLeft = "18px"), u = b.getElementById(
        "keditor_ruler_pointline_3_" + a.ID), null != u
    && (u.style.marginLeft = "18px"), u = b.getElementById(
        "keditor_ruler_pointline_4_" + a.ID), null != u
    && (u.style.marginLeft = "18px"), b = b.getElementById(
        "keditor_horizontal_line_" + a.ID), null != b
    && (b.style.marginLeft = "1" == a._config.ruler.view ? "18px" : "0px"))
  }
}

function set_ruler_mouse_guide(a, c) {
  if (G_Ruler && G_Ruler.viewRulerStatus && "1"
      == a._config.ruler.useMouseGuide) {
    var b = getEditorFrameDoc(a).getElementById(
        "keditor_ruler_mouse_guide_" + a.ID);
    null != b && (b.style.left = c.clientX + "px")
  }
}

function set_horizontal_line_2(a) {
  if ("2" == a._config.horizontalLine.use && "view" != a._config.mode) {
    var c = getEditorFrameDoc(a),
        b = c.getElementById("keditor_horizontal_line_" + a.ID);
    null == b && (b = document.createElement(
        "div"), b.id = "keditor_horizontal_line_" + a.ID, (c = c.getElementById(
        "ue_editor_holder_" + a.ID)) && c.parentNode.insertBefore(b, c));
    if (null != b) {
      var c = 1 * a._config.horizontalLine.height, d;
      d = "preview" == a._currentMode ? getWindowClientSize(
          a._EDITOR.preview.contentWindow) : getWindowClientSize(
          a._FRAMEWIN._iframeWin);
      var e = d[0];
      KEDITORTOP.RAONKEDITOR.browser.ie && 9
      > KEDITORTOP.RAONKEDITOR.browser.ieVersion
      && (e = a._FRAMEWIN._iframeWin.frameElement.clientWidth);
      d = d[1];
      var f = !1, g = d / c, h = 0;
      "design" == a._currentMode ? (h = a._DOC.documentElement.scrollTop, 0 == h
      && (h = a._BODY.scrollTop), f = d < a._BODY.scrollHeight) : "preview"
          == a._currentMode
          && (f = a._EDITOR.preview.contentWindow.document, h = f.documentElement.scrollTop, 0
          == h && (h = f.body.scrollTop), f = d < f.body.scrollHeight);
      for (var m = b.childNodes; b.firstChild;) {
        b.removeChild(b.firstChild);
      }
      for (var q = 0; q < g; q++) {
        var t;
        m[q] ? t = m[q] : (t = document.createElement(
            "div"), t.className = "horizontal_line_2", ""
        != a._config.horizontalLine.style
        && (t.style.borderBottom = a._config.horizontalLine.style), b.appendChild(
            t));
        var u = c * (q + 1) - h % c;
        d >= u ? t.style.marginTop = u + "px" : (t.style.marginTop = u + 30
            + "px", u += 30);
        t.style.width = f ? e - 16 + "px" : "";
        if ("0" == a._config.horizontalLine.repeat) {
          u + h != KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              a._config.horizontalLine.height) ? t.style.display = "none"
              : t.style.display = "";
          break
        }
      }
    }
  }
}

function changeSpanPageBreakProperty(a) {
  var c = function (a) {
    for (var b = a.length, c = 0; c < b; c++) {
      var g = a[c];
      if ("always" == g.style.pageBreakAfter || "page"
          == g.style.breakAfter) {
        g.getElementsByTagName(
            "span")[0].innerText = "", g.style.borderStyle = "none", g.style.borderWidth = "0px"
      }
    }
  }, b = a.getElementsByTagName("span");
  a = a.getElementsByTagName("div");
  c(b);
  c(a)
}

function restoreSpanPageBreakProperty(a) {
  a = a.getElementsByTagName("span");
  for (var c = a.length, b = 0; b < c; b++) {
    var d = a[b];
    "always" == d.style.pageBreakAfter && (d.getElementsByTagName(
        "span")[0].innerText = RAONKEditor_lang.icon.pagebreak, d.style.borderColor = "red", d.style.borderStyle = "dashed", d.style.borderWidth = "1px")
  }
}

function setLineHeightForBgColor() {
  if (KEDITORTOP.RAONKEDITOR.browser.ie && 8
      < KEDITORTOP.RAONKEDITOR.browser.ieVersion && 11
      >= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
    try {
      var a = getFirstRange().range, c = getMyElementNode(a.startContainer);
      if ("SPAN" == c.tagName && ("" != c.style.color || ""
          != c.style.backgroundColor)) {
        for (var b, a = c; "BODY" != a.parentNode.tagName;) {
          if ("P"
              == a.parentNode.tagName) {
            b = a;
            break
          } else {
            a = a.parentNode;
          }
        }
        currLineHeight = getFontStyle(c).lineHeight;
        var d = KEDITORTOP.G_CURRKEDITOR._setting.line_height,
            a = !1;
        if ("" == currLineHeight) {
          a = !0;
        } else {
          var e = currLineHeight.indexOf("%");
          if (-1 < e) {
            var f = parseInt(currLineHeight, 10);
            currLineHeight = f /= 100
          }
          e = d.indexOf("%");
          -1 < e && (f = parseInt(d, 10), d = f / 100)
        }
        currLineHeight == d && (a = !0);
        var g;
        1 == a && (g = 1 * currLineHeight + .01);
        g && b && "SPAN" == b.tagName && a && (b.style.lineHeight = g, b != c
        && (c.style.lineHeight = currLineHeight))
      }
    } catch (h) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(h)
    }
  }
}

function isMsHtmlorHugeHtml(a) {
  var c = !0;
  return 11 > KEDITORTOP.RAONKEDITOR.browser.ieVersion ? c : c = RegExp(
      'mso-[^:]+:[^;">]+;', "gi").test(a.innerHTML)
}

function setEditorBorder(a) {
  for (var c = a._config.style.skinName, b = [],
      d = document.getElementById("keditor_menu_" + a.ID),
      c = getElementsByClass("ue_tg_" + c, document)[0],
      e = document.getElementById("keditor_toolbar_" + a.ID),
      f = document.getElementById("ue_editor_holder_" + a.ID),
      g = document.getElementById("keditor_statusbar_" + a.ID),
      f = [d, e, f, g], g = f.length, d = 0; d < g; d++) {
    null != f[d] && "none"
    != f[d].style.display && (f[d] == e ? b.push(c) : b.push(f[d]));
  }
  c = b.length;
  for (d = 0; d < c; d++) {
    "0px" == b[d].style.borderTopWidth
    && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(b[d],
        "border-top-width"), "0px" == b[d].style.borderBottomWidth
    && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(b[d],
        "border-bottom-width"), "1" == a._config.editorborder
        ? (KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(b[d],
            "border-top-width"), KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(
            b[d],
            "border-right-width"), KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(
            b[d],
            "border-bottom-width"), KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(
            b[d], "border-left-width")) : (0 == d
        && (b[d].style.borderTopWidth = "0px"),
        d == c - 1
        && (b[d].style.borderBottomWidth = "0px"), b[d].style.borderRightWidth = "0px", b[d].style.borderLeftWidth = "0px");
  }
  "0" != a._config.top_status_bar || isViewMode(a)
  || (b[0].style.borderTopWidth = "0px")
}

function getDefaultParagraphValue(a) {
  var c = "";
  return c = KEDITORTOP.RAONKEDITOR.browser.ie && 11
  > KEDITORTOP.RAONKEDITOR.browser.ieVersion ? a ? "<p>&nbsp;</p>" : "&nbsp;"
      : a ? "<p><br /></p>" : "<br />"
}

function repairBodyFirstLastTag(a) {
  try {
    if (0 != KEDITORTOP.G_CURRKEDITOR._config.editorBodyEditable) {
      var c = _iframeDoc.body.childNodes, b = c.length, d = !1, e, f;
      if (0 == b.length) {
        d = !0;
      } else {
        f = c[0];
        e = c[b - 1];
        if (1 == a && 1 == f.nodeType && ("table" == f.tagName.toLowerCase()
            || "blockquote" == f.tagName.toLowerCase())) {
          insertPtagTableNear(!0, f);
          KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
          KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
          return
        }
        if (1 != e.nodeType || "p" != e.tagName.toLowerCase()) {
          d = !0;
        }
        if (1 == e.nodeType && "p" == e.tagName.toLowerCase()) {
          var g =
              e.childNodes, h = g.length;
          "" == e.innerText && 0 < h && 1 == g[h - 1].nodeType && ("img" == g[h
          - 1].tagName.toLowerCase() || "table" == g[h
          - 1].tagName.toLowerCase()) && (d = !0)
        }
      }
      if (d) {
        var m = _iframeDoc.createElement("p");
        KEDITORTOP.RAONKEDITOR.browser.ie && 11
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
        || (m.innerHTML = getDefaultParagraphValue(!1));
        _iframeDoc.body.appendChild(m)
      }
    }
  } catch (q) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(q)
  }
}

function OfficePasteClean(a) {
  var c = a;
  try {
    a = ReplaceAll(a, unescape("%uFEFF"), "");
    a = ReplaceAll(a, unescape("%u200B"), "");
    a = a.replace(/\r\n/g, "");
    a = a.replace(/\r/g, "");
    a = removeDummyTag(a);
    if ("1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager && 5
        == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType || "HWP"
        == G_wordProcessorType) {
      a = a.replace(/<p[^>]*><\/p>/gi,
          ""), a = a.replace(/(<p[^>]*>)<span[^>]*> <\/span>(<\/p>)/gi,
          "$1<br>$2");
    }
    var b = RegExp("<span *([^>?+])*>(\\n)</span>", "gi"),
        d = RegExp("<span *([^>?+])*>(\\n)<span",
            "gi"), e = a, f = !1;
    try {
      var g = a.match(b);
      if (g) {
        for (var h = g.length, m = 0; m < h; m++) {
          var q = g[m],
              t = />\n</.exec(q), u = t[0].replace(RegExp("\\n", "gi"), " "),
              q = q.replace(t, u), e = e.replace(g[m], q);
        }
      }
      if (g = a.match(d)) {
        for (h = g.length, m = 0; m < h;
            m++) {
          q = g[m], t = />\n</.exec(q), u = t[0].replace(
              RegExp("\\n", "gi"), " "), q = q.replace(t, u), e = e.replace(
              g[m],
              q)
        }
      }
    } catch (v) {
      f = !0
    }
    f || (a = e);
    a = a.replace(/>\n+</g, "><");
    a = a.replace(/\t/g, "");
    a = -1 < a.indexOf("<") ? a.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
        : a.replace(/^[\xa0]+|[\xa0]+$/g, "");
    a = a.replace(/<font/gi,
        '<span raonk_fonttag="true"');
    a = a.replace(/<\/font/gi, "</span");
    d = "(<span[^>]*?raon_placeholder.*?>)(?:\\s|<br>|<br />|  | |)</span>";
    b = new RegExp(d, "gim");
    a = a.replace(b, "$1" + unescape("%u200B") + "</span>");
    if (KEDITORTOP.RAONKEDITOR.browser.ie) {
      a = ReplaceAll(a, unescape("%u3000"), "");
      d = "<font[^>]*>(?:\\s|&nbsp;|  |)</font>";
      a = a.replace(new RegExp(d, "gim"), "");
      var d = "<span[^>]*>(?:|  |)</span>", w = new RegExp(d, "gim")
    } else {
      a = ReplaceAll(a, unescape("%u3000"), ""), a = ReplaceAll(a,
          "\u3000", "<p><br></p>"), d = "<span[^>]*>(?:|  |)</span>",
          w = new RegExp(d, "gim");
    }
    a = a.replace(w, "");
    if ("1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager && 3
        == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType || "XLS"
        == G_wordProcessorType) {
      var x = KEDITORTOP.G_CURRKEDITOR._config.removeFontType.fontFamily,
          y = KEDITORTOP.G_CURRKEDITOR._config.removeFontType.type,
          z = x.length, A = y.length;
      if (0 < z && 0 < A) {
        w = !1;
        for (e = 0; e < z; e++) {
          if ((new RegExp(
              "(<[^>]*)(" + x[e] + ")([^/>]*>)", "gi")).test(a)) {
            w = !0;
            break
          }
        }
        if (w) {
          for (x = 0; x < A; x++) {
            b = new RegExp(
                "(<[^>]*)(,\\s?" + y[x] + ")([^/>]*>)", "gi"), b.test(a) &&
            (a = a.replace(b, "$1$3"))
          }
        }
      }
    }
    if ("1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager && 4
        == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType || "PPT"
        == G_wordProcessorType) {
      a = setFontSizeForPpt(a);
    }
    y = ["gfxdata", "spid", "title"];
    for (A = 0; A < y.length; A++) {
      d = "(<[^>]*?)(o:" + y[A]
          + '=?"[\\s\\S]*?")', b = new RegExp(d, "gim"), a.match(b)
      && (a = a.replace(b, "$1"));
    }
    d = "(<span[^>]*?raon_placeholder.*?>)(" + unescape("%u200B") + "?)</span>";
    b = new RegExp(d, "gim");
    a = a.replace(b, "$1</span>");
    a = applyFakeImgSrc(a);
    var B = document.createElement("div");
    B.innerHTML = a;
    for (var C = B.getElementsByTagName("span"), D = C.length, A = 0; A < D;
        A++) {
      null != C[A].getAttribute("face") && void 0 != C[A].getAttribute("face")
      && "" != C[A].getAttribute("face") && ("" == C[A].style.fontFamily
      && (C[A].style.fontFamily = C[A].getAttribute("face")), removeAttribute(
          C[A], "face"));
      null != C[A].getAttribute("color") && void 0 != C[A].getAttribute("color")
      && "" != C[A].getAttribute("color") && ("" == C[A].style.color
      && (C[A].style.color = C[A].getAttribute("color")), removeAttribute(C[A],
          "color"));
      if (null != C[A].getAttribute("raonk_fonttag") &&
          void 0 != C[A].getAttribute("raonk_fonttag") && ""
          != C[A].getAttribute("raonk_fonttag")) {
        null == C[A].getAttribute("size") || void 0 == C[A].getAttribute("size")
        || C[A].getAttribute("size");
        for (var H = C[A].getElementsByTagName("span"), G = H.length, m = 0;
            m < G; m++) {
          null != H[m].getAttribute("size") && void 0
          != H[m].getAttribute("size") && "" != H[m].getAttribute("size")
          || removeAttribute(H[m], "raonk_fonttag");
        }
        removeAttribute(C[A], "raonk_fonttag")
      }
      if (null != C[A].getAttribute("size") && void 0 != C[A].getAttribute(
          "size") && "" != C[A].getAttribute("size")) {
        var I;
        switch (C[A].getAttribute("size")) {
          case "1":
            I = "8pt";
            break;
          case "2":
            I = "10pt";
            break;
          case "3":
            I = "12pt";
            break;
          case "4":
            I = "14pt";
            break;
          case "5":
            I = "18pt";
            break;
          case "6":
            I = "24pt";
            break;
          case "7":
            I = "36pt";
            break;
          default:
            I = ""
        }
        "" != I && "" == C[A].style.fontSize && (C[A].style.fontSize = I);
        removeAttribute(C[A], "size")
      }
    }
    if ("1" == KEDITORTOP.G_CURRKEDITOR._config.useCorrectInOutdent) {
      var M = B.innerHTML, K = B.getElementsByTagName("p"), P = K.length;
      try {
        for (A = 0; A < P; A++) {
          var E = K[A].style.textIndent, L, O;
          E && 0 < E.length && (L = parseFloat(E),
              O = E.replace(L, "").toLowerCase());
          var N = K[A].style.marginLeft, F, J;
          N && 0 < N.length && (F = parseFloat(N), J = N.replace(F,
              "").toLowerCase());
          if (L && F) {
            if (O == J) {
              var W = L + F;
            } else {
              "pt" == O ? L = 4 * L / 3 : "cm"
                  == O && (L *= 37.795275593333), "pt" == J ? F = 4 * F / 3
                  : "cm"
                  == J && (F *= 37.795275593333), W = L + F;
            }
            0 > W && (K[A].style.textIndent = "", K[A].style.marginLeft = "")
          } else {
            L ? 0 > L && (K[A].style.textIndent = "") : F && 0 > F
                && (K[A].style.marginLeft = "")
          }
        }
      } catch (ba) {
        B.innerHTML = M
      }
    }
    if ("1" == KEDITORTOP.G_CURRKEDITOR._config.adjustTextIndentInPaste && (2
        == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType ||
        "DOC" == G_wordProcessorType)) {
      for (K = B.getElementsByTagName(
          "p"), P = K.length, A = 0; A < P; A++) {
        var U = K[A].style.textIndent,
            V = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(K[A].style.marginLeft),
            X = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(U);
        if (0 != X) {
          var aa = U.replace(X, "");
          K[A].style.marginLeft = V + X + aa;
          K[A].style.textIndent = ""
        }
      }
    }
    "1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager && 5
    == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType && removeDummyDivInHwp(B);
    a = B.innerHTML;
    a = applyFakeImgSrc(a, !0);
    a = officePasteCleanForTable(a)
  } catch (ha) {
    a =
        c
  }
  return a
}

function removeAttributeForPasteTable(a) {
  var c = !1;
  "none" == a.style.display && (c = !0);
  for (var b = ["height", "style"], d = b.length, e = 0; e < d;
      e++) {
    removeAttribute(a, b[e]);
  }
  c && (a.style.display = "none")
}

function makeRangeSelectionMarkInDesign() {
  try {
    restoreSelection();
    setFocusToBody();
    var a = getFirstRange().range, c = getFirstRange().sel;
    if (a && 0 == a.collapsed) {
      if (a.startContainer == a.endContainer && 3
          == a.startContainer.nodeType) {
        var b = a.startOffset, d = a.endOffset, e = a.cloneRange(),
            f = _iframeDoc.createElement("kmark");
        f.setAttribute("class", "kmark");
        a.collapse(!0);
        a.insertNode(f);
        a.selectNode(f);
        a.setStartAfter(f);
        a.setEndAfter(f);
        a.setStart(f.nextSibling, d - b);
        a.setEnd(f.nextSibling, d - b);
        var g = _iframeDoc.createElement("kmark");
        g.setAttribute("class", "kmark");
        a.insertNode(g)
      } else {
        e = a.cloneRange(), g = _iframeDoc.createElement(
            "kmark"), g.setAttribute("class", "kmark"), a.collapse(
            !1), a.insertNode(g), c.removeAllRanges(), c.addRange(
            e), a = getFirstRange().range, f = _iframeDoc.createElement(
            "kmark"), f.setAttribute("class", "kmark"), a.collapse(
            !0), a.insertNode(
            f);
      }
    } else {
      b = a.startOffset, d = a.endOffset, a.cloneRange(), f = _iframeDoc.createElement(
          "kmark"), f.setAttribute("class", "kmark"), a.collapse(
          !0), a.insertNode(f), a.selectNode(f), a.setStartAfter(f),
      f.nextSibling && 1 != f.nextSibling.nodeType && (a.setEndAfter(
          f), a.setStart(f.nextSibling, d - b), a.setEnd(f.nextSibling,
          d - b)), g = _iframeDoc.createElement("kmark"), g.setAttribute(
          "class",
          "kmark"), a.insertNode(g)
    }
  } catch (h) {
    removeKMarkInFrame()
  }
}

function setRangeSelectionMarkInDesign(a) {
  try {
    _iframeDoc.body.innerHTML.match(/<kmark ([^>]+)><\/kmark>/i);
    var c = getElementsByClass("kmark", _iframeDoc, "kmark"), b = c.length;
    if (0 < b) {
      var d, e, f = !0;
      1 == b ? (d = c[0], e = c[0]) : 2 == b && (f = !1, d = c[0], e = c[1]);
      setTimeout(function () {
        var g = getFirstRange().range;
        getFirstRange();
        g.setStartAfter(d);
        g.setEndBefore(e);
        rangy.getSelection(_iframeWin).removeAllRanges();
        rangy.getSelection(_iframeWin).addRange(g);
        try {
          var m = g.startContainer;
          3 == m.nodeType && (m = m.parentNode);
          setMenuIconRealable(m)
        } catch (q) {
          KEDITORTOP &&
          KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(q)
        }
        (KEDITORTOP.RAONKEDITOR.browser.chrome
            || KEDITORTOP.RAONKEDITOR.browser.opera
            || KEDITORTOP.RAONKEDITOR.browser.safari) && setTimeout(
            function () {
              rangy.getSelection(_iframeWin).setSingleRange(g)
            }, 1);
        for (m = b - 1; 0 <= m; m--) {
          var t = c[m];
          t.parentNode.removeChild(t)
        }
        c = _iframeDoc.getElementsByTagName("/kmark");
        b = c.length;
        for (m = b - 1; 0 <= m; m--) {
          var t = c[m], u = t.parentNode;
          u.removeChild(t);
          KEDITORTOP.RAONKEDITOR.browser.ie && 8
          > KEDITORTOP.RAONKEDITOR.browser.ieVersion &&
          1 == b && ("P" == u.tagName || "SPAN" == u.tagName) && ""
          == u.innerHTML && (u.innerHTML = unescape(
              "%uFEFF"), doSetCaretPosition(u, !0))
        }
        m = null;
        0 == KEDITORTOP.RAONKEDITOR.browser.ie && (m = getFirstRange().range);
        var v = g.startContainer, t = function () {
          if (0 == !!a) {
            var b = getSelectionCoords(_iframeWin);
            if (b && 0 != b.x && 0 != b.y) {
              var c = getClientRect(_iframeDoc.body), d = 0, e = b.y;
              b.x >= c.right - c.left && (d = b.x);
              _iframeWin.scroll(d, e)
            } else {
              b = getElementOffset(v), _iframeWin.scroll(b.left, b.top)
            }
          }
        };
        f ? "BODY" == v.tagName ? setFocusChildForStyle(v) : t() :
            t();
        m && (rangy.getSelection(
            _iframeWin).removeAllRanges(), rangy.getSelection(
            _iframeWin).addRange(m))
      }, 0)
    }
  } catch (g) {
    removeKMarkInFrame()
  }
}

function makeRangeSelectionMarkInSource(a) {
  try {
    var c = a.value, b, d, e = '<kmark class="kmark"></kmark>',
        f = a.value.match(/<kmark class=(.+?)><\/kmark>/i);
    null != f && (e = f[0]);
    b = d = e;
    if (document.selection) {
      a.focus();
      var g = document.selection.createRange(), h = g.text, m = h.indexOf("<"),
          q = h.indexOf(">");
      -1 < q && (m > q || -1 == m) && g.moveStart("character", q + 1);
      m = q = -1;
      m = h.lastIndexOf("<");
      q = h.lastIndexOf(">");
      -1 < m && (m > q || -1 == q) && g.moveEnd("character", -(h.length - m));
      var t = g.duplicate();
      if (preCheckSpecialCharTextAreaOld(t)) {
        return;
      }
      g = checkSpecialCharTextAreaOldIE(g);
      h = g.text;
      g.text = b + h;
      "" != h && (g.text += d)
    } else if (a.selectionStart || "0" == a.selectionStart) {
      var u = a.selectionStart, v = a.selectionEnd, w = a.value.substring(0, u),
          x = a.value.substring(u, v), y = a.value.substring(v, a.value.length),
          m = x.indexOf("<"), q = x.indexOf(">");
      -1 < q && (m > q || -1 == m) && (u += q + 1);
      m = q = -1;
      m = x.lastIndexOf("<");
      q = x.lastIndexOf(">");
      -1 < m && (m > q || -1 == q) && (v -= x.length - m);
      if (preCheckSpecialCharTextArea(a)) {
        return;
      }
      w = a.value.substring(0, u);
      x = a.value.substring(u, v);
      y = a.value.substring(v,
          a.value.length);
      if ("" == x) {
        var z = checkSpecialCharTextArea(w, y);
        0 < z && (u -= z, v -= z)
      } else {
        z = checkSpecialCharTextArea(w, x), 0 < z
        && (u -= z), z = 0, z = checkSpecialCharTextArea(x, y), 0 < z
        && (v -= z);
      }
      w = a.value.substring(0, u);
      x = a.value.substring(u, v);
      y = a.value.substring(v, a.value.length);
      a.value = w + b + x;
      a.value = u != v ? a.value + (d + y) : a.value + y
    }
    var A = document.createElement("div"), B = a.value, B = applyFakeImgSrc(B);
    A.innerHTML = B;
    0 == RegExp("<kmark[^>]+class=.*?kmark.*?></kmark>", "gi").test(A.innerHTML)
    && (a.value = c)
  } catch (C) {
    a.value = removeKMarkInString(a.value)
  }
}

function preCheckSpecialCharTextArea(a) {
  var c = ["&nbsp;", "&lt;", "&gt;", "&quot;", "&amp;"], b = !1,
      d = a.selectionStart, e = a.selectionEnd, f = a.value.substring(0, d),
      d = a.value.substring(d, e);
  a = a.value.substring(e, a.value.length);
  e = f.lastIndexOf("<");
  f = f.lastIndexOf(">");
  if (e >= f) {
    return !0;
  }
  f = a.lastIndexOf(">");
  a = a.lastIndexOf("<");
  if (f < a && -1 < f) {
    return !0;
  }
  d = d.toLowerCase();
  if ("" != d && -1 == d.indexOf("&") && -1 == d.indexOf(";") && 4
      >= d.length) {
    for (f = 0; f < c.length; f++) {
      if (-1 < c[f].indexOf(d)) {
        b = !0;
        break
      }
    }
  }
  return b
}

function preCheckSpecialCharTextAreaOld(a) {
  var c = ["&nbsp;", "&lt;", "&gt;", "&quot;", "&amp;"], b = !1,
      d = a.duplicate(), e = a.text, e = ReplaceAll(e, unescape("\r"), ""),
      e = e.toLowerCase();
  a.moveEnd("character", -e.length);
  for (var f = 1; 1E4 >= f; f++) {
    a.moveStart("character", -f);
    var g = a.text;
    if (/>\s*</.test(g)) {
      return d.duplicate(), !0;
    }
    if (-1 < g.lastIndexOf(">")) {
      break;
    }
    if (-1 < g.lastIndexOf("<")) {
      return d.duplicate(), !0
    }
  }
  a = d.duplicate();
  a.moveStart("character", e.length);
  for (f = 1; 1E4 >= f; f++) {
    a.moveEnd("character", f);
    g = a.text;
    if (/>\s*</.test(g)) {
      return d.duplicate(),
          !0;
    }
    if (-1 < g.lastIndexOf("<")) {
      break;
    }
    if (-1 < g.lastIndexOf(">")) {
      return d.duplicate(), !0
    }
  }
  if ("" != e && -1 == e.indexOf("&") && -1 == e.indexOf(";") && 4
      >= e.length) {
    for (a = c.length, f = 0; f < a; f++) {
      if (-1 < c[f].indexOf(
          e)) {
        b = !0;
        break
      }
    }
  }
  d.duplicate();
  return b
}

function checkSpecialCharTextArea(a, c) {
  var b = ["&nbsp;", "&lt;", "&gt;", "&quot;", "&amp;"], d = 0;
  a = a.toLowerCase();
  c = c.toLowerCase();
  var e = a.split("&");
  if (1 >= e.length) {
    return d;
  }
  var f = c.split(";");
  if (1 >= f.length) {
    return d;
  }
  for (var g = !1, h = "", h = "&" + e[e.length - 1] + f[0] + ";", f = 0;
      f < b.length; f++) {
    if (b[f] == h) {
      g = !0;
      break
    }
  }
  g && (d = e[e.length - 1].length + 1);
  return d
}

function checkSpecialCharTextAreaOldIE(a) {
  var c = a.duplicate(), b = a.text, b = ReplaceAll(b, unescape("\r"), "");
  a.moveStart("character", -7);
  a.moveEnd("character", -b.length);
  var d = a.text;
  a = c.duplicate();
  a.moveStart("character", b.length);
  a.moveEnd("character", 7);
  var e = a.text;
  a = c.duplicate();
  c = checkSpecialCharTextArea(d, b);
  0 < c && a.moveStart("character", -c);
  c = checkSpecialCharTextArea(b, e);
  0 < c && a.moveEnd("character", -c);
  return a
}

function setRangeSelectionMarkInSource(a) {
  try {
    var c = a.value, b = '<kmark class="kmark"></kmark>',
        d = c.match(/<kmark ([^>]+)><\/kmark>/i);
    null != d && (b = d[0]);
    var c = ReplaceAll(c, unescape("\r"), ""), e, f;
    e = f = 0;
    var g = c.indexOf(b);
    if (-1 != g) {
      e = g;
      var c = c.replace(b, ""), h = c.indexOf(b, e);
      -1 != h && (f = h, c = c.replace(b, ""), 1 < c.split(/^\s/g).length
      && (c = c.replace(/^\s/g, ""), --e), a.value = c, setTimeout(function () {
        a.focus();
        if (e == f) {
          if (a.createTextRange) {
            var b = a.createTextRange();
            b.move("character", e);
            b.select()
          } else {
            a.selectionStart ?
                setTimeout(function () {
                  window.focus();
                  a.focus();
                  a.setSelectionRange(e, e)
                }, 1) : a.focus();
          }
        } else {
          "setSelectionRange" in a ? setTimeout(
              function () {
                window.focus();
                a.focus();
                a.setSelectionRange(e, f)
              }, 1) : (b = a.createTextRange(), b.collapse(!0), b.moveEnd(
              "character", f), b.moveStart("character",
              e), a.focus(), b.select());
        }
        if (KEDITORTOP.RAONKEDITOR.browser.chrome
            || KEDITORTOP.RAONKEDITOR.browser.opera
            || KEDITORTOP.RAONKEDITOR.browser.safari) {
          window.focus(), document.body.focus(), a.focus();
        }
        if (KEDITORTOP.RAONKEDITOR.browser.ie &&
            9 <= KEDITORTOP.RAONKEDITOR.browser.ieVersion && e != f
            || !KEDITORTOP.RAONKEDITOR.browser.ie
            && !KEDITORTOP.RAONKEDITOR.browser.gecko) {
          var b = a.value.substr(0, e), b = b.replace(/&/gi, "&amp;"),
              b = b.replace(/</gi, "&lt;"), b = b.replace(/>/gi, "&gt;"),
              b = b.replace(/\t/gi, "<tempTab>"),
              b = b.replace(/<tempTab>/gi, "\t"),
              c = document.createElement("div"), d = "";
          "2" == KEDITORTOP.G_CURRKEDITOR._config.sourceViewtype
          && (d = 'style="word-wrap: break-word; white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -pre-wrap; white-space: -o-pre-wrap; word-break: normal;"');
          c.innerHTML = "<pre " + d + "></pre>";
          c = c.firstChild;
          c.style.width = KEDITORTOP.G_CURRKEDITOR._config.style.width;
          c.style.height = "auto";
          c.style.fontSize = a.style.fontSize;
          c.style.fontFamily = a.style.fontFamily;
          document.body.appendChild(c);
          c.innerHTML = "&lt;test&gt;";
          var g = getClientRect(c), d = g.bottom - g.top;
          c.innerHTML = b;
          g = getClientRect(c);
          b = g.bottom - g.top;
          b -= d;
          0 > b && (b = 0);
          document.body.removeChild(c);
          c = null;
          a.scrollTop = b
        }
      }, 0))
    }
  } catch (m) {
    a.value = removeKMarkInString(a.value)
  }
}

function removeKMarkInFrame(a) {
  a = a ? a : _iframeDoc;
  for (var c = a.getElementsByTagName("kmark"), b = c.length, b = b - 1; 0 <= b;
      b--) {
    c[b].parentNode.removeChild(c[b]);
  }
  c = a.getElementsByTagName("/kmark");
  b = c.length;
  for (--b; 0 <= b; b--) {
    c[b].parentNode.removeChild(c[b])
  }
}

function removeKMarkInString(a) {
  return a.replace(/<kmark ([^>]+)><\/kmark>/ig, "")
}

function getSelectionCoords(a) {
  try {
    a = a || window;
    var c = a.document, b = c.selection, d, e, f, g = 0, h = 0;
    if (b) {
      "Control" != b.type && (d = b.createRange(), d.collapse(
          !0), g = d.boundingLeft, h = d.boundingTop);
    } else if (a.getSelection
        && (b = a.getSelection(), b.rangeCount && (d = b.getRangeAt(
            0).cloneRange(), d.getClientRects && (d.collapse(
            !0), e = d.getClientRects(), 0 < e.length && (f = e[0]), f
            ? (g = f.left, h = f.top) : h = g = 0), 0 == g && 0 == h))) {
      var m = c.createElement("span");
      if (m.getClientRects) {
        m.appendChild(c.createTextNode("\u200b"));
        d.insertNode(m);
        f = m.getClientRects()[0];
        var g = f.left, h = f.top, q = m.parentNode;
        q.removeChild(m);
        q.normalize()
      }
    }
    return {x: g, y: h}
  } catch (t) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(t)
  }
}

function setRemoveClass(a, c) {
  if (checkIfIncluded("editor_layout.css")) {
    for (var b = KEDITORTOP.G_CURRKEDITOR.remove_item.length, d = 0; d < b;
        d++) {
      if ("layout" == KEDITORTOP.G_CURRKEDITOR.remove_item[d]) {
        return;
      }
    }
    for (var b = c.length, e = !1, f = _iframeDoc.body.innerHTML, d = 0; d < b;
        d++) {
      if (-1 < f.indexOf(c[d])) {
        e = !0;
        break
      }
    }
    if (e) {
      for (e = a.length, d = 0; d < e;
          d++) {
        for (var f = _iframeDoc.getElementsByTagName(a[d]), g = f.length,
            h = 0; h < g; h++) {
          for (var m = 0; m < b; m++) {
            var q = new RegExp("(\\s|^)" + c[m] + "(\\s|$)");
            q.test(f[h].className) && (f[h].className =
                KEDITORTOP.RAONKEDITOR.util.trim(
                    f[h].className.replace(q, " ")));
            "" == KEDITORTOP.RAONKEDITOR.util.trim(f[h].className)
            && f[h].removeAttribute("class")
          }
        }
      }
    }
  }
}

function setAddClass(a, c) {
  if (checkIfIncluded("editor_layout.css")) {
    for (var b = KEDITORTOP.G_CURRKEDITOR.remove_item.length, d = 0; d < b;
        d++) {
      if ("layout" == KEDITORTOP.G_CURRKEDITOR.remove_item[d]) {
        return;
      }
    }
    b = a.length;
    for (d = 0; d < b; d++) {
      for (var e = _iframeDoc.getElementsByTagName(a[d]),
          f = e.length, g = 0; g < f; g++) {
        for (var h = c.length, m = 0; m < h;
            m++) {
          (new RegExp("(\\s|^)" + c[m] + "(\\s|$)")).test(e[g].className)
          || (e[g].className += " "
              + c[m], e[g].className = KEDITORTOP.RAONKEDITOR.util.trim(
              e[g].className))
        }
      }
    }
  }
}

function checkIfIncluded(a, c) {
  var b;
  b = void 0 == c ? _iframeDoc.getElementsByTagName("link")
      : c.getElementsByTagName("link");
  for (var d = 0; d < b.length; d++) {
    if (-1 < b[d].href.indexOf(a)) {
      return !0;
    }
  }
  return !1
}

function getDirectionNode(a, c, b, d) {
  a = [];
  b = GetTDTHCell(b);
  c = GetTableSelectionCells();
  if (null == b && 0 == c.length) {
    c = ",body,";
    var e = d.length;
    for (b = 0; b < e; b++) {
      null != d[b] && null != d[b].parentNode && void 0
      != d[b].parentNode.tagName && -1 < c.indexOf(
          "," + d[b].parentNode.tagName.toLowerCase() + ",") && -1
      < ",a,abbr,acronym,address,applet,area,b,baseFont,bdo,big,blink,blockQuote,body,button,caption,center,cite,code,col,colGroup,dd,del,dfn,dir,div,dl,dt,em,embed,fieldSet,font,form,H1,H2,H3,H4,H5,H6,head,hr,html,i,iframe,img,input:button,input:checkbox,input:file,input:image,input:password,input:radio,input:range,input:reset,input:search,input:submit,input:text,ins,isIndex,kbd,keygen,label,legend,li,link,listing,map,marquee,menu,meta,nobr,noFrames,noScript,object,ol,optGroup,option,p,plainText,pre,q,rt,ruby,s,samp,select,small,span,strike,strong,style,sub,sup,table,tBody,td,textArea,tFoot,th,tHead,title,tr,tt,u,ul,var,xmp,".indexOf(
          "," + d[b].tagName.toLowerCase() +
          ",") && a.push(d[b])
    }
  } else if (null != b && 0
      == c.length) {
    for (c = ",th,td,", e = d.length, b = 0; b < e; b++) {
      null
      != d[b] && null != d[b].parentNode && void 0 != d[b].parentNode.tagName
      && -1
      < c.indexOf("," + d[b].parentNode.tagName.toLowerCase() + ",") && (null
      == d[b].firstChild ? a.push(d[b].parentNode) : -1
      < ",a,abbr,acronym,address,applet,area,b,baseFont,bdo,big,blink,blockQuote,body,button,caption,center,cite,code,col,colGroup,dd,del,dfn,dir,div,dl,dt,em,embed,fieldSet,font,form,H1,H2,H3,H4,H5,H6,head,hr,html,i,iframe,img,input:button,input:checkbox,input:file,input:image,input:password,input:radio,input:range,input:reset,input:search,input:submit,input:text,ins,isIndex,kbd,keygen,label,legend,li,link,listing,map,marquee,menu,meta,nobr,noFrames,noScript,object,ol,optGroup,option,p,plainText,pre,q,rt,ruby,s,samp,select,small,span,strike,strong,style,sub,sup,table,tBody,td,textArea,tFoot,th,tHead,title,tr,tt,u,ul,var,xmp,".indexOf(
          "," +
          d[b].tagName.toLowerCase() + ",") ? a.push(d[b]) : void 0
      == d[b].firstChild.tagName ? a.push(d[b].parentNode) : a.push(
          d[b]));
    }
  } else if (null != b && 0 < c.length) {
    for (b = 0; b < c.length;
        b++) {
      d = c[b].getElementsByTagName("*");
      for (idx2 = 0; idx2 < d.length; idx2++) {
        d[idx2].dir = "";
      }
      a.push(c[b])
    }
  }
  return a
}

function CheckCommand(a, c) {
  if ("bold" == a) {
    var b = c.getElementsByTagName("b"), d = c.getElementsByTagName("strong");
    return 0 < b.length + d.length ? !0 : !1
  }
  return "italic" == a ? (b = c.getElementsByTagName(
          "em"), d = c.getElementsByTagName("i"), 0 < b.length + d.length ? !0 : !1)
      : "underline" == a ? 0 < c.getElementsByTagName("u").length ? !0 : !1
          : "strike_through" == a ? 0 < c.getElementsByTagName("strike").length
              ? !0 : !1 : "superscript" == a ? 0 < c.getElementsByTagName(
              "sup").length ? !0 : !1 : "subscript" == a ? 0
          < c.getElementsByTagName("sub").length ? !0 : !1 : "list_number" ==
          a ? 0 < c.getElementsByTagName("ol").length ? !0 : !1 : "list_bullets"
          == a ? 0 < c.getElementsByTagName("ul").length ? !0 : !1 : !1
}

function officePasteCleanForTable(a) {
  var c;
  c = applyFakeImgSrc(a);
  a = document.createElement("div");
  a.innerHTML = c;
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.removeImageInPasteExcel && ("1"
      == KEDITORTOP.G_CURRKEDITOR._config.useKManager && 3
      == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType || "XLS"
      == G_wordProcessorType)) {
    c = a.getElementsByTagName("table");
    var b = c.length, d = c[0];
    if (0 < b) {
      for (var e = a.getElementsByTagName("img"), f = e.length - 1; 0 <= f;
          f--) {
        e[f].parentNode.removeChild(e[f]);
      }
      for (f = b - 1; 0 <= f; f--) {
        c[f] != d && c[f].parentNode.removeChild(
            c[f])
      }
    }
  }
  c =
      a.getElementsByTagName("table");
  b = c.length;
  for (f = 0; f < b; f++) {
    "1" == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO
    && adjustTableForIEJASOBug(c[f]);
    "left" != c[f].align && "1"
    != KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_DeleteTableAlign || "2"
    != KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO
    || (c[f].align = "", c[f].removeAttribute("align"));
    "fixed" == c[f].style.tableLayout && "0px" != c[f].style.width
    && (c[f].style.removeAttribute ? c[f].style.removeAttribute("table-layout")
        : (c[f].style.removeProperty("tableLayout"),
            c[f].style.removeProperty("table-layout")));
    "PPT" == getPasteFormatType() && (c[f].style.tableLayout = "fixed");
    d = "BackCompat" == KEDITORTOP.G_CURRKEDITOR._DOC.compatMode;
    if ((KEDITORTOP.RAONKEDITOR.browser.ie && 7
            < KEDITORTOP.RAONKEDITOR.browser.ieVersion && !d
            || KEDITORTOP.RAONKEDITOR.browser.gecko) && "1"
        == KEDITORTOP.G_CURRKEDITOR._config.removeColgroup
        && (d = c[f].getElementsByTagName("colgroup"), e = d.length, 0 < e)) {
      d = !1;
      try {
        for (var g = c[f].getElementsByTagName("td"), h = g.length, e = 0;
            e < h; e++) {
          if (g[e].getAttribute("width") &&
              "" != g[e].getAttribute("width") || "" != g[e].style.width) {
            d = !0;
            break
          }
        }
      } catch (m) {
        d = !0
      }
      if (d) {
        for (d = c[f].getElementsByTagName("colgroup"), e = d.length, --e;
            0 <= e; e--) {
          try {
            c[f].removeChild(d[e])
          } catch (q) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(q)
          }
        }
      }
    }
    for (var t = c[f].rows.length, e = 0; e < t; e++) {
      var u = c[f].rows[e], v = u.getAttribute("height"), w = u.style.height;
      removeAttributeForPasteTable(u);
      var x = u.cells.length;
      if (0 == x) {
        u.innerHTML = "";
      } else {
        for (d = 0; d < x; d++) {
          var y = u.cells[d], z = y.getAttribute("rowspan"),
              z = null == z || void 0 == z || "" == z ? 1 : parseIntOr0(z),
              A = y.getAttribute("height");
          null == v || void 0 == v || "0" == v || null != A && void 0 != A && ""
          != A || y.setAttribute("height", parseIntOr0(v) * z);
          A = y.style.height;
          null == w || void 0 == w || "0px" == w || null != A && void 0 != A
          && ""
          != A || (y.style.height = parseIntOr0(w) * z + "px");
          1 == y.childNodes.length ? "" != y.childNodes[0].innerHTML && "&nbsp;"
              != y.childNodes[0].innerHTML || 0 != y.innerHTML.indexOf("<p")
              || (y.innerHTML = getCellDefValue()) : 0 != y.childNodes.length
              || "" != y.innerHTML && "&nbsp;" != y.innerHTML || (3 ==
              KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType ? "0px"
                  != y.style.height && "0" != y.getAttribute("width") && "0"
                  != y.getAttribute("height")
                  && (y.innerHTML = getCellDefValue())
                  : y.innerHTML = getCellDefValue());
          z = !1;
          if ("1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager) {
            if (2 == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType || 5
                == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType) {
              z = !0
            }
          } else if ("DOC" == G_wordProcessorType || "HWP"
              == G_wordProcessorType) {
            z = !0;
          }
          if (z) {
            var z = 0, A = y.style.paddingLeft, B = y.style.paddingRight,
                C = y.style.width;
            try {
              if (-1 < A.indexOf("px") || -1 < A.indexOf("pt") || -1
                  < A.indexOf(
                      "cm")) {
                z++, A = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                    A), B = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(B);
              }
              if (-1 < C.indexOf("px") || -1 < C.indexOf("pt") || -1
                  < C.indexOf(
                      "cm")) {
                z++, C = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                    C);
              }
              2 == z && (C = parseFloat(C) - parseFloat(A) - parseFloat(
                  B), y.getAttribute("width") && y.setAttribute("width",
                  C), y.style.width = C + "px")
            } catch (D) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(D)
            }
          }
        }
      }
    }
    if (KEDITORTOP.RAONKEDITOR.browser.gecko) {
      for ("" ==
      c[f].style.borderCollapse
      && (c[f].style.borderCollapse = "collapse"), t = c[f].rows.length, e = 0;
          e < t; e++) {
        for (u = c[f].rows[e], removeAttribute(u,
            "width"), removeAttribute(u, "height"), removeAttribute(u,
            "style"), v = u.cells.length, d = 0; d < v; d++) {
          y = u.cells[d], ""
          == y.style.borderTop && (y.style.borderTop = "1px solid #000000"), ""
          == y.style.borderRight
          && (y.style.borderRight = "1px solid #000000"), ""
          == y.style.borderBottom
          && (y.style.borderBottom = "1px solid #000000"), ""
          == y.style.borderLeft
          && (y.style.borderLeft = "1px solid #000000"),
          "\u3000" == y.innerHTML && (y.innerHTML = "<p><br /></p>"), 0
          == parseIntOr0(y.style.height) && 0 == parseIntOr0(y.height)
          && (y.style.height = "20px");
        }
      }
    }
    if ("0"
        != KEDITORTOP.G_CURRKEDITOR._config.showLineForBorderNone) {
      for (e = c[f].rows.length, d = 0;
          d < e; d++) {
        for (t = c[f].rows[d].cells.length, u = 0; u < t;
            u++) {
          showBorderForNoneClass(c[f].rows[d].cells[u],
              "keditor_table_border_t"), showBorderForNoneClass(
              c[f].rows[d].cells[u],
              "keditor_table_border_l"), showBorderForNoneClass(
              c[f].rows[d].cells[u],
              "keditor_table_border_r"), showBorderForNoneClass(
              c[f].rows[d].cells[u],
              "keditor_table_border_b")
        }
      }
    }
  }
  c = a.innerHTML;
  return c = applyFakeImgSrc(c, !0)
}

function checkExistCustomData(a) {
  var c = "", c = _iframeDoc.createElement("div");
  c.innerHTML = a;
  a = c.getElementsByTagName("img");
  for (var b = !1, d = a.length - 1; 0 <= d; d--) {
    var e = a[d].getAttribute("keditorcustomdata");
    null != e && void 0 != e && (e = getKEditorCustomData(e), null == e
    || void 0 == e) && (b = a[d].parentNode, b.removeChild(a[d]), ""
    == b.innerHTML && (b.innerHTML = "&nbsp;"), b = !0)
  }
  b && alert(RAONKEditor_lang.msg.checkCustomData);
  "" == c.innerHTML && (c.innerHTML = "&nbsp");
  return c = c.innerHTML
}

function getEditorFrameDoc(a) {
  setKEDITORWINDOC(a);
  a = KEDITORTOP.KEDITORDOC.getElementById("raonk_frame_" + a.ID);
  return getIframeDocument(a)
}

function getMyFirstOrLastChildElementNode(a, c) {
  try {
    var b = !1;
    1 == c && (b = !0);
    if (3 == a.nodeType) {
      return a.parentNode;
    }
    var d = "nextSibling", e = "firstChild";
    b && (d = "previousSibling", e = "lastChild");
    for (var f = a;
        null != f.childNodes && 0 < f.childNodes.length;) {
      if (f = f[e], 3
      == f.nodeType || 8 == f.nodeType) {
        if (!(3 != f.nodeType || "" == f.data && "BODY" == f.parentNode.tagName
            || "" == textCheckInString(f.data) && "" != f.data.replace(/ /, "")
            && "" != f.data.replace(/\u00A0/, ""))) {
          return f.parentNode;
        }
        f = f[d]
      } else if ("P" == f.tagName) {
        var g = getClientRect(f);
        if (0 == g.bottom - g.top) {
          f = f[d];
        } else {
          for (d = f; d[e];) {
            if (d.tagName && -1
                < ",SPAN,A,U,B,I,STRONG,STRIKE,SUB,SUP,".indexOf(
                    "," + d.tagName + ",") && d[e] && (3 == d[e].nodeType || 1
                    == d[e].nodeType && "BR" == d[e].tagName)) {
              f = d;
              break
            }
            d = d[e];
            b && d && "BR" == d.tagName && d.previousSibling
            && (d = d.previousSibling)
          }
          return f
        }
      } else {
        if ("BR" == f.tagName || "IMG" == f.tagName) {
          return f.parentNode;
        }
        if ("TABLE" == f.tagName) {
          var h = null;
          if (b) {
            var m = f.getElementsByTagName("td"),
                h = m[m.length - 1];
          } else {
            h = f.getElementsByTagName("th")[0]
                ? f.getElementsByTagName("th")[0] :
                f.getElementsByTagName("td")[0];
          }
          return getMyFirstOrLastChildElementNode(h, b)
        }
        if ("OL" == f.tagName || "UL"
            == f.tagName) {
          return h = null, m = f.getElementsByTagName("li"), h = b
              ? m[m.length - 1] : m[0], getMyFirstOrLastChildElementNode(h, b);
        }
        if ("STYLE" == f.tagName) {
          h = null;
          for (h = f[d]; null != h;) {
            if (1 == h.nodeType) {
              f = h;
              break
            } else {
              h = h[d];
            }
          }
          if (null == h || 3 == h.nodeType) {
            return _iframeDoc.body
          }
        }
      }
    }
    return 1 == f.nodeType && f.parentNode && "BODY" != f.parentNode.tagName ? f
        : null
  } catch (q) {
    return null
  }
}

function setFocusChildForStyle(a, c, b) {
  var d = !1;
  1 == c && (d = !0);
  var e = getMyFirstOrLastChildElementNode(a, d);
  if (e) {
    c = 0;
    1 == d && (c = 1);
    var f = function (a, c) {
      var d = !0;
      if (1 == c) {
        a.lastChild && "BR" == a.lastChild.tagName && (a = a.lastChild, d = !1);
        try {
          b || _iframeWin.scrollTo(0, _iframeDoc.body.scrollHeight)
        } catch (e) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(e)
        }
      }
      if (d) {
        doSetCaretPosition(a, c);
        try {
          "design" != KEDITORTOP.G_CURRKEDITOR.getEditorMode() || b
          || setMenuIconRealable(a)
        } catch (f) {
          KEDITORTOP &&
          KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(f)
        }
      } else {
        var g = getFirstRange(), d = g.range, g = g.sel;
        d.setStartBefore(a);
        d.setEndBefore(a);
        g.removeAllRanges();
        g.addRange(d);
        try {
          b || setMenuIconRealable(d.startContainer)
        } catch (h) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(h)
        }
      }
    };
    if ("1" != KEDITORTOP.G_CURRKEDITOR._config.formMode && "1"
        == KEDITORTOP.G_CURRKEDITOR._config.userTableLock.use && "BODY"
        == a.tagName) {
      for (var d = a.childNodes, g = d.length, h = !0, m = 0; m <
      g; m++) {
        if (1 == d[m].nodeType && -1
            < ",p,h1,h2,h3,h4,h5,h6,pre,b,big,i,small,strong,span,sub,sup,u,s,strike,".indexOf(
                "," + d[m].tagName.toLowerCase() + ",")) {
          doSetCaretPosition(d[m], 0);
          setMenuIconRealable(d[m]);
          h = !1;
          break
        }
      }
      if (h) {
        d = a.lastChild;
        if (3 == d.nodeType || "table"
            == d.tagName.toLowerCase()) {
          d = _iframeDoc.createElement(
              "p"), KEDITORTOP.RAONKEDITOR.browser.ie && 11
          > KEDITORTOP.RAONKEDITOR.browser.ieVersion ? d.innerHTML = "&nbsp;"
              : (g = _iframeDoc.createElement("br"), d.appendChild(
                  g)), a.appendChild(d);
        }
        f(d, c);
        setMenuIconRealable(d)
      }
    } else {
      "TEXTAREA" !=
      e.tagName && ("BODY" == a.tagName ? setTimeout(function () {
        f(e, c)
      }, 2) : f(e, c), b || setMenuIconRealable(e))
    }
  }
}

function repairPasteTextInCell(a) {
  if (0 == KEDITORTOP.RAONKEDITOR.browser.ie
      || KEDITORTOP.G_CURRKEDITOR.AccessClipboardForIEGecko || 6
      != KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType) {
    return a;
  }
  var c = a, b = a.substring(0, 6);
  if ("<TABLE" == b || "<table" == b) {
    if (getFirstRange(), b = document.createElement("div"), b.innerHTML = a, 1
    == b.childNodes.length && 1 == b.childNodes[0].nodeType && "TABLE"
    == b.childNodes[0].tagName) {
      a = b.getElementsByTagName("td");
      if (1 == a.length) {
        var c = a[0].innerHTML, d = a[0].childNodes,
            e = a[0].getElementsByTagName("p");
        1 == e.length && d[0] && 1 == d[0].nodeType && "P" == d[0].tagName
        && (c = d[0].innerHTML)
      }
      0 == a.length && (a = b.getElementsByTagName("th"), 1 == a.length
      && (c = a[0].innerHTML, d = a[0].childNodes, e = a[0].getElementsByTagName(
          "p"), 1 == e.length && d[0] && 1 == d[0].nodeType && "P"
      == d[0].tagName && (c = d[0].innerHTML)))
    }
  } else {
    b = a.toLowerCase(), -1 < b.indexOf("starthtml") && -1 < b.indexOf(
        "startfragment") && -1 < b.indexOf("<body ") && -1 < b.indexOf("</body")
    && (b = "<BODY", -1 == a.indexOf(b) && (b = "<body"), c = "</BODY>", -1
    == a.indexOf(c) && (c = "</body>"), a = a.substring(a.indexOf(b)),
        a = a.substring(a.indexOf(">") + 1), c = a = a.substring(0,
        a.indexOf(c)));
  }
  return c
}

function findParentNode(a, c) {
  var b = c.parentNode;
  if ("HTML" == b.tagName || "BODY" == b.tagName) {
    return !1;
  }
  for (; "BODY" != b.tagName;) {
    if (b == a) {
      return !0;
    }
    b = b.parentNode
  }
  return !1
}

function executeTextAlign(a, c) {
  var b = null,
      b = KEDITORTOP.RAONKEDITOR.browser.ie ? getElementsFromSelection()
          : getNodesInRange(a), d = GetTDTHCell(a.startContainer);
  if (null != d) {
    for (var e = b, f = e.length, b = [], g = 0; g < f; g++) {
      1
      == findParentNode(d, e[g]) && b.push(e[g]);
    }
  }
  d = b.length;
  e = chkAlign = "";
  e = null;
  for (g = 0; g < d; g++) {
    if (e = b[g].nodeName.toLowerCase(), "p" == e || "div"
    == e) {
      chkAlign = "justifyFull" == c ? "justify" : c.substring(
          7).toLowerCase(), e = b[g], e.style.textAlign != chkAlign
      && (e.style.textAlign = chkAlign)
    }
  }
}

function removeNbspInPTag(a) {
  try {
    if (KEDITORTOP.RAONKEDITOR.browser.ie && 11
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
      var c = a._BODY.childNodes, b = c.length;
      for (a = 0; a < b; a++) {
        var d = c[a];
        1 == d.nodeType && -1 < ",p,h1,h2,h3,h4,h5,".indexOf(
            "," + d.tagName.toLowerCase() + ",") && "&nbsp;" == d.innerHTML
        && (d.innerHTML = "")
      }
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
}

function _iframeDoc_OnDropOver(a) {
  KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
}

function _iframeDoc_DragStart(a) {
  "1" == KEDITORTOP.G_CURRKEDITOR._config.clickCtrlHyperlink
  && KEDITORTOP.G_CURRKEDITOR.isAOver.linkStyle
  && KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
  try {
    if ("1" == KEDITORTOP.G_CURRKEDITOR._config.returnEvent.drag_event) {
      var c = {strEventName: "dragstart", objEvent: a}, b = !0;
      "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.drag
          ? b = KEDITORTOP.G_CURRKEDITOR._config.event.drag(
              KEDITORTOP.G_CURRKEDITOR.ID, c) : "function"
          === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_DragEvent &&
          (b = KEDITORTOP.KEDITORWIN.RAONKEDITOR_DragEvent(
              KEDITORTOP.G_CURRKEDITOR.ID, c));
      if (!1 === b) {
        KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
        return
      }
    }
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  0 != dragMoveStart(a) && (KEDITORTOP.G_CURRKEDITOR.isDragStartedInEditor = !0)
}

function getElementsFromSelection(a) {
  function c(a) {
    var b = null;
    a.parentElement ? b = a.parentElement() : a.commonAncestorContainer
        ? b = a.commonAncestorContainer : a.commonParentElement
        && (b = a.commonParentElement());
    return b
  }

  function b(a, b) {
    var c = null;
    a.compareEndPoints ? c = {
      method: "compareEndPoints",
      StartToStart: "StartToStart",
      StartToEnd: "StartToEnd",
      EndToEnd: "EndToEnd",
      EndToStart: "EndToStart"
    } : a.compareBoundaryPoints && (c = {
      method: "compareBoundaryPoints",
      StartToStart: 0,
      StartToEnd: 1,
      EndToEnd: 2,
      EndToStart: 3
    });
    return c &&
        !(1 == b[c.method](c.StartToStart, a) && 1 == b[c.method](c.EndToEnd, a)
            && 1 == b[c.method](c.StartToEnd, a) && 1 == b[c.method](
                c.EndToStart, a) || -1 == b[c.method](c.StartToStart, a) && -1
            == b[c.method](c.EndToEnd, a) && -1 == b[c.method](c.StartToEnd, a)
            && -1 == b[c.method](c.EndToStart, a))
  }

  function d(a) {
    var b = null;
    KEDITORTOP.RAONKEDITOR.browser.ie && 7
    >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
        ? _iframeDoc.body.createTextRange
            ? (b = _iframeDoc.body.createTextRange(), b.moveToElementText(a))
            : _iframeDoc.createRange && (b = _iframeDoc.createRange(),
            b.selectNodeContents(a)) : _iframeDoc.createRange
            ? (b = _iframeDoc.createRange(), b.selectNodeContents(a))
            : _iframeDoc.body.createTextRange
            && (b = _iframeDoc.body.createTextRange(), b.moveToElementText(a));
    return b
  }

  var e = null, f = [], g, h;
  a || (a = "body");
  if (h = function () {
    var a = null;
    _iframeWin.getSelection ? (a = _iframeWin.getSelection()) && a.rangeCount
        && a.getRangeAt && (a = a.getRangeAt(0)) : _iframeDoc.selection
        && (a = _iframeDoc.selection.createRange());
    return a
  }()) {
    if (g = c(h)) {
      for (; 1 != g.nodeType;) {
        g = g.parentNode;
      }
      if (g.nodeName.toLowerCase() !=
          a.toString()) {
        e = g;
        do {
          e = e.parentNode, f[f.length] = e;
        } while (e.nodeName.toLowerCase()
        != a.toString())
      }
      e = g.all || g.getElementsByTagName("*");
      for (a = 0; a < e.length; a++) {
        f[f.length] = e[a];
      }
      e = [g];
      for (g = 0; g < f.length; g++) {
        (a = d(f[g])) && b(h, a)
        && (e[e.length] = f[g])
      }
    }
  }
  return e
}

function checkCopyInCellFormInertnNet(a) {
  var c = "";
  if (KEDITORTOP.RAONKEDITOR.browser.ie
      && /body[^>]*>(\s+)*<div *([^>])*>/i.test(a)) {
    var b = a.indexOf("\x3c!--StartFragment--\x3e"),
        d = a.lastIndexOf("\x3c!--EndFragment--\x3e");
    -1 < b && -1 < d && (a = a.substr(b + 20), d = a.lastIndexOf(
        "\x3c!--EndFragment--\x3e"), -1 < d && (c = a = a.substring(0, d)))
  }
  return c
}

function setGlobalTableDefaultValue() {
  try {
    ActiveLastTable = ActiveCurrTable = DrageEndCell = DrageStartCell = null
  } catch (a) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(a)
  }
}

function fn_IEJASOBug(a) {
  if ("0" != a._config.ie11_BugFixed_JASO) {
    try {
      var c = a._DOC;
      if ("1" == a._config.ie11_BugFixed_JASO) {
        for (var b = c.getElementsByTagName("table"), d = b.length, e = 0;
            e < d;
            e++) {
          adjustTableForIEJASOBug(b[e]);
        }
        b = c.getElementsByTagName("p");
        d = b.length;
        for (e = 0; e < d; e++) {
          endBrForIEJASOBug(b[e])
        }
      } else if ("2"
          == a._config.ie11_BugFixed_JASO) {
        for (b = c.getElementsByTagName(
            "table"), d = b.length, e = 0; e < d; e++) {
          if ("left" == b[e].align
              || "1" == a._config.ie11_BugFixed_DeleteTableAlign) {
            if ("1" == a._config.ie11_BugFixed_ReplaceAlignMargin &&
                ("center" == b[e].align || "right" == b[e].align)) {
              var f = getReplaceAlignMargin(a, b[e]);
              0 != f && (b[e].style.marginLeft = f + "px")
            }
            b[e].align = "";
            b[e].removeAttribute("align")
          }
        }
      }
    } catch (g) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(g)
    }
  }
}

function replaceBrTag(a) {
  if ("1" == a._config.wrapPtagToSource || "2"
      == a._config.wrapPtagToSource) {
    try {
      var c = a._DOC, b = a._BODY, d = b.childNodes;
      for (i = d.length - 1; 0 <= i; i--) {
        var e = d[i];
        if (1 == e.nodeType && "BR" == e.tagName && (null == e.previousSibling
            || e.previousSibling && 3 != e.previousSibling.nodeType)) {
          var f = c.createElement("p");
          b.insertBefore(f, e);
          KEDITORTOP.RAONKEDITOR.browser.ie && 11
          > KEDITORTOP.RAONKEDITOR.browser.ieVersion
              ? (f.innerHTML = "&nbsp;", b.removeChild(e)) : f.appendChild(e)
        }
      }
    } catch (g) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
      KEDITORTOP.RAONKEDITOR.logMode && console.log(g)
    }
  }
}

function removeEmptySpanBRTag(a) {
  if (KEDITORTOP.RAONKEDITOR.browser.ie && 11
      == KEDITORTOP.RAONKEDITOR.browser.ieVersion
      && a.childNodes) {
    for (var c = a.childNodes.length, b = 0; b < c; b++) {
      var d = a.childNodes[b];
      if (1 === d.nodeType && "p" == d.tagName.toLowerCase()) {
        var e = d.innerHTML;
        if ("" == (d.innerText || d.textContent)) {
          for (; ;) {
            var f = RegExp("<span[^>]*>(?:\\s|<br>|<br />|  | |)(</span>)",
                    "gim"),
                e = e.replace(f, "$1" + unescape("%u200B") + "</span>");
            if (0 == f.test(e)) {
              break
            }
          }
        }
        "" == e && (e = KEDITORTOP.RAONKEDITOR.browser.ie && 10
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion ?
            "&nbsp;" : "<br />", d.innerHTML = e)
      }
    }
  }
}

function wrapPtagForNotBlockTag(a, c) {
  if ("1" == a._config.wrapPtagToSource || "2"
      == a._config.wrapPtagToSource) {
    try {
      var b = null, d = null;
      c ? (b = c.doc, d = c.container) : (b = a._DOC, d = a._BODY);
      var e = d.innerHTML, f = d.childNodes, g = f.length, h = [],
          m = e.replace(/(<kmark(\s|\S)*?<\/kmark>)|(<\/?(br)*\s?\/?>)/gi, ""),
          q = RegExp("(<\\/?(\\s|\\S)*?>)", "g");
      if (0 == q.test(m)) {
        d.innerHTML = "<p>" + e + "</p>";
      } else {
        for (--g; 0 <= g;
            g--) {
          if (f[g].tagName && checkBlockTag(f[g].tagName)) {
            if (0 < h.length) {
              for (var t = b.createElement("p"), u = h.length - 1; 0 <= u;
                  u--) {
                t.appendChild(h[u]),
                    f[g].nextSibling ? d.insertBefore(t, f[g].nextSibling)
                        : d.appendChild(t);
              }
              h = []
            }
          } else if (3 == f[g].nodeType) {
            var v = f[g].data;
            "0" == a._config.keepOriginalHtml && (v = v.replace(/\r\n/,
                "\n"), v = v.replace(/^\n/, ""), v = v.replace(/\n$/,
                ""), f[g].data = v);
            v = textCheckInString(v);
            "" != v && h.push(f[g])
          } else if (8 != f[g].nodeType) {
            m = ",li,details,";
            "" != a._config.wrapPtagSkipTag && (m += a._config.wrapPtagSkipTag
                + ",");
            var w = f[g].tagName ? f[g].tagName : "", w = w.toLowerCase();
            0 > m.indexOf("," + w + ",") && h.push(f[g])
          }
          if (0 == g && 0 < h.length) {
            t = b.createElement("p");
            for (u = h.length - 1; 0 <= u; u--) {
              t.appendChild(h[u]), d.insertBefore(
                  t, d.firstChild);
            }
            h = []
          }
          if (f[g].tagName && "P" == f[g].tagName) {
            try {
              "<p>" == f[g].outerHTML.toLowerCase()
              && (f[g].outerHTML = "<p></p>")
            } catch (x) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(x)
            }
            var y = void 0 != f[g].innerText ? f[g].innerText
                    : f[g].textContent,
                y = y.replace(/\r\n/gi, ""), y = y.replace(/\r/gi, ""),
                y = y.replace(/\n/gi, ""), m = !1;
            try {
              -1 < f[g].innerHTML.toLowerCase().indexOf("<kmark") && (m = !0)
            } catch (z) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
              KEDITORTOP.RAONKEDITOR.logMode && console.log(z)
            }
            if ("" == y && !m && "1" == a._config.removeEmptyTag) {
              for (var A = f[g].innerHTML,
                  m = "(<span[^>]*?raon_placeholder.*?>)(?:\\s|<br>|<br />|  | |)</span>",
                  q = new RegExp(m, "gim"),
                  A = A.replace(q, "$1" + unescape("%u200B") + "</span>");
                  m = "<span[^>]*>(?:\\s|<br>|<br />|  | |)</span>", q = new RegExp(
                      m, "gim"), A = A.replace(q, ""), 0 != q.test(A);) {
                ;
              }
              m = "(<span[^>]*?raon_placeholder.*?>)(" + unescape("%u200B")
                  + "?)</span>";
              q = new RegExp(m, "gim");
              for (A = A.replace(q, "$1</span>");
                  m = "<font[^>]*>(?:\\s|<br>|<br />|  | |)</font>",
                      q = new RegExp(m, "gim"), A = A.replace(q, ""), 0
                  != q.test(
                      A);) {
                ;
              }
              A = CleanZeroChar(A);
              "" == A && (A = getDefaultParagraphValue(!1));
              f[g].innerHTML = A
            }
          }
        }
      }
    } catch (B) {
      d.innerHTML = e
    }
  }
}

function checkBlockTag(a) {
  if (void 0 != a && "" != a) {
    var c = !1,
        b = "p div table ol ul hr h1 h2 h3 h4 h5 h6 dl blockquote iframe pre xmp c:if c:choose c:foreach c:set script style center kmark /kmark figure figcaption nav section article".split(
            " "), d = b.length;
    a = a.toLowerCase();
    for (var e = 0; e < d; e++) {
      if (b[e] == a) {
        c = !0;
        break
      }
    }
    return c
  }
}

function checkExistClassName(a, c) {
  for (var b = a.split(" "), d = b.length, e = !1, f = 0; f < d; f++) {
    if (b[f]
        == c) {
      e = !0;
      break
    }
  }
  return e
}

function setClassName(a, c) {
  for (var b = c, d = a.className, e = !1, f = d.split(" "), g = f.length,
      h = 0; h < g; h++) {
    if (f[h] == c) {
      e = !0;
      break
    }
  }
  0 == e && ("" != d && (b = " " + b), a.className = d + b)
}

function removeClassName(a, c) {
  var b = c, d = a.className;
  0 < d.indexOf(b) && (b = " " + b);
  d = d.replace(b, "");
  "" == d ? a.getAttribute("class") ? a.removeAttribute("class")
      : a.removeAttribute("className") : a.className = d
}

function showBorderForNoneClass(a, c) {
  if ("0" != KEDITORTOP.G_CURRKEDITOR._config.showLineForBorderNone) {
    if ("" != KEDITORTOP.RAONKEDITOR.util.trim(
        KEDITORTOP.G_CURRKEDITOR._config.showLineForBorderNoneSkipClass)) {
      for (var b = KEDITORTOP.G_CURRKEDITOR._config.showLineForBorderNoneSkipClass.split(
          ","), d = b.length, e = 0; e < d; e++) {
        if (checkExistClassName(
            a.className, b[e])) {
          return;
        }
      }
    }
    if ("" != KEDITORTOP.RAONKEDITOR.util.trim(
        KEDITORTOP.G_CURRKEDITOR._config.showLineForBorderNoneSkipAttribute)) {
      for (b = KEDITORTOP.G_CURRKEDITOR._config.showLineForBorderNoneSkipAttribute.split(
          ","),
          e = 0; e < d; e++) {
        if (a.getAttribute(b[e]) && "" != a.getAttribute(
            b[e])) {
          return;
        }
      }
    }
    e = "";
    switch (c) {
      case "keditor_table_border_b":
        e = "Bottom";
        break;
      case "keditor_table_border_t":
        e = "Top";
        break;
      case "keditor_table_border_l":
        e = "Left";
        break;
      case "keditor_table_border_r":
        e = "Right"
    }
    d = checkExistClassName(a.className, c);
    "" == a.style["border" + e + "Width"] && "" == a.style["border" + e
    + "Style"] ? (e = a.parentNode.parentNode.parentNode, !d && ("" == e.border
        || 0 >= parseInt(e.border)) && setClassName(a, c)) : -1
    < a.style["border" + e + "Width"].indexOf("0") &&
    0 == parseFloat(a.style["border" + e + "Width"]) || "none"
    == a.style["border" + e + "Style"] ? d || setClassName(a, c) : d
        && removeClassName(a, c)
  }
}

function setBorderTableAndAllCell(a, c) {
  for (var b = a.rows.length, d = 0; d < b; d++) {
    for (var e = a.rows[d],
        f = e.cells.length, g = 0; g < f; g++) {
      var h = e.cells[g];
      0 == g && ("" != c.outsideLeft
      && (h.style.borderLeft = c.outsideLeft, showBorderForNoneClass(h,
          "keditor_table_border_l")), g != f - 1 && "" != c.insideCol
      && (h.style.borderRight = c.insideCol, showBorderForNoneClass(h,
          "keditor_table_border_r")), "" != c.insideRow && (0 == d && d != b - 1
      && (h.style.borderBottom = c.insideRow, showBorderForNoneClass(h,
          "keditor_table_border_b")), 0 < d && d == b - 1
      && (h.style.borderTop =
          c.insideRow, showBorderForNoneClass(h, "keditor_table_border_t")), 0
      < d
      && d != b - 1 && (h.style.borderTop = c.insideRow, showBorderForNoneClass(
          h,
          "keditor_table_border_t"), h.style.borderBottom = c.insideRow, showBorderForNoneClass(
          h, "keditor_table_border_b"))));
      g == f - 1 && ("" != c.outsideRight
      && (h.style.borderRight = c.outsideRight, showBorderForNoneClass(h,
          "keditor_table_border_r")), 0 != g && "" != c.insideCol
      && (h.style.borderLeft = c.insideCol, showBorderForNoneClass(h,
          "keditor_table_border_l")), "" != c.insideRow && (0 == d && d != b - 1
      &&
      (h.style.borderBottom = c.insideRow, showBorderForNoneClass(h,
          "keditor_table_border_b")), 0 < d && d == b - 1
      && (h.style.borderTop = c.insideRow, showBorderForNoneClass(h,
          "keditor_table_border_t")), 0 < d && d != b - 1
      && (h.style.borderTop = c.insideRow, showBorderForNoneClass(h,
          "keditor_table_border_t"), h.style.borderBottom = c.insideRow, showBorderForNoneClass(
          h, "keditor_table_border_b"))));
      0 < g && g != f - 1 && "" != c.insideCol
      && (h.style.borderLeft = c.insideCol, showBorderForNoneClass(h,
          "keditor_table_border_l"), h.style.borderRight = c.insideCol,
          showBorderForNoneClass(h, "keditor_table_border_r"));
      0 == d && ("" != c.outsideTop
      && (h.style.borderTop = c.outsideTop, showBorderForNoneClass(h,
          "keditor_table_border_t")), d != b - 1 && "" != c.insideRow
      && (h.style.borderBottom = c.insideRow, showBorderForNoneClass(h,
          "keditor_table_border_b")));
      d == b - 1 && ("" != c.outsideBottom
      && (h.style.borderBottom = c.outsideBottom, showBorderForNoneClass(h,
          "keditor_table_border_b")), 0 != d && "" != c.insideRow
      && (h.style.borderTop = c.insideRow, showBorderForNoneClass(h,
          "keditor_table_border_t")));
      0 <
      d && d != b - 1 && 0 < g && g != f - 1 && ("" != c.insideRow
      && (h.style.borderTop = c.insideRow, showBorderForNoneClass(h,
          "keditor_table_border_t"), h.style.borderBottom = c.insideRow, showBorderForNoneClass(
          h, "keditor_table_border_b")), "" != c.insideCol
      && (h.style.borderLeft = c.insideCol, showBorderForNoneClass(h,
          "keditor_table_border_l"), h.style.borderRight = c.insideCol, showBorderForNoneClass(
          h, "keditor_table_border_r")))
    }
  }
}

function replaceClassForBorder(a, c, b) {
  var d = ["keditor_table_border_t", "keditor_table_border_r",
    "keditor_table_border_b", "keditor_table_border_l"];
  if ("0" != a._config.showLineForBorderNone && "show" == b) {
    var e = c.getElementsByTagName("table"), f = e.length;
    for (a = 0; a < f; a++) {
      for (var g = e[a].rows.length, h = 0; h < g;
          h++) {
        for (var m = e[a].rows[h].cells.length, q = 0; q < m; q++) {
          var t = e[a].rows[h].cells[q].className,
              t = t.replace("_" + d[0], ""),
              t = t.replace("_" + d[1], ""), t = t.replace("_" + d[2], ""),
              t = t.replace("_" + d[3], ""), t = t.replace(d[0],
                  ""), t = t.replace(d[1], ""), t = t.replace(d[2], ""),
              t = t.replace(d[3], ""), t = KEDITORTOP.RAONKEDITOR.util.trim(t);
          if ("" == t) {
            if (e[a].rows[h].cells[q].getAttribute("class")
                ? e[a].rows[h].cells[q].removeAttribute("class")
                : e[a].rows[h].cells[q].removeAttribute("className"), ""
            != e[a].rows[h].cells[q].className
            || e[a].rows[h].cells[q].className
            != t) {
              e[a].rows[h].cells[q].className = ""
            }
          } else {
            e[a].rows[h].cells[q].className != t
            && (e[a].rows[h].cells[q].getAttribute("class")
                ? e[a].rows[h].cells[q].setAttribute("class", t)
                : e[a].rows[h].cells[q].setAttribute("className",
                    t), e[a].rows[h].cells[q].className != t
            && (e[a].rows[h].cells[q].className = t));
          }
          showBorderForNoneClass(e[a].rows[h].cells[q], d[0]);
          showBorderForNoneClass(e[a].rows[h].cells[q], d[1]);
          showBorderForNoneClass(e[a].rows[h].cells[q], d[2]);
          showBorderForNoneClass(e[a].rows[h].cells[q], d[3])
        }
      }
    }
  }
  if ("hidden" == b) {
    for (a = 0; a < d.length;
        a++) {
      for (b = [], b = getElementsByClass(d[a], c), e = b.length, f = 0;
          f < e; f++) {
        removeClassName(b[f], d[a]), t = b[f].className, ""
        == KEDITORTOP.RAONKEDITOR.util.trim(t)
            ? (b[f].className = "", b[f].getAttribute("class") ?
                b[f].removeAttribute("class") : b[f].removeAttribute(
                    "className"))
            : b[f].className = KEDITORTOP.RAONKEDITOR.util.trim(t)
      }
    }
  }
}

function attachFileImage(a, c) {
  var b = "url(" + KEDITORTOP.G_CURRKEDITOR._config.webPath.image + "icon/",
      b = -1 < c.file_ext.indexOf("doc") ? b + "word.png" : -1
      < c.file_ext.indexOf("ppt") ? b + "ppt.png" : -1 < c.file_ext.indexOf(
          "xls") ? b + "excel.png" : -1 < c.file_ext.indexOf("hwp") ? b
          + "hwp.png" : -1 < c.file_ext.indexOf("pdf") ? b + "pdf.png" : -1
      < c.file_ext.indexOf("txt") ? b + "txt.png" : b + "file.png";
  a.style.paddingLeft = "22px";
  a.style.paddingTop = "3px";
  a.style.paddingBottom = "3px";
  a.style.background = b + ")";
  a.style.backgroundRepeat = "no-repeat";
  a.style.backgroundPosition = "0% 50%";
  a.style.lineHeight = "1.4"
}

function replaceClassForBookmark(a, c, b) {
  a = a._contentsClass;
  for (var d = a.length, e = 0; e < d; e++) {
    var f = [];
    "hidden" == b ? f = getElementsByClass(a[e], c) : "show" == b
        && (f = getElementsByClass("_" + a[e], c));
    for (var g = f.length, h = 0; h < g; h++) {
      var m = f[h].className;
      "hidden" == b ? m = m.replace(a[e], "_" + a[e]) : "show" == b
          && (m = m.replace("_" + a[e], a[e]));
      f[h].className = m
    }
  }
}

function removeIncorrectSpaceInTag(a) {
  var c = a;
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.removeSpaceInTagname) {
    if (void 0
        == a || "" == a) {
      c = "";
    } else {
      try {
        var b = RegExp("<(\\s+)[a-z|/]", "gi"), d = c.match(b);
        if (d) {
          for (var e = d.length, f = 0; f < e; f++) {
            var g = d[f],
                h = /\s+/.exec(g), m = h[0].replace(RegExp("\\s", "gi"), ""),
                g = g.replace(h, m), c = c.replace(d[f], g);
          }
        }
        b = RegExp("<\\/(\\s+)[a-z]", "gi");
        if (d = c.match(b)) {
          for (e = d.length, f = 0; f < e;
              f++) {
            g = d[f], h = /\s+/.exec(g), m = h[0].replace(RegExp("\\s", "gi"),
                ""), g = g.replace(h, m), c = c.replace(d[f], g)
          }
        }
      } catch (q) {
        c =
            a
      }
    }
  }
  return c
}

function removeDummyfontTagInTable(a) {
  var c = a;
  try {
    var b = RegExp("<font ([^>]+)>\\s</font>", "gi");
    a = a.replace(b, "<font $1>&nbsp;</font>");
    b = RegExp("<font ([^>]+)>\\s+</font>", "gi");
    c = a = a.replace(b, "<font $1></font>")
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  return c
}

function setChangeModeForSetApi(a, c) {
  if (1 != c && "design" != a._currentMode) {
    var b = "design";
    ClearDraggingTableCellSelected();
    Mouse_Status = Mouse_IsPlain;
    g_findRepalceRange = ActiveCurrTable = DrageStartCell = null;
    a._iconSelected();
    for (var d = null,
        e = ["top_design", "top_source", "top_preview", "top_text"], f = 0,
        g = e.length; f < g; f++) {
      d = document.getElementById(
          "ue_" + a.ID + e[f]), null != d && ((0 > b.indexOf("top_") ? "top_"
          + b
          : b) == e[f] ? d.className = "on" : d.className = "");
    }
    for (var h = e = null, d = ["design", "source", "preview", "text"],
        b = b.replace("top_",
            ""), f = 0, g = d.length; f < g; f++) {
      e = document.getElementById(
          "ue_" + a.ID + d[f]), h = document.getElementById(
          "keditor_" + d[f] + "_" + a.ID), null != e && (b == d[f]
          ? (e.className = a._config.style.skinName, e.getElementsByTagName(
              "A")[0].className = "color_on", e.getElementsByTagName(
              "A")[0].parentNode.style.backgroundColor = "#ffffff", h.style.height = "100%", h.style.width = "100%", h.style.display = "", h.style.overflow = "", a._LastRange = null, setFocusToBody())
          : (e.className = "", e.getElementsByTagName(
              "A")[0].className = "", e.getElementsByTagName(
              "A")[0].parentNode.style.backgroundColor =
              "", e.style.backgroundImage = "", h.style.width = "0px", h.style.height = "0px", h.style.display = "none", h.style.overflow = "hidden", h.blur()), e = document.getElementById(
          "ue_diabled_div_" + a.ID), "BackCompat" == document.compatMode
      && (e.style.height = document.getElementById(
          "ue_toolbar_" + a.ID).scrollHeight + "px"), document.getElementById(
          "ue_toolbar_"
          + a.ID).style.position = "relative", e.style.width = "design" == b
          ? "0px" : document.getElementById("ue_toolbar_" + a.ID).scrollWidth
          + "px");
    }
    switch (a._currentMode) {
      case "source":
        switch (b) {
          case "design":
            ReplaceRealObjectToImage(),
                xssReplaceScript(_iframeDoc), setAddClass(["td", "th"],
                ["keditor_dot"])
        }
        break;
      case "preview":
        switch (b) {
          case "design":
            FixFlashError(), ReplaceRealObjectToImage(), setAddClass(
                ["td", "th"], ["keditor_dot"])
        }
    }
    a._currentMode = b;
    -1 < b.indexOf("design") && setFocusChildForStyle(a._BODY)
  }
  onChange({editor: a})
}

function insertElementsSrc(a, c) {
  if (c) {
    var b = c;
    "1" == a._config.useKManager && (b = convertImageAgentSrc(b, !1));
    0 > b.indexOf("file:/") && 0 > b.indexOf(
        KEDITORTOP.RAONKEDITOR.rootPath + "images") && a.setElementsArr.push(c)
  }
}

function insertImageSrc(a, c, b) {
  if (1 != b) {
    try {
      if (c) {
        var d = c;
        "1" == a._config.useKManager && (d = convertImageAgentSrc(d, !1));
        0 > d.indexOf("file:/") && 0 > d.indexOf(
            KEDITORTOP.RAONKEDITOR.rootPath + "images") && (a.setImageArr.push(
            c), a.setElementsArr.push(c))
      } else {
        ReplaceImageToRealObject();
        a.setImageArr = [];
        a.setElementsArr = [];
        var e = a._DOC.getElementsByTagName("img"), f = e.length;
        for (c = 0; c < f; c++) {
          "1" == KEDITORTOP.G_CURRKEDITOR._config.xss_use
          && (e[c].alt && (e[c].alt = KEDITORTOP.RAONKEDITOR.util.replaceAll(
              e[c].alt, "<", ""),
              e[c].alt = KEDITORTOP.RAONKEDITOR.util.replaceAll(e[c].alt, ">",
                  "")), e[c].title
          && (e[c].title = KEDITORTOP.RAONKEDITOR.util.replaceAll(e[c].title,
              "<",
              ""), e[c].title = KEDITORTOP.RAONKEDITOR.util.replaceAll(
              e[c].title,
              ">", ""))), "" == e[c].style.marginRight.toString() && ""
          == e[c].style.marginLeft.toString() && e[c].getAttribute("hspace")
          && ""
          != e[c].hspace.toString() && (e[c].style.marginLeft = e[c].hspace
              + "px", e[c].style.marginRight = e[c].hspace
              + "px", e[c].removeAttribute("hspace")), ""
          == e[c].style.marginTop.toString() &&
          "" == e[c].style.marginBottom.toString() && e[c].getAttribute(
              "vspace")
          && "" != e[c].vspace.toString && (e[c].style.marginTop = e[c].vspace
              + "px", e[c].style.marginBottom = e[c].vspace
              + "px", e[c].removeAttribute("vspace"));
        }
        var d = a._DOC.body.outerHTML, e = "",
            g = RegExp("<[^>]*url\\((.*?)\\)", "gi"),
            h = RegExp("<img[^>]*src=(.*?)>", "gi"),
            m = RegExp("<embed[^>]*src=(.*?)>", "gi"),
            q = RegExp("<a[^>]*href=(.*?)>", "gi");
        regExp5 = RegExp("<video[^>]*src=(.*?)>", "gi");
        var t = d.match(g), u = d.match(h), v = d.match(m), w = d.match(q),
            x = d.match(regExp5);
        if (t) {
          var y = t.length;
          for (c = 0; c < y; c++) {
            e = "", 0 > t[c].indexOf(
                KEDITORTOP.RAONKEDITOR.rootPath + "images") && t[c].match(
                "url\\((.*?)\\)") && (e = t[c].match(
                "url\\((.*?)\\)")[1].replace(
                /"/gi, "").replace(/'/gi, "").replace(/&quot;/gi, "")), e && ""
            != e
            && (a.setImageArr.push(e), a.setElementsArr.push(e))
          }
        }
        if (u) {
          var z = u.length;
          for (c = 0; c < z; c++) {
            e = "", u[c].match("src=\"(.*?)\"|src='(.*?)'")
            && (e = u[c].match("src=\"(.*?)\"|src='(.*?)'")[1].replace(/"/gi,
                "").replace(/'/gi, "")), e && "" != e && (a.setImageArr.push(
                e), a.setElementsArr.push(e))
          }
        }
        if (v) {
          var A =
              v.length;
          for (c = 0; c < A; c++) {
            e = "", v[c].match("src=\"(.*?)\"|src='(.*?)'")
            && (e = v[c].match("src=\"(.*?)\"|src='(.*?)'")[1].replace(/"/gi,
                "").replace(/'/gi, "")), e && "" != e && a.setElementsArr.push(
                e)
          }
        }
        if (w) {
          var B = w.length;
          for (c = 0; c < B; c++) {
            e = "", -1 < w[c].toLowerCase().indexOf(
                "keditorinsertFile") && w[c].match(
                "href=\"(.*?)\"|href='(.*?)'")
            && (e = w[c].match("href=\"(.*?)\"|href='(.*?)'")[1].replace(/"/gi,
                "").replace(/'/gi, "")), e && "" != e && a.setElementsArr.push(
                e)
          }
        }
        if (x) {
          var C = x.length;
          for (c = 0; c < C; c++) {
            x[c].match("src=\"(.*?)\"|src='(.*?)'") &&
            (e = x[c].match("src=\"(.*?)\"|src='(.*?)'")[1].replace(/"/gi,
                "").replace(/'/gi, "")), e && "" != e && a.setElementsArr.push(
                e)
          }
        }
        ReplaceRealObjectToImage()
      }
    } catch (D) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(D)
    }
  }
}

function checkPasteImage(a) {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.eventForPasteImage) {
    var c = _iframeDoc.createElement("div");
    c.innerHTML = a;
    a = c.getElementsByTagName("img");
    if (0 < a.length) {
      try {
        "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.pasteImage
            ? KEDITORTOP.G_CURRKEDITOR._config.event.pasteImage(a) : "function"
            === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_PasteImage
            && KEDITORTOP.KEDITORWIN.RAONKEDITOR_PasteImage(a)
      } catch (b) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        &&
        console.log(b)
      }
    }
  }
}

function replaceSpanToDivContainAbsolute(a) {
  var c = a.innerHTML, b = !1;
  try {
    for (var d = a.getElementsByTagName("table"), e = d.length - 1; 0 <= e;
        e--) {
      if ("1"
          == KEDITORTOP.G_CURRKEDITOR._config.pasteRemoveSpanAbsolute) {
        for (var f = !1, g = d[e].getElementsByTagName("span"),
            h = g.length - 1;
            0 <= h; h--) {
          g && "absolute" == g[h].style.position
          && (g[h].style.position = "", f = !0);
        }
        b = b ? b : f
      } else if ((g = GetParentbyTagName(d[e], "span")) && "absolute"
          == g.style.position) {
        var m = document.createElement("div");
        setCopyAllObjectAtributes(g, m, !0);
        g.parentNode.insertBefore(m,
            g);
        g.parentNode.removeChild(g);
        b = !0
      }
    }
  } catch (q) {
    a.innerHTML = c
  }
  return b
}

function insertCarriageReturn(a, c) {
  "1" == a._config.insertCarriageReturn && (c = c.replace(/<\/style>/gi,
      "</style>\r\n"), c = c.replace(/<\/p>/gi, "</p>\r\n"), c = c.replace(
      /<br>/gi, "<br>\r\n"), c = c.replace(/<br \/>/gi,
      "<br />\r\n"), c = c.replace(/<br\/>/gi, "<br/>\r\n"), c = c.replace(
      /<\/span><\/span>/gi, "</span></span\r\n>"), c = c.replace(/<\/tr>/gi,
      "</tr>\r\n"), c = c.replace(/<\/td>/gi, "</td>\r\n"), c = c.replace(
      /<\/th>/gi, "</th>\r\n"));
  return c
}

function removeCarriageReturn(a, c) {
  if ("1" == a._config.keepOriginalHtml) {
    return c;
  }
  "1" == a._config.insertCarriageReturn && (c = c.replace(/<\/style>\r\n/gi,
      "</style>"), c = c.replace(/<\/p>\r\n/gi, "</p>"), c = c.replace(
      /<br>\r\n/gi, "<br>"), c = c.replace(/<br \/>\r\n/gi,
      "<br />"), c = c.replace(/<br\/>\r\n/gi, "<br/>"), c = c.replace(
      /<\/style>\s/gi, "</style>"), c = c.replace(/<\/p>\s/gi,
      "</p>"), c = c.replace(/<br>\s/gi, "<br>"), c = c.replace(/<br \/>\s/gi,
      "<br />"), c = c.replace(/<br\/>\s/gi, "<br/>"), c = c.replace(
      /<\/tr>\r\n/gi, "</tr>"),
      c = c.replace(/<\/tr>\s/gi, "</tr>"), c = c.replace(/<\/td>\r\n/gi,
      "</td>"), c = c.replace(/<\/td>\s/gi, "</td>"), c = c.replace(
      /<\/th>\r\n/gi, "</th>"), c = c.replace(/<\/th>\s/gi, "</th>"));
  var b = RegExp("(<table *[^>?+]*>)\\s+<", "gi");
  c = c.replace(b, "$1<");
  b = RegExp("(<caption *[^>?+]*>)\\s+<", "gi");
  c = c.replace(b, "$1<");
  b = RegExp("(<tbody *[^>?+]*>)\\s+<", "gi");
  c = c.replace(b, "$1<");
  b = RegExp("(<tr *[^>?+]*>)\\s+<", "gi");
  c = c.replace(b, "$1<");
  b = RegExp("(<td *[^>?+]*>)\\s+<", "gi");
  c = c.replace(b, "$1<");
  b = RegExp("(<th *[^>?+]*>)\\s+<",
      "gi");
  c = c.replace(b, "$1<");
  b = RegExp("</tbody>\\s+<", "gi");
  c = c.replace(b, "</tbody><");
  b = RegExp("</caption>\\s+<", "gi");
  c = c.replace(b, "</caption><");
  b = RegExp("</tr>\\s+<", "gi");
  c = c.replace(b, "</tr><");
  b = RegExp("</td>\\s+<", "gi");
  c = c.replace(b, "</td><");
  b = RegExp("</th>\\s+<", "gi");
  c = c.replace(b, "</th><");
  b = RegExp("</div>\\s+<", "gi");
  c = c.replace(b, "</div><");
  b = RegExp("</p>\\s+</td", "gi");
  c = c.replace(b, "</p></td");
  b = RegExp("(<span *[^>?+]*>)([\r\n]+)(</ ?span>)", "gi");
  return c = c.replace(b, "$1&nbsp;$3")
}

function removeStripTags(a, c) {
  var b = c && 0 != c.length ? "<\\/?(?!(" + c.join("|") + "))\\b[^>]*>"
      : "<(\"[^\"]*\"|'[^']*'|[^'\">])*>";
  return a.replace(new RegExp(b, "gi"), "")
}

function unhtmlSpecialChars(a) {
  return a.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&nbsp;/g,
      " ").replace(/&amp;/g, "&")
}

function htmlSpecialChars(a) {
  return a.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g,
      "&gt;").replace(/ /g, "&nbsp;")
}

var StringBuffer = function () {
  this.buffer = []
};
StringBuffer.prototype.append = function (a) {
  this.buffer[this.buffer.length] = a
};
StringBuffer.prototype.toString = function () {
  return this.buffer.join("")
};

function addLineBreaker(a, c, b) {
  if ("br" === a.toLowerCase()) {
    return "<p>" + c.replace(/\r?\n/g, "<BR />")
        + "</p>";
  }
  c = c.replace(/\r?\n/g, "\n");
  a = new StringBuffer;
  c = c.split("\n");
  for (var d = c.length, e = "", f = 0; f < d; f++) {
    e = KEDITORTOP.RAONKEDITOR.util.trim(c[f]);
    if (f === d - 1 && "" === e) {
      break;
    }
    null !== e && "" !== e ? (e = b ? KEDITORTOP.RAONKEDITOR.util.escapeHtml(
            c[f]) : c[f], a.append("<P>"), a.append(e), a.append("</P>"))
        : KEDITORTOP.RAONKEDITOR.browser.ie && 10
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion ? a.append("<P>&nbsp;</P>")
            : a.append("<P><BR></P>")
  }
  return a.toString()
}

function checkContainClass(a, c) {
  var b = !1;
  if ("" != c && a.className && ""
      != a.className) {
    for (var d = a.className.split(" "), e = d.length, f = 0;
        f < e; f++) {
      if (d[f] == c) {
        b = !0;
        break
      }
    }
  }
  return b
}

function addDisalbeItemForNoActionTable(a) {
  return a = a.concat(
      "table_selection table_delete merge_cell split_cell table_row_clone insert_row_up insert_row_down delete_row insert_column_left insert_column_right delete_column table_bg_color table_same_width table_same_height table_same_widthheight table_group table_group_detail insert_row_column cell_property row_property column_property table_property table_select_all table_select_cell table_select_row table_select_column convert_table_to_text cell_border cell_bg_color table_indent table_outdent table_tool insert_row insert_column table_select align_vertical table_copy cell_size detail_cell_bg_color".split(
          " "))
}

function dropMousePosition(a) {
  try {
    var c = getEditrFromEvent(a), b = _iframeDoc.body.topMargin,
        d = _iframeDoc.body.leftMargin;
    c.mouseDropPosition.clientX = a.clientX < d ? d : a.clientX;
    c.mouseDropPosition.clientY = a.clientY < b ? b : a.clientY
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
}

function insertDropImage(a, c) {
  var b = getEditrFromEvent(a);
  b.isDragStartedInEditor = !1;
  showFileDropArea(!1);
  try {
    if ("1" == b._config.returnEvent.drag_event) {
      var d = {strEventName: "drop", objEvent: a}, e = !0;
      "function" === typeof b._config.event.drag ? e = b._config.event.drag(
          b.ID, d) : "function"
          === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_DragEvent
          && (e = KEDITORTOP.KEDITORWIN.RAONKEDITOR_DragEvent(b.ID, d));
      if (!1 === e) {
        KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
        return
      }
    }
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
    console.log(f)
  }
  if ("0" == b._config.useKManager || "html5" == b._config.runtimes) {
    if (c
    || (c = a.dataTransfer.files), !(-1 < b._config.disableInsertImage.indexOf(
        ",paste_image,")) && 0 < c.length && b._DOC.body.isContentEditable) {
      keditor_src_init(b._EDITOR.design);
      restoreSelection();
      setFocusToBody();
      if (KEDITORTOP.RAONKEDITOR.browser.ie) {
        try {
          if (dropMousePosition(a), _iframeDoc.caretPositionFromPoint) {
            var g = _iframeDoc.caretPositionFromPoint(
                b.mouseDropPosition.clientX,
                b.mouseDropPosition.clientY), h = _iframeDoc.createRange();
            h.setStart(g.offsetNode, g.offset);
            h.collapse()
          } else if (_iframeDoc.caretRangeFromPoint) {
            _iframeDoc.caretRangeFromPoint(
                b.mouseDropPosition.clientX,
                b.mouseDropPosition.clientY);
          } else if (_iframeDoc.body.createTextRange) {
            var h = _iframeDoc.body.createTextRange();
            h.moveToPoint(b.mouseDropPosition.clientX,
                b.mouseDropPosition.clientY);
            h.select()
          }
        } catch (m) {
          var q = b._BODY.lastChild;
          if (1 != q.nodeType || "P" != q.tagName) {
            q = b._DOC.createElement(
                "p"), b._BODY.appendChild(q);
          }
          doSetCaretPosition(q, 1)
        }
      } else if (d = getFirstRange().range,
      1 == d.collapsed) {
        e = null;
        try {
          var q = a.clientX, t = a.clientY;
          if (a.view == window) {
            var u = a.target;
            if (u && 1 == u.nodeType && "editor_drop_area" == u.id) {
              u.style.display = "block";
              var v = getClientRect(u);
              u.style.display = "none";
              q -= v.left;
              t -= v.top;
              createSelectionFromPoint(q, t)
            }
          } else {
            createSelectionFromPoint(q, t);
          }
          b.isInitFocusHandler && (createSelectionFromPoint(0,
              0), b.isInitFocusHandler = !1);
          setFocusToBody(b);
          d = getFirstRange().range;
          q = !0;
          d.collapsed && 1 == d.startContainer.nodeType && 0 == d.startOffset
          && 1
          == d.startContainer.childNodes.length &&
          (q = !1);
          q && (e = _iframeDoc.createElement("keditortemp"), d.insertNode(
              e), null
          != e.nextSibling && "BR" != e.nextSibling.tagName
          && doSetCaretPosition(
              e.nextSibling, !1))
        } catch (w) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(w)
        }
        e && e.parentNode.removeChild(e)
      }
      a.stopPropagation();
      a.preventDefault();
      q = getFileProcessObjectArrayHtml5(c);
      insertImageInDragAndDrop({editor: b, files: q})
    }
  }
}

function getFileProcessObjectArrayHtml5(a) {
  for (var c = [], b = a.length, d = 0; d < b; d++) {
    var e = {};
    if ("string" != typeof a[d].name) {
      var f = "image." + a[d].type.split("/")[1];
      a[d].name = f
    }
    e.name = a[d].name;
    e.fileObj = a[d];
    e.size = a[d].size;
    c.push(e)
  }
  return c
}

function getFileProcessObjectArrayAgent(a) {
  for (var c = [], b = a.length, d = 0; d < b; d++) {
    var e = {fileObj: null};
    e.path = a[d].path;
    e.name = getFileName(a[d].name);
    e.size = a[d].size;
    e.detect = a[d].detect;
    e.width = a[d].width;
    e.height = a[d].height;
    c.push(e)
  }
  return c
}

function FileProcessHandler(a) {
  this.files = [];
  this.successData = [];
  this.errorData = [];
  this.editor = a;
  this.addSuccessData = function (a, b, d) {
    b = b.replace(/\r\n/g, "");
    b = b.replace(/\n/g, "");
    b = b.replace(/\t/g, "");
    b = web_url_remove_char(b);
    a = {url: b, index: a};
    if (d) {
      for (var e in d) {
        a[e] = d[e];
      }
    }
    this.successData.push(a)
  };
  this.addErrorData = function (a, b, d) {
    this.errorData.push({fileName: b, message: d, index: a})
  };
  this.resetData = function () {
    this.successData = void 0;
    this.successData = [];
    this.errorData = void 0;
    this.errorData = []
  };
  this.callEvent =
      function (a, b, d) {
        if (this.errorData && 0 < this.errorData.length) {
          var e = !0, f = {
            strType: b,
            strMessage: this.errorData[0].message,
            arrFileError: this.errorData
          };
          try {
            "function" === typeof this.editor._config.event.onError
                ? e = this.editor._config.event.onError(this.editor.ID, f)
                : "function"
                === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_OnError
                && (e = KEDITORTOP.KEDITORWIN.RAONKEDITOR_OnError(
                    this.editor.ID, f))
          } catch (g) {
            e = !0
          }
          !1 !== e && "1" != this.editor._config.disableErrorConfirmMessage
          && (b = "", b = 1 < this.errorData.length
              ? RAONKEditor_lang.msg.multi_file_upload_error.replace("{0}",
                  this.errorData.length) : this.errorData[0].message, alert(b))
        }
        if (this.successData && 0 < this.successData.length) {
          for (b = 0;
              b < this.successData.length; b++) {
            var e = parseImageUrlFromHandler(this.successData[b].url), h;
            try {
              f = {strUrl: e.url}, "function"
              === typeof this.editor._config.event.beforeInsertUrl
                  ? h = this.editor._config.event.beforeInsertUrl(
                      this.editor.ID,
                      f) : "function"
                  === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeInsertUrl
                  && (h = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeInsertUrl(
                      this.editor.ID, f))
            } catch (m) {
              KEDITORTOP &&
              KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(m)
            }
            "string" == typeof h && (e.url = h);
            this.successData[b].url = e.url;
            this.successData[b].urlInfo = e;
            !0 !== d && (-1 < a.indexOf("image") ? insertImageSrc(this.editor,
                e.url) : insertElementsSrc(this.editor, e.url))
          }
        }
      };
  this.uploadFiles = function (a, b) {
    var d = this;
    d.resetData();
    d.files = a.files;
    var e = "string" == typeof a.uploadType ? a.uploadType : "",
        f = "string" == typeof a.errorType ? a.errorType : "",
        g = !0 === a.agentUpload, h = !0 === a.notExcuteInsertImageUrl, m = 0,
        q = function (a) {
          a =
              KEDITORTOP.RAONKEDITOR.util.trim(a);
          "[FAIL]" == a.substring(0, 6) ? d.addErrorData(m, d.files[m].name, a)
              : (a = a.replace(/\r\n/g, ""), a = a.replace(/\n/g,
                  ""), a = a.replace(/\t/g, ""), a = web_url_remove_char(
                  a), d.addSuccessData(m, a, {
                width: d.files[m].width,
                height: d.files[m].height,
                name: d.files[m].name,
                applyAutoFit: d.files[m].applyAutoFit
              }));
          m++;
          m < d.files.length ? t(d.files[m]) : (d.callEvent(e, f, h), "function"
          === typeof b && b(d.successData, d.errorData))
        }, t = function (a) {
          if ("string" == typeof a.path && "" != a.path) {
            if (g) {
              var b = function (a) {
                    q(a[0].path)
                  },
                  c = [];
              a = {
                guid: "cid:" + KEDITORTOP.RAONKEDITOR.util.makeGuid(),
                path: a.path,
                callback: b
              };
              c.push(a);
              agentFileUpload(d.editor, c, b)
            } else {
              q(convertImageAgentSrc("file:///" + a.path, !0));
            }
          } else {
            c = "" + ("kc" + KEDITORTOP.RAONKSolution.Agent.formfeed + "c01"
                + KEDITORTOP.RAONKSolution.Agent.vertical);
            c += "k01" + KEDITORTOP.RAONKSolution.Agent.formfeed
                + KEDITORTOP.G_CURRKEDITOR._config.security.encryptParam
                + KEDITORTOP.RAONKSolution.Agent.vertical;
            c += "k14" + KEDITORTOP.RAONKSolution.Agent.formfeed + a.fileObj.name
                + KEDITORTOP.RAONKSolution.Agent.vertical;
            c += "k15" + KEDITORTOP.RAONKSolution.Agent.formfeed
                + d.editor._config.saveFileNameRule
                + KEDITORTOP.RAONKSolution.Agent.vertical;
            c += "k16" + KEDITORTOP.RAONKSolution.Agent.formfeed
                + d.editor._config.saveFileNameRuleEx
                + KEDITORTOP.RAONKSolution.Agent.vertical;
            c += "k17" + KEDITORTOP.RAONKSolution.Agent.formfeed
                + d.editor._config.saveFolderNameRule
                + KEDITORTOP.RAONKSolution.Agent.vertical;
            c += "k20" + KEDITORTOP.RAONKSolution.Agent.formfeed + e;
            c = KEDITORTOP.RAONKEDITOR.util.makeEncryptParam(c);
            b = new FormData;
            b.append("k00",
                c);
            for (var c = G_FormData.length, f = 0; f < c; f++) {
              var h = G_FormData[f].form_value,
                  h = "1" == d.editor._config.security.encryptParam
                      ? KEDITORTOP.RAONKEDITOR.util.makeEncryptParam(h)
                      : encodeURIComponent(h);
              b.append(G_FormData[f].form_name, h)
            }
            c = a.fileObj.name;
            c = getUploadOriginalFileName(c, d.editor._config);
            b.append(d.editor._config.fileFieldID, a.fileObj, c);
            var m = new XMLHttpRequest;
            m.upload.onprogress = function (a) {
            };
            m.onload = function () {
              if (m) {
                var a;
                200 == m.status
                    ? (a = m.responseText, a = KEDITORTOP.RAONKEDITOR.util.parseDataFromServer(
                        a),
                        0 == a.indexOf("[OK]") ? (a = a.replace("[OK]",
                            ""), a = KEDITORTOP.RAONKEDITOR.util.makeDecryptReponseMessage(
                            a), a = web_url_remove_char(a)) : 0 == a.indexOf("[FAIL]")
                            && (a = a.replace("[FAIL]", ""), a = "[FAIL]"
                                + KEDITORTOP.RAONKEDITOR.util.makeDecryptReponseMessage(
                                    a))) : a = "[FAIL]File Upload Error";
                m = null;
                m = void 0;
                q(a)
              }
            };
            m.onerror = function () {
              m = null;
              m = void 0;
              q("[FAIL]File Upload Error")
            };
            m.open("POST", d.editor._config.handlerUrl, !0);
            m.send(b)
          }
        };
    d.files && 0 < d.files.length ? t(d.files[m]) : "function" === typeof b
        && b([], [])
  };
  this.convertBase64 =
      function (a, b) {
        var d = this;
        d.resetData();
        d.files = a.files;
        var e = "string" == typeof a.uploadType ? a.uploadType : "",
            f = "string" == typeof a.errorType ? a.errorType : "";
        if ("1" == d.editor._config.useKManager) {
          for (var g = {path: []}, h = 0; h < d.files.length; h++) {
            g.path.push(
                d.files[h].path);
          }
          h = function (a) {
            a = a.result;
            for (var c = a.length, g = 0; g < c; g++) {
              "-1" == a[g]
                  ? d.addErrorData(g, d.files[g].name,
                      "Error converting to base64 image") : d.addSuccessData(g,
                      a[g], {
                        width: d.files[g].width,
                        height: d.files[g].height,
                        name: d.files[g].name
                      });
            }
            d.callEvent(e,
                f, !0);
            "function" === typeof b && b(d.successData, d.errorData)
          };
          executeKC06(g, h)
        } else {
          g = {files: d.files}, h = function (a) {
            a = a.result;
            for (var c = a.length, g = 0; g < c; g++) {
              var h = a[g];
              null == h ? d.addErrorData(g, d.files[g].name,
                  "Error converting to base64 image") : d.addSuccessData(g,
                  h.base64, {
                    width: d.files[g].width,
                    height: d.files[g].height,
                    name: d.files[g].name
                  })
            }
            d.callEvent(e, f, !0);
            "function" === typeof b && b(d.successData, d.errorData)
          }, fileObjectToBase64(g, h)
        }
      }
}

FileProcessHandler.prototype.uploadFiles = function (a, c) {
  this.uploadFiles(a, c)
};
FileProcessHandler.prototype.convertBase64 = function (a, c) {
  this.convertBase64(a, c)
};

function insertImageInDragAndDrop(a) {
  var c = a.editor, b = function (a, b) {
    for (var d = 0; d < a.length; d++) {
      var h = _iframeDoc.createElement("img");
      applyImageAutoFit(h, a[d]);
      h.setAttribute("title", "");
      h.setAttribute("alt", a[d].name);
      h = h.outerHTML;
      KEDITORTOP.RAONKEDITOR.browser.chrome
      || KEDITORTOP.RAONKEDITOR.browser.opera
      || KEDITORTOP.RAONKEDITOR.browser.gecko ? (_iframeDoc.execCommand(
              "inserthtml", !1, h), "" != h
          && (c.UndoManager.putUndo(), c.UndoManager.charCount = 0))
          : pasteHtmlAtCaretHuge(h, !0);
      onChange({editor: c, isPossibleDirty: !0});
      if (h = getFirstRange().range) {
        rangy.getSelection(
            _iframeWin).removeAllRanges(), rangy.getSelection(
            _iframeWin).addRange(h)
      }
    }
  };
  a = {
    files: a.files,
    editor: c,
    maxSize: c._config.maxImageFileSize,
    allowExtArray: c._config.allowImageFileType,
    qualityOptions: c._config.imageQuality,
    extensionDetector: c._config.security.fileExtensionDetector,
    resultContainsNull: !1
  };
  "base64" == c._config.uploadMethod
  && (a.base64ImageMaxCount = c._config.maxImageBase64fileCount);
  var d = new FileValidator(a);
  d.allCheck(function (a, f) {
    f && d.showFilteredMessage(f,
        !1);
    d.setImageWidthHeight(function (a) {
      var d = new FileProcessHandler(c);
      a = {files: a, uploadType: "image", errorType: "imageUpload"};
      "base64" == c._config.uploadMethod ? d.convertBase64(a, b)
          : d.uploadFiles(a, b)
    })
  })
}

function ProcessImageInHtmlAgent(a) {
  this.editor = a;
  this.tempDiv = null;
  this.isBase64Changed = !1;
  this.htmlType = -1;
  this.execValidator = function (a, b) {
    var d = new FileValidator(a);
    d.allCheck(function (a, c) {
      c && d.showFilteredMessage(c, !1);
      b(a)
    })
  };
  this.processImages = function (a, b) {
    var d = this, e = d.htmlType, f = getImagesInfoInHtml(a.dom);
    if (0 < f.length) {
      for (var g = [], h = [], m = f.length, q = 0; q < m; q++) {
        var t = f[q], u = {fileObj: null, path: "", name: ""}, v = "";
        if ("IMG" == t.tagName) {
          v = t.getAttribute("src");
          0 == t.src.toLowerCase().indexOf("file:///") &&
          (v = "file:///" + v);
          var w = t.getAttribute("ke_size");
          t.removeAttribute("ke_size");
          u.size = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(w);
          0 == e && (u.width = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              t.style.width), u.height = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              t.style.height))
        } else {
          v = t.style.backgroundImage, "none" == v && (v = ""), "" == v
          && t.getAttribute("background") && (v = v.getAttribute(
              "background")), v = v.replace(/url\(/gi, ""), v = v.replace(
              /\)/gi,
              ""), v = v.replace(/"/gi, ""), v = v.replace(/'/gi, "");
        }
        0 == v.toLowerCase().indexOf("file:///") &&
        (g.push(t), h.push(v), u.path = v.replace("file:///",
            ""), u.name = getFileName(u.path), a.files.push(u))
      }
      if (0 < g.length) {
        if ("base64"
            == d.editor._config.uploadMethod) {
          a.base64ImageMaxCount = d.editor._config.maxImageBase64fileCount, d.isBase64Changed = !0, d.execValidator(
              a, function (e) {
                for (var f = {path: [], realIndex: []}, h = e.length, m = 0;
                    m < h;
                    m++) {
                  var q = g[m];
                  null == e[m] ? "IMG" == q.tagName ? q.parentNode.removeChild(
                          q)
                      : q.style.backgroundImage = "" : (f.realIndex.push(
                      m), f.path.push(e[m].path))
                }
                0 < f.path.length ? executeKC06(f, function (e) {
                  e =
                      e.result;
                  for (var h = e.length, m = 0; m < h; m++) {
                    var q = g[f.realIndex[m]];
                    if ("-1" != e[m]) {
                      var t = e[m], u;
                      try {
                        var v = {strUrl: t};
                        "function"
                        === typeof d.editor._config.event.beforeInsertUrl
                            ? u = d.editor._config.event.beforeInsertUrl(
                                d.editor.ID, v) : "function"
                            === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeInsertUrl
                            && (u = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeInsertUrl(
                                d.editor.ID, v))
                      } catch (x) {
                        KEDITORTOP && KEDITORTOP.RAONKEDITOR
                        && KEDITORTOP.RAONKEDITOR.logMode && console.log(x)
                      }
                      "string" == typeof u && (t = u);
                      "IMG" == q.tagName ?
                          (t = {
                            url: t,
                            urlInfo: parseImageUrlFromHandler(t),
                            width: a.files[f.realIndex[m]].width,
                            height: a.files[f.realIndex[m]].height
                          }, applyImageAutoFit(q, t))
                          : q.style.backgroundImage = "url(" + t + ")"
                    }
                  }
                  b()
                }) : b()
              });
        } else {
          var x = function (a) {
            for (var c = a.length, e = 0; e < c; e++) {
              var f = g[e];
              if (null == a[e]) {
                "IMG" == f.tagName ? f.parentNode.removeChild(f)
                    : f.style.backgroundImage = "";
              } else {
                var h = a[e].path;
                0 > h.indexOf("file:///") && (h = "file:///" + h);
                "IMG" == f.tagName
                && (f.src = h, h = KEDITORTOP.RAONKEDITOR.util.getOriginSrc(f));
                var h = convertImageAgentSrc(h,
                    !0), m;
                try {
                  var q = {strUrl: h};
                  "function" === typeof d.editor._config.event.beforeInsertUrl
                      ? m = d.editor._config.event.beforeInsertUrl(d.editor.ID,
                          q)
                      : "function"
                      === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeInsertUrl
                      && (m = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeInsertUrl(
                          d.editor.ID, q))
                } catch (t) {
                  KEDITORTOP && KEDITORTOP.RAONKEDITOR
                  && KEDITORTOP.RAONKEDITOR.logMode && console.log(t)
                }
                "string" == typeof m && (h = m);
                "IMG" == f.tagName ? (h = {
                  url: h,
                  urlInfo: parseImageUrlFromHandler(h),
                  width: a[e].width,
                  height: a[e].height
                }, applyImageAutoFit(f,
                    h)) : f.style.backgroundImage = "url(" + h + ")"
              }
            }
            b()
          };
          if (0 == e) {
            d.execValidator(a, x);
          } else if (2 <= e && 6 >= e) {
            if (2 == e
                || 3 == e) {
              e = "";
              f = g.length;
              for (q = 0; q < f; q++) {
                t = g[q], "IMG" == t.tagName
                    ? (t = KEDITORTOP.RAONKEDITOR.util.getOriginSrc(
                        t), e += encodeURIComponent(t)
                        + KEDITORTOP.RAONKSolution.Agent.formfeed) : e += h[q]
                        + KEDITORTOP.RAONKSolution.Agent.formfeed;
              }
              e = e.substring(0, e.length - 1);
              copyImageToTempFolder({imagesSrc: e}, function (b) {
                var e = KEDITORTOP.RAONKSolution.Agent.parseRtn(b);
                b = e.code;
                e = e.valueArr;
                if (null == e[0] || void 0 == e[0]) {
                  b =
                      2E3;
                }
                var e = e[0].split(KEDITORTOP.RAONKSolution.Agent.formfeed),
                    f = e.length;
                a.files = [];
                for (var g = 0; g < f; g++) {
                  var m = "", m = 1E3 == b ? e[g] : h[g], m = {
                    fileObj: null,
                    path: m.replace("file:///", ""),
                    name: getFileName(m)
                  };
                  a.files.push(m)
                }
                d.execValidator(a, x)
              })
            } else {
              d.execValidator(a, x);
            }
          } else {
            d.execValidator(a, x)
          }
        }
      } else {
        b()
      }
    } else {
      b()
    }
  };
  this.inPaste = function (a, b) {
    var d = this;
    d.htmlType = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(a.htmlType);
    var e = a.html, f = {
      files: [],
      editor: d.editor,
      maxSize: d.editor._config.maxImageFileSize,
      allowExtArray: d.editor._config.allowImageFileType,
      qualityOptions: d.editor._config.imageQuality,
      extensionDetector: d.editor._config.security.fileExtensionDetector,
      resultContainsNull: !0
    };
    d.tempDiv = getDocumentForDummy().createElement("div");
    d.tempDiv.innerHTML = e;
    f.dom = d.tempDiv;
    d.processImages(f, function () {
      var a = d.tempDiv.innerHTML;
      d.tempDiv = null;
      d.tempDiv = void 0;
      b(a, {isBase64Changed: d.isBase64Changed})
    })
  };
  this.inDocumentEdit = function (a, b) {
    var d = this;
    d.htmlType = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(a.htmlType);
    var e = {
      files: [], editor: d.editor, maxSize: d.editor._config.maxImageFileSize,
      allowExtArray: d.editor._config.allowImageFileType, resultContainsNull: !0
    };
    e.dom = d.editor._BODY;
    d.processImages(e, function () {
      b(d.editor)
    })
  }
}

ProcessImageInHtmlAgent.prototype.inPaste = function (a, c) {
  this.inPaste(a, c)
};
ProcessImageInHtmlAgent.prototype.inDocumentEdit = function (a, c) {
  this.inDocumentEdit(a, c)
};

function ProcessImageInHtml5(a) {
  this.editor = a;
  this.tempDiv = null;
  this.isBase64Changed = !1;
  this.htmlType = -1;
  this.execValidator = function (a, b) {
    var d = new FileValidator(a);
    d.allCheck(function (a, c) {
      c && d.showFilteredMessage(c, !1);
      d.setImageWidthHeight(function (a) {
        b(a)
      })
    })
  };
  this.inFileObject = function (a, b) {
    var d = this, e = {
      files: a.files,
      editor: d.editor,
      maxSize: d.editor._config.maxImageFileSize,
      allowExtArray: d.editor._config.allowImageFileType,
      qualityOptions: d.editor._config.imageQuality,
      extensionDetector: d.editor._config.security.fileExtensionDetector,
      resultContainsNull: !1
    };
    "base64" == d.editor._config.uploadMethod
    && (e.base64ImageMaxCount = d.editor._config.maxImageBase64fileCount);
    d.execValidator(e, function (a) {
      var b = new FileProcessHandler(d.editor);
      a = {files: a, uploadType: "image", errorType: "imageUpload"};
      "base64" == d.editor._config.uploadMethod ? b.convertBase64(a,
          function (a, b) {
            d.inFileObjectEnd(a)
          }) : b.uploadFiles(a, function (a, b) {
        d.inFileObjectEnd(a)
      })
    })
  };
  this.inFileObjectEnd = function (a, b) {
    for (var d = "", e = 0; e < a.length; e++) {
      var f = _iframeDoc.createElement("img");
      applyImageAutoFit(f, a[e]);
      f.setAttribute("title", "");
      f.setAttribute("alt", a[e].name);
      d += f.outerHTML
    }
    var g;
    try {
      e = {strHtml: d}, "function"
      === typeof this.editor._config.event.beforePaste
          ? g = this.editor._config.event.beforePaste(this.editor.ID, e)
          : "function" === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste
          && (g = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste(this.editor.ID,
              e))
    } catch (h) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(h)
    }
    if (!1 === g) {
      "1" == this.editor._config.useHtmlProcessByWorker &&
      this.editor.isPasting && (this.editor.isPasting = !1);
    } else {
      if ("string" == typeof g) {
        if ("" == g) {
          "1" == this.editor._config.useHtmlProcessByWorker
          && this.editor.isPasting && (this.editor.isPasting = !1);
          return
        }
        d = g
      }
      if (pasteWordCount(d)) {
        if (0 < d.length
        && this.editor.UndoManager.putUndo(), d = externalPageBreakDataRaplaceInEditor(
            d), KEDITORTOP.RAONKEDITOR.browser.chrome
        || KEDITORTOP.RAONKEDITOR.browser.opera
        || KEDITORTOP.RAONKEDITOR.browser.gecko ? (_iframeDoc.execCommand(
            "inserthtml", !1, d), "" != d && (this.editor.UndoManager.putUndo(),
            this.editor.UndoManager.charCount = 0)) : pasteHtmlAtCaretHuge(d,
            !0), "1" == this.editor._config.useHtmlProcessByWorker
        && this.editor.isPasting && (this.editor.isPasting = !1), onChange({
          editor: this.editor,
          isPossibleDirty: !0
        }), d = getFirstRange().range) {
          rangy.getSelection(
              _iframeWin).removeAllRanges(), rangy.getSelection(
              _iframeWin).addRange(d)
        }
      } else {
        "1" == this.editor._config.useHtmlProcessByWorker
        && this.editor.isPasting && (this.editor.isPasting = !1)
      }
    }
  };
  this.inHtml = function (a, b) {
    var d = this;
    d.htmlType = a.htmlType;
    var e = a.html,
        f = {
          files: [],
          editor: d.editor,
          maxSize: d.editor._config.maxImageFileSize,
          allowExtArray: d.editor._config.allowImageFileType,
          qualityOptions: d.editor._config.imageQuality,
          extensionDetector: d.editor._config.security.fileExtensionDetector,
          resultContainsNull: !0
        };
    "base64" == d.editor._config.uploadMethod
    && (f.base64ImageMaxCount = d.editor._config.maxImageBase64fileCount);
    d.tempDiv = getDocumentForDummy().createElement("div");
    d.tempDiv.innerHTML = e;
    e = getImagesInfoInHtml(d.tempDiv);
    if (0 < e.length) {
      for (var g = [], h = e.length,
          m = 0; m < h; m++) {
        var q = e[m], t = {fileObj: null, name: ""}, u = "";
        "IMG" == q.tagName ? u = q.src : (u = q.style.backgroundImage, "none"
        == u && (u = ""), "" == u && q.getAttribute("background")
        && (u = u.getAttribute("background")), u = u.replace(/url\(/gi,
            ""), u = u.replace(/\)/gi, ""), u = u.replace(/"/gi,
            ""), u = u.replace(/'/gi, ""));
        0 == u.indexOf("data:") && (g.push(
            q), q = KEDITORTOP.RAONKEDITOR.util.dataURItoBlob(u), "string"
        != typeof q.name && (u = "image." + q.type.split(
            "/")[1], q.name = u), t.fileObj = q, t.size = q.size, t.name = q.name, f.files.push(
            t))
      }
      0 < g.length ?
          d.execValidator(f, function (a) {
            for (var c = [], e = 0; e < a.length; e++) {
              var f = a[e];
              null == f ? g[e].parentNode.removeChild(g[e]) : c.push(f)
            }
            a = new FileProcessHandler(d.editor);
            c = {files: c, uploadType: "image", errorType: "imageUpload"};
            e = function (a, c) {
              for (var e = 0; e < a.length; e++) {
                var f = g[a[e].index];
                if ("IMG" == f.tagName) {
                  if (""
                      != f.style.width) {
                    a[e].width = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                        KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                            f.style.width));
                  } else if ("number"
                      == typeof f.width) {
                    var h = f.getAttribute("width");
                    -1 <
                    h.indexOf("pt") && f.setAttribute("width",
                        KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(h));
                    a[e].width = f.width
                  }
                  "" != f.style.height
                      ? a[e].height = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                          KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                              f.style.height)) : "number" == typeof f.height
                      && (h = f.getAttribute("height"), -1 < h.indexOf("pt")
                      && f.setAttribute("height",
                          KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                              h)), a[e].height = f.height);
                  applyImageAutoFit(f, a[e])
                } else {
                  f.style.backgroundImage = "url(" + a[e].url + ")"
                }
              }
              d.inHtmlEnd(b)
            };
            "base64" == d.editor._config.uploadMethod ? a.convertBase64(c, e)
                : a.uploadFiles(c, e)
          }) : d.inHtmlEnd(b)
    } else {
      d.inHtmlEnd(b)
    }
  };
  this.inHtmlEnd = function (a) {
    var b = this.tempDiv.innerHTML;
    this.tempDiv = null;
    this.tempDiv = void 0;
    a(b, {isBase64Changed: this.isBase64Changed})
  }
}

ProcessImageInHtml5.prototype.processImageFileObject = function (a, c) {
  this.inFileObject(a, c)
};
ProcessImageInHtml5.prototype.inHtml = function (a, c) {
  this.inHtml(a, c)
};

function editorLoadEvt(a) {
  a = getEditrFromEvent(a);
  KEDITORTOP.G_CURRKEDITOR = a;
  set_view_mode_auto_height(a)
}

function editorContextmenuEvt(a) {
  KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
}

function editorDropEvt(a) {
  KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
  return !1
}

function editorDragenterEvt(a) {
  try {
    a.stopPropagation(), a.preventDefault()
  } catch (c) {
    KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
  }
  useManagerDropZone(a);
  return !1
}

function editorIEKeydownEvt(a) {
  var c = a.target ? a.target : a.srcElement;
  if (c && -1 < c.id.indexOf("keditor_design_") && "iframe"
      == c.nodeName.toLowerCase()) {
    return KEDITORTOP.RAONKEDITOR.util.cancelEvent(
        a), !1
  }
}

function editorDialogMouseoverEvt(a) {
  (a.target ? a.target : a.srcElement).style.cursor = "move"
}

function editorDialogMouseoutEvt(a) {
  (a.target ? a.target : a.srcElement).style.cursor = "pointer"
}

function editorDialogScrollEvt(a) {
  a = getDialogWindow();
  drag && a.scroll(currentScrollPos[0], currentScrollPos[1])
}

function setScrollOverflow(a) {
  switch (a._config.scrollOverflow) {
    case "0":
      a._BODY.style.overflowX = "";
      a._BODY.style.overflowY = "";
      break;
    case "1":
      a._BODY.style.overflowX = "scroll";
      break;
    case "2":
      a._BODY.style.overflowY = "scroll";
      break;
    case "3":
      a._BODY.style.overflowX = "scroll";
      a._BODY.style.overflowY = "scroll";
      break;
    case "4":
      a._BODY.style.overflowX = "hidden";
      break;
    case "5":
      a._BODY.style.overflowY = "hidden";
      break;
    case "6":
      a._BODY.style.overflowX = "hidden", a._BODY.style.overflowY = "hidden"
  }
}

function removeEditorCss(a, c) {
  var b = a, d;
  try {
    var e = ["editor_layout.css", "editor_contents.css",
          "editor_showblocks.css", "editor_form.css"], f = e.length,
        g = a.match(new RegExp(/<link [^<>]*>/gi)), h = g.length;
    if (g) {
      for (var m = 0; m < f; m++) {
        for (var q = 0; q < h; q++) {
          -1
          < g[q].indexOf(e[m]) && (a = a.replace(g[q], ""));
        }
      }
    }
    d = a
  } catch (t) {
    d = b
  }
  return d
}

function createEvent(a, c, b) {
  var d = document.createElement("script");
  d.setAttribute("for", a);
  d.event = c;
  d.appendChild(document.createTextNode(b));
  document.body.appendChild(d)
}

function setFileOpenData(a) {
  if (a) {
    var c = !0;
    0 == KEDITORTOP.RAONKEDITOR.isEmpty() && 0 == confirm(
        RAONKEditor_lang.msg.newDocument) && (c = !1);
    c && (c = a.substring(0, 3).toLowerCase(), a = a.substring(3), "txt" == c
    && (a = htmlSpecialChars(a), a = addLineBreaker(
        KEDITORTOP.G_CURRKEDITOR._config.enterTag, a)), "doc" == c || "ppt" == c
    || "xls" == c ? setBodyValueToEditor(a)
        : KEDITORTOP.RAONKEDITOR.setHtmlContents(a,
            KEDITORTOP.G_CURRKEDITOR.ID))
  }
}

function removeLastBrTag(a) {
  if ("1" == a._config.removeLastBrTag) {
    try {
      var c = a._DOC.getElementsByTagName("p"), b = c.length;
      for (a = 0; a < b; a++) {
        var d = c[a].lastChild;
        if (1 == d.nodeType && "BR" == d.tagName) {
          var e = d.previousSibling;
          !e || 1 == e.nodeType && "BR" == e.tagName
          || d.parentNode.removeChild(
              d)
        }
      }
    } catch (f) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(f)
    }
  }
}

function changeRealTagToReplaceString(a) {
  var c = a;
  if (a) {
    var b = a.match(RegExp("<textarea *([^>?+])*>*([^>?+])*</textarea>", "gi"));
    if (b) {
      KEDITORTOP.G_CURRKEDITOR.sTextareaArr = b;
      for (var d = b.length, e = 0; e < d; e++) {
        c = a.replace(b[e],
            "{_keditor_textarea_" + e + "}")
      }
    }
  }
  return c
}

function changeReplaceStringToRealTag(a) {
  var c = a;
  if (a) {
    for (var b = KEDITORTOP.G_CURRKEDITOR.sTextareaArr, d = b.length, e = 0;
        e < d; e++) {
      c = a.replace("{_keditor_textarea_" + e + "}", b[e]);
    }
    KEDITORTOP.G_CURRKEDITOR.sTextareaArr = []
  }
  return c
}

function getViolationNodes(a) {
  keditor_src_init(a._EDITOR.design);
  var c = [];
  if ("" == a._config.accessibilityValidationItems) {
    c = ["table", "frame",
      "iframe", "img",
      "a"];
  } else {
    for (var b = a._config.accessibilityValidationItems.split(","),
        d = b.length, e = 0; e < d; e++) {
      if ("duplicate_id"
          != b[e].toLowerCase()) {
        var f = b[e].split("_")[0];
        0 > c.indexOf(f) && c.push(f)
      }
    }
  }
  d = c.length;
  b = [];
  for (e = 0; e < d; e++) {
    for (var f = "iframe" == c[e]
        ? _iframeDoc.body.getElementsByTagName("img")
        : _iframeDoc.body.getElementsByTagName(c[e]), g = f.length, h = 0;
        h < g;
        h++) {
      var m =
          f[h].getAttribute("keditorwebaccskip");
      if (null == m || void 0 == m) {
        if ("table" == c[e]) {
          -1
          < a._config.accessibilityValidationItems.indexOf("table_caption")
          && -1
          < a._config.accessibilityValidationItems.indexOf("table_summary")
          || ""
          == a._config.accessibilityValidationItems ? null != f[h].caption && ""
              != f[h].caption.innerHTML && "" != f[h].summary || b.push(f[h])
              : -1
              < a._config.accessibilityValidationItems.indexOf("table_caption")
                  ? null
                  != f[h].caption && "" != f[h].caption.innerHTML || b.push(f[h])
                  : -1
                  < a._config.accessibilityValidationItems.indexOf("table_summary")
                  &&
                  "" == f[h].summary && b.push(f[h]);
        } else if (-1 < "frame,a".indexOf(
            c[e])) {
          "a" == c[e] ? null != f[h].href && "" != f[h].href && ""
              == f[h].title && b.push(f[h]) : "" == f[h].title && b.push(
              f[h]);
        } else if ("iframe" == c[e]) {
          if (m = f[h].getAttribute("keditorcustomdata"), null != m && void 0
          != m
          && (elemData = getKEditorCustomData(m), "iframe" == elemData.type
          || "iframe" == elemData.type2)) {
            void 0 != elemData.title && ""
            != elemData.title || b.push(f[h])
          }
        } else {
          "img" == c[e] && (m = f[h].getAttribute("keditorcustomdata"), void 0
          == m || null == m) && (void 0 != f[h].alt && "" != f[h].alt ||
              b.push(f[h]))
        }
      }
    }
  }
  c = [];
  if (-1 < a._config.accessibilityValidationItems.indexOf("duplicate_id") || ""
      == a._config.accessibilityValidationItems) {
    for (a = _iframeDoc.body.getElementsByTagName(
        "*"), d = a.length, f = [], e = 0; e < d; e++) {
      !a[e].getAttribute("id")
      || -1 < f.indexOf(a[e].getAttribute("id")) || (g = getElementsById(
          a[e].getAttribute("id"), _iframeDoc)) && 1 < g.length && (c.push(
          g), f.push(a[e].getAttribute("id")));
    }
  }
  return {violateNodes: b, idSamNodes: c}
}

function setAdjustTableBorder(a) {
  if (KEDITORTOP.RAONKEDITOR.browser.ie && (11
      > KEDITORTOP.RAONKEDITOR.browser.ieVersion && 7
      < KEDITORTOP.RAONKEDITOR.browser.ieVersion
      || KEDITORTOP.RAONKEDITOR.browser.quirks) && 0 < a.getElementsByTagName(
      "table").length) {
    var c = KEDITORTOP.G_CURRKEDITOR._config.webPath.css;
    KEDITORTOP.RAONKEDITOR.isRelease
    || (c = KEDITORTOP.G_CURRKEDITOR._config.webPath.css_dev);
    var b = a.getElementsByTagName("head")[0];
    createDynamicCssLinkToHeadTag(a, b,
        c + "editor_adjust_table.css?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp);
    setTimeout(function () {
      for (var b = a.getElementsByTagName("link"), c = null, f = b.length - 1;
          0 <= f; f--) {
        -1 < b[f].href.indexOf("editor_adjust_table.css")
        && (c = b[f], c.parentNode.removeChild(c))
      }
    }, 0)
  }
}

function hiddenBlocks(a) {
  a = a.getElementsByTagName("link");
  for (var c = null, b = a.length - 1; 0 <= b; b--) {
    -1 < a[b].href.indexOf(
        "editor_showblocks.css") && (c = a[b], c.parentNode.removeChild(c))
  }
}

function removeDummyTag(a) {
  a = KEDITORTOP.RAONKEDITOR.util.replaceAll(a, "<![if !mso]>", "");
  a = KEDITORTOP.RAONKEDITOR.util.replaceAll(a, "<![if !mso & !vml]>", "");
  var c = KEDITORTOP.G_CURRKEDITOR._config.removeDummyTag;
  if ("" != c) {
    for (var c = c.split(","), b = c.length, d = 0; d < b; d++) {
      var e = KEDITORTOP.RAONKEDITOR.util.trim(c[d]),
          f = new RegExp("<" + e + ".*?>", "gi");
      a = a.replace(f, "");
      f = new RegExp("</" + e + ".*?>", "gi");
      a = a.replace(f, "")
    }
  }
  return a
}

function dummyTagClassClear(a) {
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useSelectionMark && (a = a.replace(
      RegExp("<kmark[^>]+class=.*?kmark.*?></kmark>", "gi"), ""));
  1 == KEDITORTOP.G_CURRKEDITOR.ShowTableBorder && (a = a.replace(
      " keditor_tableborder", ""), a = a.replace("keditor_tableborder ",
      ""), a = a.replace("keditor_tableborder", ""), a = a.replace('class=""',
      ""));
  return a
}

function ReplaceCustomDataToRealEvent(a) {
  try {
    var c = _iframeDoc;
    a && (c = a);
    for (var b = c.getElementsByTagName("input"), d = b.length - 1; 0 <= d;
        d--) {
      var e = b[d], f = e.getAttribute("keditorcustomdata");
      if (null != f && void 0 != f) {
        var g = getKEditorCustomData(f);
        if (g.type && "event" == g.type) {
          var h = g.eventName, m = g.eventFunction, q = h.split("\x0B"),
              t = m.split("\x0B"), u = q.length;
          for (i = 0; i < u; i++) {
            e.setAttribute(q[i], t[i])
          }
        }
        e.removeAttribute("keditorcustomdata")
      }
    }
    for (var v = c.getElementsByTagName("textarea"), d = v.length - 1; 0 <= d;
        d--) {
      var w =
          v[d], f = w.getAttribute("keditorcustomdata");
      if (null != f && void 0 != f) {
        g = getKEditorCustomData(f);
        if (g.type && "event"
            == g.type) {
          for (h = g.eventName, m = g.eventFunction, q = h.split(
              "\x0B"), t = m.split("\x0B"), u = q.length, i = 0; i < u;
              i++) {
            w.setAttribute(q[i], t[i]);
          }
        }
        w.removeAttribute("keditorcustomdata")
      }
    }
    for (var x = c.getElementsByTagName("select"), d = x.length - 1; 0 <= d;
        d--) {
      var y = x[d], f = y.getAttribute("keditorcustomdata");
      if (null != f && void 0 != f) {
        g = getKEditorCustomData(f);
        if (g.type && "event"
            == g.type) {
          for (h = g.eventName, m = g.eventFunction,
              q = h.split("\x0B"), t = m.split("\x0B"), u = q.length, i = 0;
              i < u; i++) {
            y.setAttribute(q[i], t[i]);
          }
        }
        y.removeAttribute("keditorcustomdata")
      }
    }
  } catch (z) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(z)
  }
}

function ReplaceRealEventToCustomData() {
  for (var a = _iframeDoc.getElementsByTagName("input"), c = a.length - 1;
      0 <= c; c--) {
    for (var b = a[c], d = KEDITORTOP.G_CURRKEDITOR._config.eventList.length,
        e = "", f = "", g = !1, h = 0; h < d; h++) {
      b.getAttribute(
          KEDITORTOP.G_CURRKEDITOR._config.eventList[h]) && (g
      && (e += "\x0B", f += "\x0B"), g = !0, e += KEDITORTOP.G_CURRKEDITOR._config.eventList[h], f += b.getAttribute(
          KEDITORTOP.G_CURRKEDITOR._config.eventList[h]));
    }
    "" != e
    && (d = {type: "event"}, d.eventName = e, d.eventFunction = f, setKEditorCustomData(
        b, d))
  }
  a =
      _iframeDoc.getElementsByTagName("textarea");
  for (c = a.length - 1; 0 <= c; c--) {
    b = a[c];
    d = KEDITORTOP.G_CURRKEDITOR._config.eventList.length;
    f = e = "";
    g = !1;
    for (h = 0; h < d; h++) {
      b.getAttribute(
          KEDITORTOP.G_CURRKEDITOR._config.eventList[h]) && (g
      && (e += "\x0B", f += "\x0B"), g = !0, e += KEDITORTOP.G_CURRKEDITOR._config.eventList[h], f += b.getAttribute(
          KEDITORTOP.G_CURRKEDITOR._config.eventList[h]));
    }
    "" != e
    && (d = {type: "event"}, d.eventName = e, d.eventFunction = f, setKEditorCustomData(
        b, d))
  }
  a = _iframeDoc.getElementsByTagName("select");
  for (c =
      a.length - 1; 0 <= c; c--) {
    b = a[c];
    d = KEDITORTOP.G_CURRKEDITOR._config.eventList.length;
    f = e = "";
    g = !1;
    for (h = 0; h < d; h++) {
      b.getAttribute(
          KEDITORTOP.G_CURRKEDITOR._config.eventList[h]) && (g
      && (e += "\x0B", f += "\x0B"), g = !0, e += KEDITORTOP.G_CURRKEDITOR._config.eventList[h], f += b.getAttribute(
          KEDITORTOP.G_CURRKEDITOR._config.eventList[h]));
    }
    "" != e
    && (d = {type: "event"}, d.eventName = e, d.eventFunction = f, setKEditorCustomData(
        b, d))
  }
}

function checkLockAttr(a, c, b) {
  for (var d = !1, e = [], e = "1" == KEDITORTOP.G_CURRKEDITOR._config.formMode
      ? KEDITORTOP.G_CURRKEDITOR._config.adminTableLock.checkLockName
      : KEDITORTOP.G_CURRKEDITOR._config.userTableLock.lockName, f = e.length;
      null != a;) {
    for (var g = 0; g < f; g++) {
      if (void 0 != a.getAttribute(e[g])) {
        if (b && a.tagName && "TABLE" == a.tagName && "2" != b) {
          break;
        }
        d = !0;
        break
      }
    }
    if (c) {
      break;
    } else {
      a = !a.tagName || "TD" != a.tagName && "TH" != a.tagName
          ? a.tagName && "TABLE" == a.tagName ? GetTDTHCell(a) : null
          : GetParentbyTagName(a, "table")
    }
  }
  return d
}

function removeLockAttr(a) {
  var c = KEDITORTOP.G_CURRKEDITOR._config.adminTableLock.checkLockName,
      b = c.length;
  if (a) {
    for (var d = 0; d < b; d++) {
      a.removeAttribute(c[d])
    }
  }
}

function setClassTableAndCellLock(a) {
  if ("0" != a._config.formMode || "0" != a._config.userTableLock.use) {
    "" == a._config.tableNoResizeClass
    && (a._config.tableNoResizeClass = "keditor_no_resize");
    "" == a._config.tableNoActionClass
    && (a._config.tableNoActionClass = "keditor_no_action");
    for (var c = a._config.tableNoResizeClass, b = a._config.tableNoActionClass,
        d = a._DOC.getElementsByTagName("table"), e = d.length, f = 0; f < e;
        f++) {
      if (checkLockAttr(d[f], !0)) {
        if ("1"
            == a._config.formMode) {
          setClassName(d[f], "k_editor_table_lock");
        } else {
          if ("1" ==
              a._config.userTableLock.use) {
            var g = a._config.userTableLock.defaultShowLockIcon;
            d[f].getAttribute("show_icon") && "" != d[f].getAttribute(
                "show_icon")
            && (g = d[f].getAttribute("show_icon"));
            "1" == g ? setClassName(d[f], "k_editor_table_lock")
                : removeClassName(
                    d[f], "k_editor_table_lock");
            setClassName(d[f], c);
            setClassName(d[f], b)
          }
        }
      } else {
        "1" == a._config.userTableLock.use
        && (g = a._config.userTableLock.defaultTableLockMode, d[f].getAttribute(
            "lock_mode") && "" != d[f].getAttribute("lock_mode")
        && (g = d[f].getAttribute("lock_mode")),
            "2" == g ? checkLockAttr(d[f]) && (setClassName(d[f],
                c), setClassName(
                d[f], b)) : (removeClassName(d[f], c), removeClassName(d[f],
                b)));
      }
    }
    c = a._DOC.getElementsByTagName("td");
    b = c.length;
    for (f = 0; f < b; f++) {
      checkLockAttr(c[f], !0) && ("1"
      == a._config.formMode ? setClassName(c[f], "k_editor_cell_lock")
          : (d = a._config.userTableLock.defaultShowLockIcon, e = GetParentbyTagName(
              c[f], "table"), e.getAttribute("show_icon") && ""
          != e.getAttribute(
              "show_icon") && (d = e.getAttribute("show_icon")), "1"
          == a._config.userTableLock.use && ("1" == d ? setClassName(c[f],
              "k_editor_cell_lock") : removeClassName(c[f],
              "k_editor_cell_lock"))))
    }
  }
}

function findNoLockCell(a) {
  var c = null;
  if (a) {
    var b = KEDITORTOP.G_CURRKEDITOR._config.userTableLock.defaultTableLockMode;
    a.getAttribute("lock_mode") && "" != a.getAttribute("lock_mode")
    && (b = a.getAttribute("lock_mode"));
    var d = !0;
    "1" == b && (d = !1);
    a = a.getElementsByTagName("td");
    for (var b = a.length, e = 0; e < b; e++) {
      if (0 == checkLockAttr(a[e],
          !d)) {
        c = a[e];
        break
      }
    }
  }
  return c
}

function findNextNoLockCell(a, c, b, d) {
  var e = null, f = a.cellIndex, g = a.parentNode;
  a = g.rowIndex;
  g = g.parentNode;
  if (c) {
    for (c = a; c < g.rows.length; c++) {
      var h = 0;
      c == a && (h = f);
      var m = g.rows[c];
      if ("1" == KEDITORTOP.G_CURRKEDITOR._config.adjustCursorInTable && d && 40
          == d) {
        if (m = getTopOrBottomBoundNextCell(m.cells[f],
            40).nextCell, checkLockAttr(m, !1, b)
        || (e = m), e) {
          break;
        } else {
          continue;
        }
      }
      for (; h < m.cells.length; h++) {
        if (!checkLockAttr(m.cells[h], !1, b)) {
          e = m.cells[h];
          break
        }
      }
      if (e) {
        break
      }
    }
  } else {
    for (c = a; 0 <= c; c--) {
      m = g.rows[c];
      h = m.cells.length - 1;
      c ==
      a && (h = f);
      if ("1" == KEDITORTOP.G_CURRKEDITOR._config.adjustCursorInTable && d && 38
          == d) {
        if (m = getTopOrBottomBoundNextCell(m.cells[f],
            38).nextCell, checkLockAttr(m, !1, b)
        || (e = m), e) {
          break;
        } else {
          continue;
        }
      }
      for (; 0 <= h; h--) {
        if (!checkLockAttr(m.cells[h], !1, b)) {
          e = m.cells[h];
          break
        }
      }
      if (e) {
        break
      }
    }
  }
  return e
}

function setFocusForLock(a) {
  try {
    if (a) {
      if ("TD" == a.tagName || "TH" == a.tagName) {
        var c = GetParentbyTagName(a, "table");
        checkLockAttr(c, !0) ? ("P" == a.firstChild.tagName
                ? doSetCaretPosition(
                    a.firstChild, 0) : doSetCaretPosition(a,
                    0), KEDITORTOP.G_CURRKEDITOR._iconEnable(
                "focusInCellLockTable"))
            : "P" == a.firstChild.tagName ? (doSetCaretPosition(a.firstChild,
                    0), KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell"))
                : (doSetCaretPosition(a, 0), KEDITORTOP.G_CURRKEDITOR._iconEnable(
                    ""))
      } else {
        doSetCaretPosition(a, 0), KEDITORTOP.G_CURRKEDITOR._iconEnable("")
      }
    }
  } catch (b) {
    KEDITORTOP &&
    KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(b)
  }
}

function findNoLockElem(a) {
  var c = null;
  if (a) {
    var b = a.previousSibling;
    b && 1 == b.nodeType && !checkLockAttr(b) && (c = b);
    null == c && (a = a.nextSibling) && 1 == a.nodeType && !checkLockAttr(a)
    && (c = a)
  }
  return c
}

function checkLockElemInSelectionRange() {
  try {
    var a = getFirstRange(), c = a.range;
    if (0 == c.collapsed) {
      var b = [[], []];
      b[0] = getNodesInRange(c);
      if (null != c.startContainer.previousSibling && "HEAD"
          == c.startContainer.previousSibling.tagName && null
          == c.endContainer.nextSibling) {
        var d = _iframeDoc.getElementsByTagName("table"),
            e = _iframeDoc.getElementsByTagName("td");
        b[0] = d;
        b[1] = e
      }
      for (var f = b.length - 1; 0 <= f; f--) {
        for (var g = b[f].length - 1;
            0 <= g; g--) {
          var h;
          h = "TD" == b[f][g].tagName || "TABLE" == b[f][g].tagName;
          if (b[f][g].tagName &&
              h && checkLockAttr(b[f][g], !0)) {
            a.sel.removeAllRanges();
            KEDITORTOP.G_CURRKEDITOR.lastElemForLock ? setFocusForLock(
                    KEDITORTOP.G_CURRKEDITOR.lastElemForLock)
                : (window.focus(), document.body.focus());
            break
          }
        }
      }
    }
  } catch (m) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(m)
  }
}

function IsExistTableLock(a) {
  var c = !1, b = a._DOC;
  a = b.getElementsByTagName("table");
  var d = b.getElementsByTagName("td"), b = b.getElementsByTagName("th");
  a = [a, d, b];
  d = a.length;
  for (b = 0; b < d; b++) {
    for (var e = a[b].length, f = 0; f < e; f++) {
      if (checkLockAttr(a[b][f],
          !0)) {
        c = !0;
        break
      }
    }
    if (c) {
      break
    }
  }
  return c
}

function setKEDITORWINDOC(a) {
  var c = null, c = a ? a : KEDITORTOP.G_CURRKEDITOR;
  null != c.dialogWindow && (setKEDITORWINwindow(), setKEDITORDOCdocument())
}

function groupingIcon(a) {
  a && (KEDITORTOP.G_CURRKEDITOR = a);
  "1" == KEDITORTOP.G_CURRKEDITOR._config.tool_bar_grouping && ("0"
  != KEDITORTOP.G_CURRKEDITOR._config.tool_bar && "2"
  != KEDITORTOP.G_CURRKEDITOR._config.tool_bar || makeGrouping(1, a), "0"
  != KEDITORTOP.G_CURRKEDITOR._config.tool_bar && "1"
  != KEDITORTOP.G_CURRKEDITOR._config.tool_bar || makeGrouping(2, a))
}

function makeGrouping(a, c) {
  c && (KEDITORTOP.G_CURRKEDITOR = c);
  if (KEDITORTOP.RAONKEDITOR.util.CheckEditorVisible(
      KEDITORTOP.G_CURRKEDITOR.ID)) {
    var b = KEDITORTOP.G_CURRKEDITOR._FRAMEWIN.document.getElementById(
        "ue_editor_main_" + KEDITORTOP.G_CURRKEDITOR.ID), b = getClientRect(b);
    if (!(200 > b.right - b.left)) {
      for (var d = KEDITORTOP.G_CURRKEDITOR._FRAMEWIN.document.getElementById(
              "keditor_tab_tool" + a + "_" + KEDITORTOP.G_CURRKEDITOR.ID),
          e = KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a - 1].length, e = e - 1;
          0 <= e; e--) {
        d.appendChild(KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a -
        1][e]);
      }
      KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a - 1] = [];
      KEDITORTOP.G_CURRKEDITOR._FRAMEWIN.document.getElementById(
          "ul_tool_bar_grouping_list" + a).innerHTML = "";
      for (var d = d.childNodes, f = d.length, g = [], e = 0; e < f; e++) {
        1
        == d[e].nodeType && (-1 < d[e].className.indexOf("uebutton") || -1
            < d[e].className.indexOf("ue_SM")) && g.push(d[e]);
      }
      for (e = g.length - 1; 0 <= e; e--) {
        if (getClientRect(g[e]).right
            >= b.right - 18) {
          -1 < g[e].id.indexOf("detail_table_insert")
              ? (KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a - 1].push(
                  g[e]), KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a -
              1].push(g[e - 1]), --e) : -1 < g[e].id.indexOf("detail_list_") || -1
              < g[e].id.indexOf("_group_detail") || -1 < g[e].id.indexOf(
                  "detail_font_") || -1 < g[e].id.indexOf("detail_cell_")
                  ? (KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a - 1].push(
                      g[e]), KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a - 1].push(
                      g[e - 1]), --e) : KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a
                  - 1].push(g[e]);
        } else if ("none" != g[e].style.display) {
          break;
        }
      }
      e = KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a - 1].length;
      b = KEDITORTOP.G_CURRKEDITOR._FRAMEWIN.document.getElementById(
          "keditor_span_" +
          KEDITORTOP.G_CURRKEDITOR.ID + "tool_bar_grouping" + a);
      if (0 == e) {
        b.style.display = "none";
      } else {
        for (--e; 0 <= e;
            e--) {
          d = KEDITORTOP.G_CURRKEDITOR._FRAMEWIN.document.createElement(
              "li"), -1 < KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a
          - 1][e].id.indexOf("list_") ? (d.appendChild(
                  KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a - 1][e]), d.appendChild(
                  KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a - 1][e - 1]), --e)
              : d.appendChild(KEDITORTOP.G_CURRKEDITOR.Toolbar_group[a
              - 1][e]), KEDITORTOP.G_CURRKEDITOR._FRAMEWIN.document.getElementById(
              "ul_tool_bar_grouping_list" +
              a).appendChild(d);
        }
        b.style.display = ""
      }
    }
  }
}

function setPositionGroupingDiv(a) {
  var c = document.getElementById("keditor_div_tool_bar_grouping_box" + a),
      b = document.getElementById(
          "keditor_span_" + KEDITORTOP.G_CURRKEDITOR.ID + "tool_bar_grouping"
          + a), b = getClientRect(b);
  a = getClientRect(document.getElementById("ul_tool_bar_grouping_list" + a));
  c.style.left = b.right - (a.right - a.left) - 2 + "px";
  c.style.top = b.bottom + "px"
}

function showGroupingBackground() {
  var a = document.getElementById("keditor_grouping_background");
  a || (a = document.createElement("div"), a.setAttribute("id",
      "keditor_grouping_background"), a.style.zIndex = G_MAIN_ZINDEX
      + 800, document.body.appendChild(
      a), KEDITORTOP.RAONKEDITOR.util.addEventEx(a, "click", function () {
    hideGroupingBox()
  }), a.onmousedown = function () {
    return !1
  }, a.unselectable = "on");
  RAONK_EDITOR.prototype.dialog.set_full_size(a);
  a.style.display = "block"
}

function hideGroupingBox() {
  dialogCancel();
  var a = document.getElementById("keditor_div_tool_bar_grouping_box1");
  a && (a.style.display = "none");
  if (a = document.getElementById(
      "keditor_div_tool_bar_grouping_box2")) {
    a.style.display = "none";
  }
  if (a = document.getElementById(
      "keditor_grouping_background")) {
    a.style.display = "none"
  }
}

function isGroupingIcon(a, c, b) {
  var d = !1;
  "1" == KEDITORTOP.G_CURRKEDITOR._config.tool_bar_grouping && (a = b ? b
      : document.getElementById("ue_" + a + c), (a = GetParentbyTagName(a,
      "ul")) && -1 < a.id.indexOf("ul_tool_bar_grouping") && (d = !0));
  return d
}

function userCssSet(a, c) {
  var b = strRetvalue = a,
      d = '<link href="' + c + '" rel="stylesheet" type="text/css">';
  try {
    if (-1 == a.indexOf(d)) {
      var e = a.indexOf("</head>");
      if (-1 == e) {
        var f = a.indexOf("<body");
        strRetvalue = -1 == f ? "<head>" + d + "</head><body>" + a + "</body>"
            : a.substring(0, f) + "<head>" + d + "</head>" + a.substring(f)
      } else {
        strRetvalue = a.substring(0, e) + d + a.substring(e)
      }
    }
  } catch (g) {
    strRetvalue = b
  }
  return strRetvalue
}

function loadDirectEditHtmlUrl(a) {
  if ("" != a.directEditHtmlUrl) {
    var c = KEDITORTOP.G_CURRKEDITOR._EDITOR.design;
    KEDITORTOP.RAONKEDITOR.util.addEventEx(c, "load",
        loadDirectEditHtmlUrlEvent);
    "1" == KEDITORTOP.G_CURRKEDITOR._config.statusBarLoading
        ? (showProcessingBackground(), setTimeout(function () {
          c.src = a.directEditHtmlUrl
        }, G_Progress_LoadTime)) : c.src = a.directEditHtmlUrl
  }
}

function loadDirectEditHtmlUrlEvent() {
  try {
    var a = KEDITORTOP.G_CURRKEDITOR._EDITOR.design,
        c = KEDITORTOP.G_CURRKEDITOR._setting.encoding,
        b = KEDITORTOP.G_CURRKEDITOR._setting.lang,
        d = KEDITORTOP.G_CURRKEDITOR._setting.xmlnsname,
        e = KEDITORTOP.G_CURRKEDITOR._setting.font_family,
        f = KEDITORTOP.G_CURRKEDITOR._setting.font_size,
        g = KEDITORTOP.G_CURRKEDITOR._setting.line_height, h = a.contentWindow,
        m = getIframeDocument(a),
        q = h.document.documentElement.getElementsByTagName("head")[0];
    if (null == q || void 0 == q) {
      q = m.createElement("head"),
          m.insertBefore(q, m.body);
    }
    if ("" != KEDITORTOP.G_CURRKEDITOR._config.imageBaseUrl) {
      for (var t = q.getElementsByTagName("base"), u = t.length, v = 0; v < u;
          v++) {
        if (t[v].href && -1 < t[v].href.indexOf(
            KEDITORTOP.G_CURRKEDITOR._config.imageBaseUrl)) {
          sameCheck = !0;
          break
        }
      }
      var w = m.createElement("base");
      w.href = KEDITORTOP.G_CURRKEDITOR._config.imageBaseUrl;
      q.appendChild(w)
    }
    if ("" != KEDITORTOP.G_CURRKEDITOR._config.ieCompatible) {
      for (var x = q.getElementsByTagName("meta"), y = x.length, v = 0; v < y;
          v++) {
        if (x[v].getAttribute("content") && -1 < x[v].getAttribute(
            "content").indexOf("IE=" +
            KEDITORTOP.G_CURRKEDITOR._config.ieCompatible)) {
          sameCheck = !0;
          break
        }
      }
      var z = m.createElement("meta");
      z.setAttribute("http-equiv", "X-UA-Compatible");
      z.setAttribute("content",
          "IE=" + KEDITORTOP.G_CURRKEDITOR._config.ieCompatible);
      q.appendChild(z)
    }
    for (var A = q.getElementsByTagName("style"), B = A.length, h = !1, v = 0;
        v < B; v++) {
      if (1 == defaultStyleSameCheck(A[v].innerHTML,
          KEDITORTOP.G_CURRKEDITOR)) {
        h = !0;
        break
      }
    }
    if (!h) {
      var C = createEditorDefaultStyleInnerHTML(
          KEDITORTOP.G_CURRKEDITOR._config, e, f, g);
      addDynamicCssToHeadTag(m,
          q, C)
    }
    e = "";
    e = KEDITORTOP.RAONKEDITOR.isRelease
        ? KEDITORTOP.G_CURRKEDITOR._config.webPath.css
        : KEDITORTOP.G_CURRKEDITOR._config.webPath.css_dev;
    createDynamicCssLinkToHeadTag(m, q,
        e + "editor_contents.css?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp);
    "1" != KEDITORTOP.G_CURRKEDITOR._config.formMode && "1"
    != KEDITORTOP.G_CURRKEDITOR._config.userTableLock.use
    || createDynamicCssLinkToHeadTag(m, q,
        e + "editor_form.css?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp);
    if (b && 0 < b.length) {
      var D = m.getElementsByTagName("html")[0];
      D && (-1 < b.indexOf("-") &&
      (b = b.split("-")[0]), D.setAttribute("lang", b), D.setAttribute(
          "xml:lang", b), 0 < d.length && D.setAttribute("xmlns", d))
    }
    "" == c && (c = "utf-8");
    var H = m.createElement("meta");
    H.setAttribute("http-equiv", "Content-Type");
    H.setAttribute("content", "text/html");
    H.setAttribute("charset", c);
    q.appendChild(H);
    5 < KEDITORTOP.G_CURRKEDITOR._config.userCssUrl.length
    && createDynamicCssLinkToHeadTag(m, q,
        KEDITORTOP.G_CURRKEDITOR._config.userCssUrl);
    5 < KEDITORTOP.G_CURRKEDITOR._config.webFontCssUrl.length
    && createDynamicCssLinkToHeadTag(m,
        q, KEDITORTOP.G_CURRKEDITOR._config.webFontCssUrl);
    5 < KEDITORTOP.G_CURRKEDITOR._config.userJsUrl.length
    && createDynamicJsLinkToHeadTag(m, q,
        KEDITORTOP.G_CURRKEDITOR._config.userJsUrl);
    RAONK_EDITOR.prototype._load_editor_frame(!1);
    0 == isViewMode(KEDITORTOP.G_CURRKEDITOR)
    && (KEDITORTOP.G_CURRKEDITOR._editorCustomDataMode = !0, "1"
    == KEDITORTOP.G_CURRKEDITOR._config.formMode
        ? (ReplaceRealEventToCustomData(), ReplaceRealObjectToImage(!1))
        : ReplaceRealObjectToImage(), 0 == h && xssReplaceScript(_iframeDoc));
    setScrollOverflow(KEDITORTOP.G_CURRKEDITOR);
    setStyleForTableBorderNodeClass(KEDITORTOP.G_CURRKEDITOR);
    setCssForFormMode(KEDITORTOP.G_CURRKEDITOR);
    KEDITORTOP.G_CURRKEDITOR._iconEnable("");
    setBodyDefaultValue();
    try {
      var G = KEDITORTOP.G_CURRKEDITOR._BODY.innerHTML,
          G = addHtmlToSetValue(KEDITORTOP.G_CURRKEDITOR, G),
          G = removeDummyTag(G), G = removeIncorrectSpaceInTag(G),
          G = RAONK_EDITOR.HTMLParser.RemoveOfficeTag2(G);
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlCorrection && 0 == h
      && (G = htmlTagRevision(G, !1));
      G = removeTagStyle(G);
      G = htmlAsciiToChar(G);
      G = RemoveUnnecessaryChar(G);
      0 == h && (G = CleanZeroChar(G));
      c = !1;
      "1" == KEDITORTOP.G_CURRKEDITOR._config.replaceEmptyTagWithSpace
      && (c = !0);
      G = KEDITORTOP.RAONKEDITOR.util.htmlRevision(G, c);
      KEDITORTOP.G_CURRKEDITOR._BODY.innerHTML = G
    } catch (I) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(I)
    }
    wrapPtagForNotBlockTag(KEDITORTOP.G_CURRKEDITOR);
    replaceBrTag(KEDITORTOP.G_CURRKEDITOR);
    fn_IEJASOBug(KEDITORTOP.G_CURRKEDITOR);
    removeLastBrTag(KEDITORTOP.G_CURRKEDITOR);
    0 == isViewMode(KEDITORTOP.G_CURRKEDITOR) && (removeNbspInPTag(
        KEDITORTOP.G_CURRKEDITOR),
        replaceClassForBorder(KEDITORTOP.G_CURRKEDITOR,
            KEDITORTOP.G_CURRKEDITOR._BODY, "show"), replaceClassForBookmark(
        KEDITORTOP.G_CURRKEDITOR, KEDITORTOP.G_CURRKEDITOR._BODY, "show"));
    setFocusToBody();
    setFocusChildForStyle(KEDITORTOP.G_CURRKEDITOR._BODY);
    KEDITORTOP.RAONKEDITOR.util.setBodyBackground(KEDITORTOP.G_CURRKEDITOR);
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
    KEDITORTOP.G_CURRKEDITOR.UndoManager.canUndo = !1;
    KEDITORTOP.G_CURRKEDITOR.UndoManager.canRedo =
        !1;
    KEDITORTOP.G_CURRKEDITOR._iconEnable("");
    insertImageSrc(KEDITORTOP.G_CURRKEDITOR);
    showRuler(KEDITORTOP.G_CURRKEDITOR);
    setClassTableAndCellLock(KEDITORTOP.G_CURRKEDITOR);
    setAdjustTableBorder(KEDITORTOP.G_CURRKEDITOR._DOC);
    "show_blocks" == KEDITORTOP.G_CURRKEDITOR.ShowBlocks
    && (KEDITORTOP.G_CURRKEDITOR.ShowBlocks = "", command_showBlocks(
        KEDITORTOP.G_CURRKEDITOR.ID, KEDITORTOP.G_CURRKEDITOR))
  } catch (M) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(M)
  } finally {
    KEDITORTOP.RAONKEDITOR.util.removeEvent(a,
        "load", loadDirectEditHtmlUrlEvent), "1"
    == KEDITORTOP.G_CURRKEDITOR._config.statusBarLoading
    && hideProcessingBackground()
  }
}

function showProcessingBackground() {
  var a = document.getElementById("keditor_Processing_background"),
      c = document.getElementById("keditor_Processing_text");
  a || (a = document.createElement("div"), a.setAttribute("id",
      "keditor_Processing_background"), a.style.zIndex = G_MAIN_ZINDEX
      + 900, a.style.verticalAlign = "middle", a.className = "keditor_Processing_background_"
      + KEDITORTOP.G_CURRKEDITOR._config.style.skinName, c = document.createElement(
      "div"), c.setAttribute("id",
      "keditor_Processing_text"), c.style.zIndex = parseIntOr0(a.style.zIndex) +
      100, c.innerHTML = KEDITORTOP.G_CURRKEDITOR._config.style.htmlprocessCustomText, c.className = "keditor_Processing_text_"
      + KEDITORTOP.G_CURRKEDITOR._config.style.skinName, document.body.appendChild(
      a), document.body.appendChild(c));
  RAONK_EDITOR.prototype.dialog.set_full_size(a);
  a.style.display = "block";
  c.style.display = "block"
}

function hideProcessingBackground() {
  var a = document.getElementById("keditor_Processing_background"),
      c = document.getElementById("keditor_Processing_text");
  a && (a.style.display = "none", c.style.display = "none");
  "" != KEDITORTOP.G_CURRKEDITOR._config.placeholder.content
  && placeholderControl(KEDITORTOP.G_CURRKEDITOR, "class");
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
  && KEDITORTOP.G_CURRKEDITOR.isPasting
  && (KEDITORTOP.G_CURRKEDITOR.isPasting = !1);
  try {
    for (var b in G_KPlugin) {
      if ("function"
          === typeof G_KPlugin[b].onChange) {
        G_KPlugin[b].onChange()
      }
    }
  } catch (d) {
    KEDITORTOP &&
    KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(d)
  }
}

function textCheckInString(a) {
  a = a.replace(/\r\n/g, "");
  a = a.replace(/\r/g, "");
  a = a.replace(/\n/g, "");
  a = a.replace(/\t/g, "");
  return a = a.replace(/\s/g, "")
}

function getDialogWindow(a) {
  var c = KEDITORTOP.window;
  a = a ? a : KEDITORTOP.G_CURRKEDITOR;
  null != a.dialogWindow && (c = a.dialogWindow);
  return c
}

function getDialogDocument(a) {
  var c = KEDITORTOP.window.document;
  a = a ? a : KEDITORTOP.G_CURRKEDITOR;
  null != a.dialogWindow && (c = a.dialogWindow.document);
  return c
}

function addHtmlToSetValue(a, c) {
  var b = backValue = c;
  try {
    var d = a._config.addHtmlToSetValue.html;
    if ("" != d) {
      var e = a._config.addHtmlToSetValue.preOrSub, f = -1;
      if (0 == e) {
        var g = c.toLowerCase().indexOf("<body");
        -1 < g && (f = g + c.substring(g).indexOf(">"))
      } else {
        f = c.toLowerCase().indexOf("</body") - 1;
      }
      b = 0 < f ? c.substring(0, f + 1) + d + c.substring(f + 1) : 0 == e ? d
          + c : c + d;
      a._config.addHtmlToSetValue.html = ""
    }
  } catch (h) {
    b = backValue
  }
  return b
}

function adjustTableForIEJASOBug(a) {
  try {
    if ("1"
        == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_DeleteTableAlign) {
      if ("1"
          == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_ReplaceAlignMargin
          && ("center" == a.align || "right" == a.align)) {
        var c = getReplaceAlignMargin(KEDITORTOP.G_CURRKEDITOR, a);
        0 != c && (a.style.marginLeft = c + "px")
      }
      a.align = "";
      a.removeAttribute("align");
      try {
        "cssFloat" in a.style ? a.style.cssFloat = "" : a.style.styleFloat = ""
      } catch (b) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(b)
      }
    }
    for (var c =
        ["td", "th", "p", "span"], d = c.length, e = 0; e < d; e++) {
      var f = a.getElementsByTagName(c[e]), g = f.length;
      if ("span" != c[e]) {
        for (var h = 0; h < g; h++) {
          1
          == f[h].childNodes.length && 1 == f[h].childNodes[0].nodeType && "BR"
          == f[h].childNodes[0].tagName && (f[h].innerHTML = "P" == f[h].tagName
              ? "&nbsp;" : "<p>&nbsp;</p>");
        }
      } else {
        for (h = 0; h < g; h++) {
          if (1
              != f[h].childNodes.length || "br"
              != f[h].childNodes[0].tagName.toLowerCase()) {
            var m = f[h].innerHTML, m = m.replace(/<br>$/ig, ""),
                m = m.replace(/<br ([^>]+)>$/ig, "");
            11 == KEDITORTOP.RAONKEDITOR.browser.ieVersion &&
            "xp" != KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase()
            && ""
            == m && (m = unescape("%u200B"));
            f[h].innerHTML = m
          }
        }
      }
    }
  } catch (q) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(q)
  }
}

function getReplaceAlignMargin(a, c) {
  var b = 0;
  (b = GetTDTHCell(c)) ? b = parseIntOr0(b.clientWidth)
      : (b = getWidthForAutoBodyFit(a, "table"), "1" != a._config.autoBodyFit
      && (b += 30), KEDITORTOP.RAONKEDITOR.browser.ie || (b -= 20));
  var d;
  "" != c.style.width && -1 < c.style.width.indexOf("px") ? d = parseIntOr0(
      c.style.width) : (d = getClientRect(c), d = d.right - d.left);
  d = b - d;
  0 < d ? "center" == c.align ? b = d / 2 : "right" == c.align && (b = d)
      : b = 0;
  return b
}

function endBrForIEJASOBug(a) {
  if (a.hasChildNodes() && 1 == a.lastChild.nodeType && 1
      < a.childNodes.length) {
    try {
      var c = a.lastChild;
      if ("br" == c.tagName.toLowerCase()) {
        var b = !0;
        if (2 < a.childNodes.length && c.previousSibling) {
          var d = c.previousSibling;
          d && 1 == d.nodeType && "br" == d.tagName.toLowerCase() && (b = !1)
        }
        b && a.removeChild(c)
      }
    } catch (e) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(e)
    }
  }
}

function fnCommaExec(a) {
  a = a.toString();
  if (3 < a.length) {
    var c = a.length % 3, b = 0 < c ? a.substring(0, c) : "";
    for (i = 0; i < Math.floor(a.length / 3); i++) {
      b = 0 == c && 0 == i ? b
          + a.substring(c + 3 * i, c + 3 * i + 3) : b + ("," + a.substring(
          c + 3 * i, c + 3 * i + 3));
    }
    return b
  }
  return a
}

function cleanHTML(a) {
  var c = a.match(RegExp("<img .*?>", "ig"));
  if (c && 0 < c.length) {
    for (var b = c.length, d = 0; d < b;
        d++) {
      a = a.replace(c[d].toString(), "<keditor_temp_tag" + d + ">");
    }
  }
  a = a.replace(/(\n|\r| class=(")?Mso[a-zA-Z]+(")?)/g, " ");
  a = a.replace(RegExp("\x3c!--(.*?)--\x3e", "g"), "");
  b = RegExp("<(/)*(meta|link|span|\\?xml:|st1:|o:|font)(.*?)>", "gi");
  a = a.replace(b, "");
  for (var e = "style script applet embed noframes noscript".split(" "), d = 0;
      d < e.length; d++) {
    b = new RegExp("<" + e[d] + ".*?" + e[d] + "(.*?)>",
        "gi"), a = a.replace(b,
        "");
  }
  b = ["style", "start"];
  for (d = 0; d < b.length; d++) {
    a = a.replace(
        new RegExp(" " + b[d] + '="(.*?)"', "gi"), "");
  }
  if (c && 0 < c.length) {
    for (b = c.length, d = 0; d < b; d++) {
      a = a.replace(
          "<keditor_temp_tag" + d + ">", c[d]);
    }
  }
  return a
}

function removeCssInSelection(a) {
  a = cleanHTML(a);
  null != a && void 0 != a && "" != a && replaceSelectionWithHtml(a)
}

function replaceSelectionWithHtml(a) {
  var c = getFirstRange().range;
  if (0 != c.toString()) {
    var b = !1, d = !1, e = getContainerForRemoveCss(c.startContainer),
        f = getContainerForRemoveCss(c.endContainer), g, h = !1;
    e && 0 == !!f && 1 == c.endContainer.nodeType && "BODY"
    == c.endContainer.tagName
    && (f = c.endContainer.childNodes[c.endOffset], g = f.cloneNode(
        !0), h = !0);
    c.startContainer == c.endContainer && 1 == c.startContainer.nodeType
    && "BODY" == c.startContainer.tagName
        ? (e = f = c.startContainer, c.selectNodeContents(e))
        : KEDITORTOP.RAONKEDITOR.browser.ie &&
        9 > KEDITORTOP.RAONKEDITOR.browser.ieVersion && 3
        == c.startContainer.nodeType && 1 == c.endContainer.nodeType && "BODY"
        == c.endContainer.tagName
        && (e = f = c.startContainer, c.selectNodeContents(e));
    c.deleteContents();
    var m = extractBlockContentsFromCaretForRemoveCss(!0);
    0 == !!g && (g = extractBlockContentsFromCaretForRemoveCss(!1));
    if (e != f) {
      var q = !1, t = !1;
      findParentNode(f, e) && (q = !0);
      findParentNode(e, f) && (t = !0);
      t ? e = f : q && (f = e)
    }
    var u = _iframeDoc.createElement("div");
    u.innerHTML = a;
    a = _iframeDoc.createDocumentFragment();
    for (var v,
        q = _iframeDoc.createDocumentFragment(),
        t = _iframeDoc.createDocumentFragment(), w = u.childNodes.length, x = 0;
        v = u.firstChild;) {
      x += 1, 1 == x ? a.appendChild(v) : 1 < w && w == x
          ? (KEDITORTOP.RAONKEDITOR.browser.ie || "" != v.innerHTML
          || (v.innerHTML = "<br>"), t.appendChild(v), h && (v = f.cloneNode(
              !0), v.innerHTML = f.innerHTML, t.appendChild(v)))
          : q.appendChild(
              v);
    }
    KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[0] = _iframeDoc.createElement(
        "kmark");
    KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[0].innerHTML = unescape(
        "%u200B");
    KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[1] =
        _iframeDoc.createElement("kmark");
    KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[1].innerHTML = unescape(
        "%u200B");
    if (e == f) {
      e.innerHTML = "";
      if (m && 0 < m.childNodes.length) {
        if (IsEmptyNodes(m)) {
          b = !0;
        } else {
          for (;
              0 < m.childNodes.length;) {
            e.appendChild(m.childNodes[0]);
          }
        }
      } else {
        b = !0;
      }
      !b || "P" != e.tagName && "DIV" != e.tagName || (removeAttribute(e,
          "align"), removeAttribute(e, "style"), removeAttribute(e,
          "className"), removeAttribute(e, "bgcolor"));
      try {
        c.setStartAfter(e.lastChild)
      } catch (y) {
        c.selectNodeContents(e)
      }
      e.appendChild(KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[0]);
      m = a.childNodes.length;
      0 < m && e.appendChild(a);
      m = q.childNodes.length;
      0 < m && e.appendChild(q);
      m = t.childNodes.length;
      0 < m && e.appendChild(t);
      e.appendChild(KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[1]);
      e.lastChild ? c.setEndAfter(e.lastChild) : c.setEnd(e,
          e.innerHTML.length);
      g && 0 < g.childNodes.length && e.appendChild(g)
    } else {
      e.innerHTML = "";
      f.innerHTML = "";
      if (m && 0 < m.childNodes.length) {
        if (IsEmptyNodes(m)) {
          b = !0;
        } else {
          for (;
              0 < m.childNodes.length;) {
            e.appendChild(m.childNodes[0]);
          }
        }
      } else {
        b = !0;
      }
      if (0 == b) {
        e.appendChild(KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[0]);
        try {
          c.setStartAfter(e.lastChild)
        } catch (z) {
          c.selectNodeContents(e)
        }
      } else {
        c.setStartAfter(e);
      }
      h = c.cloneRange();
      if (b) {
        c.insertNode(a), c.insertNode(
            KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[0]), c.setEndBefore(
            f), c.collapse(!1);
      } else if (0
          < a.childNodes.length) {
        if (v = a.childNodes[0], checkBlockTag(
            v.tagName)) {
          for (; 0 < v.childNodes.length;) {
            e.appendChild(
                v.childNodes[0]);
          }
        } else {
          e.appendChild(a);
        }
      }
      m = q.childNodes.length;
      0 < m && (c.setEndBefore(f), c.collapse(!1), c.insertNode(q));
      g && (0 == g.childNodes.length || IsEmptyNodes(g)) &&
      (d = !0);
      if (d) {
        c.setEndBefore(f), c.collapse(!1), c.insertNode(
            KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[1]), c.insertNode(
            t), c.setEndBefore(f);
      } else {
        if (0 < t.childNodes.length && (v = t.childNodes[0], checkBlockTag(
            v.tagName))) {
          if (0 < v.childNodes.length) {
            for (;
                0 < v.childNodes.length;) {
              f.appendChild(
                  v.childNodes[0]);
            }
          } else {
            f.appendChild(t);
          }
        }
        f.lastChild ? c.setEndAfter(f.lastChild) : c.setEnd(f,
            f.innerHTML.length)
      }
      0 == d && f.appendChild(KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[1]);
      g && 0 < g.childNodes.length && !IsEmptyNodes(g) &&
      f.appendChild(g);
      b ? (c.setStartBefore(e), e.parentNode.removeChild(e)) : c.setStart(
          h.startContainer, h.startOffset);
      d && (c.setEndAfter(f.previousSibling), f.parentNode.removeChild(f))
    }
    setSelectionWithKMark(c)
  }
}

function IsEmptyNodes(a) {
  a = a.childNodes;
  for (var c = a.length, b = !0, d = null, e = 0; e < c; e++) {
    if (d = a[e]) {
      3 === d.nodeType && d.nodeValue && 0 < d.nodeValue.length
          ? b = !1 : 1 === d.nodeType && "IMG" != d.tagName
          && (d.hasChildNodes()
          && 0 != d.innerText.length ? b = IsEmptyNodes(d)
              : (d.parentNode.removeChild(a[e]), --e, --c));
    }
    if (0 == b) {
      break
    }
  }
  return b
}

function setSelectionWithKMark(a, c) {
  2 == KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark.length ? (0 == !!a
      && (getFirstRange().sel.removeAllRanges(), a = getFirstRange().range), 1 == c
          ? (a.setStart(KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[0],
              1), a.setEnd(KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[1], 0))
          : (a.setStartAfter(
              KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[0]), a.setEndBefore(
              KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark[1])), rangy.getSelection(
          _iframeWin).removeAllRanges(), rangy.getSelection(_iframeWin).addRange(a))
      :
      0 < KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark.length && 2
      != KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark.length
      && (removeKMark(), rangy.getSelection(_iframeWin).removeAllRanges())
}

function removeKMark(a) {
  for (var c = _iframeDoc.getElementsByTagName("kmark"), b = c.length,
      d = b - 1; 0 <= d; d--) {
    if (d == b - 1 && a) {
      if (c[d].previousSibling) {
        try {
          for (var e = c[d].previousSibling; ;) {
            if (null == e) {
              e = e.parentNode;
              break
            }
            if (3 == e.nodeType) {
              break;
            }
            if (e.lastChild) {
              e = e.lastChild;
            } else {
              break
            }
          }
          var f = getFirstRange(), g = f.range, h = f.sel;
          3 == e.nodeType ? g.setEnd(e, e.length) : g.setEndAfter(e);
          g.collapse(!1);
          h.removeAllRanges();
          h.addRange(g)
        } catch (m) {
          doSetCaretPosition(c[d].previousSibling, 1)
        }
      } else {
        c[d].parentNode && doSetCaretPosition(c[d].parentNode,
            0);
      }
    }
    c[d].parentNode.removeChild(c[d])
  }
  KEDITORTOP.G_CURRKEDITOR.selectionKEditorMark = []
}

function parentTouchEndEvent(a) {
  try {
    KEDITORTOP.G_CURRKEDITOR._DOC.hasFocus()
    && (KEDITORTOP.G_CURRKEDITOR._BODY.blur(), setTimeout(function () {
      KEDITORTOP.window.focus()
    }, 1))
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
}

var G_IsTouchMoved = !1;

function touchEndEvent(a) {
  try {
    G_IsTouchMoved && setTimeout(setFocusToBody, 0), G_IsTouchMoved = !1
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
}

function touchMoveEvent(a) {
  try {
    G_IsTouchMoved = !0
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
}

function adjustInputChecked(a) {
  var c = a, b = "";
  try {
    var d = a.match(RegExp("<input *([^>?+])*>", "gi"));
    if (d && 0 < d.length) {
      for (var e = d.length, f = 0; f < e; f++) {
        a = a.replace(d[f], "<keditor_temp_input>");
        var g = d[f].toString();
        if (-1 < g.toLowerCase().indexOf("radio") && -1
            < g.toLowerCase().indexOf("checked=")) {
          var h = ">";
          -1 < d[f].indexOf("/>") && (h = "/>");
          d[f] = g.replace(h, ' keditorchecked=""' + h)
        }
      }
      for (f = 0; f < e; f++) {
        a = a.replace("<keditor_temp_input>",
            d[f].toString())
      }
    }
    b = a
  } catch (m) {
    b = c
  }
  return b
}

function kEditor_PopupCenter(a, c, b, d, e, f, g, h) {
  a = window.open(a, c,
      g + ", width=" + b + ", height=" + d + ", top=" + (void 0 != e ? e
          : screen.height / 2 - d / 2 - 40) + ", left=" + (void 0 != f ? f
          : screen.width / 2 - b / 2));
  window.focus && a && a.focus();
  return a
}

function adjustScroll(a) {
  try {
    if (KEDITORTOP.RAONKEDITOR.browser.ie && 8
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
      var c = Math.max(a._DOC.documentElement.scrollLeft,
              a._DOC.body.scrollLeft),
          b = Math.max(a._DOC.documentElement.scrollTop, a._DOC.body.scrollTop),
          d = getClientRect(a._EDITOR.design), e = d.bottom - d.top, f = 0,
          g = 0;
      c > d.right - d.left && (f = c);
      b > e && (g = b);
      (a._DOC.defaultView ? a._DOC.defaultView : a._DOC.parentWindow).scroll(f,
          g)
    }
  } catch (h) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(h)
  }
}

function setImageBorder(a, c) {
  try {
    if ("" != c.borderStyle) {
      var b = "";
      if ("none" == c.borderStyle) {
        var d = newNode.style.border;
        "" != d ? 0 == d.indexOf("0px") || 0 == d.indexOf("none")
                ? c.borderStyle = "" : b = "0px solid rgb(0,0,0)"
            : c.borderStyle = ""
      } else {
        d = "", "" != c.borderKind ? d = c.borderKind + " " : (""
        == c.borderWidth && (c.borderWidth = "0"), d = c.borderWidth
            + "px "), b = d + c.borderStyle + " " + c.borderColor;
      }
      "" != b && (a.style.border = b)
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
  return a
}

function setAutoBodyFit(a) {
  try {
    if ("1" == a._config.autoBodyFit || G_BodyFit.widthFixStatus) {
      newWordWrap = "break-word;";
      newWordBreak = "normal" == a._setting.word_break_type ? "break-all"
          : a._setting.word_break_type;
      var c = createEditorDefaultStyleInnerHTML(a._config, "", "", "",
          newWordBreak, newWordWrap), b = _iframeDoc.createElement("style");
      b.type = "text/css";
      b.styleSheet ? (b.styleSheet.cssText = c, "" == b.innerHTML
      && (b.innerHTML = c)) : b.appendChild(_iframeDoc.createTextNode(c));
      var d = getDefaultStyleTag(_iframeDoc, a);
      if (d) {
        d.parentNode.insertBefore(b,
            d), d.parentNode.removeChild(d);
      } else {
        var e = _iframeDoc.getElementsByTagName("head")[0];
        e && e.appendChild(b)
      }
    }
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
}

function removeDivInLiTag() {
  var a = getFirstRange().range, a = getNodesInRange(a), c = a.length, b = !1;
  try {
    for (var d = 0; d < c; d++) {
      a[d].tagName && "DIV" == a[d].tagName
      && a[d].parentNode && a[d].parentNode.tagName && "LI"
      == a[d].parentNode.tagName && (b = !0)
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
  if (b) {
    makeRangeSelectionMarkInDesign();
    try {
      for (d = 0; d < c; d++) {
        var f = a[d].nodeName.toLowerCase();
        if ("ol" == f || "ul" == f) {
          for (var g = a[d].getElementsByTagName("li"), h = g.length, f = 0;
              f < h; f++) {
            g[f].firstChild &&
            g[f].firstChild.tagName && "DIV" == g[f].firstChild.tagName
            && (g[f].innerHTML = g[f].firstChild.innerHTML, 5
            > g[f].innerHTML.length && 0 == g[f].innerHTML.indexOf("<br")
            && (g[f].innerHTML = ""));
          }
          break
        }
      }
    } catch (m) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(m)
    }
    setRangeSelectionMarkInDesign(!0)
  }
}

function isSelected(a) {
  var c = !1;
  try {
    var b = null, b = a ? a : getFirstRange().range;
    if (b.startContainer != b.endContainer || b.startOffset
        != b.endOffset) {
      c = !0
    }
  } catch (d) {
    c = !1
  }
  return c
}

function correctionRange(a) {
  KEDITORTOP.RAONKEDITOR.browser.chrome && a.startContainer == a.endContainer
  && a.startOffset == a.endOffset && a.startContainer.tagName && "br"
  == a.startContainer.tagName.toLowerCase() && (a.setStartBefore(
      a.startContainer), a.setEndAfter(a.startContainer), rangy.getSelection(
      _iframeWin).removeAllRanges(), rangy.getSelection(_iframeWin).addRange(a))
}

function removeTagStyle(a) {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.removeStyle.use) {
    if (""
        == KEDITORTOP.G_CURRKEDITOR._config.removeStyle.tag) {
      for (var c = KEDITORTOP.G_CURRKEDITOR._config.removeStyle.style.split(
          ","), b = c.length, d = 0; b > d; d++) {
        "" != c[d] && (a = a.replace(
            new RegExp(c[d] + ':(([^;"]*;)|([^"]*))', "gi"),
            ""));
      }
    } else {
      for (var e = KEDITORTOP.G_CURRKEDITOR._config.removeStyle.tag.split(
              ","), f = e.length,
          c = KEDITORTOP.G_CURRKEDITOR._config.removeStyle.style.split(","),
          b = c.length, d = 0; f > d; d++) {
        if ("" != e[d]) {
          for (var g =
              0; b > g; g++) {
            "" != c[g] && (a = a.replace(
                new RegExp(
                    "(<" + e[d] + "[^>]*)(" + c[g] + ':(([^;"]*;)|([^"]*)))',
                    "gi"), "$1"));
          }
        }
      }
    }
  }
  return a
}

function displayPageBreak(a) {
  var c = null, b = "";
  a ? (c = getElementsByClass("keditor_Page_Break_None",
      _iframeDoc), b = "keditor_Page_Break") : (c = getElementsByClass(
      "keditor_Page_Break", _iframeDoc), b = "keditor_Page_Break_None");
  a = c.length;
  for (var d = 0; a > d; d++) {
    c[d].className = b
  }
}

function getPersonalData(a) {
  var c = {};
  try {
    var b = getInnerText(_iframeDoc.body);
    "undefined" == typeof KEDITOR_PERSONAL_DATA_CONFIG
    && (KEDITOR_PERSONAL_DATA_CONFIG = {}, -1
    < a._config.personalData.toLowerCase().indexOf("email")
    && (KEDITOR_PERSONAL_DATA_CONFIG.email = {
      regexp: RegExp(
          "[_A-Za-z0-9-\\\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})",
          "ig")
    }), -1 < a._config.personalData.toLowerCase().indexOf("phone")
    && (KEDITOR_PERSONAL_DATA_CONFIG.phone = {
      regexp: RegExp(
          "((\\+\\d{1,3}(-| |\\.)?\\(?\\d\\)?(-| |\\.)?\\d{1,5})|(\\d{2,6}\\)?))(-| |\\.)?(\\d{3,4})(-| |\\.)?(\\d{4})",
          "g"), ignore: /(:?^\d{6}-\d{7})/
    }), -1 < a._config.personalData.toLowerCase().indexOf("rrn")
    && (KEDITOR_PERSONAL_DATA_CONFIG.rrn = {
      regexp: RegExp(
          "(\\d{2}(:?1[0-2]|0[1-9])(:?0[1-9]|[1-2]\\d|3[0-1])-?[1-4]\\d{6})",
          "gm")
    }));
    for (var d in KEDITOR_PERSONAL_DATA_CONFIG) {
      try {
        if (c[d] = b.match(KEDITOR_PERSONAL_DATA_CONFIG[d].regexp), c[d]
        && KEDITOR_PERSONAL_DATA_CONFIG[d].ignore) {
          for (var e = c[d].length - 1; 0 <= e;
              e--) {
            KEDITOR_PERSONAL_DATA_CONFIG[d].ignore.test(c[d][e])
            && c[d].splice(e, 1);
          }
          0 == c[d].length && (c[d] = null)
        }
      } catch (f) {
        KEDITORTOP &&
        KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(
            f)
      }
    }
  } catch (g) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(g)
  }
  return c
}

function getForbiddenWord(a) {
  keditor_src_init(a._EDITOR.design);
  var c = null;
  try {
    var b = getInnerText(_iframeDoc.body),
        d = a._config.forbiddenWord.split(","), e = d.length;
    for (a = 0; a < e; a++) {
      var f = null;
      (f = b.match(new RegExp("" + d[a] + "", "ig"))) && (c = c ? c.concat(f)
          : f)
    }
  } catch (g) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(g)
  }
  return c
}

function getInnerText(a, c) {
  var b = "";
  try {
    b = a.innerHTML, b = b.replace(/\r/g, ""), b = b.replace(/[\n|\t]/g,
        ""), b = b.replace(/[\v|\f]/g, ""), b = b.replace(/<span[^>]*>/gi,
        ""), b = b.replace(/<\/span(\s[^\/]*)?>/gi, ""), b = b.replace(
        /<p[^>]*><br><\/p(\s[^\/]*)?>/gi, "\n"), c || (b = b.replace(
        /<p[^>]*>&nbsp;<\/p(\s[^\/]*)?>/gi, "\n")), b = b.replace(
        /<br(\s)*\/?><\/p(\s[^\/]*)?>/gi, "\n"), b = b.replace(
        /<br(\s[^\/]*)?><\/p(\s[^\/]*)?>/gi, "\n"), b = b.replace(
        /<br(\s)*\/?><\/li(\s[^\/]*)?>/gi, "\n"), b = b.replace(
        /<br(\s[^\/]*)?><\/li(\s[^\/]*)?>/gi,
        "\n"), b = b.replace(/<br(\s)*\/?>/gi, "\n"), b = b.replace(
        /<br(\s[^\/]*)?>/gi, "\n"), b = b.replace(/<\/p(\s[^\/]*)?>/gi,
        "\n"), b = b.replace(/<\/li(\s[^\/]*)?>/gi, "\n"), b = b.replace(
        /<\/tr(\s[^\/]*)?>/gi, "\n"), b = ReplaceAll(b, unescape("%u200B"),
        ""), b = removeStripTags(b, null), b = unhtmlSpecialChars(b)
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  return b
}

function removeFindText(a, c) {
  try {
    keditor_src_init(c)
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
  restoreSelection();
  setFocusToBody();
  if (0 != a.length) {
    try {
      var d = rangy.createRange(_iframeDoc);
      d.selectNodeContents(_iframeDoc.body);
      for (var e = {
        caseSensitive: !1,
        wholeWordsOnly: !1,
        direction: "forward"
      };
          d.findText(a, e);) {
        0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
        && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
        d.select();
        d.deleteContents();
        try {
          var f = "ktemp",
              g = _iframeDoc.createElement(f);
          d.insertNode(g);
          d.setStartBefore(g);
          d.setEndBefore(g);
          g.parentNode.removeChild(g)
        } catch (h) {
          for (var m = _iframeDoc.getElementsByTagName(f), q = m.length - 1;
              0 <= q; q--) {
            var t = m[q];
            t.parentNode.removeChild(t)
          }
        }
        var u = getFirstRange().range.commonAncestorContainer;
        !u || 1 != u.nodeType || "" != u.innerText && " " != u.innerText
        || (u.innerHTML = "&nbsp;");
        d = rangy.createRange(_iframeDoc);
        d.selectNodeContents(_iframeDoc.body);
        KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
        KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount =
            0
      }
      onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0})
    } catch (v) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(v)
    }
  }
}

function canConversion() {
  var a = !0, c;
  try {
    c = getFirstRange().range, "BODY" == c.commonAncestorContainer.tagName && 1
    < c.commonAncestorContainer.childNodes.length && (a = !1), a && -1
    < c.text().indexOf("\n") && (a = !1)
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
  return a
}

function getCheckSpelling(a) {
  keditor_src_init(a._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  if (null != a.KEditorWordApp) {
    var c = _iframeDoc.body.innerText, c = c.replace(/[\r\n]+/gi, "\n"),
        c = c.split("\n"), b = c.length, d = [];
    try {
      for (var e = 0; e < b; ++e) {
        var f = [], g = c[e];
        if (!/^\s*$/.test(g) && !a.KEditorWordApp.Application.CheckSpelling(
            g)) {
          a.DEXT5WordDoc.Content = g;
          for (var h = 1; h <= a.DEXT5WordDoc.SpellingErrors.Count;
              h++) {
            for (var m = a.DEXT5WordDoc.SpellingErrors.Item(h),
                q = m.Words.Count, t = 1; t <= q; t++) {
              var u = m.Words.Item(t),
                  v = {};
              v.word = KEDITORTOP.RAONKEDITOR.util.trim(u.Text);
              v.start = u.Start;
              v.length = KEDITORTOP.RAONKEDITOR.util.trim(u.Text).length;
              v.suggestions = [];
              for (var w = u.GetSpellingSuggestions(), x = w.Count, y = 1;
                  y <= x;
                  y++) {
                v.suggestions.push(w.Item(y).Name);
              }
              0 < x && 1 < KEDITORTOP.RAONKEDITOR.util.trim(v.word).length
              && f.push(v)
            }
          }
          0 < f.length && (d = d.concat(f))
        }
      }
    } catch (z) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(z)
    } finally {
      a.KEditorWordApp && a.KEditorWordApp.Quit(
          0), a.KEditorWordApp = null, a.DEXT5WordDoc =
          null
    }
    return d
  }
}

function getAllTextNodeByNode(a) {
  var c = [];
  if (a) {
    for (a = a.firstChild; null != a;) {
      3 == a.nodeType ? c[c.length] = a
          : c = c.concat(getAllTextNodeByNode(a)), a = a.nextSibling;
    }
  }
  return c
}

function putUndoWordCount(a) {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.wordCount.use && "1"
      == KEDITORTOP.G_CURRKEDITOR._config.wordCount.limit && "undefined"
      != typeof a) {
    var c = "which" in a ? a.which : a.keyCode;
    if (c && -1
        == ",18,19,20,27,33,34,35,36,37,38,39,40,91,92,93,144,145,".indexOf(
            "," + c + ",") || a.shiftKey && 16 != c) {
      try {
        if (0 < KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitcount || 0
            < KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitline) {
          var b = KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitcount,
              d = KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitline,
              e = getInnerText(_iframeDoc.body, !0);
          a = 0;
          e.match(/\n/gi) && (a = e.match(/\n/gi).length);
          e = e.replace(/\r\n/gi, "");
          e = e.replace(/\n/gi, "");
          0 == KEDITORTOP.G_CURRKEDITOR._config.wordCount.countwhitespace
          && (e = e.replace(/\s/gim, ""));
          var c = !1, f;
          f = "char" == KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitunit
              ? e.length : KEDITORTOP.RAONKEDITOR.getByteLength(e);
          "byte" == KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitunit && 0
          < b
          && f + 3 > b ? c = !0 : 0 < b && e.length == b ? c = !0 : 0 < d && a
              == d && (c = !0);
          c && 0 < b && e.length > b && (c = !1);
          c && (KEDITORTOP.G_CURRKEDITOR.WordCountUndoManager.reset(),
              KEDITORTOP.G_CURRKEDITOR.WordCountUndoManager.putUndo())
        }
      } catch (g) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(g)
      }
    }
  }
}

function showWordCount(a) {
  try {
    if ("1" == KEDITORTOP.G_CURRKEDITOR._config.wordCount.use && (0
        <= KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitcount || 0
        < KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitline)) {
      if ("undefined" != typeof a) {
        var c = "which" in a ? a.which : a.keyCode;
        if (0
            <= ",18,19,20,27,33,34,35,36,37,38,39,40,91,92,93,144,145,".indexOf(
                "," + c + ",") || a.shiftKey && 16 == c) {
          return
        }
      }
      var b = KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitcount,
          d = KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitline,
          e = getInnerText(_iframeDoc.body,
              !0);
      a = 0;
      e.match(/\n/gi) && (a = e.match(/\n/gi).length);
      e = e.replace(/\r\n/gi, "");
      e = e.replace(/\n/gi, "");
      0 == KEDITORTOP.G_CURRKEDITOR._config.wordCount.countwhitespace
      && (e = e.replace(/\s/gim, ""));
      c = !0;
      "" != KEDITORTOP.G_CURRKEDITOR._config.defaultMessage && (c = !1);
      var f = "",
          g = RAONKEditor_lang.wordCount.Maximum_Line_Exceed.replace("{0}", d),
          f = "byte" == KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitunit
              ? RAONKEditor_lang.wordCount.Maximum_Bytes_Exceed.replace("{0}",
                  b)
              : RAONKEditor_lang.wordCount.Maximum_Characters_Exceed.replace(
                  "{0}",
                  b);
      if (c) {
        var h;
        h = "char" == KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitunit
            ? e.length : KEDITORTOP.RAONKEDITOR.getByteLength(e);
        if (0 < b && h > b || 0 < d && a > d) {
          if ("1" == KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitmessage) {
            var m = "";
            0 < b && h > b && (m = f + "\n");
            0 < d && a > d && (m += g);
            alert(m)
          }
          0 == KEDITORTOP.G_CURRKEDITOR.WordCountUndoManager.charCount
          && KEDITORTOP.G_CURRKEDITOR.WordCountUndoManager.putUndo();
          KEDITORTOP.G_CURRKEDITOR.WordCountUndoManager.execUndo()
        }
      }
      c && (e = getInnerText(_iframeDoc.body, !0), a = 0, e.match(/\n/gi) &&
      (a = e.match(/\n/gi).length), e = e.replace(/\r\n/gi, ""), e = e.replace(
          /\n/gi, ""), 0
      == KEDITORTOP.G_CURRKEDITOR._config.wordCount.countwhitespace
      && (e = e.replace(/\s/gim, "")));
      g = "";
      0 < d && (g = "/" + d);
      var q = "[" + RAONKEditor_lang.wordCount.Line + a + g + "]",
          t = document.getElementById(
              "count_line_span_" + KEDITORTOP.G_CURRKEDITOR.ID);
      t.innerHTML = q;
      t.style.color = 0 != d && a >= d ? "red" : "black";
      d = "";
      0 < b && (d = "/" + b);
      h = "char" == KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitunit
          ? e.length : KEDITORTOP.RAONKEDITOR.getByteLength(e);
      var e = "",
          e = "byte" == KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitunit
              ? "[" + RAONKEditor_lang.wordCount.Bytes + h + d + "]" : "["
              + RAONKEditor_lang.wordCount.Characters + h + d + "]",
          u = document.getElementById(
              "count_characters_span_" + KEDITORTOP.G_CURRKEDITOR.ID);
      u.innerHTML = e;
      u.style.color = 0 != b && h >= b ? "red" : "black";
      try {
        if ("function" === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_WordCount
            || "function"
            === typeof KEDITORTOP.G_CURRKEDITOR._config.event.wordCount) {
          b = {
            LineCount: a,
            CharByteLength: h
          }, "function"
          === typeof KEDITORTOP.G_CURRKEDITOR._config.event.wordCount ?
              KEDITORTOP.G_CURRKEDITOR._config.event.wordCount(
                  KEDITORTOP.G_CURRKEDITOR.ID, b) : "function"
              === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_WordCount
              && KEDITORTOP.KEDITORWIN.RAONKEDITOR_WordCount(
                  KEDITORTOP.G_CURRKEDITOR.ID, b)
        }
      } catch (v) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(v)
      }
    }
  } catch (w) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(w)
  }
}

function pasteWordCount(a) {
  var c = !0;
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.wordCount.use && "1"
      == KEDITORTOP.G_CURRKEDITOR._config.wordCount.limit) {
    try {
      if (0 < KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitcount || 0
          < KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitline) {
        var b = KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitcount,
            d = KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitline,
            e = getInnerText(_iframeDoc.body, !0),
            f = document.createElement("div");
        f.innerHTML = a;
        a = getInnerText(f, !0);
        e.match(/\n/gi);
        a.match(/\n/gi) &&
        a.match(/\n/gi);
        e = e.replace(/\r\n/gi, "");
        e = e.replace(/\n/gi, "");
        a = a.replace(/\r\n/gi, "");
        a = a.replace(/\n/gi, "");
        0 == KEDITORTOP.G_CURRKEDITOR._config.wordCount.countwhitespace
        && (e = e.replace(/\s/gim, ""), a = a.replace(/\s/gim, ""));
        var g, h, m;
        "char" == KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitunit
            ? (g = e.length, h = a.length, m = getFirstRange().range.toString().length)
            : (g = KEDITORTOP.RAONKEDITOR.getByteLength(
                e), h = KEDITORTOP.RAONKEDITOR.getByteLength(
                a), m = KEDITORTOP.RAONKEDITOR.getByteLength(
                getFirstRange().range.toString()));
        a = "";
        RAONKEditor_lang.wordCount.Maximum_Line_Exceed.replace("{0}", d);
        a = "byte" == KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitunit
            ? RAONKEditor_lang.wordCount.Maximum_Bytes_Exceed.replace("{0}", b)
            : RAONKEditor_lang.wordCount.Maximum_Characters_Exceed.replace(
                "{0}",
                b);
        0 < b && b < g - m + h && ("1"
        == KEDITORTOP.G_CURRKEDITOR._config.wordCount.limitmessage && alert(
            a), c = !1)
      }
    } catch (q) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(q)
    }
  }
  return c
}

function pushAutoSave(a, c) {
  for (var b = c; 4 > b; b++) {
    var d = KEDITORTOP.RAONKEDITOR.util.loadJsonFromLocalStorage(
        a + "_" + (b + 1));
    "" != d && null != d && void 0 != d
    && (KEDITORTOP.RAONKEDITOR.util.saveJsonToLocalStorage(a + "_" + b,
        d), localStorage.removeItem(a + "_" + (b + 1)))
  }
}

function delAutoSaveHtml(a, c, b) {
  localStorage.removeItem(a + "_" + c);
  pushAutoSave(a, c, b);
  return null == localStorage[a + "_" + c] || void 0 == localStorage[a + "_"
  + c] ? !1 : !0
}

function localSaveValue(a, c, b) {
  for (var d = 0; d < parseIntOr0(b); d++) {
    var e = a + "_" + d,
        f = KEDITORTOP.RAONKEDITOR.util.loadJsonFromLocalStorage(e), g = {};
    null != f && void 0 != f && (g = "", g = f.html.toLowerCase().indexOf(
        "<html"), g = "1" == c ? -1 < g
        ? KEDITORTOP.RAONKEDITOR.util.makeEncryptParam(f.html) : f.html : 0 > g
        ? KEDITORTOP.RAONKEDITOR.util.makeDecryptReponseMessage(f.html)
        : f.html, g = {date: f.date, html: g}, localStorage.removeItem(
        e), KEDITORTOP.RAONKEDITOR.util.saveJsonToLocalStorage(e, g))
  }
}

function autoSaveEnable(a) {
  if (a = document.getElementById("keditor_span_" + a + "load_auto_save")) {
    var c = KEDITORTOP.RAONKEDITOR.util.getClass(a);
    c && -1 < c.indexOf("_off") && KEDITORTOP.RAONKEDITOR.util.setClass(a,
        "uebutton_span_on")
  }
}

var G_hwpPasteAgentOptions = {};

function agentPaste(a) {
  if (!KEDITORTOP.G_CURRKEDITOR.isPasting) {
    KEDITORTOP.G_CURRKEDITOR.isPasting = !0;
    var c = KEDITORTOP.G_CURRKEDITOR._config.pasteToImage;
    a && (c = a);
    a = [["kcmd", "KC31"]];
    var b = {
      browser: KEDITORTOP.RAONKEDITOR.UserAgent.browser.name.toLowerCase(),
      useragent: encodeURIComponent(KEDITORTOP.navigator.userAgent)
    };
    a.push(["k00", b]);
    a.push(["kp1", KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c)]);
    a.push(["kp2", 100]);
    a.push(["kp3", KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        KEDITORTOP.G_CURRKEDITOR._config.officeLineFix)]);
    a.push(["kp4", KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        KEDITORTOP.G_CURRKEDITOR._config.image_auto_fit)]);
    a.push(["kp5", KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        KEDITORTOP.G_CURRKEDITOR._config.excelImageFix)]);
    a.push(["kp7", KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        KEDITORTOP.G_CURRKEDITOR._config.pasteToImagePopupMode)]);
    a.push(["kp8", encodeURIComponent(
        "mso-spacerun" + KEDITORTOP.RAONKSolution.Agent.formfeed
        + "mso-border-")]);
    a.push(["k16", KEDITORTOP.G_CURRKEDITOR._config.managerLang]);
    c = getManagerColorValue(KEDITORTOP.G_CURRKEDITOR._config.style.skinName);
    userColor1 = c.c1;
    userColor2 = c.c2;
    userColor3 = c.c3;
    userColor4 = c.c4;
    a.push(["k50",
      {cr1: userColor1, cr2: userColor2, cr3: userColor3, cr4: userColor4}]);
    c = {};
    G_hwpPasteAgentOptions && G_hwpPasteAgentOptions.isPasteHwpByApp
    && (c.pastehwpbyapp = 1, c.pastehwpbyappdllversion = KEDITORTOP.RAONKEDITOR.util.getRV(
        KEDITORTOP.G_CURRKEDITOR.dv));
    for (data in c) {
      a.push(["k69", c]);
      break
    }
    c = {};
    !0 === KEDITORTOP.RAONKEDITOR.browser.ie && (c.fromie = 1);
    for (data in c) {
      a.push(["s11", c]);
      break
    }
    c = {};
    "" != KEDITORTOP.G_CURRKEDITOR._config.pasteToImagePopupImageButtonText &&
    (c.toimagetext = KEDITORTOP.G_CURRKEDITOR._config.pasteToImagePopupImageButtonText);
    "" != KEDITORTOP.G_CURRKEDITOR._config.pasteToImagePopupHtmlButtonText
    && (c.tohtmltext = KEDITORTOP.G_CURRKEDITOR._config.pasteToImagePopupHtmlButtonText);
    G_hwpPasteAgentOptions && G_hwpPasteAgentOptions.isPasteHwpByApp && "3"
    == KEDITORTOP.G_CURRKEDITOR._config.compatibility.hwpProcessTypeInAgent
    && (c.hwpautomation = 1);
    for (data in c) {
      a.push(["kopt", c]);
      break
    }
    c = setManagerParam("{}", a);
    c = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(c);
    KEDITORTOP.G_CURRKEDITOR.isAddedHtmlContents = !1;
    a = [["kcmd", "KE30"]];
    a.push(["kid", KEDITORTOP.G_CURRKEDITOR.agentGuid]);
    var d = setManagerParam("{}", a), d = d + "\x0B", e = function (a) {
      var b = KEDITORTOP.RAONKSolution.Agent.parseRtn(a, {isPaste: !0}),
          c = b.splitCode, m = b.code, b = b.valueArr;
      if (2E3 == m) {
        if (G_hwpPasteAgentOptions
            && G_hwpPasteAgentOptions.isPasteHwpByApp) {
          hideProcessingBackground(), m = 1E3, b[0] = "5"
              + KEDITORTOP.RAONKSolution.Agent.formfeed
              + G_hwpPasteAgentOptions.clipboardData;
        } else {
          KEDITORTOP.G_CURRKEDITOR.isPasting &&
          (KEDITORTOP.G_CURRKEDITOR.isPasting = !1);
          return
        }
      }
      if (1E3 == m || 2001 == m || 7777 == m) {
        a = "";
        var q = b.length,
            t = b[0].split(KEDITORTOP.RAONKSolution.Agent.formfeed);
        KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
            t[0]);
        if (0 == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType) {
          for (var u = 0;
              u < q; u++) {
            var v = b[u].split(KEDITORTOP.RAONKSolution.Agent.formfeed),
                w = "file:///" + v[1];
            0 < v[3] && 0 < v[4] && 0 < v[2] && (a += '<img src="' + w
                + '" style="width:' + v[3] + "px; height:" + v[4]
                + 'px;" ke_size="' + v[2] + '"/>',
            "1" == KEDITORTOP.G_CURRKEDITOR._config.paste_image_base64_remove
            && (a = a.replace(
                /<img[^>]*src=["\']([^>]*:\\)([^>"\']+)["\']?[^>]*>/gi, "")))
          }
        }
        if (1 == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType) {
          v = t.length;
          for (u = 1; u < v; u++) {
            a += t[u], u != v - 1
            && (a += KEDITORTOP.RAONKSolution.Agent.formfeed);
          }
          if (1 < q) {
            for (a += c, u = 1; u < q; u++) {
              a += b[u], u != q - 1
              && (a += c);
            }
          }
          b = "";
          u = findUrlInText(a, KEDITORTOP.G_CURRKEDITOR);
          "" != u.changedData && (b = a, a = u.changedData);
          a = adjustTextPasteForAgent(a);
          if ("" != u.changedData) {
            u.changedData = a;
            try {
              a = replaceRealUrl(u)
            } catch (x) {
              a =
                  b.replace(/&not/g, "&amp;not"), a = a.replace(/\r?\n/g,
                  "<BR />")
            }
          }
        } else if (2 <= KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType && 6
            >= KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType) {
          v = t.length;
          for (u = 1; u < v; u++) {
            a += t[u], u != v - 1
            && (a += KEDITORTOP.RAONKSolution.Agent.formfeed);
          }
          if (1 < q) {
            for (a += c, u = 1; u < q; u++) {
              a += b[u], u != q - 1
              && (a += c);
            }
          }
          if (4 == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType && "1"
              == KEDITORTOP.G_CURRKEDITOR._config.removeTdStyleInPastePpt) {
            for (b = RegExp(
                "<(td|th)([^>]*?)style='([^']*?)(font-size: 18pt; )([^']*?)'>",
                "gi"); b.test(a);) {
              a = a.replace(b, "<$1$2style='$3$5'>");
            }
            for (b = RegExp(
                '<(td|th)([^>]*?)style="([^"]*?)(font-size: 18pt; )([^"]*?)">',
                "gi"); b.test(a);) {
              a = a.replace(b, '<$1$2style="$3$5">');
            }
            for (b = RegExp(
                "<(td|th)([^>]*?)style='([^']*?)(font-family: Arial; )([^']*?)'>",
                "gi"); b.test(a);) {
              a = a.replace(b, "<$1$2style='$3$5'>");
            }
            for (b = RegExp(
                '<(td|th)([^>]*?)style="([^"]*?)(font-family: Arial; )([^"]*?)">',
                "gi"); b.test(a);) {
              a = a.replace(b, '<$1$2style="$3$5">')
            }
          }
          if (5 == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType && (b =
              KEDITORTOP.G_CURRKEDITOR._config.compatibility.hwpProcessTypeInAgent, "2"
          == b || "3"
          == b)) {
            if (showProcessingBackground(), G_hwpPasteAgentOptions
            && G_hwpPasteAgentOptions.isPasteHwpByApp) {
              if (hideProcessingBackground(), b = G_hwpPasteAgentOptions.clipboardData, b
              != a) {
                if ((u = a.match(/<body.*?>([\s\S]*)<\/body>/i))
                && (a = u[1]), "" == a) {
                  a = b;
                } else {
                  a = handlingPositionInHwp(a);
                  a = handlingSpacingTableInHwp(a);
                  c = !1;
                  u = RegExp("<div[^>].*style=[\"'].*float:[ ]*left", "gi");
                  1 == u.test(b) && (c = !0);
                  u = getDocumentForDummy().createElement("div");
                  u.innerHTML = b;
                  q = [];
                  b = u.getElementsByTagName("table");
                  v = b.length;
                  for (u = 0; u < v; u++) {
                    t = b[u], "" != t.style.background
                    && q.push({index: u, background: t.style.background});
                  }
                  b = getDocumentForDummy();
                  b = b.createElement("div");
                  b.innerHTML = a;
                  w = b.getElementsByTagName("div");
                  for (u = w.length - 1; 0 <= u; u--) {
                    if (t = w[u], "left"
                    == t.style["float"] && 0 == c) {
                      for (var y = t.parentNode; t.hasChildNodes();) {
                        y.insertBefore(
                            t.firstChild, t);
                      }
                      y.removeChild(t)
                    }
                  }
                  c = b.getElementsByTagName("table");
                  if (v == c.length) {
                    for (t = q.length, u = 0; u < t;
                        u++) {
                      c[q[u].index].style.background =
                          q[u].background;
                    }
                  }
                  u = RegExp("<td [^>]*background=", "gi");
                  if (u.test(a)) {
                    a = [];
                    if (b.querySelectorAll) {
                      a = b.querySelectorAll(
                          "td[background]");
                    } else {
                      for (c = b.getElementsByTagName(
                          "td"), q = c.length, u = 0; u < q;
                          u++) {
                        t = c[u], (v = t.getAttribute("background")) && "" != v
                        && a.push(t);
                      }
                    }
                    c = a.length;
                    for (u = 0; u < c; u++) {
                      if (q = a[u], (t = q.getAttribute(
                          "background")) && "" != t) {
                        0 > t.indexOf("file:///") && (t = "file:///" + t);
                        q.removeAttribute("background");
                        v = "";
                        v = KEDITORTOP.RAONKEDITOR.browser.ie ? t.replace(/\\/g,
                            "\\\\\\\\") : t.replace(/\\/g, "\\\\");
                        q.style.backgroundImage =
                            'url("' + v + '")';
                        try {
                          "" == q.style.backgroundSize
                          && (q.style.backgroundSize = "100% 100%"), ""
                          == q.style.backgroundRepeat
                          && (q.style.backgroundRepeat = "no-repeat")
                        } catch (z) {
                          KEDITORTOP && KEDITORTOP.RAONKEDITOR
                          && KEDITORTOP.RAONKEDITOR.logMode && console.log(z)
                        }
                      }
                    }
                  }
                  a = b.innerHTML;
                  b = null;
                  b = void 0;
                  b = null;
                  b = void 0
                }
              } else {
                a = b;
              }
            } else {
              G_hwpPasteAgentOptions.clipboardData = a;
              G_hwpPasteAgentOptions.isPasteHwpByApp = !0;
              KEDITORTOP.G_CURRKEDITOR.isPasting = !1;
              agentPaste();
              return
            }
          }
          G_hwpPasteAgentOptions && G_hwpPasteAgentOptions.isPasteHwpByApp ?
              G_hwpPasteAgentOptions = {} : a = handlingFontFamilyInHwp(a);
          a = externalPageBreakDataRaplaceInEditor(a);
          3 == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType
          && (b = document.createElement(
              "div"), b.innerHTML = a, adjustInnerTableInExcel(
              b), a = b.innerHTML, b = null, b = void 0, "1"
          == KEDITORTOP.G_CURRKEDITOR._config.adjustEmptyTableInExcel
          && (a = adjustEmptyTableInExcel(a)));
          a = replaceCharToWingdings(a)
        }
        (new ProcessImageInHtmlAgent(KEDITORTOP.G_CURRKEDITOR)).inPaste(
            {htmlType: KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType, html: a},
            function (a, b) {
              var c = b.isBase64Changed, f = !0, g = !1;
              6 == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType && (g = c ? !1
                  : !0);
              6 == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType
              && KEDITORTOP.RAONKEDITOR.browser.ie && 9
              >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
              && (c = checkCopyInCellFormInertnNet(a), "" != c
              && (a = c, g = !1));
              try {
                if ("1"
                    == KEDITORTOP.G_CURRKEDITOR._config.limitPasteHtmlLength.value
                    && a
                    > KEDITORTOP.G_CURRKEDITOR._config.limitPasteHtmlLength.length) {
                  alert(RAONKEditor_lang.msg.limitPasteHtmlLenthPlugin2);
                  setFocusToBody();
                  KEDITORTOP.G_CURRKEDITOR.isPasting
                  && (KEDITORTOP.G_CURRKEDITOR.isPasting = !1);
                  return
                }
              } catch (h) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(h)
              }
              "1" == KEDITORTOP.G_CURRKEDITOR._config.ie_BugFixed_Hyfont
              && (a = KEDITORTOP.RAONKEDITOR.util.replaceHyFont(a,
                  KEDITORTOP.G_CURRKEDITOR));
              g && (setPasteBin(), (f = document.execCommand("paste", !1, null))
                  ? (KEDITORTOP.G_CURRKEDITOR.isStopScroll = !0, f = !1, fn_PasteIE(), setTimeout(
                      function () {
                        KEDITORTOP.G_CURRKEDITOR.isStopScroll = !1
                      }, 1)) : (a = getContentFromSpecificString(
                      "\x3c!--StartFragment--\x3e",
                      "\x3c!--EndFragment--\x3e", a), f = !0));
              if (f) {
                f = !1;
                6 == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType && (f = !0);
                g = document.createElement("div");
                g.innerHTML = a;
                if (c = replaceSpanToDivContainAbsolute(g)) {
                  a = g.innerHTML;
                }
                if (-1
                    < KEDITORTOP.G_CURRKEDITOR._config.disableInsertImage.indexOf(
                        ",paste_image,")) {
                  for (var c = !1, q = g.getElementsByTagName("img"),
                      t = q.length - 1; 0 <= t; t--) {
                    var u = q[t];
                    u.src && 0 == u.src.toLowerCase().indexOf(
                        KEDITORTOP.RAONKSolution.managerFinalUrl)
                    && (c = !0, u.parentNode.removeChild(u))
                  }
                  c && (a = g.innerHTML)
                }
                try {
                  g.innerHTML =
                      "", delete null
                } catch (v) {
                  KEDITORTOP && KEDITORTOP.RAONKEDITOR
                  && KEDITORTOP.RAONKEDITOR.logMode && console.log(v)
                }
                a = execReplaceMsoStyle(a);
                a = webOfficePasteWorkForDom(a);
                "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlCorrection ? "1"
                    == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
                        ? (showProcessingBackground(), fn_processHtmlWorker({
                          editorBrowser: {
                            ie: KEDITORTOP.RAONKEDITOR.browser.ie,
                            ieVersion: KEDITORTOP.RAONKEDITOR.browser.ieVersion,
                            gecko: KEDITORTOP.RAONKEDITOR.browser.gecko
                          },
                          editorConfig: KEDITORTOP.G_CURRKEDITOR._config,
                          callFn: "htmlTagRevision",
                          callFnParam: [a, !0, f,
                            KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType],
                          callBackFn: fn_PastePlugin_htmlTagRevision_After
                        })) : (1 != KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType
                        && (a = htmlTagRevision(a, !0,
                            f)), fn_PastePlugin_htmlTagRevision_After(a))
                    : fn_PastePlugin_htmlTagRevision_After(a);
                2001 == m && setTimeout(function () {
                  sendMessageToAgent(d, e, null, !0)
                }, 100);
                KEDITORTOP.G_CURRKEDITOR.isPasting
                && (KEDITORTOP.G_CURRKEDITOR.isPasting = !1)
              }
            })
      }
    };
    sendMessageToAgent(c, e, function () {
      KEDITORTOP.G_CURRKEDITOR.isPasting &&
      (KEDITORTOP.G_CURRKEDITOR.isPasting = !1)
    }, !0)
  }
}

function convertAllImageAgentSrc(a, c, b) {
  var d = "", e = null, d = function (a) {
    if (-1 < a.indexOf(KEDITORTOP.RAONKSolution.managerFinalUrl) || 0
        == a.indexOf("file:///")) {
      a = decodeURIComponent(a);
    }
    return a
  };
  "string" == typeof a ? (e = document.createElement("div"), e.innerHTML = a)
      : e = a;
  var f = ["img", "table", "td", "th", "input"], g = f.length;
  a = [];
  for (var h = 0; h < g; h++) {
    a.push(e.getElementsByTagName(f[h]));
  }
  f = a.length;
  for (h = 0; h < f; h++) {
    for (var g = a[h], m = g.length, q = 0; q < m; q++) {
      var t = g[q], u = "", v = !1;
      if ("img" == t.tagName.toLowerCase()) {
        try {
          u = t.src
        } catch (w) {
          KEDITORTOP &&
          KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(w)
        }
      } else {
        "input" == t.tagName.toLowerCase() ? "image" == t.type && (u = t.src)
            : (u = t.style.backgroundImage, "none" == u && (u = ""), "" == u
            && t.getAttribute("background") && (u = t.getAttribute(
                "background")), u = u.replace('url("', "").replace('")',
                ""), u = u.replace("url('", "").replace("')", ""), u = u.replace(
                "url(", "").replace(")", ""), v = !0);
      }
      -1 < u.toLowerCase().indexOf("file:///none") && (u = "");
      try {
        u = d(u)
      } catch (x) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        &&
        console.log(x)
      }
      u = convertImageAgentSrc(u, b);
      "" != u && (v ? t.style.backgroundImage = "url(" + u.replace(/\\/g, "/")
          + ")" : (0 == b && (u = d(u)), t.src = u))
    }
  }
  1 != c && setMatchInputValue(e);
  return d = e.innerHTML
}

function convertImageAgentSrc(a, c) {
  var b = "";
  return void 0 == a || "" == a ? b : b = c ? -1 < a.indexOf("file://")
      ? KEDITORTOP.RAONKSolution.managerFinalUrl + "/" + encodeURIComponent(
      a.replace("file:///", "")) : a : -1 < a.indexOf(
      KEDITORTOP.RAONKSolution.managerFinalUrl) ? "file:///"
      + encodeURIComponent(
          a.replace(KEDITORTOP.RAONKSolution.managerFinalUrl + "/", "")) : a
}

function agentFileSelect(a) {
  var c = [["kcmd", a.agentCmd]];
  c.push(["k16", KEDITORTOP.G_CURRKEDITOR._config.managerLang]);
  c.push(["k17", 0]);
  c.push(["kp2", a.getSize]);
  var b = "*.*";
  void 0 != a.filter && null != a.filter && "" != a.filter && (b = a.filter);
  c.push(["s01", encodeURIComponent(b)]);
  c.push(["s02", a.maxTotalCount + ""]);
  c.push(["s03", "0"]);
  c.push(["s04", a.maxOneFileSize + ""]);
  c.push(["s05", 0]);
  c.push(["s06", a.limitOrAllow]);
  c.push(["s07", encodeURIComponent(a.limitOrAllowExt)]);
  b = {};
  !0 === a.isIE && (b.fromie = 1);
  for (data in b) {
    c.push(["s11",
      b]);
    break
  }
  c = setManagerParam("{}", c);
  c = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(c);
  sendMessageToAgent(c, function (b) {
    b = KEDITORTOP.RAONKSolution.Agent.parseRtn(b);
    var c = b.code;
    b = b.valueArr;
    if (1E3 == c) {
      for (var c = [], f = !1, g, h = b.length, m = 0; m < h; m++) {
        var q = b[m].split(KEDITORTOP.RAONKSolution.Agent.formfeed);
        "2" == q[0] && (f = !0, g = m);
        var t = {detect: q[0], path: q[1], size: q[2], width: 0, height: 0};
        void 0 != q[3] && (t.width = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
            q[3]), t.height = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(q[4]));
        c.push(t)
      }
      if (f && (alert(c[g].path), 1 == c.length)) {
        return;
      }
      a.callBack(c)
    }
  }, null, !0)
}

function useManagerDropZone(a, c) {
  var b, d;
  if (c && c.getAttribute("target_editor") && "" != c.getAttribute(
      "target_editor")) {
    var e = c.getAttribute("target_editor");
    b = KEDITORTOP.RAONKEDITOR.GetEditorByName(e);
    KEDITORTOP.G_CURRKEDITOR = b
  }
  if (void 0 == b) {
    try {
      b = getEditrFromEvent(a)
    } catch (f) {
      b = KEDITORTOP.G_CURRKEDITOR
    }
  }
  if (b._DOC.body.isContentEditable && 1 != b.isDragStartedInEditor) {
    d = b._FRAMEWIN;
    var e = a.clientX, g = a.clientY, h = 1;
    void 0 != window.devicePixelRatio ? h = window.devicePixelRatio : void 0
        != screen.deviceXDPI && void 0 !=
        screen.logicalXDPI && screen.deviceXDPI != screen.logicalXDPI && (h = 1
            * screen.deviceXDPI / screen.logicalXDPI);
    1 != h && (e *= h, g *= h);
    var m = a.screenX - e, q = a.screenY - g;
    if ("1" == b._config.useKManager) {
      var g = function (a) {
        var c;
        96 == b.osDPI ? c = 100 : 96 < b.osDPI && 120 >= b.osDPI ? c = 125 : 120
            < b.osDPI && 144 >= b.osDPI && (c = 150);
        var d = 1, d = 1 * h / (1 * c / 100);
        a.uploadRectW = t / h;
        a.uploadRectH = u / h;
        a.dropZoneX = m / h;
        a.dropZoneY = q / h;
        1 != d && (a.uploadRectW = t * d, a.uploadRectH = u * d, a.dropZoneX = m
            * d, a.dropZoneY = q * d);
        return a
      }, t = 0, u = 0;
      if ("1" == b._config.dragAndDropMode &&
          void 0 != KEDITORTOP.screenX && void 0
          != KEDITORTOP.outerWidth) {
        m = KEDITORTOP.screenX
            * h, q = KEDITORTOP.screenY * h, t = KEDITORTOP.outerWidth
            * h, u = KEDITORTOP.outerHeight * h, 96 < b.osDPI && (e = g({
          uploadRectW: t,
          uploadRectH: u,
          dropZoneX: m,
          dropZoneY: q
        }), m = e.dropZoneX, q = e.dropZoneY, t = e.uploadRectW, u = e.uploadRectH);
      } else {
        e = null;
        if (null == c || void 0 == c) {
          if (e = document.getElementById(
              "editorContentArea"), KEDITORTOP.RAONKEDITOR.browser.chrome
          || KEDITORTOP.RAONKEDITOR.browser.opera) {
            e = window.frameElement
          }
        } else {
          e = c;
        }
        e = KEDITORTOP.RAONKEDITOR.util.getClientRect(e);
        t = e.right - e.left;
        u = e.bottom - e.top;
        1 != h && (t *= h, u *= h);
        c && (0 > c.className.indexOf("raonkdropzone_over")
        && (c.className = c.className.replace("raonkdropzone",
            "raonkdropzone_over")), m += e.left * h, q += e.top * h);
        if (KEDITORTOP.RAONKEDITOR.browser.chrome
            || KEDITORTOP.RAONKEDITOR.browser.opera) {
          for (var g = e.x, v = e.y, w = parent; w != top;) {
            var x = w.frameElement;
            x && (x = KEDITORTOP.RAONKEDITOR.util.getClientRect(
                x), g += x.x, v += x.y);
            w = w.parent
          }
          h = window.devicePixelRatio;
          m = window.screenX + g * h;
          q = window.screenY + v * h + 66;
          t = e.width;
          u = e.height;
          t *= h;
          u *= h
        } else {
          96 < b.osDPI && (e = g({
            uploadRectW: t,
            uploadRectH: u,
            dropZoneX: m,
            dropZoneY: q
          }), m = e.dropZoneX, q = e.dropZoneY, t = e.uploadRectW, u = e.uploadRectH)
        }
      }
      e = [["kcmd", "KC02"]];
      e.push(["k16", b._config.managerLang]);
      e.push(["k17", 0]);
      e.push(["s01", encodeURIComponent("*.*")]);
      g = 1;
      "1" == KEDITORTOP.G_CURRKEDITOR._config.insertMultiImage && (g = 0);
      e.push(["s02", g + ""]);
      e.push(["s03", "0"]);
      e.push(["s04", "0"]);
      e.push(["s05", 0]);
      e.push(["s06", 0]);
      e.push(["s07", encodeURIComponent("")]);
      g = m + KEDITORTOP.RAONKSolution.Agent.vertical;
      g += q + KEDITORTOP.RAONKSolution.Agent.vertical;
      g += t + KEDITORTOP.RAONKSolution.Agent.vertical;
      g += u + KEDITORTOP.RAONKSolution.Agent.vertical;
      g += b._config.dropZoneTransparency;
      e.push(["kp1", g]);
      e.push(["kp2", 1]);
      g = {};
      !0 === KEDITORTOP.RAONKEDITOR.browser.ie && (g.fromie = 1);
      for (data in g) {
        e.push(["s11", g]);
        break
      }
      var y = setManagerParam("{}", e),
          y = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(y),
          z = a.clientX, A = a.clientY, B = function (a) {
            KEDITORTOP.RAONKEDITOR.IsCreatedDropZone = !1;
            c && (c.className = c.className.substring(0,
                c.className.length - 5));
            var e = KEDITORTOP.RAONKSolution.Agent.parseRtn(a);
            a = e.code;
            e = e.valueArr;
            if (1E3 == a) {
              if (!(-1 < b._config.disableInsertImage.indexOf(",paste_image,"))) {
                a = [];
                for (var f = e.length, g = 0; g < f; g++) {
                  var h = e[g].split(KEDITORTOP.RAONKSolution.Agent.formfeed), m = {
                    path: h[1],
                    name: h[1].substring(h[1].lastIndexOf("\\") + 1),
                    size: h[2],
                    width: 0,
                    height: 0,
                    idx: g
                  };
                  void 0 != h[3]
                  && (m.width = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                      h[3]), m.height = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                      h[4]));
                  a.push(m)
                }
                keditor_src_init(b._EDITOR.design);
                restoreSelection();
                setFocusToBody();
                if (KEDITORTOP.RAONKEDITOR.browser.ie) {
                  try {
                    var q = b._DOC.body.topMargin, t = b._DOC.body.leftMargin;
                    b.mouseDropPosition.clientX = z < t ? t : z;
                    b.mouseDropPosition.clientY = A < q ? q : A;
                    if (b._DOC.caretPositionFromPoint) {
                      var u = b._DOC.caretPositionFromPoint(
                              b.mouseDropPosition.clientX, b.mouseDropPosition.clientY),
                          v = b._DOC.createRange();
                      v.setStart(u.offsetNode, u.offset);
                      v.collapse()
                    } else if (b._DOC.caretRangeFromPoint) {
                      b._DOC.caretRangeFromPoint(
                          b.mouseDropPosition.clientX, b.mouseDropPosition.clientY);
                    } else if (b._DOC.body.createTextRange) {
                      var v = b._DOC.body.createTextRange();
                      v.moveToPoint(b.mouseDropPosition.clientX,
                          b.mouseDropPosition.clientY);
                      v.select()
                    }
                  } catch (x) {
                    q = b._BODY.lastChild;
                    if (1 != q.nodeType || "P" != q.tagName) {
                      q = b._DOC.createElement(
                          "p"), b._BODY.appendChild(q);
                    }
                    doSetCaretPosition(q, 1)
                  }
                } else if (q = getFirstRange().range, 1 == q.collapsed) {
                  t = null;
                  try {
                    createSelectionFromPoint(z, A, z,
                        A), setFocusToBody(), q = getFirstRange().range, t = _iframeDoc.createElement(
                        "keditortemp"), q.insertNode(t), null != t.nextSibling &&
                    doSetCaretPosition(t.nextSibling, !1)
                  } catch (w) {
                    KEDITORTOP && KEDITORTOP.RAONKEDITOR
                    && KEDITORTOP.RAONKEDITOR.logMode && console.log(w)
                  }
                  t && t.parentNode.removeChild(t)
                }
                insertImageInDragAndDrop({editor: b, files: a})
              }
            } else {
              2E3 != a && 2001 == a && d.sendMessageToAgent(y, B, null, !0)
            }
          }, e = !1;
      KEDITORTOP.RAONKEDITOR.browser.chrome && null == a.fromElement && null
      == a.relatedTarget && (e = !0);
      KEDITORTOP.RAONKEDITOR.IsCreatedDropZone && b.lastAgentCmd == y || 0 != e
      || (KEDITORTOP.RAONKEDITOR.IsCreatedDropZone = !0, b.lastAgentCmd = y, d.sendMessageToAgent(
          y,
          B, null, !0))
    }
  }
}

function agentFileUpload(a, c, b) {
  for (var d = a._config, e = "", f = c.length, g = 0; g < f;
      g++) {
    e += c[g].guid + KEDITORTOP.RAONKSolution.Agent.formfeed + c[g].path
        + KEDITORTOP.RAONKSolution.Agent.vertical;
  }
  e = e.substring(0, e.length - 1);
  c = [["kcmd", "KC30"]];
  c.push(["k00", {
    browser: KEDITORTOP.RAONKEDITOR.UserAgent.browser.name.toLowerCase(),
    useragent: encodeURIComponent(navigator.userAgent)
  }]);
  c.push(["k04", encodeURIComponent(d.handlerUrl)]);
  c.push(["k05", d.security.keyValue]);
  c.push(["k06", "EDITOR"]);
  c.push(["k14", "K Editor"]);
  c.push(["k15", 1]);
  c.push(["k16", d.managerLang]);
  c.push(["k19", d.saveFileNameRule]);
  c.push(["k20", d.saveFileNameRuleEx]);
  c.push(["k21", d.saveFolderNameRule]);
  c.push(["k41",
    KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d.security.encryptParam)]);
  for (var f = [], g = G_FormData.length, h = 0; h < g; h++) {
    var m = {
      form: encodeURIComponent(
          G_FormData[h].form_name + "=" + G_FormData[h].form_value)
    };
    f.push(m)
  }
  c.push(["k70", f]);
  c.push(["k71", getHttpHeaderAgentData(a)]);
  c.push(["kp1", encodeURIComponent(e)]);
  c.push(["kp2", d.fileFieldID]);
  a = setManagerParam("{}", c);
  a = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(a);
  sendMessageToAgent(a, function (a) {
    a = KEDITORTOP.RAONKSolution.Agent.parseRtn(a);
    var c = a.code;
    a = a.valueArr;
    if (1E3 == c || 7777 == c) {
      for (var c = [], d = 0; d < a.length; d++) {
        var e = a[d].split(KEDITORTOP.RAONKSolution.Agent.formfeed);
        c.push({guid: e[0], success: e[1], path: e[2]})
      }
      b(c)
    }
  }, null, !0)
}

function agentSaveFile(a, c, b, d, e, f) {
  var g = a._config, h = [["kcmd", "KC34"]];
  "" != g.agentTempRootDirectory && h.push(
      ["k08", encodeURIComponent(g.agentTempRootDirectory)]);
  h.push(["k16", g.managerLang]);
  h.push(["k71", getHttpHeaderAgentData(a)]);
  h.push(["kp1", KEDITORTOP.RAONKEDITOR.util.getRV(a.dv)]);
  h.push(["kp3", b]);
  var m = {};
  "1" == g.useHwpOpen
  && (m.usehwpopen = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(g.useHwpOpen));
  "3" == a._config.compatibility.hwpProcessTypeInAgent && (m.hwpautomation = 1);
  if (f && f.convertPdf) {
    var q =
        KEDITORTOP.RAONKEDITOR.browser.isHttps ? 47337 : 47317;
    try {
      var t = "kupload_manager_port";
      KEDITORTOP.RAONKEDITOR.browser.isHttps && (t = "kupload_manager_port2");
      var u = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          KEDITORTOP.localStorage[t]);
      0 < u && (q = u);
      m.localport = q
    } catch (v) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(v)
    }
  }
  h.push(["kopt", m]);
  e ? (h.push(["kp2",
    encodeURIComponent(g.printHeader) + KEDITORTOP.RAONKSolution.Agent.formfeed
    + encodeURIComponent(g.printFooter)]), c = "1", "1" ==
  g.useFormPrint ? "1" == g.printPreview ? c = "3" : "0" == g.printPreview
      && (c = "4") : "1" == g.printPreview ? c = "1" : "0" == g.printPreview
      && (c = "2"), h.push(["kp4", c])) : (h.push(
      ["kp2", encodeURIComponent(c)]), h.push(["kp4", ""]));
  a = getDownloadTargetImageInfoForAgent(a, b);
  "" != a && h.push(["kp5", a]);
  g = g.printMarginltrb;
  "" != g && h.push(["kp6", g]);
  f && f.convertPdf && h.push(["kp7", 1]);
  f = setManagerParam("{}", h);
  sendMessageToAgent(f + "\x0B", function (a) {
    a = KEDITORTOP.RAONKSolution.Agent.parseRtn(a);
    var b = a.code;
    a = a.valueArr;
    1E3 == b || 7777 ==
    b ? a[0] && d(a[0]) : d()
  }, null, !0)
}

function agentDocumentEdit(a, c) {
  var b = function (b) {
    if (b.defaultStyle) {
      if (b.defaultStyle.styleSheet) {
        b.defaultStyle.styleSheet.cssText = b.defaultStyleText;
        try {
          b.defaultStyle.innerHTML = b.defaultStyleText
        } catch (d) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(d)
        }
      } else {
        b.defaultStyle.innerHTML = b.defaultStyleText;
      }
    }
    b.strData = adjustBeforeDocumentEdit(b.strData);
    var e = null;
    "function" === typeof c._config.event.beforeDocumentEdit
        ? e = c._config.event.beforeDocumentEdit : "function" ===
        typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeDocumentEdit
        && (e = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeDocumentEdit);
    if ("function" === typeof e) {
      var f = KEDITORTOP.RAONKEDITOR.util.splitBodyInnerString(b.strData),
          g = {html: f.body}, v = null;
      try {
        v = e(c.ID, g)
      } catch (w) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(w)
      }
      "string" == typeof v && (b.strData = f.head + v + f.tail)
    }
    e = [["kcmd", "KC35"]];
    f = {
      browser: KEDITORTOP.RAONKEDITOR.UserAgent.browser.name.toLowerCase(),
      useragent: encodeURIComponent(KEDITORTOP.navigator.userAgent),
      version: KEDITORTOP.RAONKEDITOR.UserAgent.browser.major
    };
    e.push(["k00", f]);
    "" != c._config.agentTempRootDirectory && e.push(
        ["k08", encodeURIComponent(c._config.agentTempRootDirectory)]);
    e.push(["k16", c._config.managerLang]);
    f = getDownloadTargetImageInfoForAgent(c, b);
    "" != f && e.push(["kp5", f]);
    f = getManagerColorValue(c._config.style.skinName);
    userColor1 = f.c1;
    userColor2 = f.c2;
    userColor3 = f.c3;
    userColor4 = f.c4;
    e.push(["k50",
      {cr1: userColor1, cr2: userColor2, cr3: userColor3, cr4: userColor4}]);
    e.push(["k71", getHttpHeaderAgentData(c)]);
    var x = {};
    "1" == c._config.useHwpOpen
    && (x.usehwpopen = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        c._config.useHwpOpen), "3"
    == c._config.compatibility.hwpProcessTypeInAgent && (x.hwpautomation = 1));
    "" == a.type ? x.getpageinfo = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        c._config.autoBodyFitForOpenWord) : "0" == a.type
        && (x.getpageinfo = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
            c._config.autoBodyFitForWordEdit));
    "string" == typeof a.filePath && "" != a.filePath
    && (x.openfilepath = a.filePath);
    e.push(["kopt", x]);
    e.push(["kp1", KEDITORTOP.RAONKEDITOR.util.getRV(c.dv)]);
    e.push(["kp2", KEDITORTOP.RAONKEDITOR.util.parseIntOr0(a.type)]);
    e.push(["kp3", b.strData]);
    e.push(["kp4",
      KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c._config.officeLineFix)]);
    b = c._config.fileOpenDialogFilter;
    "string" == typeof b && "" != b && e.push(["kp6", b]);
    b = setManagerParam("{}", e);
    b += "\x0B";
    c.isAddedHtmlContents = !1;
    e = [["kcmd", "KE30"]];
    e.push(["kid", c.agentGuid]);
    var y = setManagerParam("{}", e), y = y + "\x0B", z = function (a) {
      var b = KEDITORTOP.RAONKSolution.Agent.parseRtn(a), d = b.splitCode;
      a = b.code;
      b = b.valueArr;
      if (1E3 ==
          a || 2001 == a || 7777 == a) {
        if (7777 == a) {
          var e = b.length;
          if (1 < e) {
            for (var f = "", g = 1; g < e; g++) {
              f += b[g], g != e - 1
              && (f += d);
            }
            b[0] = f
          }
        }
        e = g = d = null;
        b[0] && (d = b[0].substring(0, 1), g = b[0].substring(2));
        if (1 === x.getpageinfo && (b = g.split(
            KEDITORTOP.RAONKSolution.Agent.formfeed), g = b[0], f = b[1])) {
          for (var e = {},
              f = f.split(";"), h = f.length, b = 0; b < h; b++) {
            var m = f[b].split(":");
            "string" == typeof m[0] && "string" == typeof m[1]
            && (e[KEDITORTOP.RAONKEDITOR.util.trim(
                m[0])] = KEDITORTOP.RAONKEDITOR.util.trim(m[1]))
          }
        }
        if (0 == c.isAddedHtmlContents) {
          if (d && g) {
            showFileOpenLoading(!0);
            if ("file_open" == G_LAST_CMD && (b = !0, 0
            == KEDITORTOP.RAONKEDITOR.isEmpty() && 0 == confirm(
                RAONKEditor_lang.msg.newDocument) && (b = !1), 0 == b)) {
              return;
            }
            if ("1" == d) {
              g = htmlSpecialChars(g), g = addLineBreaker(
                  c._config.enterTag,
                  g), KEDITORTOP.RAONKEDITOR.SetHtmlContents(g,
                  c.ID), showFileOpenLoading(!1, "1");
            } else if ("2" <= d && "5"
                >= d) {
              f = g.toLowerCase();
              b = f.indexOf("<body");
              -1 < b && (g = g.substring(b, g.length), b = g.indexOf(
                  ">"), g = g.substring(b + 1,
                  g.length), f = g.toLowerCase(), b = f.lastIndexOf(
                  "</body>"), -1
              < b && (g = g.substring(0, b)));
              f = void 0;
              f = !1;
              if (1E3 == a || 7777 == a) {
                f = !0;
              }
              if ("word_edit" == G_LAST_CMD && "2" == d) {
                h = getDocumentForDummy().createElement("div");
                h.innerHTML = g;
                for (var m = !1, q = getImagesInfoInHtml(h), t = q.length,
                    b = 0;
                    b < t; b++) {
                  var u = q[b], v = getImageUrlInNode(u);
                  isAgentUrl(v) && (m = !0, v = v.replace(
                      KEDITORTOP.RAONKSolution.managerFinalUrl + "/",
                      ""), v = "file:///" + decodeURIComponent(
                      v), v = convertImageAgentSrc(v, !0), setImageUrlInNode(v,
                      u))
                }
                m && (g = h.innerHTML);
                h = null;
                h = void 0
              }
              if ("1"
                  == c._config.agentDocumentEditSetting.removeMsoFontStyle) {
                h = getDocumentForDummy().createElement("div");
                h.innerHTML = g;
                g = h.getElementsByTagName("p");
                m = g.length;
                for (b = 0; b < m; b++) {
                  g[b].style.fontFamily = "";
                }
                m = h.getElementsByTagName("table");
                q = m.length;
                for (b = 0; b < q;
                    b++) {
                  m[b].style.fontFamily = "", m[b].style.fontSize = "";
                }
                g = h.innerHTML;
                h = null;
                h = void 0
              }
              if (("2" == d || "5" == d) && /<table/i.test(g)) {
                h = getDocumentForDummy().createElement("div");
                h.innerHTML = g;
                m = h.getElementsByTagName("table");
                q = m.length;
                for (b = 0; b < q; b++) {
                  for (t = m[b], u = t.rows.length, g = 0;
                      g < u; g++) {
                    v = t.rows[g];
                    removeAttributeForPasteTable(v);
                    var w = v.cells.length;
                    if (0 ==
                        w) {
                      v.innerHTML = "";
                    } else {
                      for (var N = 0; N < w; N++) {
                        var F = v.cells[N], J = 0, W = F.style.paddingLeft,
                            ba = F.style.paddingRight, U = F.style.width;
                        try {
                          if (-1 < W.indexOf("px") || -1 < W.indexOf("pt") || -1
                              < W.indexOf(
                                  "cm")) {
                            J++, W = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                                W), ba = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                                ba);
                          }
                          if (-1 < U.indexOf("px") || -1 < U.indexOf("pt") || -1
                              < U.indexOf(
                                  "cm")) {
                            J++, U = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                                U);
                          }
                          2 == J && (U = parseFloat(U) - parseFloat(W)
                              - parseFloat(
                                  ba), F.getAttribute("width")
                          && F.setAttribute("width",
                              U), F.style.width = U + "px")
                        } catch (V) {
                          KEDITORTOP && KEDITORTOP.RAONKEDITOR
                          && KEDITORTOP.RAONKEDITOR.logMode && console.log(V)
                        }
                      }
                    }
                  }
                }
                g = h.innerHTML;
                h = null;
                h = void 0
              }
              g = externalPageBreakDataRaplaceInEditor(g);
              3 == d && "1" == c._config.adjustEmptyTableInExcel
              && (g = adjustEmptyTableInExcel(g));
              if ("word_edit" == G_LAST_CMD && "2" == d && (b = null, "function"
              === typeof c._config.event.afterDocumentEdit
                  ? b = c._config.event.afterDocumentEdit : "function"
                  === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_AfterDocumentEdit
                  && (b = KEDITORTOP.KEDITORWIN.RAONKEDITOR_AfterDocumentEdit),
              "function" === typeof b)) {
                h = {html: g};
                m = null;
                try {
                  m = b(c.ID, h)
                } catch (X) {
                  KEDITORTOP && KEDITORTOP.RAONKEDITOR
                  && KEDITORTOP.RAONKEDITOR.logMode && console.log(X)
                }
                "string" == typeof m && (g = m)
              }
              d = {isInit: !0, isLast: f, html: g, pageInfo: e, type: d};
              fileOpenAddHtml(d)
            } else {
              "6" == d && (KEDITORTOP.RAONKEDITOR.SetHtmlContents(g,
                  c.ID), showFileOpenLoading(!1, "1"));
            }
            2001 == a && (c.isAddedHtmlContents = !0, sendMessageToAgent(y, z,
                null, !0))
          } else {
            showFileOpenLoading(!1, "0");
          }
        } else if (2001 == a || 1E3 == a
            || 7777 == a) {
          f = !1;
          if (1E3 == a || 7777 == a) {
            f = !0;
          }
          d && g &&
          ("1" == d && (g = htmlSpecialChars(g), g = addLineBreaker(
              c._config.enterTag, g)), d = {
            isLast: f,
            html: g,
            pageInfo: e,
            type: d
          }, fileOpenAddHtml(d), 2001 == a && ("1"
          == c._config.sendToManagerType ? setTimeout(function () {
            sendMessageToAgent(y, z, null, !0)
          }, 100) : sendMessageToAgent(y, z, null, !0)))
        } else {
          showFileOpenLoading(!1, "0")
        }
      } else {
        showFileOpenLoading(!1, "0")
      }
    };
    sendMessageToAgent(b, z, null, !0)
  };
  if ("" == a.type) {
    var d = {strData: ""};
    b(d)
  } else {
    d = {
      type: "htmlex",
      callback: b,
      isAuto: !0,
      defaultStyle: null,
      defatltStyleText: "",
      imageUpload: !1,
      removeMargin: !0
    };
    setImageSizeForProperty();
    var b = _iframeDoc.getElementsByTagName("head")[0].getElementsByTagName(
            "style")[0], e = b.innerHTML,
        f = e.replace("margin:0px 10px 10px 10px;", "").replace(
            "MARGIN: 0px 10px 10px", "").replace("margin:10px;", "").replace(
            "MARGIN: 10px", "");
    if (b.styleSheet) {
      b.styleSheet.cssText = f;
      try {
        b.innerHTML = f
      } catch (g) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(g)
      }
    } else {
      b.innerHTML = f;
    }
    d.defaultStyle = b;
    d.defaultStyleText = e;
    "" != c._config.agentDocumentEditSetting.downloadImageDomain &&
    (b = c._config.agentDocumentEditSetting.downloadImageDomain, b = b.replace(
        /\s/g, ""), b = b.replace(/#currentDomain#/i,
        KEDITORTOP.location.host), b = b.split(
        ","), d.downloadImageDomainArray = b);
    KEDITORTOP.RAONKEDITOR.GetHtmlContents(d, c.ID)
  }
}

function displayAgentDocumentIcon(a) {
  var c = KEDITORTOP.G_CURRKEDITOR;
  a && (c = a);
  var b = c._config.agentDocumentEdit.length;
  a = function (a) {
    var d = "";
    0 == a && (d = "none");
    for (a = 0; a < b; a++) {
      var g = document.getElementById(
          "keditor_span_" + c.ID + c._config.agentDocumentEdit[a] + "_edit");
      g.style.display = d;
      g.nextSibling && "ue_SM" == g.nextSibling.className
      && (g.nextSibling.style.display = d)
    }
  };
  var d = function (a) {
    var d = "";
    0 == a && (d = "none");
    for (a = 0; a < b; a++) {
      document.getElementById(
          "keditor_big_btn_" + c._config.agentDocumentEdit[a] +
          "edit").parentNode.style.display = d;
    }
    document.getElementById("keditor_document_separator").style.display = d
  };
  0 < b && ("0" == c._config.tool_bar ? (a(!1), d(!0)) : (a(!0), d(!1)))
}

function replaeLocalImageInHtml(a) {
  var c = "";
  try {
    var b = _iframeDoc.createElement("div");
    b.innerHTML = a;
    for (var d = b.getElementsByTagName("img"), e = d.length, f = 0; f < e;
        f++) {
      d[f].src = convertImageAgentSrc(d[f].src, !0);
    }
    c = b.innerHTML
  } catch (g) {
    c = a
  }
  return c
}

function setImageSizeForProperty() {
  for (var a = _iframeDoc.body.getElementsByTagName("img"), c = a.length, b = 0;
      b < c; b++) {
    var d = a[b];
    try {
      var e = d.style.width, f = d.style.height;
      if (-1 < e.indexOf("px")) {
        e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
            e);
      } else {
        var g = getClientRect(d),
            e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(g.right - g.left);
      }
      -1 < f.indexOf("px") ? f = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(f)
          : (g = getClientRect(d), f = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              g.bottom - g.top));
      d.setAttribute("width", e);
      d.setAttribute("height",
          f)
    } catch (h) {
      d.removeAttribute("width"), d.removeAttribute("height")
    }
  }
}

function removeBackgroundColorInNodes(a, c, b) {
  for (var d = _iframeDoc.createElement("div"), e = a.childNodes.length, f = 0;
      f < e; f++) {
    var g = a.childNodes[f];
    1 == g.nodeType ? ("P" == g.tagName && "" == g.innerHTML && ("xp"
    == KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase()
        ? g.innerHTML = unescape("%uFEFF")
        : g.innerHTML = KEDITORTOP.RAONKEDITOR.browser.ie ? unescape("%u200B")
            : "<br>"), d.innerHTML += g.outerHTML) : 3 == g.nodeType
        && (d.innerHTML += g.data)
  }
  d.innerHTML = CleanZeroChar(d.innerHTML);
  a = [];
  e = d.getElementsByTagName("*");
  g = e.length;
  for (f = 0; f < g; f++) {
    var h = e[f].tagName.toLowerCase();
    0 > b.indexOf("," + h + ",") && "" != e[f].style.backgroundColor
    && (e[f].style.removeAttribute ? e[f].style.removeAttribute(c)
        : "backgroundColor" == c && e[f].style.removeProperty(
        "background-color"), void 0 != e[f].style.length ? 0
        == e[f].style.length && 1 == e[f].attributes.length && a.push(e[f])
        : (h = e[f].outerHTML.toLowerCase(), "span"
        == e[f].tagName.toLowerCase() && 0 == h.indexOf(
            "<" + e[f].tagName.toLowerCase() + ">") && a.push(e[f])))
  }
  for (f = a.length - 1; 0 <= f; f--) {
    for (; a[f].firstChild;) {
      a[f].parentNode.insertBefore(a[f].firstChild,
          a[f]);
    }
    a[f].parentNode.removeChild(a[f])
  }
  return d
}

function base64ToLocalImage(a) {
  var c = "", b = "", d = a.base64Data;
  "data:" == d.substring(0, 5) ? (d = d.split(","), 2 == d.length
      && (c = getExtFromImageDataSrc(d[0]), b = d[1]))
      : (c = a.ext, b = a.base64Data);
  d = [["kcmd", "KC05"]];
  d.push(["kp1", "data:image/" + c + ";base64," + b.replace(/[+]/g, "%2B")]);
  c = setManagerParam("{}", d);
  c = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(c);
  sendMessageToAgent(c, function (b) {
    b = KEDITORTOP.RAONKSolution.Agent.parseRtn(b);
    var c = b.code;
    b = b.valueArr;
    if (1E3 == c || 7777 == c) {
      b = b[0].split(KEDITORTOP.RAONKSolution.Agent.formfeed);
      var d = convertImageAgentSrc("file:///" + b[1], !0), h = new Image;
      h.onload = function () {
        d += "?" + h.naturalWidth + "^" + h.naturalHeight;
        h = null;
        h = void 0;
        "function" === typeof a.fn_callback && a.fn_callback(d)
      };
      h.src = d
    }
  }, null, !0)
}

function localImageToBase64(a) {
  var c = [["kcmd", "KC06"]];
  c.push(["kp1", encodeURIComponent(a.localPath.replace(/file:\/\/\//i, ""))]);
  c.push(["kp2", ""]);
  c = setManagerParam("{}", c);
  c = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(c);
  sendMessageToAgent(c, function (b) {
    var c = KEDITORTOP.RAONKSolution.Agent.parseRtn(b), e = c.code,
        c = c.valueArr;
    1E3 == e || 7777 == e ? (b = c[0].replace(/%2B/g, "+"), "function"
    === typeof a.fn_callback && a.fn_callback(b)) : "function"
        === typeof a.fn_error && a.fn_error(b)
  }, function (b) {
    "function" ===
    typeof a.fn_error && a.fn_error(b)
  }, !0)
}

function getApplyNodes(a) {
  try {
    var c = getFirstRange().range, b, d;
    b = 1 == c.collapsed ? [c.startContainer] : c.getNodes();
    if (1 == b.length) {
      var e = b[0];
      if (!(e.tagName && -1 < a.indexOf(e.tagName.toLowerCase()))) {
        for (;
            e = e.parentNode, !e.tagName || "body"
            != e.tagName.toLowerCase();) {
          if (e.tagName && -1 < a.indexOf(
              e.tagName.toLowerCase())) {
            b = [e];
            break
          }
        }
      }
    } else {
      for (var f = b[0], g = b[b.length - 1], e = f, h = g;
          !e.tagName || "body" != e.tagName.toLowerCase();) {
        if (e.tagName && -1 < a.indexOf(e.tagName.toLowerCase())) {
          f = e;
          break
        }
        e = e.parentNode
      }
      for (; !h.tagName ||
      "body" != h.tagName.toLowerCase();) {
        if (h.tagName && -1 < a.indexOf(h.tagName.toLowerCase())) {
          g = h;
          break
        }
        h = h.parentNode
      }
      f == g && (b = [f])
    }
    null != c.startContainer.previousSibling && "HEAD"
    == c.startContainer.previousSibling.tagName && null
    == c.endContainer.nextSibling && (b = c.getNodes());
    if (0 == c.collapsed && 1 < b.length && 1 == b[0].nodeType && "P"
        == b[0].tagName) {
      var m = b[0].innerText || b[0].textContent;
      3 == c.startContainer.nodeType && null == c.startContainer.nextSibling
      && (m = c.startContainer.nodeValue);
      f = !1;
      m.length == c.startOffset &&
      (f = !0);
      !f && KEDITORTOP.RAONKEDITOR.browser.ie && 8
      == KEDITORTOP.RAONKEDITOR.browser.ieVersion && 2 <= b.length && 0
      < c.startOffset && 3 != b[1].nodeType && 1 == c.startContainer.nodeType
      && (f = !0);
      f && (c.setStartAfter(b[0]), b = c.getNodes())
    }
    d = b.length;
    c = [];
    for (m = 0; m < d; m++) {
      null != b[m].parentNode && 1 == b[m].nodeType
      && b[m].tagName && "body" != b[m].tagName.toLowerCase() && b[m].tagName
      && -1 < a.indexOf(b[m].tagName.toLowerCase()) && c.push(b[m]);
    }
    return c
  } catch (q) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(q)
  }
}

function setUserSetting(a, c) {
  if (KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported) {
    var b = "", d = "";
    "personalSetting" == c ? (b = "raonk_personal_setting", d = {
      fontFamily: a._setting.personal_font_family.toString(),
      fontSize: a._setting.personal_font_size.toString(),
      lineHeight: a._setting.personal_line_height.toString(),
      pasteToImage: a._setting.personal_paste_to_image
    }) : "lineBreak" == c && "1" == a._config.saveLineBreakToLocalStorage
        && (b = "raonk_" + a.ID + "_line_break", d = {
          word_break_type: a._setting.word_break_type.toString(),
          word_wrap_type: a._setting.word_wrap_type.toString()
        });
    KEDITORTOP.RAONKEDITOR.util.saveJsonToLocalStorage(b, d)
  }
}

function fileOpenAddHtml(a) {
  try {
    var c = KEDITORTOP.G_CURRKEDITOR, b = a.html;
    1 == a.isInit && getApplyDragResize(c)
    && c.keditor_dragresize.resizeHandleClear();
    b = removeCarriageReturn(c, b);
    setGlobalTableDefaultValue();
    c.UndoManager.reset();
    "1" == c._config.emptyTagRemoveInSetapi && (b = CleanZeroChar(b));
    b = execReplaceMsoStyle(b);
    b = OfficePasteClean(b);
    b = removeDummyTag(b);
    b = removeIncorrectSpaceInTag(b);
    b = RAONK_EDITOR.HTMLParser.RemoveOfficeTag2(b);
    "1" == c._config.useHtmlCorrection && (b = htmlTagRevision(b, !1));
    b = removeTagStyle(b);
    b = htmlAsciiToChar(b);
    b = KEDITORTOP.RAONKEDITOR.util.htmlRevision(b);
    b = adjustInputChecked(b);
    "1" == c._config.ie_BugFixed_Hyfont
    && (b = KEDITORTOP.RAONKEDITOR.util.replaceHyFont(b, c));
    if (1 == a.isInit) {
      setBodyValueToEditor(b);
    } else {
      var d = c._DOC.createElement("div");
      for (d.innerHTML = b; d.hasChildNodes();) {
        c._BODY.appendChild(
            d.firstChild)
      }
    }
    if (1 == a.isLast) {
      var e = a.pageInfo;
      if (e) {
        var f = e.size.split(" "), g = e.margin.split(" "), h = f[0],
            h = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(h),
            h = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(h),
            d = b = 0;
        4 == g.length && (b = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
            g[3]), b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
            b), d = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
            g[1]), d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d));
        var m = KEDITORTOP.RAONKEDITOR.util.getStyle(c._BODY, "marginLeft"),
            m = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(m),
            m = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(m),
            q = KEDITORTOP.RAONKEDITOR.util.getStyle(c._BODY, "marginRight"),
            q = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(q),
            q = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(q),
            g = h - b - d - m - q;
        "0" == c._config.autoBodyFit
        && (c._config.autoBodyFit = "1", c._config.useNoncreationAreaBackground = "0");
        c._BODY.style.width = g + "px";
        "1" == c._config.ruler.use && (m = g + m, "1" == c._config.ruler.mode
        && (m += q), KEDITORTOP.RAONKEDITOR.setRulerPosition(m + "", c.ID), "2"
        == c._config.ruler.mode && setRulerMode2Position(c._BODY.firstChild,
            c));
        setAutoBodyFit(c);
        G_BodyFit.noncreationAreaBackgroundStatus && setBodyFitStyle(c, !0)
      }
      var t = {htmlType: a.type};
      (new ProcessImageInHtmlAgent(c)).inDocumentEdit(t, function (a) {
        for (var b =
            _iframeDoc.getElementsByTagName("input"), c = b.length, d = 0;
            d < c; d++) {
          "radio" == b[d].type && null != b[d].getAttribute(
              "keditorchecked") && (b[d].checked = !0, b[d].setAttribute(
              "checked", "checked"), b[d].removeAttribute("keditorchecked"));
        }
        0 == isViewMode(a) && (a._editorCustomDataMode = !0, "1"
        == a._config.formMode
            ? (ReplaceRealEventToCustomData(), ReplaceRealObjectToImage(!1))
            : ReplaceRealObjectToImage(), xssReplaceScript(
            _iframeDoc.body), replaceClassForBookmark(a, a._BODY, "show"));
        replaceClassForBorder(a, a._BODY, "show");
        setStyleForTableBorderNodeClass(a);
        setCssForFormMode(a);
        a.ShowTableBorder && (a.ShowTableBorder = !1);
        a._iconEnable("");
        0 == isViewMode(a) && setBodyDefaultValue();
        wrapPtagForNotBlockTag(a);
        removeEmptySpanBRTag(a._BODY);
        replaceBrTag(a);
        fn_IEJASOBug(a);
        removeLastBrTag(a);
        0 == isViewMode(a) && removeNbspInPTag(a);
        0 == isViewMode(a) && (replaceClassForBorder(a, a._BODY,
            "show"), replaceClassForBookmark(a, a._BODY,
            "show"), setFocusToBody(), setFocusChildForStyle(a._BODY));
        KEDITORTOP.RAONKEDITOR.util.setBodyBackground(a);
        setAutoBodyFit(a);
        G_BodyFit.noncreationAreaBackgroundStatus &&
        setBodyFitStyle(a, !0);
        0 == isViewMode(a)
        && (a.UndoManager.putUndo(), a.UndoManager.charCount = 0, a.UndoManager.canUndo = !1, a.UndoManager.canRedo = !1);
        a._iconEnable("");
        insertImageSrc(a, null, !1);
        setClassTableAndCellLock(a);
        (KEDITORTOP.RAONKEDITOR.browser.chrome
            || KEDITORTOP.RAONKEDITOR.browser.opera
            || KEDITORTOP.RAONKEDITOR.browser.safari)
        && set_view_mode_auto_height(a);
        setAdjustTableBorder(a._DOC);
        showFileOpenLoading(!1, "1");
        if ("word_edit" == G_LAST_CMD) {
          try {
            if ("function"
                === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_DocumentEditComplete
                ||
                "function"
                === typeof a._config.event.documentEditComplete) {
              b = {type: "word_edit"}, "function"
              === typeof a._config.event.documentEditComplete
                  ? a._config.event.documentEditComplete(a.ID, b) : "function"
                  === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_DocumentEditComplete
                  && KEDITORTOP.KEDITORWIN.RAONKEDITOR_DocumentEditComplete(
                      a.ID, b)
            }
          } catch (e) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(e)
          }
        }
      })
    }
  } catch (u) {
    showFileOpenLoading(!1, "0")
  }
}

function showFileOpenLoading(a, c) {
  try {
    var b = KEDITORTOP.G_CURRKEDITOR._FRAMEWIN.document.getElementById(
        "keditor_file_open_loading"), d = b.parentNode.childNodes, e = d.length;
    if (a) {
      KEDITORTOP.G_CURRKEDITOR.isLoadingFile = !0;
      null != KEDITORTOP.G_CURRKEDITOR.fileOpenLoadingTimeout && (clearTimeout(
          KEDITORTOP.G_CURRKEDITOR.fileOpenLoadingTimeout), KEDITORTOP.G_CURRKEDITOR.fileOpenLoadingTimeout = null);
      for (var f = 0; f < e; f++) {
        1 == d[f].nodeType && d[f] != b && "none" != d[f].style.display
        && (d[f].setAttribute("k_temp_display",
            d[f].style.display), d[f].style.display = "none");
        var g = b.getElementsByTagName("span")[0];
        g.innerHTML = RAONKEditor_lang.msg.opening_file + ' <img src="'
            + KEDITORTOP.G_CURRKEDITOR._config.webPath.image
            + 'icon/loading.gif" style="width:10px; "/>';
        b.style.display = ""
      }
    } else {
      KEDITORTOP.G_CURRKEDITOR.isLoadingFile = !1, g = b.getElementsByTagName(
          "span")[0], g.innerHTML = "0" == c
          ? RAONKEditor_lang.msg.fail_open_file
          : RAONKEditor_lang.msg.complete_open_file, KEDITORTOP.G_CURRKEDITOR.fileOpenLoadingTimeout = setTimeout(
          function () {
            for (var a =
                0; a < e; a++) {
              1 == d[a].nodeType && d[a] != b && null
              != d[a].getAttribute("k_temp_display")
              && (d[a].style.display = d[a].getAttribute(
                  "k_temp_display"), d[a].removeAttribute(
                  "k_temp_display")), b.style.display = "none"
            }
          }, 3E3)
    }
  } catch (h) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(h)
  }
}

function setWidthForIOS(a) {
  if (KEDITORTOP.RAONKEDITOR.browser.mobile
      && KEDITORTOP.RAONKEDITOR.browser.iOS) {
    var c = document.getElementById("ue_editor_holder_" + a.ID).clientWidth;
    a._DOC.documentElement.style.width = c + "px"
  }
}

function setAutoUrlHyperLink(a, c) {
  if ("0" != KEDITORTOP.G_CURRKEDITOR._config.autoUrlDetect) {
    var b = null;
    try {
      var d = "which" in a ? a.which : a.keyCode, e = "", f = null, g = c.range,
          h = !1, m = function (a) {
            a = null != a ? a : e;
            -1 < a.toLowerCase().indexOf("http:") ? (a = a.substring(
                a.toLowerCase().lastIndexOf("http:")), t = !0, u = 0) : -1
            < a.toLowerCase().indexOf("https:") ? (a = a.substring(
                a.toLowerCase().lastIndexOf("https:")), t = !0, u = 0) : -1
                < a.toLowerCase().indexOf("www.") && (a = a.substring(
                    a.toLowerCase().lastIndexOf("www.")), t = !0, u = 1);
            t && (e = a)
          };
      if (32 == d && g.startOffset == g.endOffset && "3"
          == g.endContainer.nodeType) {
        f = g.startContainer, e = g.endContainer.nodeValue, e = e.substring(
            0, g.endOffset - 1);
      } else if (13 == d && !a.shiftKey) {
        var q = GetParentbyTagName(g.startContainer, "p");
        q && q.previousSibling && q.previousSibling.lastChild
        && (f = q.previousSibling.lastChild, "1" == f.nodeType
            ? e = f.textContent : "3" == f.nodeType
            && (e = f.nodeValue), !/\s/g.test(e) && f.previousSibling && "A"
        == f.previousSibling.tagName
        && (h = !0, e = f.previousSibling.textContent + e))
      }
      if (!("A" == f.tagName || 3 != f.nodeType &&
          f.previousSibling && "A" == f.previousSibling.tagName || f.parentNode
          && "A" == f.parentNode.tagName)) {
        var t = !1, u = 0;
        m();
        if (t) {
          if (t && null != e && void 0 != e && ""
              != KEDITORTOP.RAONKEDITOR.util.trim(e)) {
            var v;
            try {
              "function"
              === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforeInsertHyperlink
                  ? v = KEDITORTOP.G_CURRKEDITOR._config.event.beforeInsertHyperlink(
                      KEDITORTOP.G_CURRKEDITOR.ID, e) : "function"
                  === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeInsertHyperlink
                  && (v = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeInsertHyperlink(
                      KEDITORTOP.G_CURRKEDITOR.ID,
                      e))
            } catch (w) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(w)
            }
            null != v && void 0 != v && (d = e, m(v), t
            && (f.textContent = f.textContent.replace(d, v)))
          }
          e = e.replace(/[,!@#^&*()_+={}[;:".~`><]$/g, "");
          e = e.replace(/\u00A0/g, "");
          m = null;
          0 == u ? m = e.match(
                  /^(https?|ftp):\/\/(-\.)?([^\s\/?\.#]+\.?)+(\/[^\s]*)?[^\s\.,]$/i)
              : 1 == u && (m = e.match(
              /(www\.)?([^\s\/?\.#]+\.?)+(\/[^\s]*)?[^\s\.,]$/i));
          if (m) {
            var b = saveSelection(KEDITORTOP.G_CURRKEDITOR.ID, !0),
                x = rangy.createRange(_iframeDoc);
            0 == h && x.selectNodeContents(f);
            x.findText(e,
                {caseSensitive: !1, wholeWordsOnly: !1, direction: "forward"})
            && (x.select(), 1 == u && (e = "http://" + e), f = {
              type: "hyperlink",
              url: e,
              target: "_blank",
              attr_info_arr: []
            }, command_InsertHyperLink(KEDITORTOP.G_CURRKEDITOR.ID,
                document.getElementById(
                    "keditor_design_" + KEDITORTOP.G_CURRKEDITOR.ID), f));
            restoreSelection(b, !0)
          }
        }
      }
    } catch (y) {
      null != b && restoreSelection(b, !0)
    }
  }
}

function getWidthForAutoBodyFit(a, c) {
  var b;
  b = "table" == c ? a._defTableWidth : a._defaultWidth;
  if ("1" == a._config.autoBodyFit) {
    var d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(a._BODY.style.width);
    0 == d && "0" == a._config.ruler.fixEditorWidth && (d = getClientRect(
        a._BODY), d = d.right - d.left);
    0 < d && (b = d, "1" == a._config.defaultBodySpace.use
    && (b -= KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        a._config.defaultBodySpace.configValue.left)))
  }
  return b
}

function getDownloadTargetImageInfoForAgent(a, c) {
  var b = "", d = a._config.targetDomainForEdit;
  if ("" != d) {
    var d = d.split(","), e = d.length, f = document.createElement("iframe");
    f.style.display = "none";
    document.body.appendChild(f);
    var g = "document.open();" + (isCustomDomain(document) ? 'document.domain="'
            + document.domain + '";' : "") + " document.close();",
        g = KEDITORTOP.RAONKEDITOR.browser.ie && 12
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
            ? "javascript:void(function(){" + encodeURIComponent(g) + "}())"
            : "";
    f.src = g;
    g = getIframeDocument(f);
    g.open("text/html", "replace");
    isCustomDomain(document) && (g.domain = document.domain);
    g.write(c.strData);
    g.close();
    for (var h = g.getElementsByTagName("img"), m = h.length, q = 0; q < m;
        q++) {
      for (var t = h[q], u = KEDITORTOP.RAONKEDITOR.util.getDomainInUrl(t.src),
          v = !1, w = 0; w < e; w++) {
        if (0 == u.fullDomain.indexOf(d[w]) || 0
            == u.domain.indexOf(d[w])) {
          v = !0;
          break
        }
      }
      v && (u = t.src.split("?"), t.src = u[0], u[1] && (t.src += "?"
          + encodeURIComponent(u[1])), b += t.src
          + KEDITORTOP.RAONKSolution.Agent.formfeed
          + KEDITORTOP.RAONKEDITOR.util.makeGuid()
          + KEDITORTOP.RAONKSolution.Agent.vertical)
    }
    h =
        ["table", "td", "body"];
    m = h.length;
    for (q = 0; q < m; q++) {
      for (var t = g.getElementsByTagName(h[q]),
          x = t.length, w = 0; w < x; w++) {
        var y = t[w].style.backgroundImage;
        "" == y && t[w].getAttribute("background") && (y = t[w].getAttribute(
            "background"));
        y = y.replace('url("', "").replace('")', "");
        y = y.replace("url('", "").replace("')", "");
        y = y.replace("url(", "").replace(")", "");
        if ("" != y && "none" != y.toLowerCase() && "initial"
            != y.toLowerCase()) {
          for (var u = KEDITORTOP.RAONKEDITOR.util.getDomainInUrl(y), v = !1,
              z = 0; z < e; z++) {
            if (0 == u.fullDomain.indexOf(d[z]) ||
                0 == u.domain.indexOf(d[z])) {
              v = !0;
              break
            }
          }
          v && (b += y + KEDITORTOP.RAONKSolution.Agent.formfeed
              + KEDITORTOP.RAONKEDITOR.util.makeGuid()
              + KEDITORTOP.RAONKSolution.Agent.vertical)
        }
      }
    }
    "" != b && (b = b.substring(0,
        b.length - 1), c.strData = g.documentElement.outerHTML);
    f.parentNode.removeChild(f)
  }
  return b
}

var G_RULER_OFFSET_X, G_RULER_COORD_X, G_RULER_DRAG = !1, G_CURR_DRAGGIN_RULER,
    G_RULER_MOVE_AREA = {realX1: 0, x1: 0, realX2: 0, x2: 0};

function rulerStartDrag(a) {
  G_CURR_DRAGGIN_RULER = a.target ? a.target : a.srcElement;
  var c = "", b = G_CURR_DRAGGIN_RULER.id.split("_");
  if (b[4]) {
    for (var d = b.length, e = 4; e < d; e++) {
      c += b[e], e != d - 1
      && (c += "_");
    }
    KEDITORTOP.G_CURRKEDITOR = KEDITORTOP.RAONKEDITOR.util._setEditor(c)
  }
  keditor_src_init(KEDITORTOP.G_CURRKEDITOR._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  c = getFirstRange().range.startContainer;
  3 == c.nodeType ? c = c.parentNode : 1 != c.nodeType && (c = _iframeDoc.body);
  if (0 != c.isContentEditable) {
    b = getDialogWindow();
    getDialogDocument();
    c = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        G_CURR_DRAGGIN_RULER.style.width);
    document.getElementById(G_CURR_DRAGGIN_RULER.id.replace("_point_",
        "_pointline_")).style.display = "";
    if (0 == G_CURR_DRAGGIN_RULER.id.indexOf("keditor_ruler_point_0") || 0
        == G_CURR_DRAGGIN_RULER.id.indexOf("keditor_ruler_point_1") || 0
        == G_CURR_DRAGGIN_RULER.id.indexOf("keditor_ruler_point_3")) {
      var d = document.getElementById(
              "keditor_ruler_point_2_" + KEDITORTOP.G_CURRKEDITOR.ID),
          d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d.style.marginLeft),
          f = document.getElementById("keditor_ruler_area_0"),
          e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(f.style.left),
          f = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(f.style.width);
      G_RULER_MOVE_AREA.x1 = e + f - c / 2;
      G_RULER_MOVE_AREA.x2 = d - 30
    } else {
      0 == G_CURR_DRAGGIN_RULER.id.indexOf("keditor_ruler_point_2")
      && (e = document.getElementById("keditor_ruler_point_0_"
          + KEDITORTOP.G_CURRKEDITOR.ID), d = document.getElementById(
          "keditor_ruler_point_1_"
          + KEDITORTOP.G_CURRKEDITOR.ID), e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          e.style.marginLeft),
          d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              d.style.marginLeft), G_RULER_MOVE_AREA.x1 = (e > d ? e : d)
          + 30, f = document.getElementById(
          "keditor_ruler_area_1"), e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          f.style.left) - c / 2, G_RULER_MOVE_AREA.x2 = e);
    }
    a || (a = b.event);
    G_RULER_OFFSET_X = a.clientX;
    G_CURR_DRAGGIN_RULER.style.marginLeft
    || (G_CURR_DRAGGIN_RULER.style.marginLeft = "0px");
    G_RULER_COORD_X = parseInt(G_CURR_DRAGGIN_RULER.style.marginLeft);
    G_RULER_DRAG = !0;
    "1" == KEDITORTOP.G_CURRKEDITOR._config.ruler.usePointerValue && (b =
        document.getElementById("ruler_pointer_value_"
            + KEDITORTOP.G_CURRKEDITOR.ID), b.style.display = "", b.innerHTML = G_RULER_COORD_X
        + c / 2 + (_iframeDoc.documentElement.scrollLeft
            || _iframeDoc.body.scrollLeft || 0)
        - G_Ruler.hRuler0PositionLeft, d = b.getClientRects()[0], d = d.right
        - d.left, e = 0, "1"
    == KEDITORTOP.G_CURRKEDITOR._config.ruler.useVertical
    && (e += 17), G_RULER_COORD_X + d + e
    > KEDITORTOP.RAONKEDITOR.util.parseIntOr0(getCurrEditorWidth())
        ? b.style.left = G_RULER_COORD_X - d + "px"
        : b.style.left = G_RULER_COORD_X + c + "px");
    c = document.getElementById("ue_ruler_back_div");
    c.style.display = "";
    b = KEDITORTOP.KEDITORDOC.getElementById(
        "raonk_frame_holder" + KEDITORTOP.G_CURRKEDITOR.ID);
    c.style.width = b.style.width;
    c.style.height = b.style.height;
    KEDITORTOP.RAONKEDITOR.util.addEventEx(document, "mousemove", rulerDrag,
        !0);
    KEDITORTOP.RAONKEDITOR.util.addEventEx(document, "mouseup", rulerStopDrag,
        !0);
    KEDITORTOP.RAONKEDITOR.util.addEventEx(KEDITORTOP.KEDITORDOC, "mousemove",
        rulerDrag, !0);
    KEDITORTOP.RAONKEDITOR.util.addEventEx(KEDITORTOP.KEDITORDOC, "mouseup",
        rulerStopDrag, !0)
  }
  KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
}

function rulerDrag(a) {
  if (G_RULER_DRAG) {
    var c = getDialogWindow();
    getDialogDocument();
    a || (a = c.event);
    getWindowClientSize(c);
    currentScrollPos = getWindowScrollPos(c);
    c = G_RULER_COORD_X + a.clientX - G_RULER_OFFSET_X;
    try {
      if (!(KEDITORTOP.RAONKEDITOR.browser.ie && 9
              > KEDITORTOP.RAONKEDITOR.browser.ieVersion) && a.currentTarget
          == KEDITORTOP.KEDITORDOC) {
        var b = getClientRect(
                KEDITORTOP.KEDITORDOC.getElementById(
                    "raonk_frame_holder" + KEDITORTOP.G_CURRKEDITOR.ID)),
            c = c - b.left
      }
    } catch (d) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
      console.log(d)
    }
    c <= G_RULER_MOVE_AREA.x1 ? c = G_RULER_MOVE_AREA.x1 : c
        >= G_RULER_MOVE_AREA.x2 && (c = G_RULER_MOVE_AREA.x2);
    var b = !1, e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        KEDITORTOP.G_CURRKEDITOR._config.ruler.moveGap);
    1 < e ? c == G_RULER_MOVE_AREA.x1 ? b = !0 : c == G_RULER_MOVE_AREA.x2
        ? b = !0 : 0 == (c + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        G_CURR_DRAGGIN_RULER.style.width) / 2) % e && (b = !0) : b = !0;
    b && (G_CURR_DRAGGIN_RULER.style.marginLeft = c + "px");
    var e = G_CURR_DRAGGIN_RULER.id,
        b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
            G_CURR_DRAGGIN_RULER.style.width),
        e = e.replace("_point_", "_pointline_"), f = document.getElementById(e),
        e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
            G_CURR_DRAGGIN_RULER.style.marginLeft) + b / 2;
    f.style.left = e + "px";
    if ("1" == KEDITORTOP.G_CURRKEDITOR._config.ruler.usePointerValue) {
      f = document.getElementById(
          "ruler_pointer_value_" + KEDITORTOP.G_CURRKEDITOR.ID);
      f.innerHTML = e + (_iframeDoc.documentElement.scrollLeft
          || _iframeDoc.body.scrollLeft || 0) - G_Ruler.hRuler0PositionLeft;
      var g = f.getClientRects()[0], g = g.right - g.left, h = 0;
      "1" == KEDITORTOP.G_CURRKEDITOR._config.ruler.useVertical &&
      (h += 17);
      e + g + h > KEDITORTOP.RAONKEDITOR.util.parseIntOr0(getCurrEditorWidth())
          ? f.style.left = e - 7 - g + "px" : f.style.left = e + 7 + "px"
    }
    if (0 == G_CURR_DRAGGIN_RULER.id.indexOf("keditor_ruler_point_0")) {
      var b = document.getElementById(
              "keditor_ruler_point_3_" + KEDITORTOP.G_CURRKEDITOR.ID),
          m = document.getElementById(
              "keditor_ruler_pointline_3_" + KEDITORTOP.G_CURRKEDITOR.ID),
          c = c - parseIntOr0(b.style.marginLeft);
      b.style.marginLeft = parseIntOr0(b.style.marginLeft) + c + "px";
      m.style.left = parseIntOr0(m.style.left) + c + "px"
    } else if (0 ==
        G_CURR_DRAGGIN_RULER.id.indexOf("keditor_ruler_point_3")) {
      var e = document.getElementById(
              "keditor_ruler_point_0_" + KEDITORTOP.G_CURRKEDITOR.ID),
          f = document.getElementById(
              "keditor_ruler_pointline_0_" + KEDITORTOP.G_CURRKEDITOR.ID),
          g = document.getElementById(
              "keditor_ruler_point_1_" + KEDITORTOP.G_CURRKEDITOR.ID),
          h = document.getElementById(
              "keditor_ruler_pointline_1_" + KEDITORTOP.G_CURRKEDITOR.ID),
          c = parseIntOr0(G_CURR_DRAGGIN_RULER.style.marginLeft) - parseIntOr0(
              e.style.marginLeft), m = !0, q = parseIntOr0(g.style.marginLeft) +
              c;
      q <= G_RULER_MOVE_AREA.x1 ? (q = G_RULER_MOVE_AREA.x1, m = !1) : q
          >= G_RULER_MOVE_AREA.x2 && (q = G_RULER_MOVE_AREA.x2, m = !1);
      m ? (g.style.marginLeft = q + "px", h.style.left = q + b / 2
              + "px", e.style.marginLeft = parseIntOr0(e.style.marginLeft) + c
              + "px", f.style.left = parseIntOr0(f.style.left) + c + "px")
          : (b = document.getElementById("keditor_ruler_point_3_"
              + KEDITORTOP.G_CURRKEDITOR.ID), m = document.getElementById(
              "keditor_ruler_pointline_3_"
              + KEDITORTOP.G_CURRKEDITOR.ID), q -= parseIntOr0(
              g.style.marginLeft), b.style.marginLeft = parseIntOr0(
                  b.style.marginLeft) -
              c + q + "px", m.style.left = parseIntOr0(m.style.left) - c + q
              + "px", g.style.marginLeft = parseIntOr0(g.style.marginLeft) + q
              + "px", h.style.left = parseIntOr0(h.style.left) + q
              + "px", e.style.marginLeft = parseIntOr0(e.style.marginLeft) + q
              + "px", f.style.left = parseIntOr0(f.style.left) + q + "px")
    }
    KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
    KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
  }
}

function rulerStopDrag(a) {
  getDialogDocument();
  G_RULER_DRAG = !1;
  document.getElementById("ue_ruler_back_div").style.display = "none";
  var c = document.getElementById(
          "keditor_ruler_pointline_0_" + KEDITORTOP.G_CURRKEDITOR.ID),
      b = document.getElementById(
          "keditor_ruler_pointline_1_" + KEDITORTOP.G_CURRKEDITOR.ID);
  a = document.getElementById(
      "keditor_ruler_pointline_2_" + KEDITORTOP.G_CURRKEDITOR.ID);
  c = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c.style.left);
  b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(b.style.left);
  a = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(a.style.left);
  G_Ruler.rulerPositionArr = [c, b, a];
  a = G_CURR_DRAGGIN_RULER.id;
  c = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(G_CURR_DRAGGIN_RULER.style.width);
  b = a.replace("_point_", "_pointline_");
  b = document.getElementById(b);
  c = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
      G_CURR_DRAGGIN_RULER.style.marginLeft) + c / 2;
  b.style.left = c + "px";
  0 == a.indexOf("keditor_ruler_point_0") || 0 == a.indexOf(
      "keditor_ruler_point_1") || 0 == a.indexOf("keditor_ruler_point_3") ? "1"
      == KEDITORTOP.G_CURRKEDITOR._config.ruler.useInoutdent
      && setNodeStyleForRulerMode(1) :
      0 == a.indexOf("keditor_ruler_point_2") && "1"
      == KEDITORTOP.G_CURRKEDITOR._config.ruler.useInoutdent
      && setNodeStyleForRulerMode(2);
  document.getElementById(G_CURR_DRAGGIN_RULER.id.replace("_point_",
      "_pointline_")).style.display = "none";
  "1" == KEDITORTOP.G_CURRKEDITOR._config.ruler.usePointerValue
  && (a = document.getElementById("ruler_pointer_value_"
      + KEDITORTOP.G_CURRKEDITOR.ID), a.style.display = "none", a.style.left = "0px");
  KEDITORTOP.RAONKEDITOR.util.removeEvent(document, "mousemove", rulerDrag, !0);
  KEDITORTOP.RAONKEDITOR.util.removeEvent(document,
      "mouseup", rulerStopDrag, !0);
  KEDITORTOP.RAONKEDITOR.util.removeEvent(KEDITORTOP.KEDITORDOC, "mousemove",
      rulerDrag, !0);
  KEDITORTOP.RAONKEDITOR.util.removeEvent(KEDITORTOP.KEDITORDOC, "mouseup",
      rulerStopDrag, !0);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function setNodeStyleForRulerMode(a) {
  var c = document.getElementById("keditor_ruler_area_0"),
      b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c.style.left)
          + KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c.style.width),
      c = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(document.getElementById(
          "keditor_ruler_pointline_0_"
          + KEDITORTOP.G_CURRKEDITOR.ID).style.left) - b,
      b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(document.getElementById(
          "keditor_ruler_pointline_1_"
          + KEDITORTOP.G_CURRKEDITOR.ID).style.left) - b - c,
      d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          document.getElementById("keditor_ruler_pointline_2_" +
              KEDITORTOP.G_CURRKEDITOR.ID).style.left),
      e = document.getElementById("keditor_ruler_area_1"),
      d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(e.style.left) - d,
      e = getFirstRange().range, f = !1;
  e.startContainer && "BODY" == e.startContainer.tagName && e.endContainer
  && "BODY" == e.endContainer.tagName && (f = !0);
  for (var e = f ? KEDITORTOP.G_CURRKEDITOR._BODY.childNodes : getNodesInRange(
      e), f = e.length, g = 0; g < f; g++) {
    var h = e[g];
    if ("P" == h.tagName || "LI" == h.tagName) {
      1 == a ? (h.style.marginLeft = c
          + "px", h.style.textIndent = b + "px") : h.style.marginRight =
          d + "px"
    }
  }
}

function setRulerMode2Position(a, c) {
  if ("design" == c._newMode) {
    var b = c._DOC.documentElement.scrollLeft || c._BODY.scrollLeft || 0,
        d = function (a) {
          var b = 0;
          a = a.toLowerCase();
          -1 < a.indexOf("px") ? b = parseFloat(a) : -1 < a.indexOf("cm")
              ? (b = parseFloat(a), b = KEDITORTOP.RAONKEDITOR.util.cmToMm(
                  b), b = KEDITORTOP.RAONKEDITOR.util.mmToPx(b)) : -1
              < a.indexOf("mm") && (b = parseFloat(
                  a), b = KEDITORTOP.RAONKEDITOR.util.mmToPx(b));
          return b
        }, e = d(a.style.textIndent), f = d(a.style.marginLeft),
        d = d(a.style.marginRight), g = getClientRect(a),
        h = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(g.left),
        m = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(g.right),
        q = document.getElementById("keditor_ruler_point_0_" + c.ID),
        t = document.getElementById("keditor_ruler_point_1_" + c.ID),
        u = document.getElementById("keditor_ruler_point_2_" + c.ID),
        v = document.getElementById("keditor_ruler_point_3_" + c.ID),
        w = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(q.style.width),
        g = document.getElementById("keditor_ruler_pointline_0_" + c.ID),
        x = document.getElementById("keditor_ruler_pointline_1_" + c.ID),
        y = document.getElementById("keditor_ruler_pointline_2_" +
            c.ID),
        z = document.getElementById("keditor_ruler_pointline_3_" + c.ID);
    "1" == c._config.ruler.useInoutdent && (q.style.marginLeft = h - w / 2
        + "px", g.style.left = h + "px", t.style.marginLeft = h + e - w / 2
        + "px", x.style.left = h + e + "px", u.style.marginLeft = m - w / 2
        + "px", y.style.left = m + "px", v.style.marginLeft = h - w / 2
        + "px", z.style.left = h + "px");
    q = document.getElementById("keditor_ruler_area_0");
    t = document.getElementById("keditor_ruler_area_1");
    u = w = v = e = u = 0;
    e = m + d;
    v = h - f;
    0 > v && (v = 0);
    w = getCurrEditorWidth() - e;
    0 > w && (w = 0);
    q.style.width = v + "px";
    t.style.width =
        w + "px";
    q.style.left = u + "px";
    t.style.left = e + "px";
    G_RULER_MOVE_AREA.x1 = u + v;
    G_RULER_MOVE_AREA.x2 = e;
    f = 0 == u + v ? h + b : u + v + b;
    G_RULER_MOVE_AREA.realX1 = f;
    G_RULER_MOVE_AREA.realX2 = e + b;
    "1" == c._config.ruler.useInoutdent
    && (G_Ruler.rulerPositionArr = [KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        g.style.left) + b,
      KEDITORTOP.RAONKEDITOR.util.parseIntOr0(x.style.left) + b,
      KEDITORTOP.RAONKEDITOR.util.parseIntOr0(y.style.left) + b])
  }
}

function setRulerPositionForNode(a, c) {
  var b;
  b = a ? a : KEDITORTOP.G_CURRKEDITOR;
  if ("2" == b._config.ruler.mode && G_Ruler.rulerArea && "none"
      != G_Ruler.rulerArea.style.display) {
    var d = null != c && void 0 != c && c && 0 == b._config.initFocus
        && KEDITORTOP.RAONKEDITOR.browser.ie, e = null;
    d || (e = getFirstRange().range);
    if (e || d) {
      var f = null;
      d ? f = b._DOC.getElementsByTagName("p")[0] : (f = e.startContainer, 3
      == f.nodeType && (f = f.parentNode));
      d = GetParentbyTagName(f, "p");
      null == d && (d = GetParentbyTagName(f, "li"));
      null != d || "BODY" != f.tagName && 9 != f.nodeType ||
      (d = b._DOC.getElementsByTagName("p")[0]);
      d && setRulerMode2Position(d, b)
    }
  }
}

function getCurrEditorWidth() {
  var a = null, a = getClientRect(document.getElementById("editorContentArea"));
  return a = a.right - a.left
}

function findUrlInText(a, c) {
  var b = {
    changedData: "",
    matchArr: null,
    tempUrlPattern: unescape("%u200B") + "keditor_url_{0}" + unescape("%u200B")
  };
  if ("1" == c._config.autoUrlDetect) {
    try {
      var d = a, e = d.match(/((^https?:\/\/)|(\shttps?:\/\/))[\S]{1,}/gi);
      if (e) {
        for (var f = e.length, g = 0; g < f; g++) {
          d = d.replace(
              KEDITORTOP.RAONKEDITOR.util.trim(e[g]),
              b.tempUrlPattern.replace("{0}", g)), e[g] = e[g].replace(/&/g,
              "&amp;");
        }
        b.changedData = d;
        b.matchArr = e
      }
    } catch (h) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(h)
    }
  }
  return b
}

function replaceRealUrl(a) {
  for (var c = a.matchArr.length, b = 0; b < c; b++) {
    var d = '<a href="' + (0 > a.matchArr[b].indexOf("://") ? "http://"
        + a.matchArr[b] : a.matchArr[b]) + '">' + a.matchArr[b] + "</a>";
    a.changedData = a.changedData.replace(a.tempUrlPattern.replace("{0}", b), d)
  }
  return a.changedData
}

function getHttpHeaderAgentData(a) {
  var c = [];
  a = a.tempHttpHeaderObj;
  for (var b in a) {
    var d = {header: encodeURIComponent(b + "=" + a[b])};
    c.push(d)
  }
  return c
}

function getFirstChildNodeForCaret(a) {
  if (a.firstChild) {
    for (a = a.firstChild; ;) {
      if (3 == a.nodeType || -1
          < ",img,input,iframe,object,video,".indexOf(
              "," + a.tagName.toLowerCase() + ",")) {
        a = a.parentNode;
        break
      } else if ("BR" == a.tagName) {
        a = a.parentNode;
        break
      } else if (null != a.firstChild) {
        a = a.firstChild;
      } else {
        break;
      }
    }
  }
  return a
}

function getLastChildNodeForCaret(a) {
  "TABLE" == a.tagName && (a = a.getElementsByTagName("td"), a = a[a.length
  - 1]);
  for (; null != a.lastChild;) {
    a = a.lastChild;
  }
  if (3 == a.nodeType || a.tagName && -1
      < ",br,img,input,iframe,object,video,".indexOf(
          "," + a.tagName.toLowerCase() + ",")) {
    a = a.parentNode;
  }
  return a
}

var G_Toolbar_Scrolling;

function setToolbarScroll(a, c) {
  if (KEDITORTOP.RAONKEDITOR.browser.mobile && "1"
      == a._config.useAutoToolbar) {
    var b = document.getElementById("ue_editor_main_" + a.ID),
        d = getClientRect(b),
        b = document.getElementById("keditor_tab_tool1_" + a.ID),
        e = document.getElementById("keditor_tab_tool2_" + a.ID);
    b.style.width = d.width - 10 + "px";
    e.style.width = d.width - 10 + "px";
    c && (d = document.createElement(
        "div"), d.id = "toolbar2_hidden", d.style.display = "none", document.body.appendChild(
        d), hiddenIconForAutoToolbar(a), b.style.overflowX = "auto",
        e.style.overflowX = "auto", KEDITORTOP.RAONKEDITOR.util.addEventEx(b,
        "scroll", toolbarScrollEvent), KEDITORTOP.RAONKEDITOR.util.addEventEx(e,
        "scroll", toolbarScrollEvent), createMobileScrollIcon(a,
        b), createMobileScrollIcon(a, e));
    showMobileScrollIcon(b);
    showMobileScrollIcon(e)
  }
}

function createMobileScrollIcon(a, c) {
  for (var b = 1; 2 >= b; b++) {
    var d = document.createElement("div");
    d.id = c.id + "_scroll_icon_" + b;
    d.className = "scroll_icon_" + a._config.style.skinName + "_" + b;
    d.style.display = "none";
    c.appendChild(d)
  }
}

function showMobileScrollIcon(a) {
  var c = a.clientWidth, b = a.scrollWidth;
  document.getElementById(a.id + "_scroll_icon_2").style.display = b > c && c
  + a.scrollLeft < b ? "" : "none"
}

function toolbarScrollEvent(a) {
  var c = a.srcElement;
  a = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c.clientWidth);
  var b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c.scrollLeft),
      d = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c.scrollWidth),
      e = document.getElementById(c.id + "_scroll_icon_1"),
      c = document.getElementById(c.id + "_scroll_icon_2");
  e.style.display = 0 == b ? "none" : "";
  1 >= Math.abs(b - (d - a)) ? c.style.display = "none" : b < d - a
      && (c.style.display = "")
}

function hiddenIconForAutoToolbar(a) {
  var c = document.getElementById("keditor_tab_tool2_" + a.ID);
  a = document.getElementById("toolbar2_hidden");
  for (var c = c.childNodes, b = c.length - 1; 0 <= b; b--) {
    var d = c[b];
    "SPAN" == d.tagName && ("ue_SM" == d.className ? d.parentNode.removeChild(d)
        : a.appendChild(d))
  }
}

function adjustTextPasteForAgent(a) {
  KEDITORTOP.RAONKEDITOR.util.getRV(KEDITORTOP.G_CURRKEDITOR.av)
  >= KEDITORTOP.RAONKEDITOR.util.makeARV(
      {maj: [20, "18"], l: "42", mi1: 0, mi2: "2"}) ? a = "1"
  == KEDITORTOP.G_CURRKEDITOR._config.pasteTextLineBreak ? addLineBreaker("p",
      a, !0) : KEDITORTOP.RAONKEDITOR.util.escapeHtml(a) : (a = a.replace(
      /&lt;/g, "<DeXt5_Lt>"), a = a.replace(/&gt;/g,
      "<DeXt5_Gt>"), a = a.replace(/&nbsp;&nbsp;/g,
      "<DeXt5_NbSp>"), a = a.replace(/&/g, "&amp;"), a = a.replace(
      /<DeXt5_Lt>/g, "&lt;"), a = a.replace(/<DeXt5_Gt>/g, "&gt;"),
      a = a.replace(/<DeXt5_NbSp>/g, "&nbsp;&nbsp;"));
  a = a.replace(/\r?\n/g, "<BR />");
  a = a.replace(/ {2}/g, "&nbsp; ");
  a = a.replace(/  /g, " &nbsp;");
  return a = a.replace(/\t/g, "&nbsp;")
}

function getHTMLForAutoSave(a, c) {
  var b = "", d = function () {
    var d = a._DOC.cloneNode(!0);
    try {
      for (var f in G_KPlugin) {
        if ("function"
            === typeof G_KPlugin[f].onBeforeGetApi) {
          G_KPlugin[f].onBeforeGetApi(
              {targetDoc: d, isAuto: !0})
        }
      }
    } catch (g) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(g)
    }
    var h = {docNode: d};
    beforeGetApi(a, h);
    "" != a._config.placeholder.content && placeholderControl(a, "remove", h);
    var m = function () {
      ReplaceRealObjectToImage();
      clearAllFormControlSelected(d);
      ClearDraggingTableAllTable(d);
      "1" == a._config.formMode && ReplaceCustomDataToRealEvent(d);
      setMatchSelectedValue(d);
      setMatchInputValue(d, !0);
      adjustInputNodeForFF(d, !1);
      setEmptyTagWhiteSpace(a, d);
      var f = d.body;
      f.style.transformOrigin && "" != f.style.transformOrigin
      && (f.style.transformOrigin = "");
      f.style.transform && "" != f.style.transform && (f.style.transform = "");
      f.style.zoom && "" != f.style.zoom && (f.style.zoom = "");
      !0 === c.removeMargin && (f.style.margin = "0px");
      switch (c.type.toLowerCase()) {
        case "htmlexwithdoctype":
          f = "";
          void 0 != a._PageProp.doctype &&
          0 < a._docType[a._PageProp.doctype].length
          && (f = a._docType[a._PageProp.doctype]);
          b = f + d.documentElement.outerHTML;
          break;
        case "htmlex":
          b = d.documentElement.outerHTML;
          break;
        case "html":
          b = d.documentElement.innerHTML;
          break;
        case "bodyex":
          b = d.body.outerHTML;
          break;
        default:
          b = d.body.innerHTML
      }
      b = insertCarriageReturn(a, b);
      delete d;
      d = null;
      d = void 0;
      "" != a._config.placeholder.content && (placeholderControl(a, "set",
          h), placeholderControl(a, "class", h));
      try {
        for (var g in G_KPlugin) {
          if ("function" === typeof G_KPlugin[g].onAfterGetApi) {
            var m =
                G_KPlugin[g].onAfterGetApi({isAuto: !0, html: b});
          }
          "string" == typeof m && (b = m)
        }
      } catch (v) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(v)
      }
      afterGetApi(a, h);
      c.callback({strEditorId: a.ID, strData: b})
    };
    c.downloadImageDomainArray && 0 < c.downloadImageDomainArray.length ? (h = {
      container: d.body,
      downloadImageDomainArray: c.downloadImageDomainArray
    }, webImagesDownloadToAgentTemp(h, function () {
      m()
    })) : m()
  };
  ReplaceImageToRealObject(!1, !1);
  c.async = !1 === c.async ? !1 : !0;
  !1 === c.imageUpload ? d() : KEDITORTOP.RAONKEDITOR.util.postimageToServer(a,
      d, c)
}

function localImageToBase64InHtml(a) {
  a._targetNode = null;
  a.isChanged = !1;
  var c = "";
  if (a.html) {
    c = a.html;
  } else if (a.targetNode) {
    try {
      c = a.targetNode.body ? a.targetNode.body.innerHTML
          : a.targetNode.innerHTML
    } catch (b) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(b)
    }
  } else {
    a.editor && (c = a.editor._BODY.innerHTML);
  }
  var d = a.editor;
  0 == !!d && (d = KEDITORTOP.G_CURRKEDITOR);
  var e = "";
  if (/<img /i.test(c) || a.isAllLocalFile) {
    e += ",img";
  }
  /<body [^>]*url\((.*?)\)/i.test(c) && (e += ",body");
  /<table [^>]*url\((.*?)\)/i.test(c) && (e +=
      ",table");
  /<td [^>]*url\((.*?)\)/i.test(c) && (e += ",td");
  /<th [^>]*url\((.*?)\)/i.test(c) && (e += ",th");
  if (0 < e.length) {
    c = null;
    c = void 0;
    a.html ? (a._targetNode = getDocumentForDummy().createElement(
        "div"), a._targetNode.innerHTML = a.html) : a.targetNode
        ? a._targetNode = a.targetNode : a.editor
        && (a._targetNode = a.editor._BODY);
    a.isChanged = !0;
    a.tagsArr = [];
    for (var e = e.substring(1), c = e.split(","), e = c.length, f = 0; f < e;
        f++) {
      var g = a._targetNode.getElementsByTagName(c[f]);
      try {
        a.tagsArr = a.tagsArr.concat(Array.prototype.slice.call(g,
            0))
      } catch (h) {
        for (var m = g.length, q = 0; q < m; q++) {
          a.tagsArr.push(g[q])
        }
      }
    }
    d.countLocalImageToBase64 = -1;
    var t = function (a) {
      d.countLocalImageToBase64++;
      if (d.countLocalImageToBase64 == a.tagsArr.length) {
        "function"
        === typeof a.callbackFn && a.callbackFn(a._targetNode.innerHTML,
            d);
      } else {
        var b = a.tagsArr[d.countLocalImageToBase64], c = "";
        "IMG" == b.tagName ? c = b.src : (c = b.style.backgroundImage, "none"
        == c && (c = ""), "" == c && b.getAttribute("background")
        && (c = c.getAttribute("background")), c = c.replace(/url\(/gi,
            ""), c = c.replace(/\)/gi, ""),
            c = c.replace(/"/gi, ""), c = c.replace(/'/gi, ""));
        0 == c.toLowerCase().indexOf("file:///") ? (b = {
          localPath: decodeURIComponent(c),
          fn_callback: function (b) {
            var c = a.tagsArr[d.countLocalImageToBase64];
            "IMG" == c.tagName ? c.src = b : c.style.backgroundImage = "url("
                + b + ")";
            t(a)
          },
          fn_error: function () {
            t(a)
          }
        }, localImageToBase64(b)) : t(a)
      }
    };
    t(a)
  } else {
    "function" === typeof a.callbackFn && a.callbackFn(a.html, d)
  }
}

function setBodyFitStyle(a, c, b) {
  if (G_BodyFit.useNoncreationAreaBackground
      && !(KEDITORTOP.RAONKEDITOR.browser.ie && 8
          >= KEDITORTOP.RAONKEDITOR.browser.ieVersion)) {
    var d = {};
    b && (d = b);
    b = a._DOC;
    d.docNode && (b = d.docNode);
    d = b.body;
    if (c) {
      c = parseIntOr0(
          document.getElementById("ue_editor_holder_" + a.ID).style.height);
      var e = parseIntOr0(a._config.defaultBodySpace.configValue.top)
          + parseIntOr0(a._config.defaultBodySpace.configValue.bottom);
      0 < a._config.widthFix.padding && (e += 2 * a._config.widthFix.padding);
      d.style.minHeight =
          (c - e) / c * 100 + "%";
      c = null;
      a._config.widthFix && a._config.widthFix.border
      && (c = a._config.widthFix.border);
      c && (d.style[c.styleName] = c.styleValue);
      0 < a._config.widthFix.padding
      && (d.style.padding = a._config.widthFix.padding + "px", G_Ruler
      && G_Ruler.viewRulerStatus && "view" != a._config.mode
      && G_Ruler.SetRulerPosition());
      b.documentElement.style.height = "100%";
      b.documentElement.style.display = KEDITORTOP.RAONKEDITOR.browser.ie
      || KEDITORTOP.RAONKEDITOR.browser.gecko ? "block" : "table";
      a._config.editingAreaBgColor && "" != a._config.editingAreaBgColor &&
      (d.style.backgroundColor = a._config.editingAreaBgColor);
      if (null == d.style.backgroundColor || void 0 == d.style.backgroundColor
          || "" == d.style.backgroundColor) {
        d.style.backgroundColor = "#ffffff";
      }
      d.parentNode.style.backgroundColor = G_BodyFit.noncreationAreaBackgroundColor;
      "2" == a._config.ruler.mode && (c = getEditorFrameDoc(
          a), c.getElementById("keditor_tab_tool4_"
          + a.ID).style.backgroundColor = G_BodyFit.noncreationAreaBackgroundColor);
      G_BodyFit.noncreationAreaBackgroundStatus = !0
    } else {
      d.style.minHeight = "", "#ffffff" ==
      d.style.backgroundColor
      && (d.style.backgroundColor = ""), d.parentNode.style.backgroundColor = "", "2"
      == a._config.ruler.mode && (c = getEditorFrameDoc(a), c.getElementById(
          "keditor_tab_tool4_"
          + a.ID).style.backgroundColor = "rgb(255, 255, 255)"), G_BodyFit.noncreationAreaBackgroundStatus = !1, c = null, a._config.widthFix
      && a._config.widthFix.border && (c = a._config.widthFix.border), c
      && (d.style[c.styleName] = ""), d.style.padding = "", b.documentElement.style.height = "", b.documentElement.style.display = ""
    }
  }
}

function removeEmptyTagByBackspace(a) {
  "keydown" == a.type && (G_KeydownNode = null);
  var c = "which" in a ? a.which : a.keyCode;
  if (KEDITORTOP.RAONKEDITOR.browser.ie && (8 == c || 46 == c)) {
    try {
      var b = getFirstRange().range;
      if (b.startContainer == b.endContainer && 0 == b.startOffset && 0
          == b.endOffset) {
        var d = 3 == b.startContainer.nodeType ? b.startContainer.parentNode
            : b.startContainer;
        d == (3 == b.endContainer.nodeType ? b.endContainer.parentNode
            : b.endContainer) && (0 == d.childNodes.length || 1
            == d.childNodes.length && "BR" == d.childNodes[0].tagName) &&
        -1 < ",span,b,strong,i,italic,underline,u,strike,em,sup,sub,".indexOf(
            "," + d.tagName.toLowerCase() + ",") && ("keyup" == a.type
            ? (G_KeydownNode == d && (b.setStartBefore(d), b.setEndBefore(
                d), getFirstRange().sel.removeAllRanges(), getFirstRange().sel.addRange(
                b), d.parentNode.removeChild(d)), G_KeydownNode = null)
            : G_KeydownNode = d)
      }
    } catch (e) {
      G_KeydownNode = null
    }
  }
}

function fn_saveToLocalStorage(a, c) {
  var b = !0, d = a._config.setAutoSave.unique_key, e = "keditor_" + a.ID;
  "" != d && (e += "_" + d);
  for (var f = c.strData, g = KEDITORTOP.RAONKEDITOR.isEmpty(a.ID, !0), h = "",
      d = parseIntOr0(a._config.setAutoSave.maxCount),
      m = parseIntOr0(a._config.setAutoSave.maxCount) - 1; 0 <= m;
      m--) {
    h = KEDITORTOP.RAONKEDITOR.util.loadJsonFromLocalStorage(
        e + "_" + m), null == h && void 0 == h && (d = m);
  }
  0 == g ? (g = "", g = "1" == c.useEncrypt
      ? KEDITORTOP.RAONKEDITOR.util.makeEncryptParam(f)
      : f, f = {date: a._DOC.lastModified, html: g}, d > parseIntOr0(
      a._config.setAutoSave.maxCount) -
  1 && (--d, pushAutoSave(e,
      0)), KEDITORTOP.RAONKEDITOR.util.saveJsonToLocalStorage(e + "_" + d,
      f), showTemporarilySaveMessage(a), autoSaveEnable(a.ID)) : b = !1;
  return b
}

function fn_AutoSaveInterval(a) {
  var c = a._setting.auto_save.toString().split(",");
  return KEDITORTOP.KEDITORWIN.setInterval(function () {
    var b = "", b = a.getEditorMode();
    if ("design" == b) {
      KEDITORTOP.RAONKEDITOR.GetHtmlContents({
        type: "htmlexwithdoctype", isAuto: !0, callback: function (b) {
          fn_saveToLocalStorage(a, b)
        }
      }, a.ID);
    } else if ("source" == b) {
      var c = a._EDITOR.source.value, c = c.replace(/\t/g, "");
      if ("1" == a._config.sourceViewtype || "2"
          == a._config.sourceViewtype) {
        c = removeCRLFChar(c);
      }
      c = KEDITORTOP.RAONKEDITOR.util.htmlRevision(c);
      c = xssReplaceScript(null, c);
      "0" == a._config.viewImgBase64Source
      && (c = KEDITORTOP.RAONKEDITOR.util.ImageSrcConvert(c, !1, a.ID));
      var b = a._docType[a._PageProp.doctype], e = a._PageProp.lang,
          f = a._PageProp.xmlnsname,
          g = _iframeDoc.getElementsByTagName("head")[0].outerHTML,
          h = _iframeDoc.getElementsByTagName("body")[0], m = "<html";
      0 < e.length && (-1 < e.indexOf("-") && (e = e.split(
          "-")[0]), m += ' lang="' + e + '" xml:lang="' + e + '"');
      0 < f.length && (m += ' xmlns="' + f + '"');
      f = h.id;
      e = "<body>";
      "" != f && null != f && void 0 != f && (e = "<body id='" + h.id +
          "'>");
      b = b + (m + ">") + g + e + c + "<body></html>";
      fn_saveToLocalStorage(a, {strData: b})
    } else {
      "preview" == b ? (c = a._EDITOR.preview.contentDocument
          ? a._EDITOR.preview.contentDocument
          : a._EDITOR.preview.contentWindow.document, b = a._docType[a._PageProp.doctype], b += c.documentElement.outerHTML, fn_saveToLocalStorage(
          a, {strData: b})) : "text" == b
          && (b = a._EDITOR.text.value, fn_saveToLocalStorage(a, {strData: b}))
    }
  }, 6E4 * (c[1] ? c[1] : a._config.setAutoSave.interval))
}

function showTemporarilySaveMessage(a) {
  try {
    var c = a._FRAMEWIN.document.getElementById("keditor_file_open_loading");
    if (c) {
      for (var b = c.parentNode.childNodes, d = b.length, e = 0; e < d; e++) {
        1
        == b[e].nodeType && b[e] != c && "none" != b[e].style.display
        && (b[e].setAttribute("k_temp_display",
            b[e].style.display), b[e].style.display = "none");
      }
      c.innerHTML = '<span style="color:black; margin-top:1px; margin-right:10px;">'
          + a._FRAMEWIN.RAONKEditor_lang.msg.manually_temp_save + "</span>";
      c.style.display = "";
      setTimeout(function () {
        try {
          c.style.display =
              "none";
          for (var a = 0; a < d; a++) {
            1 == b[a].nodeType && b[a] != c && null
            != b[a].getAttribute("k_temp_display")
            && (b[a].style.display = b[a].getAttribute(
                "k_temp_display"), b[a].removeAttribute("k_temp_display"))
          }
        } catch (e) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(e)
        }
      }, 2E3)
    }
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
}

function adjustInputNodeForFF(a, c) {
  if (0 != KEDITORTOP.RAONKEDITOR.browser.gecko) {
    try {
      if (c) {
        for (var b = a.getElementsByTagName("input"), d = b.length - 1;
            0 <= d; d--) {
          if (b[d].isContentEditable && "checkbox" == b[d].type || "radio"
              == b[d].type && "kinputholder"
              != b[d].parentNode.tagName.toLowerCase()) {
            var e = a.createElement("kinputholder");
            e.contentEditable = !1;
            var f = b[d].parentNode;
            f.insertBefore(e, b[d]);
            e.appendChild(b[d])
          }
        }
      } else {
        for (var g = a.getElementsByTagName("kinputholder"),
            d = g.length - 1; 0 <= d; d--) {
          f = g[d].parentNode, f.insertBefore(
              g[d].firstChild,
              g[d]), f.removeChild(g[d])
        }
      }
    } catch (h) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(h)
    }
  }
}

function setColorPickerHeight(a, c) {
  a.getElementById("popupCover").style.height = c + 5 + "px"
}

function replaceLineBreak(a, c) {
  var b = c;
  if ("0" != a._config.replaceLineBreak) {
    try {
      "1" == a._config.replaceLineBreak && (b = b.replace(
          /([\r\n ]{2,}|[\r\n])</g, "<temp_text2><"));
      for (var d = ["pre", "textarea"], e = d.length, f = 0; f < e;
          f++) {
        b = b.replace(
            new RegExp("(<" + d[f] + "[^>]*>)([\\s\\S]*?)<\\/" + d[f] + ">",
                "gi"),
            function (a) {
              a = KEDITORTOP.RAONKEDITOR.util.trim(a).replace(/\r\n/g,
                  "<temp_text>");
              a = KEDITORTOP.RAONKEDITOR.util.trim(a).replace(/\n/g,
                  "<temp_text>");
              return a = KEDITORTOP.RAONKEDITOR.util.trim(a).replace(/\r/g,
                  "<temp_text>")
            });
      }
      b = KEDITORTOP.RAONKEDITOR.util.trim(b).replace(/\n/g, " ");
      b = KEDITORTOP.RAONKEDITOR.util.trim(b).replace(/<temp_text>/g, "\n");
      "1" == a._config.replaceLineBreak && (b = b.replace(/<temp_text2>/g,
          "\r\n"))
    } catch (g) {
      b = str
    }
  }
  return b
}

function AdjustDesignBodyWidth(a) {
  if ("ios" == KEDITORTOP.RAONKEDITOR.UserAgent.os.name.toLowerCase() && "13"
      > KEDITORTOP.RAONKEDITOR.UserAgent.os.version) {
    var c = a.editor;
    a.isApply ? (a = document.body.clientWidth, a < c._BODY.clientWidth
        && (c.backupWidthForIOS.backupWidth = "" != c._BODY.style.width
            ? c._BODY.style.width : "", c._BODY.style.width = a
            + "px", c._BODY.setAttribute("iosWidth", "true")))
        : ((a = c._BODY.getAttribute("iosWidth")) && "true" == a
        && (c._BODY.style.width = "" != c.backupWidthForIOS.backupWidth
            ? c.backupWidthForIOS.backupWidth :
            "", c._BODY.removeAttribute(
            "iosWidth")), c.backupWidthForIOS.isPopup = !1)
  }
}

function adjustEmptyTableInExcel(a) {
  var c = document.createElement("div");
  c.innerHTML = a;
  try {
    for (var b = c.getElementsByTagName("table"), d = b.length - 1; 0 <= d;
        d--) {
      var e = b[d];
      e.parentNode && "SPAN" == e.parentNode.tagName && 1 == e.rows.length && 1
      == e.rows[0].cells.length && "" == e.rows[0].cells[0].innerHTML.replace(
          / |\s/g, "") && e.parentNode.removeChild(e)
    }
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
  return c.innerHTML
}

function checkContentEditable(a, c) {
  var b = !0;
  if ("2" == a._config.editorBodyEditableMode) {
    if ("HTML" == c.tagName) {
      return !0;
    }
    KEDITORTOP.RAONKEDITOR.browser.ie ? b = c.isContentEditable : "TEXTAREA"
    == c.tagName ? 1 == c.disabled && (b = !1) : "INPUT" == c.tagName ? ""
        != c.type && "text" != c.type || 1 != c.disabled || (b = !1)
        : b = c.isContentEditable
  }
  return b
}

function copyImageToTempFolder(a, c) {
  var b = [["kcmd", "KC36"]];
  b.push(["kp1", a.imagesSrc]);
  b.push(["k71", getHttpHeaderAgentData(KEDITORTOP.G_CURRKEDITOR)]);
  b = setManagerParam("{}", b);
  b = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(b);
  sendMessageToAgent(b, c, null, !0)
}

function hyperHelpOpen(a, c) {
  var b = KEDITORTOP.G_CURRKEDITOR, d = getDialogDocument();
  if (d.getElementById("keditor_context_iframe" + b.ID) && "none"
      == d.getElementById(
          "keditor_context_iframe" + b.ID).style.display) {
    if ((b.isAOver.node
        || b.isAOver.nodeChild) && b.isAOver.over) {
      currElem = b.isAOver.node;
      d = document.getElementById("keditor_div_hyper_link_help");
      document.getElementById(
          "keditor_div_hyper_link_help_content").innerHTML = currElem.getAttribute(
          "href");
      d.style.display = "block";
      b.isAOver.nodeChild && (currElem = b.isAOver.nodeChild);
      var e = getClientRect(_iframeWin.frameElement), f = Math.round(
              a + document.body.scrollLeft + document.documentElement.scrollLeft),
          g = Math.round(
              c + document.body.scrollTop + document.documentElement.scrollTop),
          h = 0;
      e.right - f < d.clientWidth && (h = d.clientWidth - (e.right - f) + 10);
      e.bottom - (g + e.top) < d.clientHeight ? d.style.bottom = e.bottom - (g
          + e.top) + d.clientHeight + 2 + "px" : d.style.top = g + e.top + 2
          + "px";
      d.style.left = f - h + 3 + "px";
      b.isAOver.openHelp = !0
    } else {
      KEDITORTOP.G_CURRKEDITOR.isAOver.node = null, KEDITORTOP.G_CURRKEDITOR.isAOver.nodeChild =
          null
    }
  }
}

function hyperHelpClose() {
  var a = KEDITORTOP.G_CURRKEDITOR,
      c = document.getElementById("keditor_div_hyper_link_help");
  c.style.display = "none";
  removeAttribute(c.style, "bottom");
  removeAttribute(c.style, "top");
  removeAttribute(c.style, "left");
  a.isAOver = {over: !1, node: null, nodeChild: null, openHelp: !1}
}

function hyperLinkIn() {
  var a = KEDITORTOP.G_CURRKEDITOR;
  a.isAOver.node && (null == a.isAOver.node.getAttribute("target")
  && (a.isAOver.node.setAttribute("target",
      "_blank"), a.isAOver.addTarget = !0), a.isAOver.node.setAttribute(
      "contenteditable",
      "false"), a.isAOver.node.style.cursor = "pointer", a.isAOver.nodeChild
  && (a.isAOver.nodeChild.setAttribute("contenteditable",
      "false"), a.isAOver.nodeChild.style.cursor = "pointer", null
  == a.isAOver.node.getAttribute("target") && (a.isAOver.nodeChild.setAttribute(
      "target", "_blank"),
      a.isAOver.addTarget = !0)), a.isAOver.linkStyle = !0)
}

function hyperLinkOut() {
  var a = KEDITORTOP.G_CURRKEDITOR;
  a.isAOver.node && (1 == a.isAOver.node.style.length
      ? a.isAOver.node.removeAttribute("style") : removeAttribute(
          a.isAOver.node.style, "cursor"), removeAttribute(a.isAOver.node,
      "contenteditable"), a.isAOver.addTarget && a.isAOver.node.removeAttribute(
      "target"), a.isAOver.nodeChild && (1 == a.isAOver.nodeChild.style.length
      ? removeAttribute(a.isAOver.nodeChild, "style") : removeAttribute(
          a.isAOver.nodeChild.style, "cursor"), removeAttribute(
      a.isAOver.nodeChild, "contenteditable"),
  a.isAOver.addTarget && a.isAOver.nodeChild.removeAttribute(
      "target")), a.isAOver.addTarget = !1, a.isAOver.linkStyle = !1)
}

function focusToElement(a) {
  if (a && a.getBoundingClientRect) {
    a = a.getBoundingClientRect();
    var c = getWindowClientSize(_iframeWin);
    0 > a.top ? scrollToTop(getScrollTop() + a.top) : a.bottom > c[1]
        && scrollToTop(getScrollTop() + a.bottom - c[1])
  }
}

function getScrollTop() {
  return KEDITORTOP.RAONKEDITOR.browser.ie
      ? _iframeWin.documentElement.scrollTop : _iframeDoc.body.scrollTop
}

function scrollToTop(a) {
  KEDITORTOP.RAONKEDITOR.browser.ie ? _iframeWin.documentElement.scrollTop = a
      : _iframeDoc.body.scrollTop = a
}

function adjustIEEnterBug(a) {
  var c = a.event;
  try {
    if (KEDITORTOP.RAONKEDITOR.browser.ie && 0 == c.ctrlKey && 0 == c.altKey
        && 13 == a.keyCode) {
      var b = getFirstRange(), d = b.range.startContainer;
      if (d == b.range.endContainer && 1 == d.nodeType && "SPAN" == d.tagName
          && "" == (void 0 != d.innerText ? d.innerText : d.textContent) && 1
          == d.childNodes.length) {
        for (a = null; null != d;) {
          if (null == d.lastChild && "BR"
              == d.tagName) {
            a = d;
            break
          } else if (d = d.lastChild, d.childNodes && 1
          < d.childNodes.length) {
            break;
          }
        }
        a && (b.range.setStartAfter(a), b.range.setEndAfter(
            a), b.sel.removeAllRanges(),
            b.sel.addRange(b.range))
      }
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
}

function removeDummyDivInHwp(a) {
  if ("1"
      == KEDITORTOP.G_CURRKEDITOR._config.removeDummyDivInHwpPaste) {
    if ("string"
        == typeof a) {
      var c = RegExp(
          '<div [^>].*id="hwpEditorBoardContent".*>\x3c!--(:?.|\\s)*--\x3e<\\/div>',
          "gi");
      if (c.test(a)) {
        return a = a.replace(c, "")
      }
    } else {
      for (var c = a.getElementsByTagName("div"), b = c.length - 1; 0 <= b;
          b--) {
        var d = c[b];
        d && "hwpEditorBoardContent" == d.id && d.childNodes && 1
        == d.childNodes.length && 8 == d.childNodes[0].nodeType
        && d.parentNode.removeChild(d)
      }
    }
  }
  if ("string" == typeof a) {
    return a
  }
}

function setNodeWidthHeight(a, c) {
  try {
    for (s in c) {
      var b = "", d = c[s];
      "" != d ? (b = "" != a.style[s] ? "style" : a.getAttribute(s) && ""
          != a.getAttribute(s) ? "attr" : "style", "style" == b ? a.style[s] = d
              : a.setAttribute(s, KEDITORTOP.RAONKEDITOR.util.parseIntOr0(d)))
          : (a.removeAttribute(s), a.style.removeAttribute
              ? a.style.removeAttribute(s) : a.style.removeProperty(s))
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
}

function getNodeWidthHeight(a, c) {
  var b = "";
  "" != a.style[c] ? b = a.style[c] : a.getAttribute(c) && "" != a.getAttribute(
      c) && (b = a.getAttribute(c));
  return b
}

function getFileName(a, c) {
  for (var b; -1 !== a.indexOf("\\");) {
    a = a.replace("\\", "/");
  }
  b = a.split("/").pop();
  c && -1 < b.indexOf(".") && (b = b.slice(0, b.lastIndexOf(".")));
  return b
}

function checkClickOnScrollBar(a) {
  var c = !1;
  if ((a.target ? a.target : a.srcElement) == _iframeDoc.documentElement
      && (a.clientX >= _iframeDoc.documentElement.clientWidth && (c = !0), 0
      == c)) {
    var b = 0, b = KEDITORTOP.RAONKEDITOR.browser.ie
        ? _iframeDoc.documentElement.clientHeight
        : _iframeDoc.body.clientHeight;
    a.clientY >= b && (c = !0)
  }
  return c
}

function preventScrollMove(a) {
  a
      ? (a = KEDITORTOP.G_CURRKEDITOR.preventScrollMove, a.use = !0, a.beforeTop = _iframeDoc.documentElement.scrollTop, a.beforeLeft = _iframeDoc.documentElement.scrollLeft)
      : setTimeout(function () {
        KEDITORTOP.G_CURRKEDITOR.preventScrollMove.use = !1
      }, 1)
}

function placeholderControl(a, c, b) {
  var d = {};
  b && (d = b);
  b = a._DOC;
  d.docNode && (b = d.docNode);
  d = b.body;
  "remove" == c ? (0 == d.classList.length ? d.removeAttribute("class")
      : d.classList.remove("keditor_placeholder"), b.getElementById(
      "keditor_placeholder") && b.getElementById(
      "keditor_placeholder").parentNode.removeChild(
      b.getElementById("keditor_placeholder"))) : "set" == c ? b.getElementById(
      "keditor_placeholder") || (c = document.createElement(
      "style"), c.setAttribute("id",
      "keditor_placeholder"), c.innerHTML = ".keditor_placeholder:before { content: '"
      +
      a._config.placeholder.content + "'; color: "
      + a._config.placeholder.fontColor + "; font-size: "
      + a._config.placeholder.fontSize + "; font-family: "
      + a._config.placeholder.fontFamily
      + "; display: block; position: absolute; white-space: pre; }", b.getElementsByTagName(
      "head")[0].appendChild(c)) : "class" == c && (0 < d.childNodes.length
      ? (a = d.innerHTML, c = d.innerText, a = a.replace(
          /<head(.*?)>(.*?)<(\/?)head>/gi, ""), a = a.replace(
          /<title(.*?)>(.*?)<(\/?)title>/gi, ""), a = a.replace(
          /<style(.*?)>(.*?)<(\/?)style>/gi, ""), a = a.replace(
          /<meta(.*?)>(.*?)<(\/?)meta>/gi,
          ""), a = a.replace(/<meta(.*?)>/gi, ""), a = a.replace(/<br \/>/i,
          ""), a = a.replace(/<br>/i, ""), KEDITORTOP.RAONKEDITOR.browser.ie
      && 10 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && (a = a.replace(
          /&nbsp;/i, ""), a = " " == c ? c : a), a = a.replace(
          /<p *([^>?+])*><\/p>/i, ""), "" == a ? d.classList.add(
          "keditor_placeholder") : 0 == d.classList.length ? d.removeAttribute(
          "class") : d.classList.remove("keditor_placeholder")) : "edit"
      == a._config.mode && d.classList.add("keditor_placeholder"))
}

function adjustInnerTableInExcel(a) {
  try {
    for (var c = a.getElementsByTagName("table"), b = c.length - 1; 1 <= b;
        b--) {
      var d = c[b], e = d.parentNode;
      if (e && "SPAN" == e.tagName) {
        var f = d.getElementsByTagName("td");
        if (1 == f.length && (a = !1, e.previousSibling && "SPAN"
        == e.previousSibling.tagName && "absolute"
        == e.previousSibling.style.position ? a = !0 : e.previousSibling
            && "SPAN" == e.previousSibling.tagName && "relative"
            == e.previousSibling.style.position && "absolute"
            == e.previousSibling.childNodes[0].style.position && (a = !0), a
        && 3 == e.childNodes.length &&
        3 == e.childNodes[0].nodeType && e.childNodes[1] == d && 3
        == e.childNodes[2].nodeType)) {
          e.parentNode.insertBefore(d, e);
          e.parentNode.removeChild(e);
          var g = d.parentNode, h = f[0];
          if (g && "TD" == g.tagName) {
            a = ["borderBottom", "borderLeft", "borderTop", "borderRight",
              "backgroundColor"];
            for (var m = a.length, q = 0; q < m;
                q++) {
              g.style[a[q]] = h.style[a[q]], 0 == a[q].indexOf("border")
                  ? h.style[a[q]] = "none" : h.style[a[q]] = "";
            }
            0 == KEDITORTOP.RAONKEDITOR.browser.ie && ("" == h.innerHTML
                || /^\s$/.test(h.innerHTML)) && c[b].parentNode.removeChild(
                c[b])
          }
        }
      }
    }
  } catch (t) {
    KEDITORTOP &&
    KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(t)
  }
}

function getReplaceMsoStyleReg(a) {
  var c = KEDITORTOP.G_CURRKEDITOR._config.replaceMsoStyle.styleValue[a],
      b = "(\\s?" + a + ")";
  c && (b = "(\\s?" + a + ":\\s*" + c + ")([^>]*)>");
  return b
}

function execReplaceMsoStyle(a) {
  var c = a;
  try {
    for (var b = KEDITORTOP.G_CURRKEDITOR._config.replaceMsoStyle, d = 0;
        d < b.settingStyle.length; d++) {
      var e = getReplaceMsoStyleReg(b.settingStyle[d]);
      reg_exp = new RegExp(e, "gi");
      reg_exp.test(c) && (c = c.replace(reg_exp,
          "$1 $2 " + b.settingStyle[d].replace("mso", b.replaceAttributeName)
          + ">"))
    }
  } catch (f) {
    c = a
  }
  return c
}

function restoreValueInSetError(a) {
  try {
    a && (a.setValueIsBusy = !1, a.notFocusToEditor = void 0)
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
}

function externalPageBreakDataRaplaceInEditor(a) {
  try {
    if (/<br.*page-break.*>/gi.test(a)) {
      var c = RegExp("(<span [^>]*>)(<br[^>]*page-break(.*?)>)(.*?>)", "gi"),
          b = getPageBreakOuterHTML();
      a = a.replace(c, b);
      c = RegExp("(<br[^>]*page-break(.*?)>)", "gi");
      a = a.replace(c, b)
    }
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  return a
}

function adjustBeforeDocumentEdit(a) {
  if (/<table /i.test(a)) {
    a = KEDITORTOP.RAONKEDITOR.util.splitBodyInnerString(a);
    var c = getDocumentForDummy().createElement("div");
    c.innerHTML = a.body;
    for (var b = c.getElementsByTagName("table"), d = b.length, e = 0; e < d;
        e++) {
      for (var f = b[e], g = f.rows.length, h = 0; h < g; h++) {
        var m = f.rows[h];
        removeAttributeForPasteTable(m);
        var q = m.cells.length;
        if (0 == q) {
          m.innerHTML = "";
        } else {
          for (var t = 0; t < q; t++) {
            var u = m.cells[t], v = 0, w = u.style.paddingLeft,
                x = u.style.paddingRight, y = u.style.width;
            try {
              if (-1 <
                  w.indexOf("px") || -1 < w.indexOf("pt") || -1 < w.indexOf(
                      "cm")) {
                v++, w = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(
                    w), x = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(x);
              }
              if (-1 < y.indexOf("px") || -1 < y.indexOf("pt") || -1
                  < y.indexOf(
                      "cm")) {
                v++, y = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(y);
              }
              2 == v && (y = parseFloat(y) + parseFloat(w) + parseFloat(
                  x), u.setAttribute("width", y), u.style.width = y + "px")
            } catch (z) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(z)
            }
          }
        }
      }
    }
    a.head = a.head.replace(/<\/head>/i,
        '<style type="text/css">td,th {word-break: break-all;}</style></head>');
    a = a.head + c.innerHTML + a.tail
  }
  /<div.*class=.*keditor_page_break.*/gi.test(a) && (e = null, e = RegExp(
      "<div .*class=keditor_page_break", "gi").test(a) ? RegExp(
      "<div[^>]*class=keditor_page_break*.+?<\\/div>", "gi") : RegExp(
      "<div[^>]*class=[\"']keditor_page_break*.+?<\\/div>",
      "gi"), a = a.replace(e,
      '<p><br clear="all" style="page-break-before: always;"></p>'));
  if (/<img.*src="\//gi.test(a)) {
    a = KEDITORTOP.RAONKEDITOR.util.splitBodyInnerString(a);
    c = getDocumentForDummy().createElement("div");
    c.innerHTML = a.body;
    b = c.getElementsByTagName("img");
    for (e = 0; e < b.length; e++) {
      d = b[e], d.src = d.src;
    }
    a = a.head + c.innerHTML + a.tail
  }
  return a
}

function insertCarriageReturnBeforeCloseCell(a) {
  if (!KEDITORTOP.RAONKEDITOR.browser.ie) {
    return a;
  }
  try {
    return a.replace(RegExp("(\\/(?:p|div)>)(<\\/t[dh]>)", "gi"), "$1\n$2")
  } catch (c) {
    return a
  }
}

function removeEditorAttribute(a) {
  try {
    var c = RegExp('(<t[dh][^>]*)( keditor_select="true")', "gi");
    c.test(a) && (a = a.replace(c, "$1"));
    c = RegExp('(<t[dh][^>]*)( cellorgbgcolor=".*?"| cellorgbgcolor)', "gi");
    c.test(a) && (a = a.replace(c, "$1"));
    c = RegExp('(<table[^>]*)( KEditorCellSelected=".*?")', "gi");
    c.test(a) && (a = a.replace(c, "$1"))
  } catch (b) {
  }
  return a
}

function multiUserPortCheckAsync(a) {
  var c = !0, b = a.currEditor;
  null == b.multiUserConfig ? c = !1 : a.bForce
      ? (c = !0, KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported
      && KEDITORTOP.localStorage.removeItem("kupload_multi_user_check"))
      : KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported && "1"
      == KEDITORTOP.localStorage.kupload_multi_user_check && (c = !1);
  var d = function () {
    "function" === typeof a.callback && a.callback({
      multiUserConfig: b.multiUserConfig,
      selectedPort: b.managerPort,
      uploadId: b.Id
    })
  };
  if (0 == c) {
    d();
  } else {
    var e = function (a) {
          if (a.port) {
            var c =
                "", c = b._config.agentHttps ? a.port.https : a.port.http;
            KEDITORTOP.RAONKSolution.Agent.connectedPort = c;
            b.managerPort = KEDITORTOP.RAONKSolution.Agent.connectedPort;
            KEDITORTOP.RAONKSolution.managerFinalUrl = b.managerUrl + b.managerPort;
            KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported
            && (KEDITORTOP.localStorage.kupload_manager_port = a.port.http, KEDITORTOP.localStorage.kupload_manager_port2 = a.port.https, KEDITORTOP.localStorage.kupload_multi_user_check = "1")
          } else {
            b.managerPort = KEDITORTOP.RAONKSolution.Agent.connectedPort
          }
        },
        c = function (a) {
          var b = setInterval(function () {
            0 == KEDITORTOP.RAONKSolution.Agent.isCheckingMultiUserPort
            && (clearInterval(b), a && e({port: null}), d())
          }, 500)
        };
    if (1 == KEDITORTOP.RAONKSolution.Agent.isCheckingMultiUserPort) {
      c(
          !0);
    } else {
      KEDITORTOP.RAONKSolution.Agent.isCheckingMultiUserPort = !0;
      c();
      var c = getDialogWindow(), f = getDialogDocument(), g = {},
          g = getWindowClientSize(c),
          h = "CSS1Compat" == f.compatMode ? f.documentElement.scrollWidth
              : f.body.scrollWidth,
          m = "CSS1Compat" == f.compatMode ? f.documentElement.scrollHeight
              : f.body.scrollHeight,
          q = {}, q = getWindowScrollPos(c);
      if (null == f.getElementById("kupload_install_div_back")) {
        var t = f.createElement("div");
        t.innerHTML = '<div id="kupload_install_div_back" style="background-color:white; filter:alpha(opacity=80); opacity:0.8; -moz-opacity:0.8; -ms-filter:progid:DXImageTransform.Microsoft.Alpha(Opacity=80); -khtml-opacity: 0.8; left: 0px; top: 0px; width: '
            + h + "px; height: " + m
            + "px; display: block; position: absolute; z-index: "
            + (b._config.installGuideZIndex + 1) + ';"></div>';
        f.body.appendChild(t.firstChild)
      }
      (h =
          f.getElementById("kupload_install_div")) && h.parentNode.removeChild(
          h);
      var u = f.createElement("div"),
          h = b._config.webPath.multiUserCheck + "?t="
              + KEDITORTOP.RAONKEDITOR.util.getTimeStamp();
      "1" == b._config.autoSetDocumentDomain
      && (h = KEDITORTOP.RAONKEDITOR.util.setUrlForDocumentDomain(h,
          KEDITORTOP.KEDITORDOC));
      m = '<div id="kupload_install_div" style="z-index:'
          + (b._config.agentInstallGuideZIndex + 5)
          + '; position:fixed; _position:absolute; overflow:hidden; width:432px; height:350px; background-color:rgba(255,255,255,0);">';
      m = m + ('<iframe scrolling="no" frameborder="0" src="' + h
              + '" style="width:432px; height:360px; border-width:0px;"></iframe>')
          + "</div>";
      u.innerHTML = m;
      h = [0, 0];
      KEDITORTOP.RAONKEDITOR.browser.quirks && (h = q);
      u.firstChild.style.left = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          h[0] + g[0] / 2 - 216) + "px";
      u.firstChild.style.top = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          h[1] + g[1] / 2 - 175) + "px";
      KEDITORTOP.RAONKEDITOR.installGuideResizeEvt = function () {
        try {
          var a = f.getElementById("kupload_install_div_back");
          if (a) {
            var b = "CSS1Compat" ==
            f.compatMode ? f.documentElement.scrollHeight : f.body.scrollHeight;
            a.style.width = ("CSS1Compat" == f.compatMode
                ? f.documentElement.scrollWidth : f.body.scrollWidth) + "px";
            a.style.height = b + "px"
          }
        } catch (c) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(c)
        }
      };
      KEDITORTOP.RAONKEDITOR.util.addEventEx(c, "resize",
          KEDITORTOP.RAONKEDITOR.installGuideResizeEvt);
      f.body.appendChild(u);
      var v = function () {
        var a = u.getElementsByTagName("iframe")[0].contentWindow,
            c = a.document, d = c.getElementById("btn_ok"),
            f = c.getElementById("select_user"),
            g = c.getElementById("content1"), h = c.getElementById("btn_ok");
        c.getElementsByTagName(
            "img")[0].src = b._config.agentInstallGuideLogoUrl
            ? b._config.agentInstallGuideLogoUrl : "images/BI-raonk.png";
        var m;
        m = "" + ('<li class="first">' + RAONKEditor_lang.multi_user_check.desc1
            + "</li>");
        m += "<li><i>\u00b7</i>" + RAONKEditor_lang.multi_user_check.desc2
            + "</li>";
        g.innerHTML = m;
        h.innerHTML = RAONKEditor_lang.multi_user_check.button1;
        f.innerHTML = "";
        g = c.createElement("option");
        f.appendChild(g);
        for (config in b.multiUserConfig) {
          g = c.createElement(
              "option"), g.innerHTML = config, g.value = config, f.appendChild(
              g);
        }
        try {
          KEDITORTOP.RAONKEDITOR.browser.ie && 7
          >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
              ? f.firstChild.innerHTML = RAONKEditor_lang.multi_user_check.desc1
              : a.$(".js-example-basic-single").select2({
                width: "380px",
                dropdownCssClass: "select2_dropdown",
                containerCssClass: "select2_container",
                placeholder: RAONKEditor_lang.multi_user_check.desc1,
                allowClear: !0
              })
        } catch (q) {
          try {
            f.firstChild.innerHTML = RAONKEditor_lang.multi_user_check.desc1
          } catch (t) {
            KEDITORTOP &&
            KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(t)
          }
        }
        d.onclick = function () {
          var a = b.multiUserConfig[f.value];
          a ? (closeInstallPopup(b), e(
                  {port: a}), KEDITORTOP.RAONKSolution.Agent.isCheckingMultiUserPort = !1)
              : alert(RAONKEditor_lang.multi_user_check.desc1)
        }
      }, w = setInterval(function () {
            var a = !1;
            try {
              if (a = u.getElementsByTagName(
                  "iframe")[0].contentWindow.document.body.hasChildNodes()) {
                clearInterval(
                    w), v()
              }
            } catch (b) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(b)
            }
          },
          100)
    }
  }
}

function adjustMsoBorder(a) {
  var c = a;
  if (KEDITORTOP.RAONKEDITOR.browser.ie && 8
      > KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
    return c;
  }
  if (RegExp("<t[dh] [^>]+mso-border[^>]*>", "gi").test(c)) {
    a = document.createElement("div");
    a.innerHTML = c;
    for (var b = ["td", "th"], c = [], d = 0; d < b.length; d++) {
      var e = a.getElementsByTagName(b[d]);
      try {
        c = c.concat(Array.prototype.slice.call(e, 0))
      } catch (f) {
        for (var g = e.length, h = 0; h < g; h++) {
          c.push(e[h])
        }
      }
    }
    b = c.length;
    for (d = 0; d < b; d++) {
      e = c[d];
      h = e.tagName;
      g = {};
      if (KEDITORTOP.RAONKEDITOR.browser.ie) {
        g = e.style;
      } else {
        h = new RegExp("(<" + h + " [^>]*>)", "i");
        h.test(e.outerHTML);
        var m = RegExp.$1, m = m.replace(/\n|\t|\s{2,}/gi, ""),
            h = /style="[^"](.*)"/i;
        if (h.test(m)) {
          for (var m = RegExp.$1, h = m.split(";"), m = h.length,
              q = 0; q < m; q++) {
            var t = h[q].split(":");
            if (2 == t.length) {
              var u = KEDITORTOP.RAONKEDITOR.util.trim(t[0]),
                  t = KEDITORTOP.RAONKEDITOR.util.trim(t[1]);
              g[u] ? g[u].length < t.length && (g[u] = t) : g[u] = t
            }
          }
        }
      }
      h = ["Top", "Bottom", "Left", "Right"];
      m = h.length;
      for (q = 0; q < m; q++) {
        if ((u = g["mso-border-" + h[q].toLowerCase()
        + "-alt"]) && 0 < u.length) {
          u = u.split(" ");
          if (3 != u.length) {
            var t = g["mso-border-style-alt"], v = g["mso-border-width-alt"],
                w = g["mso-border-color-alt"];
            1 == u.length ? (t && 0 < t.length && (-1 < u[0].indexOf("pt")
            && (u[2] = u[0]), u[0] = t), w && 0 < w.length && (u[1] = w), v && 0
            < v.length && (u[2] = v)) : 2 == u.length
                && (u[2] = u[1], u[1] = "")
          }
          0 < u.length && "none" == e.style["border" + h[q] + "Style"]
          && (e.style["border" + h[q] + "Style"] = u[0], u[1] && 0 < u[1].length
          && (e.style["border" + h[q] + "Color"] = u[1]), e.style["border"
          + h[q]
          + "Width"] = u[2])
        }
      }
    }
    c = a.innerHTML
  }
  return c
}

function setLiStyle() {
  for (var a = getFirstRange().range, c = getNodesInRange(a), b = c.length,
      a = function (a) {
        var b = a;
        b.firstChild && "DIV" == b.firstChild.tagName && (b = b.firstChild);
        var c = !1;
        1 != b.childNodes.length || "SPAN" != b.childNodes[0].tagName && 3
        != b.childNodes[0].nodeType ? 2 != b.childNodes.length || "BR"
            != b.childNodes[1].tagName || "SPAN" != b.childNodes[0].tagName && 3
            != b.childNodes[0].nodeType || (c = !0) : c = !0;
        if (c) {
          b = b.childNodes[0];
          3 == b.nodeType && (b = b.parentNode);
          var d = KEDITORTOP.RAONKEDITOR.util.getStyle, c = d(b, "fontFamily"),
              e = d(b, "fontSize"), d = d(b, "color");
          c != KEDITORTOP.G_CURRKEDITOR._config.defaultFontFamily
          && (a.style.fontFamily = c);
          e != KEDITORTOP.G_CURRKEDITOR._config.defaultFontSize
          && (a.style.fontSize = e);
          "" != d && "" != b.style.color && (a.style.color = d)
        }
      }, d = !1, e = [], f = !1, g = 0; g < b; g++) {
    var h = c[g].nodeName.toLowerCase();
    if ("ol" == h || "ul" == h) {
      d = !0, e.push(c[g]);
    }
    "li" == h && (f = !0, a(c[g]))
  }
  if (1 == d && 0 == f) {
    for (g = e.length - 1; 0 <= g;
        g--) {
      for (c = e[g].getElementsByTagName("li"), b = c.length, d = 0; d < b;
          d++) {
        a(c[d])
      }
    }
  }
}

function agentSaveImageFile(a, c, b, d) {
  var e = [["kcmd", "KC36"]];
  e.push(["kp1", null]);
  e.push(["kp2", c]);
  e.push(["kp3", b]);
  e.push(["k71", getHttpHeaderAgentData(a)]);
  a = setManagerParam("{}", e);
  sendMessageToAgent(a + "\x0B", function (a) {
    a = KEDITORTOP.RAONKSolution.Agent.parseRtn(a);
    var b = a.code;
    a = a.valueArr;
    1E3 == b || 7777 == b ? a[0] && d(a[0]) : "cancel" != a[0] && alert(
        RAONKEditor_lang.msg.error_save_as_image)
  }, null, !0)
}

function getPasteFormatType() {
  var a = "";
  if ("DOC" == G_wordProcessorType || "1"
      == KEDITORTOP.G_CURRKEDITOR._config.useKManager && 2
      == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType) {
    a = "DOC";
  } else if ("XLS"
      == G_wordProcessorType || "1"
      == KEDITORTOP.G_CURRKEDITOR._config.useKManager && 3
      == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType) {
    a = "XLS";
  } else if ("PPT"
      == G_wordProcessorType || "1"
      == KEDITORTOP.G_CURRKEDITOR._config.useKManager && 4
      == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType) {
    a = "PPT";
  } else if ("HWP"
      == G_wordProcessorType ||
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager && 5
      == KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType) {
    a = "HWP";
  }
  return a
}

function getDisplayFontName(a, c) {
  var b = KEDITORTOP.G_CURRKEDITOR;
  c && (b = c);
  var d = a, b = b._config.displayFontFamilyList;
  "object" == typeof b && "[object Object]" == Object.prototype.toString.call(b)
  && (d = b[a], 0 == !!d && (d = a));
  return d
}

function getRealNameThroughDisplayName(a, c) {
  var b = KEDITORTOP.G_CURRKEDITOR;
  c && (b = c);
  var d = a, b = b._config.displayFontFamilyList;
  if ("object" == typeof b && "[object Object]"
      == Object.prototype.toString.call(b)) {
    for (n in b) {
      if (b[n] == a) {
        d = n;
        break
      }
    }
  }
  return d
}

function getContentFromSpecificString(a, c, b) {
  var d = b.indexOf(a), e = b.lastIndexOf(c);
  -1 < d && -1 < e && (a = b.substring(d + a.length), e = a.lastIndexOf(c), -1
  < e && (b = a = a.substring(0, e)));
  return b
}

function setEditorHtmlWidth(a) {
  var c = a._config, b = _iframeDoc.documentElement,
      d = _iframeDoc.body.style.width;
  -1 != d.indexOf("px") && (d = parseInt(d, 10), _width = parseIntOr0(
      a._config.defaultBodySpace.configValue.left) + parseIntOr0(
      c.defaultBodySpace.configValue.right), b.style.width = d + _width + "px")
}

function replaceColorRgbToHex(a) {
  var c = a;
  try {
    a = a.replace(RegExp("<[^>]+style=(.*?)>", "gi"), function (a) {
      return a = a.replace(RegExp("(rgb\\(\\d+,\\s*\\d+,\\s*\\d+\\)*)", "gi"),
          function (a) {
            return KEDITORTOP.RAONKEDITOR.util.rgbToHex(a)
          })
    })
  } catch (b) {
    return c
  }
  return a
}

function setImgAltLineBreak(a, c, b) {
  if (!0 === b) {
    a = a.replace(/\r\n/g, "&#10;"), a = a.replace(/\r/g,
        "&#10;"), a = a.replace(/\n/g, "&#10;");
  } else if (!0
      === c) {
    for (c = RegExp("(<img[^>]*?)&#10;(.*?>)", "gi");
        c.test(a);) {
      a = a.replace(c, "$1\r$2");
    }
  } else {
    for (c = RegExp("(<img[^>]*?)\r\n(.*?>)", "gi"); c.test(a);) {
      a = a.replace(
          c, "$1&#10;$2");
    }
    for (c = RegExp("(<img[^>]*?)\r(.*?>)", "gi"); c.test(a);) {
      a = a.replace(c,
          "$1&#10;$2");
    }
    for (c = RegExp("(<img[^>]*?)\n(.*?>)", "gi"); c.test(a);) {
      a = a.replace(c,
          "$1&#10;$2")
    }
  }
  return a
}

function getUploadOriginalFileName(a, c) {
  var b = a.substring(a.lastIndexOf("\\") + 1);
  KEDITORTOP.RAONKEDITOR.browser.HTML5Supported && "1"
  == c.uploadFileNameEncoding && (b = encodeURIComponent(b));
  return b
}

function deleteTableUsingKey(a, c) {
  var b = !1;
  try {
    if ("1" == c._config.deleteTableUsingKey) {
      var d = "which" in a ? a.which : a.keyCode, e = getFirstRange().range,
          f = !1;
      "1" != c._config.formMode && "1" == c._config.userTableLock.use
      && (f = !0);
      if ((8 == d || 46 == d) && 1 == e.collapsed) {
        var g = e.startContainer;
        3 == g.nodeType && (g = g.parentNode);
        var h = getParentbyTagNameEx(g, "p");
        if (h) {
          var m = h[8 == d ? "previousSibling" : "nextSibling"];
          m && "TABLE" == m.tagName && (8 == d ? isCaretAtTheBeginning()
              : isCaretAtTheEnd()) && (c.UndoManager.putUndo(), 0 == (f
              && checkLockAttr(m,
                  !0)) && (c.UndoManager.putUndo(), m.parentNode.removeChild(
              m), c.UndoManager.putUndo()), KEDITORTOP.RAONKEDITOR.util.cancelEvent(
              a), b = !0)
        }
      }
    }
  } catch (q) {
    b = !1
  }
  return b
}

function isCaretAtTheBeginning() {
  var a = !1;
  try {
    var c = getFirstRange().range;
    if (1 == c.collapsed) {
      var b = _iframeDoc.createElement("span");
      b.id = "caretCheckNode";
      c.insertNode(b);
      try {
        var d = getParentbyTagNameEx(b, "p,li");
        if (d) {
          var e = d.innerHTML, f = e.indexOf(b.outerHTML),
              g = e.substring(0, f);
          b.parentNode.removeChild(b);
          g = g.replace(/<[a-zA-Z].*?>/g, "");
          "" == g && (a = !0)
        } else {
          b.parentNode.removeChild(b)
        }
      } catch (h) {
        b.parentNode.removeChild(b)
      }
    }
  } catch (m) {
    a = !1
  }
  return a
}

function isCaretAtTheEnd() {
  var a = !1;
  try {
    var c = getFirstRange().range;
    if (1 == c.collapsed) {
      var b = _iframeDoc.createElement("span");
      b.id = "caretCheckNode";
      c.insertNode(b);
      try {
        var d = getParentbyTagNameEx(b, "p,li");
        if (d) {
          var e = d.innerHTML, f = e.indexOf(b.outerHTML),
              g = e.substring(f + b.outerHTML.length);
          b.parentNode.removeChild(b);
          g = g.replace("<br>", "");
          g = g.replace(/<\/.*?>/g, "");
          g = g.replace(/\s$/, "");
          "" == g && (a = !0)
        } else {
          b.parentNode.removeChild(b)
        }
      } catch (h) {
        b.parentNode.removeChild(b)
      }
    }
  } catch (m) {
    a = !1
  }
  return a
}

function deleteOlUlUsingKey(a, c) {
  try {
    var b = "which" in a ? a.which : a.keyCode, d = getFirstRange().range;
    if (8 == b && 1 == d.collapsed) {
      var e = d.startContainer;
      3 == e.nodeType && (e = e.parentNode);
      var f = getParentbyTagNameEx(e, "li");
      if (f) {
        var g = getParentbyTagNameEx(f, "ol,ul"),
            h = g.getElementsByTagName("li");
        if (h[0] == f && isCaretAtTheBeginning() && null
            == getParentbyTagNameEx(g.parentNode, "ol,ul")) {
          var m = f.innerHTML;
          if (0 == RegExp("<[ou]l", "gi").test(m)) {
            c.UndoManager.putUndo();
            var q = _iframeDoc.createElement("p");
            q.innerHTML =
                m;
            g.parentNode.insertBefore(q, g);
            f.parentNode.removeChild(f);
            0 == h.length && g.parentNode.removeChild(g);
            setFocusChildForStyle(q);
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            c.UndoManager.putUndo()
          }
        }
      }
    }
  } catch (t) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(t)
  }
}

var G_MIME_OBJ = {
  _subject: "K Editor Mime 1.0",
  _getDate: function () {
    var a = new Date, c = a.toDateString().split(" "),
        a = a.toTimeString().split(" "), b = [];
    b.push(c[0] + ",");
    b.push(1 * c[2]);
    b.push(c[1]);
    b.push(c[3]);
    b.push(a[0]);
    b.push(a[1].substring(3));
    return b.join(" ")
  },
  _mimeVersion: "1.0",
  _contentType: "multipart/related",
  _boundary: "",
  _boundaryIndex: 1,
  getBoundary: function (a) {
    if ("" == this._boundary || a) {
      9 < this._boundaryIndex
      && (this._boundaryIndex = 1), a = function () {
        if ("undefined" != typeof crypto && "undefined"
            != typeof crypto.randomUUID) {
          var a =
              "";
          do {
            a += crypto.randomUUID().replace(/-/g, "").replace(/[a-zA-Z]/g,
                "");
          } while (5 > a.length);
          return a.substring(0, 5)
        }
        return Math.random().toString().slice(2, 7)
      }, this._boundary = "__=_Part_Boundary_00", this._boundary += this._boundaryIndex++, this._boundary += "_", this._boundary += "0"
          + a(), this._boundary += ".", this._boundary += "0" + a();
    }
    return this._boundary
  },
  _xGenerator: "K Editor MIME Control for HTML5 V1.0 by RAONWIZ Inc.",
  _EOL: "\r\n",
  getHeader: function () {
    var a = [];
    a.push("Subject: " + this._subject);
    a.push("Date: " +
        this._getDate());
    a.push("MIME-Version: " + this._mimeVersion);
    a.push("Content-Type: " + this._contentType + ";");
    a.push('\tboundary="' + this.getBoundary() + '"');
    a.push("X-Generator: " + this._xGenerator);
    a.push("");
    a.push("");
    return a.join(this._EOL)
  },
  _body: "",
  getBody: function (a, c) {
    var b = this, d = [];
    d.push("--" + b.getBoundary());
    d.push("Content-Type: text/html;");
    d.push('\tcharset="utf-8"');
    d.push("Content-Transfer-Encoding: base64");
    d.push("");
    b._contentBuffer = [];
    b._createContentImage(a, function (a) {
      d.push(KEDITORTOP.RAONKEDITOR.util.base64_encode(a));
      d.push("");
      for (a = 0; a < b._contentBuffer.length; a++) {
        var f = b._contentBuffer[a];
        d.push("--" + b.getBoundary());
        d.push("Content-Type: " + f.type + ";");
        d.push('\tname="' + f.name + '"');
        d.push("Content-Transfer-Encoding: " + f.encoding);
        d.push("Content-ID: <" + f.id + ">");
        d.push("Content-Disposition: " + f.disposition + ";");
        d.push('\tfilename="' + f.filename + '"');
        d.push("");
        d.push(f.data);
        d.push("")
      }
      d.push("--" + b.getBoundary() + "--");
      b._body = d.join(b._EOL);
      a = b._breakLine(b._body);
      "function" === typeof c && c(a)
    })
  },
  _contentBuffer: [],
  _createContentImage: function (a, c) {
    var b = this, d = document.createElement("div");
    d.innerHTML = a;
    var e = d.getElementsByTagName("img"), f = 0, g = function (h) {
      if ("undefined" == typeof h) {
        d.innerHTML = "", "function" === typeof c
        && c(a);
      } else {
        var m = h.src;
        if (0 == m.indexOf("data:")) {
          h = m.replace(/^data:image\/.+;base64,/, "");
          var q = m.match(/:.+;/)[0],
              t = "." + q.substring(q.indexOf("/") + 1, q.length - 1);
          h = {
            type: q.substring(1, q.length - 1),
            name: b._makeRandomString() + t,
            encoding: "base64",
            id: b._makeRandomString() + "@raonwiz.com",
            disposition: "inline",
            filename: b._makeRandomString() + t,
            data: h
          };
          b._contentBuffer.push(h);
          t = a.indexOf(m);
          q = a.substring(0, t);
          t = a.substring(t + m.length);
          a = q + "cid:" + h.id + t
        } else if (0 == m.indexOf("http://") || 0 == m.indexOf(
            "https://")) {
          if (h = m.replace(/https?:\/\//, "").split(
              "/")[0], q = window.location.href.replace(/https?:\/\//,
              "").split(
              "/")[0], 0 == m.indexOf("/") || h == q) {
            try {
              var u = m.split("/"), u = u[u.length - 1], v = new XMLHttpRequest;
              v.open("GET", m, !0);
              v.responseType = "blob";
              v.onload = function () {
                try {
                  var c = v.response.type.toLowerCase(), d = "";
                  switch (c) {
                    case "image/gif":
                      d = ".gif";
                      break;
                    case "image/jpeg":
                      d = ".jpg";
                      break;
                    case "image/png":
                      d = ".png";
                      break;
                    case "image/tiff":
                      d = ".tif";
                      break;
                    case "image/bmp":
                      d = ".bmp"
                  }
                  if (-1
                      < ",image/gif,image/jpeg,image/png,image/tiff,image/bmp,".indexOf(
                          "" + c + "")) {
                    var h = new FileReader;
                    h.readAsDataURL(v.response);
                    h.onload = function (c) {
                      var h = c.target.result.replace(/^data:image\/.+;base64,/,
                          "");
                      c = c.target.result.match(/:.+;/)[0];
                      u = u.replace(/[<>:"/\\|?*]/g, "");
                      250 < u.length && (u = b._makeRandomString() + d);
                      h = {
                        type: c.substring(1,
                            c.length - 1),
                        name: u,
                        encoding: "base64",
                        id: b._makeRandomString() + "@raonwiz.com",
                        disposition: "inline",
                        filename: b._makeRandomString() + d,
                        data: h
                      };
                      b._contentBuffer.push(h);
                      var q = a.indexOf(m);
                      c = a.substring(0, q);
                      q = a.substring(q + m.length);
                      a = c + "cid:" + h.id + q;
                      g(e[++f])
                    }
                  } else {
                    g(e[++f])
                  }
                } catch (q) {
                  g(e[++f])
                }
              };
              v.send();
              return
            } catch (w) {
              g(e[++f]);
              return
            }
          }
        }
        g(e[++f])
      }
    };
    g(e[f])
  },
  _makeRandomString: function () {
    return "undefined" != typeof crypto && "undefined"
    != typeof crypto.randomUUID ? crypto.randomUUID().replace(/-/g, "")
        : Math.random().toString(16).substring(2,
            10) + Math.random().toString(16).substring(2, 10)
        + Math.random().toString(16).substring(2, 10) + Math.random().toString(
            16).substring(2, 10)
  },
  _breakLine: function (a) {
    var c = [];
    a = a.replace(/\r/g, "").split("\n");
    for (var b = 0; b < a.length; b++) {
      if (76 < a[b].length) {
        for (var d = a[b]; 76 < d.length;) {
          c.push(
              d.substring(0, 76)), d = d.substring(76);
        }
        c.push(d)
      } else {
        c.push(a[b]);
      }
    }
    return c.join(this._EOL)
  },
  toMIME: function (a, c, b) {
    var d = "", d = d + this.getHeader();
    this.getBody(a, function (a) {
      d += a;
      "function" === typeof b && b(d)
    })
  },
  toHTML: function (a,
      c) {
    try {
      a = a.replace(/\r/g, "").replace(/;\n\s/g, ";");
      var b = a.match(/boundary\=.+\n/);
      null == b && (b = a.match(/--.*\n/));
      if (b && 0 < b.length) {
        b = b[0];
      } else {
        return "";
      }
      var d = b.replace(/["']/g, ""), d = d.replace(/\n/, ""),
          d = /boundary=/.test(d) ? d.replace(/boundary=/, "") : d.replace(
              /^--/, ""), e = a.split("--" + d), f = this._parseObj(e[1],
              {"Content-Type": "", "Content-Transfer-Encoding": ""}),
          g = f["Content-Type"], b = "";
      if (g) {
        var h = g.match(/charset="(.*)"/i);
        h && h[1] && (b = h[1])
      }
      var m = function (a, b, c, d) {
        var e = [];
        if (3 < b.length) {
          for (var f = 2; f <
          b.length - 1; f++) {
            e.push(b[f]);
          }
        }
        b = {
          "Content-Type": "",
          "Content-Transfer-Encoding": "",
          "Content-ID": "",
          "Content-Disposition": "",
          "Content-Location": ""
        };
        for (f = 0; f < e.length; f++) {
          var g = a._parseObj(e[f], b);
          if (g["Content-ID"]) {
            var h = "cid:" + g["Content-ID"].replace(/[\<\>]/g, "");
            if (-1 < c.data.indexOf(h)) {
              for (var m = g["Content-Type"].split(";"), q = 0; q < m.length;
                  q++) {
                if (-1 < m[q].indexOf("/")) {
                  m = m[q];
                  break
                }
              }
              c.data = c.data.replace(h,
                  "data:" + m + ";" + g["Content-Transfer-Encoding"] + ","
                  + g.data)
            }
          }
        }
        d(c.data)
      };
      if ("" != b && "euc-kr" == b.toLowerCase()) {
        var q =
                KEDITORTOP.RAONKEDITOR.util.base64_decode(f.data, !0),
            t = function (a, b) {
              var c = !0;
              try {
                var d = (new RAONTextEncoder("windows-1252",
                    {NONSTANDARD_allowLegacyEncoding: !0})).encode(a);
                b.data = (new RAONTextDecoder("euc-kr")).decode(d)
              } catch (e) {
                console.log("RAONTextEncdoer error : " + e.message), c = !1
              }
              return c
            };
        if ("function" != typeof RAONTextEncoder) {
          var u = KEDITORTOP.G_CURRKEDITOR._config.webPath,
              v = KEDITORTOP.RAONKEDITOR.isRelease ? u.js : u.js_dev,
              w = KEDITORTOP.RAONKEDITOR.isRelease
                  ? "editor_textencoding.min.js" : "editor_textencoding.js",
              w = w + ("?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp),
              x = new XMLHttpRequest;
          x.open("GET", v + w);
          x.onload = function () {
            var a = document.createElement("script");
            a.type = "text/javascript";
            a.text = x.responseText;
            document.getElementsByTagName("head")[0].appendChild(a);
            t(q, f) ? m(this, e, f, c) : c("0")
          };
          x.send()
        } else {
          t(q, f) ? m(this, e, f, c) : c("0")
        }
      } else {
        f.data = KEDITORTOP.RAONKEDITOR.util.base64_decode(f.data), m(this,
            e, f, c)
      }
    } catch (y) {
      c("0")
    }
  },
  _parseObj: function (a, c) {
    var b = {}, d;
    for (d in c) {
      var e = a.match(d + ":.+");
      e && 0 < e.length && (b[d] =
          e[0].replace(d + ":", "").trim(), a = a.replace(e, ""))
    }
    b.data = a.replace(/\n/g, "").trim();
    return b
  }
};

function encodeMimeAgent(a, c, b, d) {
  var e = "", f, g, h, m;
  void 0 === c.image && (c.image = !0);
  var q = getDocumentForDummy().createElement("div");
  q.innerHTML = a;
  if (c.image) {
    f = q.getElementsByTagName("img");
    g = f.length;
    for (a = 0; a < g; a++) {
      h = "";
      try {
        h = f[a].src
      } catch (t) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(t)
      }
      var u = !0;
      if ("" == h) {
        u = !1;
      } else {
        m = h;
        try {
          -1 != m.indexOf(KEDITORTOP.RAONKSolution.managerFinalUrl)
          && (m = decodeURIComponent(m), m = convertImageAgentSrc(m,
              !1), h = m = decodeURIComponent(m))
        } catch (v) {
          KEDITORTOP &&
          KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(v)
        }
        c.imageLocalOnly ? 0 == h.toLowerCase().indexOf("http") && 0
            == h.toLowerCase().indexOf("http") && (u = !1) : ""
            != c.targetDomain && (m = h.toLowerCase(), 0 == m.indexOf("http:")
            && (m = m.replace("https://", ""), m = m.replace("http://", ""), 0
            != m.indexOf(c.targetDomain) && (u = !1)));
        u && (h = h.replace("file:///",
            ""), u = KEDITORTOP.RAONKEDITOR.util.makeGuid(), f[a].src = "cid:"
            + u, e += "cid:" + u + KEDITORTOP.RAONKSolution.Agent.formfeed + h
            + KEDITORTOP.RAONKSolution.Agent.formfeed +
            "0" + KEDITORTOP.RAONKSolution.Agent.vertical)
      }
    }
    h = ["table", "td", "body"];
    f = h.length;
    for (a = 0; a < f; a++) {
      g = q.getElementsByTagName(h[a]);
      for (var w = g.length, x = 0; x < w; x++) {
        var y = g[x].style.backgroundImage;
        "" == y && g[x].getAttribute("background") && (y = g[x].getAttribute(
            "background"));
        y = KEDITORTOP.RAONKEDITOR.util.getUrlInBackgroundStyle(y);
        "" != y && "none" != y.toLowerCase() && "initial" != y.toLowerCase()
        && (y = decodeURIComponent(y), y = convertImageAgentSrc(y,
            !1), y = decodeURIComponent(y), u = !0, c.imageLocalOnly ? 0
            == y.toLowerCase().indexOf("http") &&
            0 == y.toLowerCase().indexOf("http") && (u = !1) : ""
            != c.targetDomain && (m = y.toLowerCase(), 0 == m.indexOf("http:")
            && (m = m.replace("https://", ""), m = m.replace("http://", ""), 0
            != m.indexOf(c.targetDomain) && (u = !1))), u && (y = y.replace(
            "file:///", ""), u = "cid:"
            + KEDITORTOP.RAONKEDITOR.util.makeGuid(), g[x].style.backgroundImage = "url("
            + u + ")", e += u + KEDITORTOP.RAONKSolution.Agent.formfeed + y
            + KEDITORTOP.RAONKSolution.Agent.formfeed + "0"
            + KEDITORTOP.RAONKSolution.Agent.vertical))
      }
    }
  }
  if (c.css) {
    for (m = q.getElementsByTagName("LINK"), f = m.length,
        a = 0; a < f; a++) {
      h = m[a].href, 0 > h.indexOf("/editor_contents.css")
      && 0 < h.length && (u = "cid:"
          + KEDITORTOP.RAONKEDITOR.util.makeGuid(), m[a].href = u, e += u
          + KEDITORTOP.RAONKSolution.Agent.formfeed + h
          + KEDITORTOP.RAONKSolution.Agent.formfeed + "0"
          + KEDITORTOP.RAONKSolution.Agent.vertical);
    }
  }
  if (c.js) {
    for (m = q.getElementsByTagName("SCRIPT"), f = m.length, a = 0;
        a < f; a++) {
      h = m[a].src, 0 < m.length && (u = "cid:"
          + KEDITORTOP.RAONKEDITOR.util.makeGuid(), m[a].src = u, e += u
          + KEDITORTOP.RAONKSolution.Agent.formfeed + h
          + KEDITORTOP.RAONKSolution.Agent.formfeed +
          "0" + KEDITORTOP.RAONKSolution.Agent.vertical);
    }
  }
  if (c.object) {
    m = q.getElementsByTagName("EMBED");
    f = m.length;
    for (a = 0; a < f; a++) {
      h = m[a].src, 0 < h.length && (u = "cid:"
          + KEDITORTOP.RAONKEDITOR.util.makeGuid(), m[a].src = u, e += u
          + KEDITORTOP.RAONKSolution.Agent.formfeed + h
          + KEDITORTOP.RAONKSolution.Agent.formfeed + "0"
          + KEDITORTOP.RAONKSolution.Agent.vertical);
    }
    f = q.getElementsByTagName("OBJECT");
    g = f.length;
    for (a = 0; a < g; a++) {
      h = f[a].data, 0 < h.length && (u = "cid:"
          + KEDITORTOP.RAONKEDITOR.util.makeGuid(), m[a].src = u, e += u
          + KEDITORTOP.RAONKSolution.Agent.formfeed +
          h + KEDITORTOP.RAONKSolution.Agent.formfeed + "0"
          + KEDITORTOP.RAONKSolution.Agent.vertical)
    }
  }
  try {
    f = m = m = m = h = f = void 0
  } catch (z) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(z)
  }
  a = [["kcmd", "KC33"]];
  a.push(["k00", {
    browser: KEDITORTOP.RAONKEDITOR.UserAgent.browser.name.toLowerCase(),
    useragent: encodeURIComponent(navigator.userAgent)
  }]);
  a.push(["k15", 1]);
  a.push(["k71", getHttpHeaderAgentData(b)]);
  a.push(["kp1", 0]);
  e = e.substring(0, e.length - 1);
  a.push(["kp2", encodeURIComponent(e)]);
  a.push(["kp3", q.innerHTML]);
  b = "";
  void 0 != c.subject && "" != c.subject && (b = "0" == c.subject ? "None"
      : c.subject);
  a.push(["s1", encodeURIComponent(b)]);
  b = "";
  void 0 != c.date && "0" == c.date && (b = "None");
  a.push(["s2", encodeURIComponent(b)]);
  b = "";
  void 0 != c.xGenerator && "" != c.xGenerator && (b = "0" == c.xGenerator
      ? "None" : c.xGenerator);
  a.push(["s3", encodeURIComponent(b)]);
  b = setManagerParam("{}", a);
  b = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(b);
  c.async = !1 === c.async ? !1 : !0;
  sendMessageToAgent(b, function (a) {
    a = KEDITORTOP.RAONKSolution.Agent.parseRtn(a);
    var b = a.code;
    a = a.valueArr;
    1E3 == b || 7777 == b ? d(a[0]) : d("0")
  }, null, c.async)
}

function web_url_remove_char(a) {
  a = KEDITORTOP.RAONKEDITOR.util.trim(a);
  a = a.replace(/(\r\n|\r|\n)/gm, "");
  a = a.replace(/&#13;/g, "");
  a = a.replace(/&#10;/g, "");
  return a = a.replace(/&#32;/g, "")
}

function showFileDropArea(a) {
  if (1 != KEDITORTOP.G_CURRKEDITOR.isDragStartedInEditor) {
    var c = document.getElementById("editor_drop_area"),
        b = _iframeWin.frameElement.parentNode;
    null == c && (c = document.createElement(
        "div"), c.id = "editor_drop_area", c.style.position = "absolute", c.style.left = "0px", c.style.top = "0px", c.style.width = "100%", c.style.height = "100%", c.style.backgroundColor = "gray", c.style.opacity = "0", b.appendChild(
        c), KEDITORTOP.RAONKEDITOR.util.addEvent(c, "dragleave", function (a) {
      showFileDropArea(!1)
    }), KEDITORTOP.RAONKEDITOR.util.addEvent(c,
        "mouseover", function (a) {
          showFileDropArea(!1)
        }), "1" == KEDITORTOP.G_CURRKEDITOR._config.useKManager
    && KEDITORTOP.RAONKEDITOR.util.addEvent(c, "dragenter", function (a) {
      try {
        a.stopPropagation(), a.preventDefault()
      } catch (b) {
        KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
      }
      useManagerDropZone(a);
      return !1
    }));
    a ? (c.style.display = "block", b.style.position = "relative")
        : (c.style.display = "none", b.style.position = "")
  }
}

function isMobileAndFixBottom() {
  var a = !1;
  KEDITORTOP.RAONKEDITOR.browser.mobile && "2"
  == KEDITORTOP.G_CURRKEDITOR._config.mobilePopupMode && (a = !0);
  return a
}

function getDialogSkinName(a) {
  var c = KEDITORTOP.G_CURRKEDITOR;
  a && (c = a);
  a = c._config.style.skinName;
  c = c._config.style.dialogSkinName;
  "string" == typeof c && "" != c && (a = c);
  return a
}

function setFontSizeForPpt(a) {
  var c = a;
  try {
    var b = document.createElement("div");
    b.innerHTML = a;
    a = function (a) {
      for (var b = 0; b < a.length; b++) {
        var c = a[b];
        c && c.style.lineHeight && "" != c.style.lineHeight && c.firstChild && 1
        == c.firstChild.nodeType && "span" == c.firstChild.tagName.toLowerCase()
        && c.firstChild.style.fontSize
        && (c.style.fontSize = c.firstChild.style.fontSize)
      }
    };
    var d = b.getElementsByTagName("div");
    a(d);
    var e = b.getElementsByTagName("p");
    a(e);
    c = b.innerHTML;
    b = null;
    b = void 0
  } catch (f) {
  }
  return c
}

function getKEDITORWINZoomValue(a) {
  var c = 1;
  try {
    if ("1" == a._config.autoSetZoom.use) {
      var b = KEDITORTOP.KEDITORWIN.document.body;
      a._config.autoSetZoom && null != a._config.autoSetZoom.checkNode
      && (b = a._config.autoSetZoom.checkNode);
      var d = KEDITORTOP.KEDITORWIN.getComputedStyle(b, null).zoom;
      void 0 != d && (c = d)
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
  return c
}

function setZoomValueToBody(a, c) {
  if ("1" == c._config.autoSetZoom.use) {
    try {
      var b = getKEDITORWINZoomValue(c);
      a.body.style.zoom = b
    } catch (d) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(d)
    }
  }
}

function changeValueForZoom(a, c) {
  var b = a;
  try {
    if ("1" == c._config.autoSetZoom.use) {
      var d = getKEDITORWINZoomValue(c),
          b = b / d
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
  return b
}

function getDocumentForDummy() {
  var a = null;
  try {
    if ("function" === typeof DOMParser) {
      var c = (new DOMParser).parseFromString("", "text/html");
      c && 9 == c.nodeType && (a = c)
    } else {
      a = document
    }
  } catch (b) {
    a = document
  }
  return a
}

function applyFakeImgSrc(a, c) {
  var b = a;
  return b = !0 === c ? b.replace(/<img[^>]*? raon-tsrc=/gi, function (a) {
    return a.replace(" raon-tsrc=", " src=")
  }) : b.replace(/<img[^>]*? src=/gi, function (a) {
    return a.replace(" src=", " raon-tsrc=")
  })
}

function urlCheckOrPass(a) {
  return "1" == KEDITORTOP.G_CURRKEDITOR._config.validateUrlLink
      ? KEDITORTOP.RAONKEDITOR.util.checkUrl(a) : !0
}

function webOfficePasteWorkForDom(a) {
  try {
    var c = document.createElement("div");
    c.innerHTML = a;
    var b = /class=".*SpellingError.*"/i;
    if (b.test(a)) {
      var d = getElementsByClassNameEx(c, "SpellingError");
      if (d) {
        for (var e = d.length, f = 0; f < e; f++) {
          var g = d[f];
          "" != g.style.backgroundImage
          && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(g,
              "background-image");
          "0px" == g.style.lineHeight
          && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(g, "line-height");
          "relative" == g.style.position
          && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(g,
              "position")
        }
      }
    }
    b = /TableCellRelativePosition/i;
    if (b.test(a) && (d = getElementsByClassNameEx(c,
        "TableCellRelativePosition"))) {
      for (e = d.length, f = 0; f < e;
          f++) {
        g = d[f], "relative" == g.style.position
        && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(g, "position");
      }
    }
    b = /class=".*TextRun.*"/i;
    if (b.test(a)) {
      if (d = getElementsByClassNameEx(c,
          "NormalTextRun")) {
        for (e = d.length, f = 0; f < e;
            f++) {
          g = d[f], "0px" == g.style.lineHeight
          && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(g,
              "line-height"), "relative" == g.style.position
          && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(g,
              "position");
        }
      }
      if (d = getElementsByClassNameEx(c, "TextRun")) {
        for (e = d.length, f = 0;
            f < e; f++) {
          g = d[f], "0px" == g.style.lineHeight
          && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(g,
              "line-height"), "rgb(237, 235, 233)" == g.style.backgroundColor
          && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(g,
              "background-color"), "relative" == g.style.position
          && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(g, "position")
        }
      }
    }
    b = /class=".*TableWordWrap.*"/i;
    if (b.test(a) && (d = getElementsByClassNameEx(c,
        "TableWordWrap"))) {
      for (e = d.length,
          f = 0; f < e; f++) {
        g = d[f];
        "0px" == g.style.width
        && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(g, "width");
        var h = g.parentNode;
        if ("DIV" == h.tagName && h.parentNode) {
          for (; h.hasChildNodes();) {
            h.parentNode.insertBefore(h.firstChild, h);
          }
          h.parentNode.removeChild(h)
        }
      }
    }
    b = /class=".*OutlineElement.*"/i;
    if (b.test(a) && (d = getElementsByClassNameEx(c,
        "OutlineElement"))) {
      for (e = d.length, f = e - 1; 0 <= f;
          f--) {
        if (g = d[f], "DIV" == g.tagName) {
          for (; g.hasChildNodes();) {
            g.parentNode.insertBefore(g.firstChild, g);
          }
          g.parentNode.removeChild(g)
        } else if ("LI" ==
            g.tagName) {
          var m = g.parentNode;
          "rgb(237, 235, 233)" == m.style.backgroundColor
          && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(m,
              "background-color")
        }
      }
    }
    b = /class=".*EOP.*"/i;
    if (b.test(a) && (d = getElementsByClassNameEx(c,
        "EOP"))) {
      for (e = d.length, f = 0; f < e; f++) {
        if (g = d[f], g.innerHTML
        == unescape("%u200b") || "" == g.innerHTML) {
          var h = g.parentNode, q = h.textContent || h.innerText;
          if (q == unescape("%u200b") || "" == q) {
            g.innerHTML = "&nbsp;", "0px"
            == g.style.lineHeight
            && KEDITORTOP.RAONKEDITOR.util.removeStyleAttribute(
                g, "line-height")
          }
        }
      }
    }
    b =
        /data-sessionid/i;
    if (b.test(a) && (d = c.getElementsByTagName("a"))) {
      for (e = d.length, f = e
          - 1; 0 <= f; f--) {
        g = d[f], null == g.getAttribute("href")
        && g.getAttribute("data-sessionid") && "&nbsp;" == g.innerHTML
        && g.parentNode.removeChild(g);
      }
    }
    a = c.innerHTML
  } catch (t) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(t)
  }
  return a
}

function executeKC06(a, c) {
  var b = a.path, d = 0, e = {result: []}, f = function (a) {
    e.result.push(a);
    d++;
    d < b.length ? g(b[d], f) : "function" === typeof c && c(e)
  }, g = function (a, b) {
    var c = [["kcmd", "KC06"]];
    c.push(["kp1", encodeURIComponent(a.replace(/file:\/\/\//i, ""))]);
    c.push(["kp2", ""]);
    c = setManagerParam("{}", c);
    c = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(c);
    sendMessageToAgent(c, function (a) {
      a = KEDITORTOP.RAONKSolution.Agent.parseRtn(a);
      var c = a.code;
      a = a.valueArr;
      1E3 == c || 7777 == c ? (a = a[0].replace(/%2B/g, "+"), b(a)) :
          b("-1")
    }, function () {
      b("-1")
    }, !0)
  };
  g(b[d], f)
}

function executeKC10(a, c) {
  for (var b = a.path, d = {result: []}, e = "", f = "", g = 0; g < b.length;
      g++) {
    f = "file:" == b[g].substring(0, 5) ? b[g].replace("file:///", "")
        : decodeURIComponent(
            b[g].replace(KEDITORTOP.RAONKSolution.managerFinalUrl + "/",
                "")), e += f, e = g != b.length - 1 ? e
        + KEDITORTOP.RAONKSolution.Agent.formfeed : e
        + KEDITORTOP.RAONKSolution.Agent.vertical;
  }
  f = [["kcmd", "KC10"]];
  f.push(["kp1", encodeURIComponent(e)]);
  e = setManagerParam("{}", f);
  e = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(e);
  sendMessageToAgent(e, function (a) {
    a =
        KEDITORTOP.RAONKSolution.Agent.parseRtn(a);
    var e = a.code, f = KEDITORTOP.RAONKSolution.Agent.formfeed;
    a = a.valueArr;
    var g = [], g = 0;
    if (1E3 == e) {
      for (e = 0; e < a.length; e++) {
        g = a[e].split(
            f), g = g[0], d.result[e] = "_" != g ? parseInt(g, 10) : -1;
      }
      c(d)
    } else if (2E3 == e) {
      for (e = 0; e < b.length; e++) {
        d.result[e] = -1;
      }
      c(d)
    }
  }, function () {
    for (var a = 0; a < b.length; a++) {
      d.result[a] = -1;
    }
    c(d)
  }, !0)
}

function executeKC04(a, c) {
  var b = {result: []}, d = -1, e = a.path.length, f = function () {
    d++;
    if (d < e) {
      var g = [["kcmd", "KC04"]];
      g.push(["kp1", KEDITORTOP.RAONKEDITOR.util.parseIntOr0(100 * a.quality)]);
      g.push(["kp2", KEDITORTOP.G_CURRKEDITOR._FRAMEWIN.encodeURIComponent(
          a.path[d].replace("file:///", ""))]);
      g = KEDITORTOP.G_CURRKEDITOR._FRAMEWIN.setManagerParam("{}", g);
      g = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(g);
      KEDITORTOP.G_CURRKEDITOR._FRAMEWIN.sendMessageToAgent(g, function (a) {
        a = KEDITORTOP.RAONKSolution.Agent.parseRtn(a);
        var c = a.valueArr;
        1E3 == a.code ? (a = c[0].split(
            KEDITORTOP.RAONKSolution.Agent.formfeed), a = {
          path: a[1],
          size: KEDITORTOP.RAONKEDITOR.util.parseIntOr0(a[2])
        }, b.result.push(a)) : b.result.push(null);
        f()
      }, function () {
        b.result.push(null);
        f()
      }, !0)
    } else {
      "function" === typeof c && c(b)
    }
  };
  f()
}

function dingBatFont(a, c) {
  var b = !1;
  "" == a && (b = !0, a = c._BODY.innerHTML);
  var d = a;
  if ("1" == c._config.compatibility.dingBatChar && "undefined"
      != typeof KEDITOR_DINGBAT_FONTS) {
    try {
      for (var e = function (a, b) {
        for (var c = a.childNodes, d = c.length - 1; 0 <= d; d--) {
          var e = c[d];
          if (3 == e.nodeType && "" == a.style.fontFamily) {
            for (var f = e, g = b, e = e.nodeValue.split(""), h = "", m = 0;
                m < e.length; m++) {
              h = void 0 != KEDITOR_DINGBAT_FONTS[g]
              && void 0 != KEDITOR_DINGBAT_FONTS[g][e[m]] ? h
                  + KEDITOR_DINGBAT_FONTS[g][e[m]] : h
                  + KEDITOR_DINGBAT_FONTS.DefaultChar;
            }
            f.nodeValue =
                h
          }
        }
      }, f = function (a, b) {
        for (var c = a.getElementsByTagName("*"), d = c.length - 1; 0 <= d;
            d--) {
          var f = c[d];
          1 == f.nodeType && e(f, b)
        }
        e(a, b)
      }, g = function (a) {
        var b = a;
        if (-1 < b.indexOf(' class="')) {
          var c = b.indexOf(' class="');
          a = b.substring(0, c + 8);
          b = b.substring(c + 8);
          b = a + "ke_dingbat " + b
        } else {
          b = b.replace(">", ' class="ke_dingbat">');
        }
        return b
      }, h = document.createElement("div"), m = 0;
          m < KEDITOR_DINGBAT_FONTS.FontList.length; m++) {
        var q = KEDITOR_DINGBAT_FONTS.FontList[m], t = !1, u = q, v = q;
        -1 < q.indexOf(" ") && (t = !0, u = "&quot;" + u + "&quot;", v = '"' +
            v + '"');
        var w = new RegExp("<span [^>]*font-family:\\s*" + u + ".*?>", "gi");
        w.test(a) ? a = a.replace(w, function (a) {
          return g(a)
        }) : t && (w = new RegExp("<span [^>]*font-family:\\s*" + v + ".*?>",
            "gi"), w.test(a) && (a = a.replace(w, function (a) {
          return g(a)
        })));
        h.innerHTML = a;
        for (var x = getElementsByClassNameEx(h, "ke_dingbat"),
            y = x.length - 1;
            0 <= y; y--) {
          var z = x[y];
          _font = z.style.fontFamily;
          v == _font
          && (z.style.fontFamily = "", z.className = z.className.replace(
              "ke_dingbat", ""), "" == z.className && z.removeAttribute(
              "class"), f(z, q))
        }
        a = h.innerHTML
      }
      h =
          null;
      h = void 0
    } catch (A) {
      b && (c._BODY.innerHTML = d), a = d
    }
  }
  b && (c._BODY.innerHTML = a);
  return a
}

function replaceMsStyleName(a, c) {
  var b = a;
  try {
    for (var d = c._config.replaceMsStyleName, e = 0; e < d.length;
        e++) {
      b = b.replace(
          new RegExp("<\\w{1,} [^>]*(" + d[e] + ":).*?>", "gi"),
          function (a, b) {
            return a.replace(b, b.replace("-ms-", ""))
          })
    }
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
  return b
}

function recentlyLocalStorageSave(a, c) {
  if (KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported) {
    var b = KEDITORTOP.KEDITORWIN.localStorage.getItem(c);
    null == b || void 0 == b || "" == b
        ? KEDITORTOP.KEDITORWIN.localStorage.setItem(c, a) : (b = b.split(
            ","), -1 < b.indexOf(a) && b.splice(b.indexOf(a), 1), b.unshift(a), 5
        < b.length
        && (b.reverse(), b.shift(), b.reverse()), KEDITORTOP.KEDITORWIN.localStorage.setItem(
            c, b.toString()))
  }
}

function recentlyReset(a, c) {
  var b = KEDITORTOP.KEDITORWIN.localStorage.getItem(a);
  if (null != b && void 0 != b && "" != b) {
    for (var b = b.split(","), d,
        e = b.length, f = 0; f < e; f++) {
      d = b[f]
          + "_r", c._iframe_doc.getElementById(d).style.backgroundColor = ""
    }
  }
}

function Ruler(a) {
  this.editorID = a.ID;
  this.editorComponent = a;
  KEDITORTOP.RAONKEDITOR.browser.mobile
  && (a._config.ruler.viewGuideLine = "0", a._config.ruler.viewPointer = "0");
  this.viewRulerStatus = "1" == a._config.ruler.use && "1"
      == a._config.ruler.defaultView;
  this.rulerPositionArr = [];
  if (G_BodyFit.widthFixableStatus) {
    var c = parseIntOr0(G_BodyFit.fixedWidth),
        b = parseIntOr0(a._config.defaultBodySpace.configValue.left),
        c = c + (b + a._config.widthFix.padding);
    this.rulerPositionArr = [c + ""]
  } else {
    0 == a._config.ruler.rulerInitPosition.length ?
        "2" == a._config.ruler.mode && (this.rulerPositionArr = [parseIntOr0(
            getCurrEditorWidth())], a._config.ruler.autoFitMode = "1")
        : this.rulerPositionArr = a._config.ruler.rulerInitPosition;
  }
  this.maxRulerPosition = this.rulerPositionArr[this.rulerPositionArr.length
  - 1];
  this.rulerPositionLen = "1" == a._config.ruler.mode
      ? this.rulerPositionArr.length : 4;
  this._doc = getEditorFrameDoc(a);
  this.rulerPointLineArea = this.rulerBottomArea = this.rulerArea = null;
  this._init = !1;
  this.vRuler0PositionTop = this.hRuler0PositionLeft = 0
}

Ruler.prototype.SelectIcon = function () {
  var a = document.getElementById("keditor_span_" + this.editorID + "ruler");
  if (a) {
    var c = KEDITORTOP.RAONKEDITOR.util.getClass(a);
    this.viewRulerStatus ? (KEDITORTOP.RAONKEDITOR.util.setClass(a,
        c + " uebutton_span_enter"), KEDITORTOP.RAONKEDITOR.util.addClass(a,
        "selected")) : (c = KEDITORTOP.RAONKEDITOR.util.replaceAll(c,
        "uebutton_span_enter", ""), c = KEDITORTOP.RAONKEDITOR.util.trim(
        c), KEDITORTOP.RAONKEDITOR.util.setClass(a,
        c), KEDITORTOP.RAONKEDITOR.util.removeClass(a, "selected"))
  }
};
Ruler.prototype.SettingInit = function () {
  this._init = !0;
  var a = this.editorID, c = this._doc;
  this.rulerArea = c.getElementById("keditor_tab_tool3_" + a);
  this.rulerBottomArea = c.getElementById("keditor_tab_tool4_" + a);
  this.rulerPointLineArea = c.getElementById("keditor_ruler_pointline_div")
};
Ruler.prototype.RulerUiInit = function () {
  var a = this.editorComponent;
  "1" == a._config.ruler.viewPointer && this.SyncRulerCount("viewPointer");
  "1" == a._config.ruler.viewGuideLine && this.SyncRulerCount("viewGuideLine")
};
Ruler.prototype.SetRulerPosition = function () {
  var a = this.editorComponent;
  this.viewRulerStatus && "view" != a._config.mode
  && (set_ruler_horizontal_width(a), this._init && ("1"
  == a._config.ruler.useVertical && set_ruler_vertical_height(a), "1"
  == a._config.horizontalLine.use && set_horizontal_line_2(a), "1"
  == a._config.ruler.mode ? (set_ruler_point_position(
      a), set_ruler_pointline_position(a)) : setRulerPositionForNode(
      a), this.SetRulerHeight()))
};
Ruler.prototype.SyncRulerCount = function (a) {
  var c = this.editorComponent, b = this.editorID, d = !0, e = null, f = 0,
      g = this.rulerPositionLen;
  "viewPointer" == a ? ("2" == c._config.ruler.mode
      && (g = 3), e = this.rulerArea.getElementsByTagName("img"))
      : e = this.rulerPointLineArea.getElementsByTagName("div");
  f = e.length;
  if (g != f) {
    for (d = !1, --f; 0 <= f; f--) {
      e[f].parentNode.removeChild(e[f]);
    }
  }
  if (0 == d) {
    for (f = 0; f < g; f++) {
      "viewPointer" == a
          ? (d = this._doc.createElement("img"), d.id = "keditor_ruler_point_"
              + f
              + "_" + b, d.src = "../images/bg/point.gif", d.style.verticalAlign =
              "top", d.style.border = "0px", d.style.width = "14px", d.style.height = "9px", d.style.margin = "0 0 0 -7", d.style.display = "none", d.style.position = "absolute", d.style.top = "-1px", this.rulerArea.appendChild(
              d), d.onmousedown = function () {
            return !1
          }, d.unselectable = "on") : (d = this._doc.createElement(
              "div"), d.id = "keditor_ruler_pointline_" + f + "_"
              + b, d.style.position = "absolute", d.style.zIndex = "9999", d.style.borderLeft = c._config.ruler.guideLineStyle
              + " 1px "
              + c._config.ruler.guideLineColor, d.style.display = "none", this.rulerPointLineArea.appendChild(
              d))
    }
  }
};
Ruler.prototype.GetLeftPosition = function (a, c) {
  var b = this.editorComponent, d = 0, d = 0;
  a && (d = parseIntOr0(a.style.width), d = parseIntOr0(c) - d / 2);
  var e;
  "preview" == b.getEditorMode()
      ? (e = b._EDITOR.preview.contentWindow.document.documentElement, b = b._EDITOR.preview.contentWindow.document.body)
      : (e = _iframeDoc.documentElement, b = _iframeDoc.body);
  return d - (e.scrollLeft || b.scrollLeft || 0)
};
Ruler.prototype.SetRulerHeight = function () {
  for (var a = this.editorComponent, c = this.editorID,
      b = this._doc.getElementById("ue_editor_holder_" + c), d = 0;
      d < this.rulerPositionLen; d++) {
    var e = this._doc.getElementById("keditor_ruler_pointline_" + d + "_" + c);
    if (e) {
      if ("2" != a._config.ruler.mode || "2" == a._config.ruler.mode && (0
          == d || 3 == d)) {
        e.style.top = b.offsetTop
            + "px", e.style.height = b.style.height;
      } else {
        var f = parseIntOr0(this.rulerBottomArea.style.height);
        e.style.top = b.offsetTop - f + "px";
        e.style.height = parseIntOr0(b.style.height) +
            f + "px"
      }
    }
  }
  "1" == a._config.ruler.autoFitMode || "2" != a._config.ruler.mode
  || G_BodyFit.useNoncreationAreaBackground || (e = getClientRect(
      this.editorComponent._BODY).right, 0 < e && (a = parseIntOr0(
      e), f = parseIntOr0(
      this.rulerBottomArea.style.height), e = this._doc.getElementById(
      "keditor_ruler_pointline_4_" + c), e.style.top = b.offsetTop - f
      + "px", e.style.left = a + "px", e.style.height = parseIntOr0(
      b.style.height) + f + "px", e.style.display = ""))
};
Ruler.prototype.SetRulerPositionApi = function (a) {
  var c = this.editorComponent;
  a = (a + "").split(",");
  for (var b = 0; b < a.length; b++) {
    a[b] = parseIntOr0(a[b]) + "";
  }
  this.rulerPositionArr = a.sort(function (a, b) {
    return a - b
  });
  this.maxRulerPosition = parseIntOr0(
      "1" == c._config.ruler.autoFitMode ? getCurrEditorWidth()
          : this.rulerPositionArr[this.rulerPositionArr.length - 1]);
  this.rulerPositionLen = "1" == c._config.ruler.mode
      ? this.rulerPositionArr.length : 4;
  G_BodyFit
  && (G_BodyFit.fixedWidth = this.rulerPositionArr[G_Ruler.rulerPositionArr.length
  -
  1]);
  this.RulerUiInit();
  G_BodyFit.SetBodyWidth();
  this.SetRulerPosition()
};

function BodyFit(a) {
  this.editorID = a.ID;
  this.editorComponent = a;
  this.widthFixableStatus = !(KEDITORTOP.RAONKEDITOR.browser.ie && 8
          >= KEDITORTOP.RAONKEDITOR.browser.ieVersion) && ""
      != a._config.widthFix.defaultView && "" != a._config.widthFix.value;
  this.widthFixedStatus = !1;
  this.fixedWidth = "";
  var c = "1" == a._config.ruler.use;
  this.widthFixableStatus && (this.fixedWidth = a._config.widthFix.value);
  this.widthFixStatus = this.widthFixableStatus && "1"
      == a._config.widthFix.defaultView || !this.widthFixableStatus && c && "1"
      == a._config.autoBodyFit;
  this.useNoncreationAreaBackground = "1"
      == a._config.useNoncreationAreaBackground || ""
      != a._config.widthFix.backgroundColor;
  this.noncreationAreaBackgroundStatus = !1;
  this.noncreationAreaBackgroundColor = "" != a._config.widthFix.backgroundColor
      ? a._config.widthFix.backgroundColor : "#e6e6e6"
}

BodyFit.prototype.SetBodyWidth = function (a) {
  var c = this.editorComponent, b = 0;
  void 0 !== a ? b = a : this.widthFixStatus ? this.widthFixableStatus
      ? (b = this.fixedWidth, this.widthFixedStatus = !0)
      : b = this.GetBodyWidthInRulerSetting() : this.widthFixableStatus
      || (b = this.GetBodyWidthInRulerSetting());
  this.SelectIcon();
  "" != b ? (0 == this.widthFixableStatus ? "1"
          == c._config.defaultBodySpace.use ? this.widthFixableStatus
          && !this.widthFixStatus || !this.widthFixableStatus && "1"
          == c._config.ruler.autoFitMode ? (b -= parseIntOr0(
                      c._config.defaultBodySpace.configValue.left) +
                  parseIntOr0(c._config.defaultBodySpace.configValue.right) + 15, G_Ruler
              && G_Ruler.viewRulerStatus && "1" == c._config.ruler.useVertical && (b -= 18))
              : b -= parseIntOr0(c._config.defaultBodySpace.configValue.left) : b -= 35
          : b = parseIntOr0(b), 0 == isNaN(b) && (_iframeDoc.body.style.width = b
          + "px", c._defTableWidth = b, c._defaultWidth = b), setEditorHtmlWidth(c))
      : (0 < _iframeDoc.body.clientWidth
      && (c._defTableWidth = _iframeDoc.body.clientWidth
          - 30, c._defaultWidth = _iframeDoc.body.clientWidth
          - 30), _iframeDoc.body.style.width = "", _iframeDoc.documentElement.style.width =
          "");
  100 > c._defTableWidth && (c._defTableWidth = 400, c._defaultWidth = 400)
};
BodyFit.prototype.SelectIcon = function () {
  if (this.widthFixableStatus) {
    var a = document.getElementById(
        "keditor_span_" + this.editorID + "body_fit");
    if (a) {
      var c = KEDITORTOP.RAONKEDITOR.util.getClass(a);
      this.widthFixStatus ? (KEDITORTOP.RAONKEDITOR.util.setClass(a,
          c + " uebutton_span_enter"), KEDITORTOP.RAONKEDITOR.util.addClass(a,
          "selected")) : (c = KEDITORTOP.RAONKEDITOR.util.replaceAll(c,
          "uebutton_span_enter", ""), c = KEDITORTOP.RAONKEDITOR.util.trim(
          c), KEDITORTOP.RAONKEDITOR.util.setClass(a,
          c), KEDITORTOP.RAONKEDITOR.util.removeClass(a,
          "selected"))
    }
  }
};
BodyFit.prototype.GetBodyWidthInRulerSetting = function () {
  var a = this.editorComponent, c = 0;
  G_Ruler && "1" == a._config.autoBodyFit && ("1" == a._config.ruler.autoFitMode
      ? "1" == a._config.ruler.fixEditorWidth
      && (c = getCurrEditorWidth(), G_Ruler.maxRulerPosition = c)
      : c = G_Ruler.maxRulerPosition);
  return c
};

function beforeGetApi(a, c) {
  G_BodyFit.noncreationAreaBackgroundStatus && G_BodyFit.widthFixStatus
  && setBodyFitStyle(a, !1, c)
}

function afterGetApi(a, c) {
  G_BodyFit.widthFixStatus && setBodyFitStyle(a, !0, c)
}

function canvasBugFix(a) {
  var c = null;
  try {
    c = document.createElement("canvas");
    c.width = 100;
    c.height = 100;
    var b = c.getContext("2d");
    b.drawImage(a, 0, 0, 100, 100);
    b.getImageData(0, 0, 100, 100)
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
}

function executeKC10_kp2(a, c) {
  for (var b = a.path, d = {result: []}, e = "", f = b.length, g = 0; g < f;
      g++) {
    e += encodeURIComponent(b[g].replace(/file:\/\/\//i, "")), g != f - 1
    && (e += KEDITORTOP.RAONKSolution.Agent.formfeed);
  }
  b = [["kcmd", "KC10"]];
  b.push(["kp1", e]);
  b.push(["kp2", 1]);
  var e = setManagerParam("{}", b),
      e = KEDITORTOP.RAONKSolution.Agent.makeEncryptManagerParam(e),
      h = function () {
        for (var a = 0; a < f; a++) {
          d.result.push(-1);
        }
        "function" === typeof c && c(d)
      };
  sendMessageToAgent(e, function (a) {
    a = KEDITORTOP.RAONKSolution.Agent.parseRtn(a);
    var b = a.code;
    a = a.valueArr;
    1E3 == b ? (d.result = a, "function" === typeof c && c(d)) : h()
  }, h, !0)
}

function replaceEmptySpaceInATag(a) {
  a = a.getElementsByTagName("a");
  for (var c = a.length, b = "", b = KEDITORTOP.RAONKEDITOR.browser.ie && "xp"
  != KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase() ? unescape(
      "%u200B") : unescape("%uFEFF"), d = 0; d < c; d++) {
    a[d].href && ""
    != a[d].href || 0 != a[d].innerHTML.length || (a[d].innerHTML = b)
  }
}

function getChangedSizeForPPTImage(a) {
  try {
    return Math.round(.64 * a)
  } catch (c) {
    return a
  }
}

function checkXssContentType(a, c) {
  var b = !1, d = {};
  c && (d = c);
  d = d.editor;
  void 0 == d && (d = KEDITORTOP.G_CURRKEDITOR);
  if ("string" == typeof a && "1" == d._config.xss_use) {
    var d = ["data:text/html", "data:image/svg+xml", "data:application/xml"],
        e = d.length;
    for (k = 0; k < e; k++) {
      if (-1 < a.toLowerCase().indexOf(d[k])) {
        b = !0;
        break
      }
    }
  }
  return b
}

function webImagesDownloadToAgentTemp(a, c) {
  for (var b = a.downloadImageDomainArray, d = getImagesInfoInHtml(a.container),
      e = d.length, f = [], g = [], h = 0; h < e; h++) {
    var m = d[h], q = getImageUrlInNode(m);
    if ("" != q && 0 == isAgentUrl(q)) {
      var q = KEDITORTOP.RAONKEDITOR.util.setFullUrl(q),
          t = KEDITORTOP.RAONKEDITOR.util.getDomainInUrl(q), u = !1;
      -1 < b.indexOf("all") && (u = !0);
      0 == u && -1 < b.indexOf(t.fullDomain) && (u = !0);
      u && (f.push(m), g.push(q))
    }
  }
  0 < g.length ? (b = g.join(
      KEDITORTOP.RAONKSolution.Agent.formfeed), copyImageToTempFolder(
      {imagesSrc: b},
      function (a) {
        a = KEDITORTOP.RAONKSolution.Agent.parseRtn(a);
        var b = a.code;
        a = a.valueArr;
        if (null == a[0] || void 0 == a[0]) {
          b = 2E3;
        }
        a = a[0].split(KEDITORTOP.RAONKSolution.Agent.formfeed);
        var d = a.length;
        if (1E3 == b) {
          for (b = 0; b < d; b++) {
            var e = a[b];
            e != g[b] && (e = "file:///" + e, e = convertImageAgentSrc(e,
                !0), setImageUrlInNode(e, f[b]))
          }
        }
        f = null;
        f = void 0;
        g = null;
        g = void 0;
        c()
      })) : c()
}

function isAgentUrl(a) {
  var c = !1;
  0 == a.indexOf(KEDITORTOP.RAONKSolution.managerFinalUrl) && (c = !0);
  return c
}

function getImageUrlInNode(a) {
  var c = "";
  "IMG" == a.tagName ? c = a.src : (c = a.style.backgroundImage, "none" == c
      ? c = "" : "initial" == c ? c = "" : ("" == c && a.getAttribute(
          "background") && (c = a.getAttribute("background")), c = c.replace(
          /url\(/gi, ""), c = c.replace(/\)/gi, ""), c = c.replace(/"/gi,
          ""), c = c.replace(/'/gi, "")));
  return c
}

function setImageUrlInNode(a, c) {
  "IMG" == c.tagName ? c.setAttribute("src", a)
      : c.style.backgroundImage = "url(" + a + ")"
}

function replaceCharToWingdings(a) {
  return a = a.replace(RegExp("(\uf09f)", "g"),
      '<span style="font-family: Wingdings;">$1</span>')
}

function handlingSpacingTableInHwp(a) {
  var c = a, b = getDocumentForDummy().createElement("div");
  b.innerHTML = c;
  var c = b.getElementsByTagName("table"), d = c.length;
  if (0 < d) {
    for (a = d - 1; 0 <= a; a--) {
      d = c[a];
      "" == d.style.marginTop && (d.style.marginTop = "6px");
      "" == d.style.marginBottom && (d.style.marginBottom = "6px");
      var e = d;
      (d = d.parentNode) && "P" == d.tagName && (e = d);
      for (var d = [], e = e.nextSibling, f = !1; null != e;) {
        if ("P"
            == e.tagName) {
          if ("<p></p>" == e.outerHTML.toLowerCase()) {
            d.push(
                e), e = e.nextSibling;
          } else {
            var g = e.childNodes;
            if (1 == g.length &&
                "SPAN" == g[0].tagName && "hnc_page_break" == g[0].className
                && "&nbsp;" == g[0].innerHTML) {
              d.push(e);
              break
            } else if (0 == f) {
              f = !0, e = e.nextSibling;
            } else {
              break
            }
          }
        } else if (3 == e.nodeType && e.data && "" == e.data.replace(/\s/g,
            "")) {
          e = e.nextSibling;
        } else {
          break;
        }
      }
      e = d.length;
      for (f = 0; f < e; f++) {
        g = d[f], g.parentNode.removeChild(g)
      }
    }
    c = b.innerHTML
  } else {
    c = a;
  }
  return c
}

function handlingPositionInHwp(a) {
  var c = a;
  if (document.querySelectorAll) {
    a = getDocumentForDummy().createElement("div");
    a.innerHTML = c;
    var b = a.querySelectorAll('img[style*="position: absolute;"]'),
        d = b.length;
    if (0 < d) {
      for (c = 0; c < d; c++) {
        b[c].style.position = "relative";
      }
      c = a.innerHTML
    }
  }
  return c
}

function getCellLastChildNode(a) {
  var c = 1;
  do {
    if (a = a.lastChild, null != a.previousSibling && (3 == a.nodeType && "\n"
        == a.data || "br" == a.nodeName.toLowerCase())
    && (a = a.previousSibling), "<br>" == a.innerHTML) {
      c = 0;
      break
    }
  } while (3 != a.nodeType);
  return {node: a, position: c}
}

function handlingFontFamilyInHwp(a) {
  return a = a.replace(
      /(?:<span.*?style=["'].*?font-family:\s*([^;'"]+).*?["'].*?>)/g,
      function (a, b) {
        for (var d = b.split(","), e = d.length, f = /[ .]/, g = !1, h = 0;
            h < e; h++) {
          var m = d[h].replace(/['"]|(&quot;)/g, ""),
              m = KEDITORTOP.RAONKEDITOR.util.trim(m);
          f.test(m) && (g = !0, d[h] = "&quot;" + m + "&quot;")
        }
        g && (d = d.join(","), a = a.replace(b, d));
        return a
      })
}

function getNodeLastChildNode(a) {
  for (; a && 3 != a.nodeType && (null != a.previousSibling && (3 == a.nodeType
      && "\n" == a.data || "br" == a.nodeName.toLowerCase())
  && (a = a.previousSibling), null != a.lastChild);) {
    a = a.lastChild;
  }
  return a
}

function setSelectCell(a) {
  var c = a.cell, b = a.editor;
  if (0 == !!c) {
    restoreSelection();
    var d = getFirstRange().range;
    d && (c = GetTDTHCell(d.startContainer))
  }
  c && (a = "string" == typeof a.mode ? a.mode : "", "" == a
  && (a = "selectCell"), a = a.replace("select",
      "select_"), a = a.toLowerCase(), ClearDraggingTableCellSelected(), "select_clear"
  != a && command_TableSelect("", b, a, c))
}

function replaceFontTagToSpan(a, c) {
  if ("1" == a._config.compatibility.fontTagToSpan) {
    var b = c ? c : a._DOC;
    try {
      for (var d = b.getElementsByTagName("font"), e = b = "", f = "",
          g = d.length - 1; 0 <= g; g--) {
        var h = d[g], m = a._DOC.createElement("span"), b = h.face, e = h.color;
        switch (h.size) {
          case "1":
            f = "8pt";
            break;
          case "2":
            f = "10pt";
            break;
          case "3":
            f = "12pt";
            break;
          case "4":
            f = "14pt";
            break;
          case "5":
            f = "18pt";
            break;
          case "6":
            f = "24pt";
            break;
          case "7":
            f = "36pt";
            break;
          default:
            f = h.size
        }
        b && "" != b && (m.style.fontFamily = b);
        e && "" != e && (m.style.color = e);
        f &&
        "" != f && (m.style.fontSize = f);
        m.style.cssText = KEDITORTOP.RAONKEDITOR.browser.ie && 8
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion ? m.style.cssText + ("; "
            + h.style.cssText) : m.style.cssText + h.style.cssText;
        for (var q = 0; q < h.attributes.length; q++) {
          var t = h.attributes[q];
          switch (t.name) {
            case "face":
            case "color":
            case "size":
            case "style":
              break;
            default:
              h.getAttribute(t.name) && "" != h.getAttribute(t.name)
              && m.setAttribute(t.name, t.value)
          }
        }
        for (h.parentNode.insertBefore(m, h); h.hasChildNodes();) {
          m.appendChild(
              h.firstChild ? h.firstChild :
                  h.childNodes[0]);
        }
        h.parentNode.removeChild(h)
      }
    } catch (u) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(u)
    }
  }
};

function command_bold(a, c) {
  keditor_src_init(c._EDITOR.design);
  var b = {document: _iframeDoc, styleWithCss: !1, tagName: "strong"};
  restoreSelection();
  setFocusToBody();
  var d = getFirstRange();
  DoExecuteCommand(d.sel, d.range, "bold", b)
}

function command_italic(a, c) {
  keditor_src_init(c._EDITOR.design);
  var b = {document: _iframeDoc, styleWithCss: !1, tagName: "i"};
  restoreSelection();
  setFocusToBody();
  var d = getFirstRange();
  DoExecuteCommand(d.sel, d.range, "italic", b)
}

function command_formatting(a, c, b) {
  keditor_src_init(c);
  b.toLowerCase();
  restoreSelection();
  setFocusToBody();
  a = getFirstRange();
  c = a.range;
  var d = !1;
  if (0 == c.collapsed) {
    var e = c.endContainer;
    if (0 == (3 == c.startContainer.nodeType && 3 == e.nodeType)) {
      var d = !0, e = ["body", "td", "th", "div"],
          f = "p table h1 h2 h3 h4 h5 h6".split(" ");
      makeRangeSelectionMarkInDesign();
      var g = _iframeDoc.body.getElementsByTagName("kmark");
      if (g) {
        var h = getFirstRange().range;
        c.setStartBefore(g[0]);
        c.setEndBefore(g[0]);
        var m = c.startContainer;
        if (1 ==
            m.nodeType) {
          var q = m.tagName.toLowerCase(), m = null;
          try {
            -1 < e.indexOf(q) ? m = u.childNodes[c.startOffset + 1] : -1
                < f.indexOf(q) && 1 == c.startOffset && (m = u.nextSibling)
          } catch (t) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode && console.log(t)
          }
          m ? (u = _iframeDoc.createElement(
                  "span"), u.id = "ke_temp_start_span", u.innerHTML = "&nbsp;", m.appendChild(
                  u), c.setStart(u, 0), c.setEnd(h.endContainer,
                  h.endOffset), a.sel.removeAllRanges(), a.sel.addRange(c))
              : (a.sel.removeAllRanges(), a.sel.addRange(
                  h), c = getFirstRange().range)
        }
        c.setStartBefore(g[1]);
        c.setEndBefore(g[1]);
        var u = c.endContainer;
        if (1 == u.nodeType) {
          q = u.tagName.toLowerCase();
          m = null;
          try {
            -1 < e.indexOf(q) ? m = u.childNodes[c.endOffset - 1] : -1
                < f.indexOf(q) && 0 == c.endOffset && (m = u.previousSibling)
          } catch (v) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode && console.log(v)
          }
          m ? (u = _iframeDoc.createElement(
                  "span"), u.id = "ke_temp_end_span", u.innerHTML = "&nbsp;", m.appendChild(
                  u), c.setStart(h.startContainer, h.startOffset), c.setEnd(u,
                  0), a.sel.removeAllRanges(), a.sel.addRange(c))
              : (a.sel.removeAllRanges(),
                  a.sel.addRange(h), c = getFirstRange().range)
        }
      }
    }
  }
  "" == b ? DoExecuteCommandFormatting(c, "p", !1) : DoExecuteCommandFormatting(
      c, b, !0);
  d && (removeKMarkInFrame(), (u = _iframeDoc.getElementById(
      "ke_temp_start_span")) && u.parentNode.removeChild(
      u), (u = _iframeDoc.getElementById("ke_temp_end_span"))
  && u.parentNode.removeChild(u))
}

function command_underline(a, c) {
  keditor_src_init(c._EDITOR.design);
  var b = {document: _iframeDoc, styleWithCss: !1, tagName: "u"};
  restoreSelection();
  setFocusToBody();
  var d = getFirstRange();
  DoExecuteCommand(d.sel, d.range, "underline", b)
}

function command_strikeThrough(a, c) {
  keditor_src_init(c._EDITOR.design);
  var b = {document: _iframeDoc, styleWithCss: !1, tagName: "strike"};
  restoreSelection();
  setFocusToBody();
  var d = getFirstRange();
  DoExecuteCommand(d.sel, d.range, "strikeThrough", b)
}

function command_superscript(a, c) {
  keditor_src_init(c._EDITOR.design);
  var b = {document: _iframeDoc, styleWithCss: !1, tagName: "sup"};
  restoreSelection();
  setFocusToBody();
  var d = getFirstRange();
  DoExecuteCommand(d.sel, d.range, "superscript", b)
}

function command_subscript(a, c) {
  keditor_src_init(c._EDITOR.design);
  var b = {document: _iframeDoc, styleWithCss: !1, tagName: "sub"};
  restoreSelection();
  setFocusToBody();
  var d = getFirstRange();
  DoExecuteCommand(d.sel, d.range, "subscript", b)
}

function command_selectAll(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  _iframeDoc.execCommand("selectAll", !1, null);
  c._iconEnable("selectArea")
}

function command_align(a, c, b, d, e) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var f = getFirstRange();
  a = f.range;
  try {
    KEDITORTOP.G_CURRKEDITOR.beforeOffset = [], KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
        a.startOffset), KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
        a.endOffset), 3 == a.startContainer.nodeType
        ? KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
            a.startContainer.parentNode)
        : KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(a.startContainer), 3
    == a.endContainer.nodeType ? KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
            a.endContainer.parentNode) :
        (KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(a.endContainer), 1
        == a.endOffset
        && (KEDITORTOP.G_CURRKEDITOR.beforeOffset[1] = (a.endContainer.innerText
            || a.endContainer.textContent).length)), KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
        a.toString().length)
  } catch (g) {
    KEDITORTOP.G_CURRKEDITOR.beforeOffset = null
  }
  var h = null;
  if (e && "table" == e.tagName.toLowerCase()) {
    h = e;
  } else if (e && "img"
      == e.tagName.toLowerCase()) {
    if (c = GetParentbyTagName(e, "figure")) {
      if ("justify" == b || "center" == b) {
        b = "";
      }
      "cssFloat" in c.style ? c.style.cssFloat =
          b : c.style.styleFloat = b;
      rangy.getSelection(_iframeWin).removeAllRanges();
      (b = c.getElementsByTagName("figcaption")) && b[0] && doSetCaretPosition(
          b[0], 0);
      KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
      KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
      e
      && (KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem = e, KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.setResizeHandle(
          null, !1, null));
      setMenuIconRealable(getMyElementNode(e));
      return
    }
  } else {
    h = getSelectionTable(c);
  }
  if (h) {
    0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount &&
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    if ("0" == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_DeleteTableAlign
        || "0" == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO) {
      "justify"
      == b || "left" == b && "2"
      == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO
          ? h.removeAttribute(
              "align") : h.setAttribute("align", b);
    }
    try {
      var m = _iframeDoc.body.createControlRange();
      m.add(h);
      m.select()
    } catch (q) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(q)
    }
    setMenuIconRealable(h);
    KEDITORTOP.G_CURRKEDITOR._iconEnable("focusTable",
        h);
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
    e
    && (KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem = e, KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.setResizeHandle(
        null, !1, null))
  } else {
    if (void 0 == a) {
      "left" == b ? b = "justifyLeft" : "right" == b
          ? b = "justifyRight" : "center" == b ? b = "justifyCenter" : "justify"
              == b && (b = "justifyFull"), DoExecuteCommand2(f.sel, a, b,
          d);
    } else {
      (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
          || KEDITORTOP.G_CURRKEDITOR._formatPainterList &&
          "1" != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) && 0
      < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
      && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
      e = "p li dt dd h1 h2 h3 h4 h5 h6 pre address div".split(" ");
      m = e.length;
      c = GetTableSelectionCells();
      if (0 == c.length) {
        if (null != a.startContainer.previousSibling && "HEAD"
            == a.startContainer.previousSibling.tagName && null
            == a.endContainer.nextSibling) {
          for (var t = 0; t < m;
              t++) {
            for (f = _iframeDoc.body.getElementsByTagName(
                e[t]), h = f.length, d = 0; d < h; d++) {
              ""
              != f[d].style.layoutGridMode &&
              (f[d].style.layoutGridMode = "none"), f[d].style.textAlign = b;
            }
          }
          m = _iframeDoc.body.getElementsByTagName("table");
          f = m.length;
          for (t = 0; t < f; t++) {
            if ("0"
                == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_DeleteTableAlign
                || "0"
                == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO) {
              "justify"
              == b || "left" == b && "2"
              == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO
                  ? m[t].removeAttribute("align") : m[t].setAttribute("align",
                      b);
            }
            var h = m[t].rows, u = h.length;
            for (d = 0; d < u; d++) {
              c = h[d].cells;
              a = c.length;
              for (var v = 0; v < a; v++) {
                setBlockTag(c[v].childNodes,
                    e, "align", b)
              }
            }
          }
          setBlockTag(_iframeDoc.body.childNodes, e, "align", b);
          v = _iframeDoc.body.getElementsByTagName("div");
          f = v.length;
          for (d = 0; d < f; d++) {
            setBlockTag(v[d].childNodes, e, "align", b)
          }
        } else {
          c = !1;
          a && (t = GetTDTHCell(a.startContainer), d = GetTDTHCell(
              a.endContainer), f = a.commonAncestorContainer, null != t && null
          != d && null != f && t == d == f && (v = GetParentbyTagName(t,
              "table"), c = !0));
          c ? f = getElementsFromSelection(t.nodeName.toString().toLowerCase())
              : 1 == a.collapsed ? (d = a.startContainer, f = [d])
                  : f = a.getNodes();
          h = f.length;
          if (2 >= h) {
            for (t =
                0; t < h; t++) {
              d = f[t], 3 == d.nodeType && f.push(d.parentNode);
            }
          }
          if (!f || 1 == f.length && -1 < "body,td,th".indexOf(
              f[0].nodeName.toLowerCase())) {
            f = getNodesInRange(a);
          }
          var h = f.length, u = a.startOffset, w = a.endOffset;
          1 == a.collapsed && 0 == a.getNodes().length && a.pasteHtml(
              '<span id="_kEditorPosition">&nbsp;</span>');
          for (var x = 0; x < h; x++) {
            if (1 == f[x].nodeType
                && (t = f[x].tagName.toLowerCase(), "0"
                != KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_DeleteTableAlign
                && "0" != KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO
                || 0
                != a.collapsed ||
                0 == a.getNodes().length || "table" != t || c && v == f[x]
                || ("justify" == b || "left" == b && "2"
                == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO
                    ? f[x].removeAttribute("align") : f[x].setAttribute("align",
                        b)), -1 < e.indexOf(t))) {
              for (t = 0; t < m; t++) {
                var y = f[x].getElementsByTagName(e[t]), z = y.length;
                for (d = 0; d < z; d++) {
                  "" != y[d].style.layoutGridMode
                  && (y[d].style.layoutGridMode = "none"), y[d].style.textAlign = b
                }
              }
              "" != f[x].style.layoutGridMode
              && (f[x].style.layoutGridMode = "none");
              f[x].style.textAlign = b
            }
          }
          var A;
          0 == a.toString().length && 1 ==
          a.getNodes().length && (A = a.getNodes()[0], f.push(a.getNodes()[0]));
          m = 3 == f[0].nodeType;
          setBlockTag(f, e, "align", b);
          if (m) {
            if (1 == a.collapsed) {
              try {
                a.setEnd(f[0], w)
              } catch (B) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(B)
              }
            }
            a.setStart(f[0], u);
            rangy.getSelection(_iframeWin).removeAllRanges();
            rangy.getSelection(_iframeWin).addRange(a)
          }
        }
        (b = _iframeDoc.getElementById("_kEditorPosition"))
            ? (doSetCaretPosition(b, 1), b.parentNode.removeChild(b)) : A
            && (b = getFirstRange().range, getFirstRange().sel.removeAllRanges(),
                b.selectNode(A), getFirstRange().sel.addRange(b));
        f = getFirstRange();
        a = f.range;
        setMenuIconRealable(getMyElementNode(a.startContainer))
      } else {
        7 == KEDITORTOP.RAONKEDITOR.browser.ieVersion && null != ActiveCurrTable
        && 0 == d && (A = !1, "0"
        == KEDITORTOP.G_CURRKEDITOR._config.tableAutoAdjust
        && (KEDITORTOP.G_CURRKEDITOR._config.tableAutoAdjust = "1", A = !0), setAdjustTableWidthHeight(
            ActiveCurrTable), A
        && (KEDITORTOP.G_CURRKEDITOR._config.tableAutoAdjust = "0"));
        a = c.length;
        for (t = 0; t < a; t++) {
          for (d = 0; d < m; d++) {
            for (f = c[t].getElementsByTagName(e[d]),
                h = f.length, v = 0; v < h; v++) {
              "" != f[v].style.layoutGridMode
              && (f[v].style.layoutGridMode = "none"), f[v].style.textAlign = b;
            }
          }
          setBlockTag(c[t].childNodes, e, "align", b);
          v = c[t].getElementsByTagName("div");
          f = v.length;
          for (d = 0; d < f; d++) {
            setBlockTag(v[d].childNodes, e, "align", b);
          }
          A = c[t].getElementsByTagName("table");
          v = A.length;
          for (d = 0; d < v; d++) {
            "justify" == b ? A[d].removeAttribute("align")
                : A[d].setAttribute("align", b)
          }
        }
        !KEDITORTOP.RAONKEDITOR.browser.ie || "td"
        != DrageEndCell.nodeName.toLowerCase() && "th"
        != DrageEndCell.nodeName.toLowerCase() ?
            doSetCaretPosition(DrageEndCell.childNodes[0], 1)
            : (b = getCellLastChildNode(DrageEndCell), doSetCaretPosition(
                b.node, b.position));
        b = getFirstRange().range;
        A = getMyChildElementNode(b.startContainer);
        b.selectNode(A);
        setMenuIconRealable(A);
        _iframeDoc_MouseUpMenu(null, DrageEndCell)
      }
      if (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
          || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
          != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) {
        KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount =
            0
      }
    }
    KEDITORTOP.G_CURRKEDITOR.beforeOffset = null
  }
}

function command_justifyLeft(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  a = getFirstRange();
  DoExecuteCommand2(a.sel, a.range, "justifyLeft", b)
}

function command_justifyCenter(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  a = getFirstRange();
  DoExecuteCommand2(a.sel, a.range, "justifyCenter", b)
}

function command_justifyRight(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  a = getFirstRange();
  DoExecuteCommand2(a.sel, a.range, "justifyRight", b)
}

function command_justifyFull(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  a = getFirstRange();
  DoExecuteCommand2(a.sel, a.range, "justifyFull", b)
}

function command_indent(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var b = getFirstRange().range,
      d = parseIntOr0(c._config.inoutdentDefaultSize);
  0 == d && (d = 40);
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  var e = "p li dt dd h1 h2 h3 h4 h5 h6 pre address".split(" "), f, g;
  f = GetTableSelectionCells();
  var h = f.length;
  if (0 < h) {
    var m = [];
    g = e.length;
    for (var q = 0; q < h; q++) {
      for (var t = 0; t < g; t++) {
        var u = f[q].getElementsByTagName(e[t]);
        0 < u.length &&
        (m = htmlCollectionToArray(m, u))
      }
    }
    f = m
  } else {
    f = 1 == b.collapsed ? [b.startContainer] : b.getNodes();
    if (1 == f.length) {
      if (h = f[0], !(h.tagName && -1 < e.indexOf(
          h.tagName.toLowerCase()))) {
        for (;
            h = h.parentNode, !h.tagName || "body"
            != h.tagName.toLowerCase();) {
          if (h.tagName && -1 < e.indexOf(
              h.tagName.toLowerCase())) {
            f = [h];
            break
          }
        }
      }
    } else {
      h = f[0];
      m = f[f.length - 1];
      g = h;
      for (q = m; !g.tagName || "body" != g.tagName.toLowerCase();) {
        if (g.tagName && -1 < e.indexOf(g.tagName.toLowerCase())) {
          h = g;
          break
        }
        g = g.parentNode
      }
      for (; !q.tagName || "body" != q.tagName.toLowerCase();) {
        if (q.tagName &&
            -1 < e.indexOf(q.tagName.toLowerCase())) {
          m = q;
          break
        }
        q = q.parentNode
      }
      h == m && (f = [h])
    }
    null != b.startContainer.previousSibling && "HEAD"
    == b.startContainer.previousSibling.tagName && null
    == b.endContainer.nextSibling && (f = b.getNodes());
    0 == b.collapsed && 1 < f.length && 1 == f[0].nodeType && "P"
    == f[0].tagName && (h = f[0].innerText || f[0].textContent, 3
    == b.startContainer.nodeType && null == b.startContainer.nextSibling
    && (h = b.startContainer.nodeValue), m = !1, h.length == b.startOffset
    && (m = !0), !m && KEDITORTOP.RAONKEDITOR.browser.ie && 8
    == KEDITORTOP.RAONKEDITOR.browser.ieVersion &&
    2 <= f.length && 0 < b.startOffset && 3 != f[1].nodeType && 1
    == b.startContainer.nodeType && (m = !0), m && (b.setStartAfter(
        f[0]), f = b.getNodes()))
  }
  g = f.length;
  h = b.startOffset;
  m = b.endOffset;
  for (q = 0; q < g; q++) {
    if (null != f[q].parentNode && 1 == f[q].nodeType
        && f[q].tagName && "body" != f[q].tagName.toLowerCase()) {
      if ("table"
          == f[q].tagName.toLowerCase()) {
        if ("1" != c._config.allowInoutdentText) {
          var v = parseIntOr0(f[q].style.marginLeft);
          f[q].style.marginLeft = v + d + "px"
        }
      } else if (f[q].tagName && -1 < e.indexOf(f[q].tagName.toLowerCase())) {
        var w = function (a) {
              return a =
                  KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(a)
            }, x = KEDITORTOP.RAONKEDITOR.util.parseFloatOr0(
                w(f[q].style.paddingLeft)),
            v = KEDITORTOP.RAONKEDITOR.util.parseFloatOr0(
                w(f[q].style.marginLeft)),
            t = KEDITORTOP.RAONKEDITOR.util.parseFloatOr0(
                w(f[q].style.marginRight)),
            u = KEDITORTOP.RAONKEDITOR.util.parseFloatOr0(
                w(f[q].style.textIndent)),
            w = KEDITORTOP.RAONKEDITOR.util.parseFloatOr0(
                w(_iframeDoc.body.style.width));
        0 < x ? (tempUnit = "px", 0 < v && (x += v), v = 0, "1"
        == c._config.autoBodyFit ? (0 == w && (w = getCurrEditorWidth()),
                v = 0 < u ? x + d + u > w - t ? x : x + d : x + d > w - t ? x : x
                    + d)
            : v = x + d, f[q].style.paddingLeft = "", f[q].style.marginLeft = v
            + ("" == tempUnit ? "px" : tempUnit)) : (tempUnit = "px", x = 0, "1"
        == c._config.autoBodyFit ? (0 == w && (w = getCurrEditorWidth()), x = 0
        < u
            ? v + d + u > w - t ? v : v + d : v + d > w - t ? v : v + d) : x = v
            + d, f[q].style.marginLeft = x + ("" == tempUnit ? "px" : tempUnit))
      }
    }
  }
  g = f[0] && f[0].nodeType ? 3 == f[0].nodeType : !1;
  setBlockTag(f, e, "indent", d);
  g && (1 == b.collapsed && b.setEnd(f[0], m), b.setStart(f[0],
      h), rangy.getSelection(_iframeWin).removeAllRanges(), rangy.getSelection(
      _iframeWin).addRange(b));
  G_Ruler && "2" == KEDITORTOP.G_CURRKEDITOR._config.ruler.mode
  && G_Ruler.SetRulerPosition();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_outdent(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var b = getFirstRange().range,
      d = parseIntOr0(c._config.inoutdentDefaultSize);
  0 == d && (d = 40);
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  var e = "p li dt dd h1 h2 h3 h4 h5 h6 pre address".split(" "), f;
  f = GetTableSelectionCells();
  var g = f.length;
  if (0 < g) {
    for (var h = [], m = e.length, q = 0; q < g; q++) {
      for (var t = 0; t < m;
          t++) {
        var u = f[q].getElementsByTagName(e[t]);
        0 < u.length &&
        (h = htmlCollectionToArray(h, u))
      }
    }
    f = h
  } else {
    f = 1 == b.collapsed ? [b.startContainer] : b.getNodes();
    if (1 == f.length) {
      if (g = f[0], !(g.tagName && -1 < e.indexOf(
          g.tagName.toLowerCase()))) {
        for (;
            g = g.parentNode, !g.tagName || "body"
            != g.tagName.toLowerCase();) {
          if (g.tagName && -1 < e.indexOf(
              g.tagName.toLowerCase())) {
            f = [g];
            break
          }
        }
      }
    } else {
      g = f[0];
      h = f[f.length - 1];
      m = g;
      for (q = h; !m.tagName || "body" != m.tagName.toLowerCase();) {
        if (m.tagName && -1 < e.indexOf(m.tagName.toLowerCase())) {
          g = m;
          break
        }
        m = m.parentNode
      }
      for (; !q.tagName || "body" != q.tagName.toLowerCase();) {
        if (q.tagName &&
            -1 < e.indexOf(q.tagName.toLowerCase())) {
          h = q;
          break
        }
        q = q.parentNode
      }
      g == h && (f = [g])
    }
    null != b.startContainer.previousSibling && "HEAD"
    == b.startContainer.previousSibling.tagName && null
    == b.endContainer.nextSibling && (f = b.getNodes())
  }
  e = f.length;
  g = b.startOffset;
  h = b.endOffset;
  for (m = 0; m < e; m++) {
    null != f[m].parentNode && 1 == f[m].nodeType
    && f[m].tagName && "body" != f[m].tagName.toLowerCase() && ("table"
    == f[m].tagName.toLowerCase() ? "1" != c._config.allowInoutdentText
        && (q = parseIntOr0(f[m].style.marginLeft), t = 0 > q - d ? 0 : q
            - d, f[m].style.marginLeft =
            t + "px") : (u = function (a) {
      return a = KEDITORTOP.RAONKEDITOR.util.replacePtOrCmToPx(a)
    }, t = KEDITORTOP.RAONKEDITOR.util.parseFloatOr0(
        u(f[m].style.paddingLeft)), q = KEDITORTOP.RAONKEDITOR.util.parseFloatOr0(
        u(f[m].style.marginLeft)), u = KEDITORTOP.RAONKEDITOR.util.parseFloatOr0(
        u(f[m].style.textIndent)), 0 < t ? (tempUnit = "px", 0 < q
        && (t += q), q = 0, 0 != u ? 0 < u ? 0 > t - d
            ? (q = 0, f[m].style.textIndent = u + t - d) : q = t - d : 0 > u
            && (q = 0
            > t - d + u ? -u : t - d) : q = 0 > t - d ? 0 : t
            - d, f[m].style.paddingLeft = "", f[m].style.marginLeft = q + (""
        == tempUnit ? "px" : tempUnit)) :
        (tempUnit = "px", t = 0, 0 != u ? 0 < u ? 0 > q - d
            ? (t = 0, f[m].style.textIndent = u + q - d) : t = q - d : 0 > u
            && (t = 0 > q - d + u ? -u : q - d) : t = 0 > q - d ? 0 : q
            - d, f[m].style.marginLeft = t + ("" == tempUnit ? "px"
            : tempUnit))));
  }
  3 == f[0].nodeType && (1 == b.collapsed && b.setEnd(f[0], h), b.setStart(f[0],
      g), rangy.getSelection(_iframeWin).removeAllRanges(), rangy.getSelection(
      _iframeWin).addRange(b));
  G_Ruler && "2" == KEDITORTOP.G_CURRKEDITOR._config.ruler.mode
  && G_Ruler.SetRulerPosition();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount =
      0
}

function command_insertOrderedList(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var b = getFirstRange(), d = b.range, e = getFirstRange().range, f = null;
  e && e.startContainer && (f = getMyElementNode(e.startContainer));
  var g = GetParentbyTagName(f, "ol"), h = GetParentbyTagName(f, "ul");
  g || h ? h ? (h.style.listStyleType = "", DoExecuteCommand2(b.sel, d,
      "insertOrderedList")) : g
      && (g.style.listStyleType = "", DoExecuteCommand2(b.sel, d,
          "insertOrderedList")) : DoExecuteCommand2(b.sel, d,
      "insertOrderedList");
  b =
      getFirstRange().range;
  0 == !!b && (b = e);
  if (f = getMyElementNode(b.startContainer)) {
    if (e = GetParentbyTagName(f,
        "ol")) {
      "" == e.style.listStyleType
      && (e.style.listStyleType = "decimal"), ""
      != c._config.orderListDefaultClass
      && e.setAttribute("class", c._config.orderListDefaultClass);
    }
  }
  e = getNodesInRange(b);
  f = e.length;
  for (d = 0; d < f; d++) {
    "ol" == e[d].nodeName.toLowerCase()
    && (b = e[d].parentNode, "p" == b.nodeName.toLowerCase() && (""
    == e[d].style.fontSize && "" != b.style.fontSize
    && (e[d].style.fontSize = b.style.fontSize), "" == e[d].style.fontFamily &&
    "" != b.style.fontFamily
    && (e[d].style.fontFamily = b.style.fontFamily), b.parentNode.replaceChild(
        e[d],
        b), b = getFirstRange(), b.sel.removeAllRanges(), b.range.selectNodeContents(
        e[d]), b.sel.addRange(b.range)));
  }
  null == g && null == h && setLiStyle();
  removeDivInLiTag();
  G_Ruler && "2" == c._config.ruler.mode && G_Ruler.SetRulerPosition()
}

function command_listDecimal(a, c) {
  keditor_src_init(c._EDITOR.design);
  command_listNumberBullets(a, c, "N", "decimal")
}

function command_listDecimalLeadingZero(a, c) {
  keditor_src_init(c._EDITOR.design);
  command_listNumberBullets(a, c, "N", "decimal-leading-zero")
}

function command_listLowerAlpha(a, c) {
  keditor_src_init(c._EDITOR.design);
  command_listNumberBullets(a, c, "N", "lower-alpha")
}

function command_listLowerGreek(a, c) {
  keditor_src_init(c._EDITOR.design);
  command_listNumberBullets(a, c, "N", "lower-greek")
}

function command_listLowerRoman(a, c) {
  keditor_src_init(c._EDITOR.design);
  command_listNumberBullets(a, c, "N", "lower-roman")
}

function command_listUpperAlpha(a, c) {
  keditor_src_init(c._EDITOR.design);
  command_listNumberBullets(a, c, "N", "upper-alpha")
}

function command_listUpperRoman(a, c) {
  keditor_src_init(c._EDITOR.design);
  command_listNumberBullets(a, c, "N", "upper-roman")
}

function command_insertUnOrderedList(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var b = getFirstRange(), d = b.range, e = getFirstRange().range, f = null;
  e && e.startContainer && (f = getMyElementNode(e.startContainer));
  var g = GetParentbyTagName(f, "ol"), h = GetParentbyTagName(f, "ul");
  g || h ? g ? (g.style.listStyleType = "", DoExecuteCommand2(b.sel, d,
      "insertUnOrderedList")) : h
      && (h.style.listStyleType = "", DoExecuteCommand2(b.sel, d,
          "insertUnOrderedList")) : DoExecuteCommand2(b.sel, d,
      "insertUnOrderedList");
  b = getFirstRange().range;
  0 == !!b && (b = e);
  if (f = getMyElementNode(b.startContainer)) {
    (e = GetParentbyTagName(f, "ul"))
    && "" == e.style.listStyleType && (e.style.listStyleType = "disc"), ""
    != c._config.unOrderListDefaultClass && e.setAttribute("class",
        c._config.unOrderListDefaultClass);
  }
  e = getNodesInRange(b);
  f = e.length;
  for (d = 0; d < f; d++) {
    "ul" == e[d].nodeName.toLowerCase()
    && (b = e[d].parentNode, "p" == b.nodeName.toLowerCase() && (""
    == e[d].style.fontSize && "" != b.style.fontSize
    && (e[d].style.fontSize = b.style.fontSize), "" == e[d].style.fontFamily &&
    "" != b.style.fontFamily
    && (e[d].style.fontFamily = b.style.fontFamily), b.parentNode.replaceChild(
        e[d],
        b), b = getFirstRange(), b.sel.removeAllRanges(), b.range.selectNodeContents(
        e[d]), b.sel.addRange(b.range)));
  }
  null == g && null == h && setLiStyle();
  removeDivInLiTag();
  G_Ruler && "2" == c._config.ruler.mode && G_Ruler.SetRulerPosition()
}

function command_listDisc(a, c) {
  keditor_src_init(c._EDITOR.design);
  command_listNumberBullets(a, c, "B", "disc")
}

function command_listCircle(a, c) {
  keditor_src_init(c._EDITOR.design);
  command_listNumberBullets(a, c, "B", "circle")
}

function command_listSquare(a, c) {
  keditor_src_init(c._EDITOR.design);
  command_listNumberBullets(a, c, "B", "square")
}

function command_listNone_N(a, c) {
  keditor_src_init(c._EDITOR.design);
  command_listNumberBullets(a, c, "N", "none")
}

function command_listNone_B(a, c) {
  keditor_src_init(c._EDITOR.design);
  command_listNumberBullets(a, c, "B", "none")
}

function command_removeFormat(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var b = getFirstRange();
  DoExecuteCommand2(b.sel, b.range, "removeFormat")
}

function command_removeCss(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var b = getFirstRange().range;
  try {
    var d = getElementsFromSelection(), e = d.length;
    if (1 == b.collapsed) {
      var f = GetTableSelectionCells(), g = f.length;
      if (0 == g) {
        return !1;
      }
      1 != isApplyFormat && ClearDraggingTableCellSelected();
      for (var d = [], b = null, h = 0, m = 0; m < g; m++) {
        d.push(f[m]);
        for (var b = f[m].getElementsByTagName("*"), h = b.length, q = 0; q < h;
            q++) {
          d.push(b[q])
        }
      }
      e = d.length
    } else {
      f = "";
      g = !1;
      for (m = 0; m < e; m++) {
        f = d[m].nodeName, "TABLE" ==
        f && (g = !0);
      }
      g && ClearDraggingTableAllTable()
    }
    (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
        != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) && 0
    < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    for (var f = null, t, m = 0; m < e;
        m++) {
      if (f = d[m], t = f.tagName.toLowerCase(), "table" == t || "td"
      == t || "th" == t) {
        if (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
            || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
            != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) {
          var u =
                  f.style.width, v = f.style.height, w = f.style.border,
              x = f.style.borderBottom, y = f.style.borderTop,
              z = f.style.borderLeft, A = f.style.borderRight,
              B = f.style.borderWidth, C = f.style.borderStyle,
              D = f.style.borderColor, g = "";
          "table" == t && (g = f.style.fontSize);
          removeAttribute(f, "align");
          removeAttribute(f, "style");
          removeAttribute(f, "className");
          removeAttribute(f, "bgcolor");
          "" != g && (f.style.fontSize = g);
          "" != u && (f.style.width = u);
          "" != v && (f.style.height = v);
          "" != w && (f.style.border = w);
          "" != B && (f.style.borderWidth = B);
          "" != C && (f.style.borderStyle =
              C);
          "" != D && (f.style.borderColor = D);
          "" != x && (f.style.borderBottom = x);
          "" != y && (f.style.borderTop = y);
          "" != z && (f.style.borderLeft = z);
          "" != A && (f.style.borderRight = A);
          "table" == t && (f.style.borderCollapse = "collapse", null
          != f.getAttribute("cellpadding") && "0" != f.getAttribute(
              "cellpadding")
          || f.setAttribute("cellPadding", "1"))
        }
      } else {
        var g = "style align background cellOrgBgColor border borderColor color face size height width hspace vspace valign class".split(
            " "), H = g.length;
        if (-1
            < ",a,p,span,div,address,b,dd,dl,dt,font,i,li,label,ol,ul,strike,strong,sub,sup,u,".indexOf(
                "," +
                t + ",")) {
          for (b = 0; b < H; b++) {
            removeAttribute(f, g[b])
          }
        }
      }
    }
    var G = RAONK_EDITOR.HTMLParser.makeMap("span,font");
    KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
    == KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying
    && (G = RAONK_EDITOR.HTMLParser.makeMap(
        "span,font,b,strong,i,em,u,strike,s,sub,sup"));
    for (m = 0; m < e; m++) {
      f = d[m], t = f.tagName.toLowerCase(), G[t]
      && "BODY" != f.parentNode.tagName && f.removeNode();
    }
    if (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
        != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) {
      KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(),
          KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
    }
  } catch (I) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(I)
  }
}

function command_removeCss2(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  a = getFirstRange().range;
  if (1 == a.collapsed) {
    try {
      var d = getElementsFromSelection(), e = d.length;
      if (1 == a.collapsed) {
        var f = GetTableSelectionCells(), g = f.length;
        if (0 == g) {
          return !1;
        }
        d = [];
        b = null;
        for (var h = a = 0; h < g; h++) {
          d.push(f[h]);
          b = f[h].getElementsByTagName("*");
          a = b.length;
          for (var m = 0; m < a; m++) {
            d.push(b[m])
          }
        }
        e = d.length
      }
      for (var f = null, q, h = 0; h < e;
          h++) {
        if (f = d[h], q = f.tagName.toLowerCase(), "table" != q && "td"
        != q && "th" !=
        q && "tr" != q && "tbody" != q && "body" != q && "img" != q) {
          for (var t = f.attributes.length, g = [], m = 0; m < t; m++) {
            g.push(
                f.attributes[m].nodeName);
          }
          for (b = 0; b < t; b++) {
            removeAttribute(f, g[b])
          }
        }
      }
      var u = RAONK_EDITOR.HTMLParser.makeMap("span,font");
      KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
      == KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying
      && (u = RAONK_EDITOR.HTMLParser.makeMap(
          "span,font,b,strong,i,em,u,strike,s,sub,sup"));
      for (h = 0; h < e; h++) {
        f = d[h], q = f.tagName.toLowerCase(), u[q]
        && "BODY" != f.parentNode.tagName && f.removeNode()
      }
    } catch (v) {
      KEDITORTOP &&
      KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(v)
    }
  } else {
    removeCssInSelection(b)
  }
}

function command_copy(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  1 != KEDITORTOP.RAONKEDITOR.browser.gecko && 1
  != KEDITORTOP.RAONKEDITOR.browser.safari ? _iframeDoc.execCommand("copy", !1,
      null) : alert(RAONKEditor_lang.msg.copy)
}

function command_cut(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  1 != KEDITORTOP.RAONKEDITOR.browser.gecko && 1
  != KEDITORTOP.RAONKEDITOR.browser.safari ? (0
      < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
      && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), _iframeDoc.execCommand(
          "cut", !1,
          null), KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0)
      : alert(RAONKEditor_lang.msg.cut)
}

function command_pastehtml(a, c, b, d) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  "1" == c._config.useKManager && 0 == c.setTextPaste ? agentPaste(b)
      : KEDITORTOP.RAONKEDITOR.browser.ie && 11
      >= KEDITORTOP.RAONKEDITOR.browser.ieVersion ? (0 < c.UndoManager.charCount
          && c.UndoManager.putUndo(), setPasteBin(), c.isStopScroll = !0, document.execCommand(
              "paste", !1, null), fn_PasteIE(), setTimeout(function () {
            c.isStopScroll = !1
          }, 1), c.UndoManager.putUndo(), c.UndoManager.charCount = 0)
          : _iframeDoc.queryCommandState("paste") ?
              (0 < c.UndoManager.charCount
              && c.UndoManager.putUndo(), _iframeDoc.execCommand("paste", !1,
                  null), c.UndoManager.putUndo(), c.UndoManager.charCount = 0) : "1"
              == c._config.usePasteToolbarAndContext && accessNavigatorClipboard
                  ? (KEDITORTOP.G_CURRKEDITOR.html5PasteImageType = "", "1" == b
                  && (KEDITORTOP.G_CURRKEDITOR.html5PasteImageType = "usePasteToImage"), accessNavigatorClipboard().then(
                      function (a) {
                        a.error && (2 == a.error ? alert(
                                RAONKEditor_lang.paste_dialog.permissionDenied)
                            : c._editorCommands(c.ID, "paste_dialog"))
                      })) : c._editorCommands(c.ID,
                      "paste_dialog")
}

function fn_command_pasteHtml_htmlTagRevision_After(a, c) {
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
  && destoryWebWorkerVar();
  "undefined" == typeof c && (c = KEDITORTOP.G_CURRKEDITOR);
  a = removeTagStyle(a);
  a = repairPasteTextInCell(a);
  0 < a.length ? (0 < c.UndoManager.charCount
  && (c.UndoManager.putUndo(), c._iconEnable("")), "1"
  == c._config.useHtmlProcessByWorker
      ? (a = KEDITORTOP.RAONKEDITOR.util.officeCleanByDom(a,
          !0), showProcessingBackground(), fn_processHtmlWorker({
        editorBrowser: {
          ie: KEDITORTOP.RAONKEDITOR.browser.ie,
          ieVersion: KEDITORTOP.RAONKEDITOR.browser.ieVersion,
          gecko: KEDITORTOP.RAONKEDITOR.browser.gecko
        },
        editorConfig: c._config,
        callFn: "KEDITORTOP.RAONKEDITOR.util.officeClean",
        callFnParam: [a, !0, void 0, c.agentPasteFormatType],
        callBackFn: fn_command_pasteHtml_officeClean_After
      })) : (a = KEDITORTOP.RAONKEDITOR.util.officeClean(a,
          !0), fn_command_pasteHtml_officeClean_After(a, c))) : "1"
      == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
      && hideProcessingBackground()
}

function fn_command_pasteHtml_officeClean_After(a, c) {
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
  && destoryWebWorkerVar();
  "undefined" == typeof c && (c = KEDITORTOP.G_CURRKEDITOR);
  "1" == c._config.tableAutoAdjustInPaste && /<table/i.test(a)
  && (a = command_AdjustTableAndCellWidth(c.ID, c,
      {type: "paste", htmlData: a}));
  a = OfficePasteClean(a);
  a = KEDITORTOP.RAONKEDITOR.util.emptyTagRemove(a);
  a = IEPasteRemoveEmptyNodes(a);
  a = KEDITORTOP.RAONKEDITOR.util.htmlRevision(a);
  a = xssReplaceScript(null, a);
  a = removeEditorAttribute(a);
  "1" == c._config.compatibility.dingBatCharPaste && (a = dingBatFont(a, c));
  try {
    if ("function" === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste
        || "function"
        === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste) {
      var b = a;
      try {
        var d = {strHtml: a};
        "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste
            ? b = KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste(
                KEDITORTOP.G_CURRKEDITOR.ID, d) : "function"
            === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste
            && (b = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste(
                KEDITORTOP.G_CURRKEDITOR.ID,
                d))
      } catch (e) {
        b = a
      }
      if (b) {
        a = b;
      } else if (0 == b || "" == b) {
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
        && hideProcessingBackground();
        return
      }
    }
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
  pasteWordCount(a) ? (0 < a.length
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), a = externalPageBreakDataRaplaceInEditor(
      a), -1 < a.indexOf("keditorcustomdata") && (a = checkExistCustomData(
      a)), setTimeout(function () {
    pasteHtmlAtCaretHuge(a)
  }, 0), checkPasteImage(a), 0 > a.indexOf("keditorcustomdata") &&
  (ReplaceImageToRealObject(
      !0), KEDITORTOP.G_CURRKEDITOR._editorCustomDataMode = !0, removeAllKEditorCustomData(), ReplaceRealObjectToImage(
      !1)), "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
  && hideProcessingBackground(), onChange(
      {editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0})) : "1"
      == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
      && hideProcessingBackground()
}

function command_pastetext(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var b = document.getElementById("keditor_span_" + a + "text_paste");
  c.setTextPaste
      ? (c.setTextPaste = !1, KEDITORTOP.RAONKEDITOR.util.removeClass(b,
          "selected")) : (c.setTextPaste = !0, b
      && (_className = KEDITORTOP.RAONKEDITOR.util.getClass(
          b), _className += " uebutton_span_enter", KEDITORTOP.RAONKEDITOR.util.setClass(
          b, _className), -1 < b.className.indexOf("uebutton_type")
          ? b.style.backgroundImage = "url(" + c._config.webPath.image +
              "skin/" + c._config.style.skinName + "/form_skinback_release.gif)"
          : KEDITORTOP.RAONKEDITOR.util.addClass(b, "selected")))
}

function getPageBreakOuterHTML() {
  var a;
  a = '<div class="keditor_Page_Break" style="page-break-after:always; display:block;" contentEditable="false">'
      + ('<span style="display:none;">' + RAONKEditor_lang.icon.pagebreak
          + "</span>");
  return a + "</div>"
}

function command_pagebreak(a, c) {
  try {
    keditor_src_init(c._EDITOR.design);
    restoreSelection();
    setFocusToBody();
    0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    var b = getFirstRange(), d = b.range, e = b.sel, f = function (a, b) {
      var c = a.sel, d = a.range;
      if (KEDITORTOP.RAONKEDITOR.browser.ie) {
        c.removeAllRanges(), d.setStartBefore(
            b), d.setEndBefore(b);
      } else {
        var e = _iframeDoc.createElement("p");
        e.innerHTML = "<br>";
        b.parentNode.insertBefore(e, b);
        c.removeAllRanges();
        d.setStart(e,
            0);
        d.setEnd(e, 0)
      }
      c.addRange(d)
    }, g = getParentbyTagNameEx(d.startContainer, "td,th");
    if (g) {
      var h = /<table/i.test(g.innerHTML), m = GetParentbyTagName(g, "table"),
          q = null;
      if (q = h ? m : GetParentbyTagName(m.parentNode, "table")) {
        for (; ;) {
          var t = GetParentbyTagName(q.parentNode, "table");
          if (null == t) {
            break;
          } else {
            q = t
          }
        }
        f({sel: e, range: d}, q)
      } else {
        var u = splitTable(g, m);
        if (u.table2) {
          f({sel: e, range: d}, u.table2);
        } else {
          return
        }
      }
    } else {
      0 == d.collapsed ? setRestoreCaretPos(!0) : setRestoreCaretPos(!1);
    }
    var b = getFirstRange(), e = b.sel, v = getPageBreakOuterHTML(),
        v = v.replace(/<div /, '<div id="keditor_page_break" '), b = "";
    KEDITORTOP.RAONKEDITOR.browser.ie && (b = "<p>", 11
    <= KEDITORTOP.RAONKEDITOR.browser.ieVersion ? b += "<br>" : 7
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
        && (b += "&nbsp;"), b += "</p>");
    pasteHtmlAtCaretHuge(v + b, !1, !0, !1, !0);
    var w = _iframeDoc.getElementById("keditor_page_break");
    w.removeAttribute("id");
    var x = GetParentbyTagName(w, "span");
    x && (x.parentNode.insertBefore(w, x), "" == x.innerHTML
    && x.parentNode.removeChild(x));
    v = null;
    try {
      w.nextSibling ? v = w.nextSibling : (v =
          _iframeDoc.createElement(
              "p"), v.innerHTML = !KEDITORTOP.RAONKEDITOR.browser.ie
      || KEDITORTOP.RAONKEDITOR.browser.ie && 11
      <= KEDITORTOP.RAONKEDITOR.browser.ieVersion ? "<br>"
          : "&nbsp;", w.parentNode.appendChild(v)), v && doSetCaretPosition(v,
          0)
    } catch (y) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(y)
    }
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
  } catch (z) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(z)
  }
}

function command_print(a, c) {
  "1" == c._config.useKManager ? KEDITORTOP.RAONKEDITOR.GetHtmlContents({
    type: "htmlexwithdoctype", callback: function (a) {
      a = a.strData;
      if (0 == /<meta\s[^>]*http-equiv="X-UA-Compatible"[^>]*>/i.test(a)) {
        var d;
        d = "edge";
        KEDITORTOP.RAONKEDITOR.browser.ie && 11
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion
        && (d = KEDITORTOP.RAONKEDITOR.browser.ieVersion);
        d = '<meta http-equiv="X-UA-Compatible" content="IE={0}" />'.replace(
            "{0}", d);
        a = a.replace(/<\/head>/i, d + "</head>")
      }
      if (/<div.*class=.*keditor_page_break.*/i.test(a)) {
        d =
            null;
        d = RegExp("<div .*class=keditor_page_break", "gi").test(a) ? RegExp(
            "<div[^>]*class=keditor_page_break*.+?<\\/div>", "gi") : RegExp(
            "<div[^>]*class=[\"']keditor_page_break*.+?<\\/div>", "gi");
        var e = getPageBreakOuterHTML();
        a = a.replace(d, e)
      }
      agentSaveFile(c, "", a, null, !0)
    }, isAuto: !1
  }, a) : (keditor_src_init(c._EDITOR.design), isViewMode(c) || c.setChangeMode(
      "preview"), setTimeout(function () {
    var a, d = "preview";
    isViewMode(c) && (d = "design");
    a = c._EDITOR[d].contentDocument ? c._EDITOR[d].contentDocument
        : c._EDITOR[d].contentWindow.document;
    changeSpanPageBreakProperty(a);
    if (KEDITORTOP.RAONKEDITOR.browser.ie) {
      if (d = a.getElementById(
          "keditorprintpreview")) {
        try {
          d.doPrintPreview(c._config.printHeader, c._config.printFooter, "")
        } catch (e) {
          a.execCommand("print", !1, null)
        }
      } else {
        a.execCommand("print", !1, null);
      }
    } else {
      "none"
      == c._EDITOR[d].style.display && (KEDITORTOP.RAONKEDITOR.browser.chrome
          || KEDITORTOP.RAONKEDITOR.browser.opera)
      && (bChnageDisplay = !0, c._EDITOR[d].style.display = ""), c._EDITOR[d].contentWindow.print();
    }
    isViewMode(c) ? restoreSpanPageBreakProperty(a) :
        c.setChangeMode("design")
  }, 350))
}

function command_saveAs(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  KEDITORTOP.RAONKEDITOR.GetHtmlContents({
    type: "htmlexwithdoctype", callback: function (a) {
      var e = a.strData;
      if ("1"
          == c._config.useKManager) {
        if (b) {
          showProcessingBackground(), a = function (a) {
            "" != a && (c.strOldSaveFileName = a);
            "" != a && void 0 !== a && alert(
                RAONKEditor_lang.msg.save_complete);
            hideProcessingBackground()
          }, agentSaveFile(c, "keditor", e, a);
        } else {
          var f = "",
              f = "" == c.strOldSaveFileName || void 0 == c.strOldSaveFileName
                  ? "keditor" : c.strOldSaveFileName;
          a = function (a) {
            c.strOldSaveFileName =
                a;
            "" != a && void 0 !== a && alert(
                RAONKEditor_lang.msg.save_complete);
            hideProcessingBackground()
          };
          agentSaveFile(c, f, e, a)
        }
      } else {
        var g = function () {
          var a = KEDITORTOP.KEDITORDOC.createElement("form");
          a.id = "keditor_saveFrm";
          a.name = "keditor_saveFrm";
          a.method = "post";
          if ("" != c._config.handlerUrlSave) {
            a.action = c._config.handlerUrlSave;
            var b = KEDITORTOP.KEDITORDOC.createElement("input");
            b.id = "htmlstring";
            b.name = "htmlstring";
            b.value = encodeURIComponent(e)
          } else {
            a.action = c._config.handlerUrl;
            var d;
            d = "" + ("kc" + KEDITORTOP.RAONKSolution.Agent.formfeed +
                "c04" + KEDITORTOP.RAONKSolution.Agent.vertical);
            d += "k01" + KEDITORTOP.RAONKSolution.Agent.formfeed
                + KEDITORTOP.G_CURRKEDITOR._config.security.encryptParam
                + KEDITORTOP.RAONKSolution.Agent.vertical;
            d += "k17" + KEDITORTOP.RAONKSolution.Agent.formfeed
                + c._config.saveFolderNameRule
                + KEDITORTOP.RAONKSolution.Agent.vertical;
            d += "k18" + KEDITORTOP.RAONKSolution.Agent.formfeed + e;
            d = KEDITORTOP.RAONKEDITOR.util.makeEncryptParam(d);
            b = KEDITORTOP.KEDITORDOC.createElement("input");
            b.id = "k00";
            b.name = "k00";
            b.value = d
          }
          a.appendChild(b);
          b = G_FormData.length;
          for (d = 0; d < b; d++) {
            var f = G_FormData[d].form_value, f = "1"
                == KEDITORTOP.G_CURRKEDITOR._config.security.encryptParam
                    ? KEDITORTOP.RAONKEDITOR.util.makeEncryptParam(f)
                    : encodeURIComponent(f),
                g = KEDITORTOP.KEDITORDOC.createElement("input");
            g.type = "hidden";
            g.id = G_FormData[d];
            g.name = G_FormData[d];
            g.value = f;
            a.appendChild(g)
          }
          KEDITORTOP.KEDITORDOC.body.appendChild(a);
          null == KEDITORTOP.KEDITORDOC.getElementById("keditor_saveframe")
          && (b = KEDITORTOP.KEDITORDOC.createElement(
              "iframe"), b.style.display =
              "none", b.id = "keditor_saveframe", b.name = "keditor_saveframe", KEDITORTOP.KEDITORDOC.body.appendChild(
              b));
          a.target = "keditor_saveframe";
          a.submit();
          KEDITORTOP.KEDITORDOC.body.removeChild(a)
        };
        a = function (a) {
          if (a) {
            var b = document.createElement("iframe");
            b.style.display = "none";
            b.id = "saveframe";
            document.body.appendChild(b);
            var c = b.contentWindow.document;
            b.onload = function () {
              setTimeout(function () {
                c.execCommand("SaveAs", !0, "keditor.html");
                b.parentNode.removeChild(b);
                b = null
              }, 10)
            };
            c.open("text/html", "replace");
            c.write(e);
            c.close()
          } else {
            a = document.createElement("a");
            a.setAttribute("href",
                "data:text/html;charset=utf-8," + encodeURIComponent(e));
            a.setAttribute("download", "keditor.html");
            if (document.createEvent) {
              var d = document.createEvent("MouseEvents");
              d.initEvent("click", !0, !0);
              a.dispatchEvent(d)
            } else {
              a.click();
            }
            a = null
          }
        };
        f = function () {
          if (KEDITORTOP.navigator.msSaveOrOpenBlob) {
            var a = new Blob([e]);
            KEDITORTOP.navigator.msSaveOrOpenBlob(a, "keditor.html")
          } else {
            g()
          }
        };
        "1" == c._config.forceSaveAsServer
        || KEDITORTOP.RAONKEDITOR.browser.mobile ?
            g() : KEDITORTOP.RAONKEDITOR.browser.safari ? g()
                : KEDITORTOP.RAONKEDITOR.browser.ie && 11
                < KEDITORTOP.RAONKEDITOR.browser.ieVersion ? f()
                    : KEDITORTOP.RAONKEDITOR.browser.ie ? a(!0) : a(!1)
      }
    }, isAuto: !1
  }, a)
}

function command_undo(a, c) {
  keditor_src_init(c._EDITOR.design);
  0 < c.UndoManager.charCount
  && (c.UndoManager.putUndo(), c.UndoManager.charCount = 0);
  c.UndoManager.execUndo()
}

function command_redo(a, c) {
  keditor_src_init(c._EDITOR.design);
  c.UndoManager.execRedo();
  c.UndoManager.charCount = 0
}

function command_fontsize(a, c, b) {
  keditor_src_init(c);
  a = {document: _iframeDoc, styleWithCss: !1, tagName: "span", fontsize: b};
  restoreSelection();
  setFocusToBody();
  c = getFirstRange();
  DoExecuteCommand3(c.sel, c.range, "fontSize", a, b);
  try {
    b = {style: "fontSize", value: b}, "function"
    === typeof KEDITORTOP.G_CURRKEDITOR._config.event.applyFontStyle
        ? KEDITORTOP.G_CURRKEDITOR._config.event.applyFontStyle(
            KEDITORTOP.G_CURRKEDITOR.ID, b) : "function"
        === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_ApplyFontStyle
        && KEDITORTOP.KEDITORWIN.RAONKEDITOR_ApplyFontStyle(
            KEDITORTOP.G_CURRKEDITOR.ID,
            b)
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
}

function command_fontfamily(a, c, b) {
  keditor_src_init(c);
  a = changeFontFamily(b);
  c = {document: _iframeDoc, styleWithCss: !1, tagName: "span", fontfamily: a};
  restoreSelection();
  setFocusToBody();
  b = getFirstRange();
  DoExecuteCommand3(b.sel, b.range, "fontFamily", c, a);
  try {
    a = {style: "fontFamily", value: a}, "function"
    === typeof KEDITORTOP.G_CURRKEDITOR._config.event.applyFontStyle
        ? KEDITORTOP.G_CURRKEDITOR._config.event.applyFontStyle(
            KEDITORTOP.G_CURRKEDITOR.ID, a) : "function"
        === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_ApplyFontStyle &&
        KEDITORTOP.KEDITORWIN.RAONKEDITOR_ApplyFontStyle(
            KEDITORTOP.G_CURRKEDITOR.ID, a)
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
}

function command_docBGColor(a, c, b) {
  keditor_src_init(c);
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  _iframeDoc.body.style.background = b;
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_fontColor(a, c, b) {
  keditor_src_init(c);
  a = document.getElementById(
      "keditor_em_" + KEDITORTOP.G_CURRKEDITOR.ID + "color_show");
  b ? a.style.backgroundColor = b : b = a.style.backgroundColor;
  "" == b && (b = "#000000");
  a = {document: _iframeDoc, styleWithCss: !1, tagName: "span", fontcolor: b};
  restoreSelection();
  setFocusToBody();
  c = getFirstRange();
  DoExecuteCommand3(c.sel, c.range, "fontcolor", a, b)
}

function command_fontBgColor(a, c, b) {
  keditor_src_init(c);
  c = document.getElementById(
      "keditor_span_" + KEDITORTOP.G_CURRKEDITOR.ID + "font_bg_color");
  b ? (a = b, "black" == a && (a = "#000000"), 0 == a.toLowerCase().indexOf(
          "rgb") && (a = KEDITORTOP.RAONKEDITOR.util.rgb2hex(b)), a = a.replace("#",
          ""), c = c.getElementsByTagName(
          "a")[0], c.style.backgroundPosition = "aa6688" >= a ? "-101px -281px"
          : "-161px -1px", c.style.backgroundColor = b)
      : b = c.style.backgroundColor;
  if (void 0 == b || "" == b) {
    b = "#ffffff";
  }
  a = {
    document: _iframeDoc, styleWithCss: !1, tagName: "span",
    fontcolor: b
  };
  restoreSelection();
  setFocusToBody();
  c = getFirstRange();
  DoExecuteCommand3(c.sel, c.range, "fontbgcolor", a, b)
}

function command_lineHeight(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  a = getFirstRange();
  var d = a.range;
  if (KEDITORTOP.RAONKEDITOR.browser.ie && 11
      >= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
    try {
      if ("BODY" != d.startContainer.tagName && 1 == d.endContainer.nodeType
          && "BODY" == d.endContainer.tagName) {
        var e = d.endContainer.childNodes[d.endOffset];
        d.setEnd(e, e.childNodes.length)
      }
    } catch (f) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(f)
    }
  }
  try {
    KEDITORTOP.G_CURRKEDITOR.beforeOffset =
        [], KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
        d.startOffset), KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
        d.endOffset), 3 == d.startContainer.nodeType
        ? KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
            d.startContainer.parentNode)
        : KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(d.startContainer), 3
    == d.endContainer.nodeType ? KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
            d.endContainer.parentNode)
        : (KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(d.endContainer), 1
        == d.endOffset
        && (KEDITORTOP.G_CURRKEDITOR.beforeOffset[1] = (d.endContainer.innerText
            ||
            d.endContainer.textContent).length)), KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
        d.toString().length)
  } catch (g) {
    KEDITORTOP.G_CURRKEDITOR.beforeOffset = null
  }
  "2" == KEDITORTOP.G_CURRKEDITOR._config.lineHeightMode && -1
  < b.toString().indexOf("%") && (b = parseInt(b, 10) / 100);
  if (void 0 == d) {
    KEDITORTOP.RAONKEDITOR.browser.ie && 8
    < KEDITORTOP.RAONKEDITOR.browser.ieVersion && 11
    >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && b
    == KEDITORTOP.G_CURRKEDITOR._setting.line_height && (b = parseInt(b, 10)
        / 100
        + .01), DoExecuteCommand3(a.sel, d,
        "lineheight", {document: _iframeDoc, styleWithCss: !0, lineheight: b},
        b);
  } else {
    (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
        != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) && 0
    < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    var e = "p span li dt dd h1 h2 h3 h4 h5 h6 pre address".split(" "),
        h = e.length, m, q, t = GetTableSelectionCells();
    if (0 == t.length) {
      if (null != d.startContainer.previousSibling && "HEAD" ==
          d.startContainer.previousSibling.tagName && null
          == d.endContainer.nextSibling) {
        for (a = 0; a < h; a++) {
          for (m = _iframeDoc.body.getElementsByTagName(
              e[a]), q = m.length, c = 0; c < q; c++) {
            "span"
            == m[c].tagName.toLowerCase() ? "" != m[c].style.lineHeight
                && (m[c].style.lineHeight = b) : m[c].style.lineHeight = b;
          }
        }
        h = _iframeDoc.body.getElementsByTagName("table");
        m = h.length;
        for (a = 0; a < m; a++) {
          q = h[a].rows;
          var u = q.length;
          for (c = 0; c < u; c++) {
            for (var t = q[c].cells, d = t.length, v = 0;
                v < d; v++) {
              setBlockTag(t[v].childNodes, e, "lineHeight", b)
            }
          }
        }
        setBlockTag(_iframeDoc.body.childNodes,
            e, "lineHeight", b);
        m = _iframeDoc.body.getElementsByTagName("div");
        q = m.length;
        for (c = 0; c < q; c++) {
          setBlockTag(m[c].childNodes, e, "lineHeight", b)
        }
      } else {
        m = getNodesInRange(d);
        q = m.length;
        1 == d.collapsed && 0 == d.getNodes().length && d.pasteHtml(
            '<span id="_kEditorPosition">&nbsp;</span>');
        for (t = 0; t < q; t++) {
          if (1 == m[t].nodeType
              && (v = m[t].tagName.toLowerCase(), -1 < e.indexOf(v))) {
            if ("div" != v) {
              for (a = 0; a < h; a++) {
                var u = m[t].getElementsByTagName(e[a]), w = u.length;
                for (c = 0; c < w; c++) {
                  "span" == u[c].tagName.toLowerCase() ? ""
                      != u[c].style.lineHeight &&
                      (u[c].style.lineHeight = b) : u[c].style.lineHeight = b
                }
              }
            }
            "span" == v ? "" != m[t].style.lineHeight
                && (m[t].style.lineHeight = b) : m[t].style.lineHeight = b
          }
        }
        var x;
        0 == d.toString().length && 1 == d.getNodes().length
        && (x = d.getNodes()[0], m.push(d.getNodes()[0]));
        setBlockTag(m, e, "lineHeight", b)
      }
      (e = _iframeDoc.getElementById("_kEditorPosition")) ? (doSetCaretPosition(
          e, 1), e.parentNode.removeChild(e)) : x
          && (e = getFirstRange().range, getFirstRange().sel.removeAllRanges(), e.selectNode(
              x), getFirstRange().sel.addRange(e))
    } else {
      for (d = t.length,
          a = 0; a < d; a++) {
        for (c = 0; c < h; c++) {
          for (m = t[a].getElementsByTagName(
              e[c]), q = m.length, v = 0; v < q; v++) {
            "span"
            == m[v].tagName.toLowerCase() ? "" != m[v].style.lineHeight
                && (m[v].style.lineHeight = b) : m[v].style.lineHeight = b;
          }
        }
        setBlockTag(t[a].childNodes, e, "lineHeight", b);
        m = t[a].getElementsByTagName("div");
        q = m.length;
        for (c = 0; c < q; c++) {
          setBlockTag(m[c].childNodes, e, "lineHeight", b)
        }
      }
    }
    if (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
        || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
        != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) {
      KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(),
          KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
    }
    onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0})
  }
  KEDITORTOP.G_CURRKEDITOR.beforeOffset = null;
  try {
    b = {style: "lineHeight", value: b}, "function"
    === typeof KEDITORTOP.G_CURRKEDITOR._config.event.applyFontStyle
        ? KEDITORTOP.G_CURRKEDITOR._config.event.applyFontStyle(
            KEDITORTOP.G_CURRKEDITOR.ID, b) : "function"
        === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_ApplyFontStyle
        && KEDITORTOP.KEDITORWIN.RAONKEDITOR_ApplyFontStyle(
            KEDITORTOP.G_CURRKEDITOR.ID, b)
  } catch (y) {
    KEDITORTOP &&
    KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(y)
  }
}

function command_InsertTablebyRowCol(a, c, b, d) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  c = getFirstRange();
  a = c.range;
  try {
    1 == a.collapsed && setRestoreCaretPos(!1)
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
  c = getCellDefValue();
  a = _iframeDoc.createElement("table");
  var f = KEDITORTOP.RAONKEDITOR.util.getWordBreakStyle(
      KEDITORTOP.G_CURRKEDITOR._config);
  a.style.wordBreak = f;
  var f = 0, g = getFirstRange().range,
      h = getMyElementNode(g.startContainer), m,
      g = getWidthForAutoBodyFit(KEDITORTOP.G_CURRKEDITOR, "table");
  try {
    var q = GetParentbyTagName(h, "td");
    if (q) {
      var t = getClientRect(q);
      m = t.right - t.left
    }
    m && 50 < m ? (m -= 10, f = Math.round(m / d), a.style.width = m + "px")
        : (f = Math.round(g / d), a.style.width = g + "px")
  } catch (u) {
    f = Math.round(g / d), a.style.width = g + "px"
  }
  "" != KEDITORTOP.G_CURRKEDITOR._config.tableDefaultWidth && (f = Math.round(
      KEDITORTOP.G_CURRKEDITOR._config.tableDefaultWidth
      / d), a.style.width = KEDITORTOP.G_CURRKEDITOR._config.tableDefaultWidth +
      "px");
  "" != KEDITORTOP.G_CURRKEDITOR._config.tableDefaultHeight
  && (a.style.height = KEDITORTOP.G_CURRKEDITOR._config.tableDefaultHeight
      + "px");
  "" != KEDITORTOP.G_CURRKEDITOR._config.tableInitInoutdent
  && (a.style.marginLeft = KEDITORTOP.G_CURRKEDITOR._config.tableInitInoutdent
      + "px");
  q = "";
  "" != KEDITORTOP.G_CURRKEDITOR._config.tableDefaultTdHeight
      ? (q = KEDITORTOP.G_CURRKEDITOR._config.tableDefaultTdHeight
          + "px", a.style.height = parseInt(q, 10) * b + "px") : q = "20px";
  "" != KEDITORTOP.G_CURRKEDITOR._config.tableDefaultClass ? (a.className =
          KEDITORTOP.G_CURRKEDITOR._config.tableDefaultClass, q = "", a.style.height = "")
      : a.style.fontSize = KEDITORTOP.G_CURRKEDITOR._setting.font_size;
  a.style.borderCollapse = "collapse";
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useTableBorderAttribute
  && a.setAttribute("border", "1");
  m = "";
  m = KEDITORTOP.RAONKEDITOR.browser.gecko ? "1px solid " : "1px none ";
  a.style.border = m + KEDITORTOP.G_CURRKEDITOR._config.defaultBorderColor;
  a.setAttribute("cellSpacing", "0");
  t = _iframeDoc.createElement("tbody");
  for (g = 0; g < b; g++) {
    h = _iframeDoc.createElement("tr");
    for (m = 0; m < d; m++) {
      var v = _iframeDoc.createElement("td");
      v.innerHTML = c;
      v.style.border = "1px solid "
          + KEDITORTOP.G_CURRKEDITOR._config.defaultBorderColor;
      h.appendChild(v);
      v.style.width = f - 1 + "px";
      v.style.height = q;
      KEDITORTOP.RAONKEDITOR.browser.ie && 9
      > KEDITORTOP.RAONKEDITOR.browser.ieVersion && 0 == m && 0 == g
      && (v.id = "temp_td_for_caret")
    }
    t.appendChild(h)
  }
  a.appendChild(t);
  b = KEDITORTOP.G_CURRKEDITOR._config.tableDefaultCellPadding;
  if ("1"
      == KEDITORTOP.G_CURRKEDITOR._config.insidePaddingTdSetting) {
    for (d = a.getElementsByTagName(
        "td"),
        m = 0; m < d.length; m++) {
      d[m].style.padding = b
          + "px";
    }
  } else {
    a.setAttribute("cellPadding", b);
  }
  g = getFirstRange().range;
  h = getMyElementNode(g.startContainer);
  "p" != h.tagName.toLowerCase() || "<br>" != h.innerHTML && "<br/>"
  != h.innerHTML && "<br />" != h.innerHTML && "" != h.innerHTML && "&nbsp;"
  != h.innerHTML || g.selectNode(h);
  b = a.outerHTML;
  if (KEDITORTOP.RAONKEDITOR.browser.chrome
      || KEDITORTOP.RAONKEDITOR.browser.opera) {
    if (_iframeDoc.execCommand("inserthtml", !1,
        b), g = getFirstRange().range) {
      rangy.getSelection(
          _iframeWin).removeAllRanges(),
          rangy.getSelection(_iframeWin).addRange(g)
    }
  } else {
    pasteHtmlAtCaretHuge(b);
  }
  c = getFirstRange();
  if (c.range.startContainer && (a = GetParentbyTagName(c.range.startContainer,
      "table"), null == a)) {
    try {
      if (KEDITORTOP.RAONKEDITOR.browser.ie && 9
          > KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
        var w = _iframeDoc.getElementById("temp_td_for_caret");
        w.removeAttribute("id");
        a = GetParentbyTagName(w, "table")
      }
    } catch (x) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(x)
    }
  }
  try {
    g.selectNode(a);
    var y = a.parentNode;
    "body" != y.tagName.toLowerCase() && g.setEndAfter(y);
    g.collapse(!1);
    KEDITORTOP.RAONKEDITOR.browser.ie && 8
    == KEDITORTOP.RAONKEDITOR.browser.ieVersion
    || (c = getFirstRange(), c.sel.addRange(g));
    KEDITORTOP.RAONKEDITOR.browser.gecko && doSetCaretPosition(y, 1);
    repairBodyFirstLastTag(!1);
    var z = a.rows[0].cells[0];
    z && (createTableCellDefValue(z), 0 == checkCellBRValue() && 0
    == (KEDITORTOP.RAONKEDITOR.browser.ie && 8
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion)
    && (z.innerHTML = "<p></p>"), 0 != KEDITORTOP.RAONKEDITOR.browser.ie
        ? doSetCaretPosition(z.childNodes[0],
            0) : setTimeout(function () {
          doSetCaretPosition(z.childNodes[0], 0)
        }, 10), KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = z.childNodes[0])
  } catch (A) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(A)
  }
  if (KEDITORTOP.RAONKEDITOR.browser.chrome
      || KEDITORTOP.RAONKEDITOR.browser.opera) {
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  }
  KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell");
  ActiveCurrTable = a;
  G_Ruler && "2" == KEDITORTOP.G_CURRKEDITOR._config.ruler.mode &&
  G_Ruler.SetRulerPosition();
  onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0})
}

function command_InsertDetailTable(a, c, b, d, e, f, g, h, m, q, t, u, v, w, x,
    y, z, A, B, C, D, H, G, I, M, K, P, E, L, O, N, F, J, W, ba, U) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  U || (U = "px");
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  ba = F = c = a = 0;
  var V = getFirstRange().range, X = getMyElementNode(V.startContainer), aa,
      V = getWidthForAutoBodyFit(KEDITORTOP.G_CURRKEDITOR, "table");
  if ("3" != b && "4" != b) {
    a = d;
    c = e;
    if ("" == f) {
      try {
        var ha = GetParentbyTagName(X, "td");
        if (ha) {
          var Y = getClientRect(ha);
          aa = Y.right - Y.left
        }
        aa ? (F = aa, "px" == U &&
        (F -= 10)) : F = V
      } catch (Ia) {
        F = V
      }
    } else {
      F = "%" == U ? (V + 10) * (1 * parseInt(f, 10) / 100) : "1"
      == KEDITORTOP.G_CURRKEDITOR._config.autoBodyFit ? f > V ? V : f : f;
    }
    "" != g && (ba = g)
  } else if ("3" == b) {
    a = G;
    c = I;
    if ("" == M) {
      try {
        if (ha = GetParentbyTagName(X, "td")) {
          Y = getClientRect(ha), aa = Y.right
              - Y.left;
        }
        F = aa && 50 < aa ? aa - 10 : KEDITORTOP.G_CURRKEDITOR._defTableWidth
      } catch (ta) {
        F = KEDITORTOP.G_CURRKEDITOR._defTableWidth
      }
    } else {
      F = M;
    }
    "" != K && (ba = K)
  }
  d = getFirstRange();
  d = d.range;
  try {
    1 == d.collapsed && setRestoreCaretPos(!1)
  } catch (ca) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
    KEDITORTOP.RAONKEDITOR.logMode && console.log(ca)
  }
  if ("4" != b) {
    W = Math.floor(F / c * 100) / 100;
    d = Math.floor(ba / a * 100) / 100;
    0 == d && (d = "" != KEDITORTOP.G_CURRKEDITOR._config.tableDefaultTdHeight
        ? parseInt(KEDITORTOP.G_CURRKEDITOR._config.tableDefaultTdHeight, 10)
        : 20);
    e = getCellDefValue();
    J = _iframeDoc.createElement("table");
    G = KEDITORTOP.RAONKEDITOR.util.getWordBreakStyle(
        KEDITORTOP.G_CURRKEDITOR._config);
    J.style.wordBreak = G;
    null != N && "" != N && (J.id = N);
    null != O && "" != O ? (J.className = O, d = "") : null == O && ""
    != KEDITORTOP.G_CURRKEDITOR._config.tableDefaultClass ?
        (J.className = KEDITORTOP.G_CURRKEDITOR._config.tableDefaultClass, d = "")
        : J.style.fontSize = KEDITORTOP.G_CURRKEDITOR._setting.font_size;
    "%" == U && (F = "" == f ? "100" : f);
    J.style.width = F + U;
    "3" != b ? ("" != g && (J.style.height = ba + "px"), "Y" == h
        ? J.style.borderCollapse = "separate" : "N" == h
        && (J.style.borderCollapse = "collapse"), "" != m
    && (J.align = m, "left" != m || "2"
    != KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO)
    && (J.align = m), "N" == h
        ? J.style.border = KEDITORTOP.RAONKEDITOR.browser.gecko ? "1px #000000"
            : "1px none #000000" : "Y" == h && ("" !=
    q.outsideTop && (J.style.borderTop = q.outsideTop, showBorderForNoneClass(J,
        "keditor_table_border_t")), "" != q.outsideLeft
    && (J.style.borderLeft = q.outsideLeft, showBorderForNoneClass(J,
        "keditor_table_border_l")), "" != q.outsideRight
    && (J.style.borderRight = q.outsideRight, showBorderForNoneClass(J,
        "keditor_table_border_r")), "" != q.outsideBottom
    && (J.style.borderBottom = q.outsideBottom, showBorderForNoneClass(J,
        "keditor_table_border_b"))), "1"
    == KEDITORTOP.G_CURRKEDITOR._config.useTableBorderAttribute
    && J.setAttribute("border",
        "1"), "" != t && J.setAttribute("cellSpacing", t), "" != w
    && J.setAttribute("summary", w), "" != x && ("[FAIL]" == x.substring(0, 6)
    && (J.setAttribute("alt", x.substring(6,
        x.length)), x = KEDITORTOP.G_CURRKEDITOR._config.webPath.image
        + "dialog/image_xbox.jpg"), J.style.backgroundImage = "url('" + x
        + "')", "" != y && (J.style.backgroundAttachment = y), "" != z
    && (J.style.backgroundRepeat = z), "" != A || "" != B)
    && (J.style.backgroundPosition = parseInt(A, 10) + "px " + parseInt(B, 10)
        + "px"), "" != C && (J.style.backgroundColor = C)) : ("" != K
    && (J.style.height = ba + "px"),
        "1" == E
            ? (q.outsideTop = "3px solid rgb(0, 216, 255)", q.outsideLeft = "0px rgb(0, 0, 0)", q.outsideRight = "0px rgb(0, 0, 0)", q.outsideBottom = "3px solid rgb(0, 216, 255)", q.insideRow = "1px solid rgb(0, 0, 0)", q.insideCol = "1px solid rgb(0, 0, 0)", J.style.borderCollapse = "collapse", J.style.fontSize = "10pt", J.setAttribute(
                "cellSpacing", "0"), J.setAttribute("cellPadding", "3")) : "2" == E
                ? (J.style.borderWidth = "1px", J.style.borderStyle = "solid", J.style.borderColor = "#000000", J.style.fontSize = "10pt", J.style.borderCollapse =
                    "collapse", J.setAttribute("border", "1"), J.setAttribute(
                    "cellSpacing", "0")) : "3" == E
                    ? (J.style.borderWidth = "1px", J.style.borderStyle = "dashed", J.style.borderColor = "#000000", J.style.fontSize = "10pt", J.style.borderCollapse = "collapse", J.setAttribute(
                        "border", "1"), J.setAttribute("cellSpacing", "0")) : "4"
                    == E
                        ? (J.style.borderWidth = "1px", J.style.borderStyle = "solid", J.style.borderColor = "#000000", J.style.fontSize = "10pt", J.style.borderCollapse = "collapse", J.setAttribute(
                            "border", "1"), J.setAttribute("cellSpacing", "0")) :
                        "5" == E
                            ? (J.style.borderWidth = "1px", J.style.borderStyle = "solid", J.style.borderColor = "#000000", J.style.fontSize = "10pt", J.style.borderCollapse = "collapse", J.setAttribute(
                                "border", "1"), J.setAttribute("cellSpacing", "0"))
                            : "6" == E
                                ? (J.style.borderWidth = "1px", J.style.borderStyle = "solid", J.style.borderColor = "#000000", J.style.fontSize = "10pt", J.style.borderCollapse = "collapse", J.setAttribute(
                                    "border", "1"), J.setAttribute("cellSpacing", "0"))
                                : "7" == E
                                    ? (J.style.borderWidth = "medium", J.style.borderStyle = "solid", J.style.borderColor =
                                        "#000000", J.style.fontSize = "10pt", J.setAttribute(
                                        "rules", "none"), J.setAttribute("cellSpacing",
                                        "0")) : "8" == E
                                        ? (J.style.borderWidth = "1px", J.style.borderStyle = "solid", J.style.borderColor = "#000000", J.style.fontSize = "10pt", J.style.borderCollapse = "collapse", J.setAttribute(
                                            "border", "1"), J.setAttribute(
                                            "cellSpacing", "0")) : "9" == E
                                            ? (J.style.borderWidth = "1px", J.style.borderStyle = "solid", J.style.borderColor = "#000000", J.style.fontSize = "10pt", J.style.borderCollapse = "collapse", J.setAttribute(
                                                "border", "1"), J.setAttribute(
                                                "cellSpacing",
                                                "0")) : "10" == E
                                                ? (J.style.borderWidth = "1px", J.style.borderStyle = "solid", J.style.borderColor = "#000000", J.style.fontSize = "10pt", J.style.borderCollapse = "collapse", J.setAttribute(
                                                    "border", "1")) : "11" == E
                                                    ? (J.style.borderStyle = "hidden", J.style.borderColor = "#ffffff", J.style.fontSize = "10pt", J.setAttribute(
                                                        "border", "1"), J.setAttribute(
                                                        "rules",
                                                        "none"), J.setAttribute("frame",
                                                        "void"), J.setAttribute(
                                                        "cellSpacing", "0")) : "12" == E
                                                    && (J.style.borderWidth = "1px", J.style.borderStyle = "solid", J.style.borderColor = "#000000", J.style.fontSize =
                                                        "10pt", J.style.borderCollapse = "collapse", J.setAttribute(
                                                        "border", "1"), J.setAttribute(
                                                        "rules",
                                                        "rows"), J.setAttribute(
                                                        "cellSpacing", "0")));
    0 < L && (J.style.marginLeft = L + "px");
    f = _iframeDoc.createElement("tbody");
    for (m = 0; m < a; m++) {
      t = _iframeDoc.createElement("tr");
      for (g = 0; g < c; g++) {
        if ("3" != b) {
          "2" == H ? 0 == g ? (w = _iframeDoc.createElement(
                  "th"), "Y" == D && (w.scope = "row"))
              : w = _iframeDoc.createElement("td") : "3" == H ? 0 == m
              ? (w = _iframeDoc.createElement("th"), "Y" == D
              && (w.scope = "col")) : w = _iframeDoc.createElement("td") : "4"
          == H ? 0 ==
              g || 0 == m ? (w = _iframeDoc.createElement("th"), "Y" != D || 0 == g
                  && 0 == m || (0 == g && (w.scope = "row"), 0 == m
                  && (w.scope = "col")))
                  : w = _iframeDoc.createElement("td")
              : w = _iframeDoc.createElement(
                  "td"), w.innerHTML = e;
        } else {
          if ("5" == E && 0 != g && 0 == m) {
            continue;
          }
          "1" == E || "2" == E || "5" == E || "10" == E || "11" == E || "12"
          == E ? 0 == m ? (w = _iframeDoc.createElement("th"), "Y" == P
          && (w.scope = "col")) : w = _iframeDoc.createElement("td") : "6" == E
              ? 0 == m || 0 == g ? (w = _iframeDoc.createElement("th"), "Y" != P
              || 0 == g && 0 == m || (0 == g && (w.scope = "row"), 0 == m
              && (w.scope = "col"))) : w = _iframeDoc.createElement("td") :
              "8" == E ? 0 == g ? (w = _iframeDoc.createElement("th"), "Y" == P
                  && (w.scope = "row")) : w = _iframeDoc.createElement("td")
                  : w = _iframeDoc.createElement("td");
          "1" == E ? 0 == m ? (x = _iframeDoc.createElement(
                  "p"), x.innerHTML = "T" + (g + 1), w.appendChild(x))
              : w.innerHTML = e : w.innerHTML = e
        }
        t.appendChild(w);
        "3" == b && "1" != E ? "4" == E
            ? (w.style.borderWidth = "1px", w.style.borderStyle = "dashed", w.style.borderColor = "#000000")
            : "5" == E ? 0 == g && 0 == m && w.setAttribute("colSpan", c) : "6"
            == E ? 0 == m ? 0 != g && (w.style.backgroundColor = "#e5e5e5") : 0
                == g && (w.style.backgroundColor =
                    "#e9f5f7") : "8" == E && 0 == g
                && (w.style.backgroundColor = "#e9f5f7") : ("3" == b && "1" == E
        && 0 == m
        && (w.style.textAlign = "center"), w.style.border = "1px solid #000000", "N"
        == h && (0 == m && "" != q.outsideTop
        && (w.style.borderTop = q.outsideTop, showBorderForNoneClass(w,
            "keditor_table_border_t")), 0 == g && "" != q.outsideLeft
        && (w.style.borderLeft = q.outsideLeft, showBorderForNoneClass(w,
            "keditor_table_border_l")), g == c - 1 && "" != q.outsideRight
        && (w.style.borderRight = q.outsideRight, showBorderForNoneClass(w,
            "keditor_table_border_r")), m == a - 1 && "" !=
        q.outsideBottom
        && (w.style.borderBottom = q.outsideBottom, showBorderForNoneClass(w,
            "keditor_table_border_b"))));
        "" != W && (w.style.width = W - 1 + "px");
        "" != d && (w.style.height = d + "px");
        KEDITORTOP.RAONKEDITOR.browser.ie && 9
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion && 0 == g && 0 == m
        && (w.id = "temp_td_for_caret")
      }
      f.appendChild(t);
      "3" == b && ("2" == E ? 0 == m && (t.style.backgroundColor = "#e5e5e5")
          : "5" == E ? 0 == m && (t.style.backgroundColor = "#e5e5e5") : "9"
          == E ? t.style.backgroundColor = 0 == m % 2 ? "#e5e5e5" : "#e9f5f7"
              : "10" == E ? 0 == m ? t.style.backgroundColor =
                  "#e5e5e5" : m == parseInt(a, 10) - 1
                  && (t.style.backgroundColor = "#e9f5f7") : "11" == E ? 0 == m
                  && (t.style.backgroundColor = "#e5e5e5") : "12" == E && 0 == m
                  && (t.style.backgroundColor = "#e5e5e5"))
    }
    "" != v && (h = _iframeDoc.createElement(
        "caption"), h.innerHTML = v, J.appendChild(h));
    J.appendChild(f);
    if ("" != u) {
      if ("1"
          == KEDITORTOP.G_CURRKEDITOR._config.insidePaddingTdSetting) {
        for (v = J.getElementsByTagName(
            "td"), g = 0; g < v.length; g++) {
          v[g].style.padding = u
              + "px";
        }
      } else {
        J.setAttribute("cellPadding", u);
      }
    }
    ("3" != b || "3" == b && "1" == E) && setBorderTableAndAllCell(J,
        q);
    q = J
  } else {
    q = "TableTemplateList", 0 == KEDITORTOP.RAONKEDITOR.util.xml.count(W,
        q)
    && (q = "TableTempleteList"), q = KEDITORTOP.RAONKEDITOR.util.xml.getNodeIdx(
        W, q, parseInt(J, 10) - 1), q = KEDITORTOP.RAONKEDITOR.util.xml.getNode(
        q,
        "SetSource").textContent || KEDITORTOP.RAONKEDITOR.util.xml.getNode(q,
        "SetSource").text, q = KEDITORTOP.RAONKEDITOR.util.replaceAll(q, "\r\n",
        ""), q = KEDITORTOP.RAONKEDITOR.util.replaceAll(q, "\r",
        ""), q = KEDITORTOP.RAONKEDITOR.util.replaceAll(q, "\n",
        ""), q = KEDITORTOP.RAONKEDITOR.util.replaceAll(q,
        "\t", ""), q = q.replace(/^\s+/, "").replace(/\s+$/,
        ""), u = _iframeDoc.createElement(
        "div"), u.innerHTML = q, q = u.childNodes[0], delete u;
  }
  V = getFirstRange().range;
  X = getMyElementNode(V.startContainer);
  "p" != X.tagName.toLowerCase() || "<br>" != X.innerHTML && "<br/>"
  != X.innerHTML && "<br />" != X.innerHTML && "" != X.innerHTML && "&nbsp;"
  != X.innerHTML || V.selectNode(X);
  V.deleteContents();
  u = q.outerHTML;
  if (KEDITORTOP.RAONKEDITOR.browser.chrome
      || KEDITORTOP.RAONKEDITOR.browser.opera) {
    if (_iframeDoc.execCommand("inserthtml", !1,
        u), V = getFirstRange().range) {
      rangy.getSelection(
          _iframeWin).removeAllRanges(),
          rangy.getSelection(_iframeWin).addRange(V)
    }
  } else {
    pasteHtmlAtCaretHuge(u);
  }
  d = getFirstRange();
  if (d.range.startContainer && (q = GetParentbyTagName(d.range.startContainer,
      "table"), null == q)) {
    try {
      if (KEDITORTOP.RAONKEDITOR.browser.ie && 9
          > KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
        var qa = _iframeDoc.getElementById("temp_td_for_caret");
        qa.removeAttribute("id");
        q = GetParentbyTagName(qa, "table")
      }
    } catch (ra) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(ra)
    }
  }
  try {
    V.selectNode(q);
    var la = q.parentNode;
    "body" != la.tagName.toLowerCase() && V.setEndAfter(la);
    V.collapse(!1);
    KEDITORTOP.RAONKEDITOR.browser.ie && 8
    == KEDITORTOP.RAONKEDITOR.browser.ieVersion
    || (d = getFirstRange(), d.sel.addRange(V));
    KEDITORTOP.RAONKEDITOR.browser.gecko && doSetCaretPosition(la, 1);
    repairBodyFirstLastTag(!1);
    var Q = q.rows[0].cells[0];
    Q && ("4" != b && createTableCellDefValue(Q), 0 == checkCellBRValue() && ""
    == Q.innerHTML && (Q.innerHTML = "<p></p>"), doSetCaretPosition(
        Q.childNodes[0], 0))
  } catch (Aa) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
    console.log(Aa)
  }
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.limitTableInoutdent) {
    b = 0;
    qa = getClientRect(q);
    la = qa.right;
    if ("" != _iframeDoc.body.style.width && -1
        < _iframeDoc.body.style.width.indexOf(
            "px")) {
      b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          _iframeDoc.body.style.width), la -= 10;
    } else {
      b = _iframeDoc.documentElement.clientWidth;
      if (0 == b || null == b || void 0 == b) {
        b = _iframeDoc.body.clientWidth;
      }
      b = Math.floor(b);
      b -= 10
    }
    0 < b && la >= b && (b -= qa.right - qa.left + 10, 0 > b
    && (b = 0), q.style.marginLeft = b + "px")
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell");
  ActiveCurrTable = q;
  G_Ruler && "2" == KEDITORTOP.G_CURRKEDITOR._config.ruler.mode
  && G_Ruler.SetRulerPosition()
}

function command_InsertTableProperty(a, c, b, d, e, f, g, h, m, q, t, u, v, w,
    x, y, z, A, B, C, D, H, G, I, M, K, P) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  K || (K = "px");
  var E = GetParentbyTagName(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT,
      "table");
  null == G || "" == G ? removeAttribute(E, "id") : "" != G && (E.id = G);
  E.style.wordBreak = E.style.wordBreak;
  "" == H ? (removeAttribute(E,
          "class"), E.style.fontSize = KEDITORTOP.G_CURRKEDITOR._setting.font_size)
      :
      null != H && (E.className = H, E.style.fontSize = "");
  a = E.style.width;
  "" != b && ("%" == K && (E.oWidth = E.clientWidth), E.style.width = b + K);
  c = E.style.height;
  "" != d && (E.style.height = d + "px");
  "N" == e ? E.style.borderCollapse = "collapse" : "Y" == e
      && (E.style.borderCollapse = "separate");
  E.align = "" == f || "left" == f && "2"
  == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO ? "" : f;
  E.style.marginLeft = 0 < D ? D + "px" : "";
  "N" == e ? E.style.border = KEDITORTOP.RAONKEDITOR.browser.gecko
      ? "1px #000000" : "1px none #000000" : "Y" == e && ("" != g.outsideTop
  && (E.style.borderTop =
      g.outsideTop, showBorderForNoneClass(E, "keditor_table_border_t")), ""
  != g.outsideLeft
  && (E.style.borderLeft = g.outsideLeft, showBorderForNoneClass(E,
      "keditor_table_border_l")), "" != g.outsideRight
  && (E.style.borderRight = g.outsideRight, showBorderForNoneClass(E,
      "keditor_table_border_r")), "" != g.outsideBottom
  && (E.style.borderBottom = g.outsideBottom, showBorderForNoneClass(E,
      "keditor_table_border_b")));
  "" != h && E.setAttribute("cellSpacing", h);
  if ("" != m) {
    for (e = "", "1"
    == KEDITORTOP.G_CURRKEDITOR._config.insidePaddingTdSetting ||
    P && "2" == P.cellPaddingMode ? (E.removeAttribute("cellPadding"), e = m
        + "px") : E.setAttribute("cellPadding", m), P = E.getElementsByTagName(
        "td"), m = 0; m < P.length; m++) {
      P[m].style.padding = e;
    }
  }
  P = !1;
  e = 0;
  f = E.childNodes.length;
  for (m = 0; m < f; m++) {
    if (E.childNodes[m].nodeName.match(/caption/i)) {
      P = !0;
      e = m;
      break
    }
  }
  "" == q ? P && E.removeChild(E.childNodes[e]) : P
      ? E.childNodes[e].innerHTML = q : (m = _iframeDoc.createElement(
          "caption"), m.innerHTML = q, E.appendChild(m));
  "" != t && E.setAttribute("summary", t);
  if ("Y" == u) {
    E.style.backgroundImage = "", E.style.backgroundAttachment =
        "", E.style.backgroundRepeat = "", E.style.backgroundPosition = "", E.style.backgroundColor = "", E.removeAttribute(
        "background");
  } else if ("N" == u && ("" != v && ("[FAIL]" == v.substring(
      0, 6) && (E.setAttribute("alt", v.substring(6,
      v.length)), v = KEDITORTOP.G_CURRKEDITOR._config.webPath.image
      + "dialog/image_xbox.jpg"), 0 == v.indexOf("url")
      ? E.style.backgroundImage = v : E.style.backgroundImage = "url(" + v
          + ")", E.removeAttribute(
      "background"), E.style.backgroundAttachment = "" == w ? ""
      : w, E.style.backgroundRepeat = "" == x ? "" : x, "" != y || "" != z)
  && (E.style.backgroundPosition =
      parseInt(y, 10) + "px " + parseInt(z, 10) + "px"), ""
  != A)) {
    for (E.style.backgroundColor = A, t = E.rows, u = E.rows.length, m = 0;
        m < u; m++) {
      for (v = t[m].cells, w = t[m].cells.length, q = 0; q < w;
          q++) {
        "" != v[q].style.backgroundColor
        && (v[q].style.backgroundColor = "");
      }
    }
  }
  q = GetTableSelectionCellsPosition(E, !0);
  t = q.arrOutSideLeft.length;
  u = q.arrOutSideRight.length;
  v = q.arrOutSideTop.length;
  w = q.arrOutSideBottom.length;
  x = q.arrSelected.length;
  y = [];
  z = [];
  A = [];
  P = [];
  e = "";
  if ("" == g.outsideLeft) {
    for (m = 0; m < t;
        m++) {
      e = q.arrOutSideLeft[m].style.borderLeftWidth +
          " " + q.arrOutSideLeft[m].style.borderLeftStyle + " "
          + q.arrOutSideLeft[m].style.borderLeftColor, y.push(e);
    }
  }
  if ("" == g.outsideRight) {
    for (m = 0; m < u;
        m++) {
      e = q.arrOutSideRight[m].style.borderRightWidth + " "
          + q.arrOutSideRight[m].style.borderRightStyle + " "
          + q.arrOutSideRight[m].style.borderRightColor, z.push(e);
    }
  }
  if ("" == g.outsideTop) {
    for (m = 0; m < v;
        m++) {
      e = q.arrOutSideTop[m].style.borderTopWidth + " "
          + q.arrOutSideTop[m].style.borderTopStyle + " "
          + q.arrOutSideTop[m].style.borderTopColor, A.push(e);
    }
  }
  if ("" == g.outsideBottom) {
    for (m = 0; m <
    w; m++) {
      e = q.arrOutSideBottom[m].style.borderBottomWidth + " "
          + q.arrOutSideBottom[m].style.borderBottomStyle + " "
          + q.arrOutSideBottom[m].style.borderBottomColor, P.push(e);
    }
  }
  if ("" != g.insideRow) {
    for (m = 0; m < x;
        m++) {
      command_ApplyCellBorderProperty("inRow", q.arrSelected[m], g);
    }
  }
  if ("" != g.insideCol) {
    for (m = 0; m < x;
        m++) {
      command_ApplyCellBorderProperty("inCol", q.arrSelected[m], g);
    }
  }
  if ("" == g.outsideLeft) {
    for (m = 0; m < t;
        m++) {
      g.outsideLeft = y[m], command_ApplyCellBorderProperty("left",
          q.arrOutSideLeft[m], g);
    }
  } else {
    for (m = 0; m < t;
        m++) {
      command_ApplyCellBorderProperty("left",
          q.arrOutSideLeft[m], g);
    }
  }
  if ("" == g.outsideRight) {
    for (m = 0; m < u;
        m++) {
      g.outsideRight = z[m], command_ApplyCellBorderProperty("right",
          q.arrOutSideRight[m], g);
    }
  } else {
    for (m = 0; m < u;
        m++) {
      command_ApplyCellBorderProperty("right", q.arrOutSideRight[m], g);
    }
  }
  if ("" == g.outsideTop) {
    for (m = 0; m < v;
        m++) {
      g.outsideTop = A[m], command_ApplyCellBorderProperty("top",
          q.arrOutSideTop[m], g);
    }
  } else {
    for (m = 0; m < v;
        m++) {
      command_ApplyCellBorderProperty("top", q.arrOutSideTop[m], g);
    }
  }
  if ("" == g.outsideBottom) {
    for (m = 0; m < w;
        m++) {
      g.outsideBottom = P[m], command_ApplyCellBorderProperty("bottom",
          q.arrOutSideBottom[m], g);
    }
  } else {
    for (m = 0; m < w;
        m++) {
      command_ApplyCellBorderProperty("bottom", q.arrOutSideBottom[m], g);
    }
  }
  g = E.rows.length;
  for (m = t = 0; m < g; m++) {
    for (t = E.rows[m].cells.length, q = 0; q < t;
        q++) {
      "2" == C ? 0 == q ? (u = _iframeDoc.createElement(
          "th"), setCopyAllObjectAtributes(E.rows[m].cells[q], u, !0), "Y" == B
      && (u.scope = "row")) : (u = _iframeDoc.createElement(
          "td"), setCopyAllObjectAtributes(E.rows[m].cells[q], u, !0)) : "3"
      == C
          ? 0 == m ? (u = _iframeDoc.createElement(
              "th"), setCopyAllObjectAtributes(E.rows[m].cells[q], u, !0), "Y"
          == B &&
          (u.scope = "col")) : (u = _iframeDoc.createElement(
              "td"), setCopyAllObjectAtributes(E.rows[m].cells[q], u, !0)) : "4"
          == C ? 0 == m || 0 == q ? (u = _iframeDoc.createElement(
                      "th"), setCopyAllObjectAtributes(E.rows[m].cells[q], u, !0), "Y"
                  == B && (0 != m || 0 != q ? (0 == m && (u.scope = "col"), 0 == q
                  && (u.scope = "row")) : u.scope = ""))
                  : (u = _iframeDoc.createElement(
                      "td"), setCopyAllObjectAtributes(E.rows[m].cells[q], u, !0))
              : (u = _iframeDoc.createElement("td"), setCopyAllObjectAtributes(
                  E.rows[m].cells[q], u, !0));
      "N" == B && (u.scope = "");
      "1" != E.rows[m].cells[q].colSpan &&
      (u.colSpan = E.rows[m].cells[q].colSpan);
      "1" != E.rows[m].cells[q].rowSpan
      && (u.rowSpan = E.rows[m].cells[q].rowSpan);
      "" != E.rows[m].cells[q].style.width
      && (u.style.width = E.rows[m].cells[q].style.width);
      "" != E.rows[m].cells[q].style.height
      && (u.style.height = E.rows[m].cells[q].style.height);
      "" != E.rows[m].cells[q].style.textAlign
      && (u.style.textAlign = E.rows[m].cells[q].style.textAlign);
      "" != E.rows[m].cells[q].style.verticalAlign && (removeAttribute(
          E.rows[m].cells[q],
          "valign"), u.style.verticalAlign = E.rows[m].cells[q].style.verticalAlign);
      "nowrap" == E.rows[m].cells[q].style.whiteSpace
      && (u.style.whiteSpace = "nowrap");
      "" != E.rows[m].cells[q].style.backgroundImage
      && (u.style.backgroundImage = E.rows[m].cells[q].style.backgroundImage);
      "" != E.rows[m].cells[q].style.backgroundAttachment
      && (u.style.backgroundAttachment = E.rows[m].cells[q].style.backgroundAttachment);
      "" != E.rows[m].cells[q].style.backgroundRepeat
      && (u.style.backgroundRepeat = E.rows[m].cells[q].style.backgroundRepeat);
      "" != E.rows[m].cells[q].style.backgroundPosition
      && (u.style.backgroundPosition =
          E.rows[m].cells[q].style.backgroundPosition);
      "" != E.rows[m].cells[q].style.backgroundColor
      && (u.style.backgroundColor = E.rows[m].cells[q].style.backgroundColor);
      v = [];
      w = [];
      try {
        if (KEDITORTOP.RAONKEDITOR.browser.ie && 8
            > KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          v = E.rows[m].cells[q].getElementsByTagName("a");
          for (var L = v.length, O = 0; O < L; O++) {
            v[O].outerHTML.match(
                RegExp("(hrefs*=s*(?:\"|')(.*?)(?:\"|'))", "gi")), w.push(
                RegExp.$2)
          }
        }
      } catch (N) {
        v = [], w = []
      }
      u.innerHTML = E.rows[m].cells[q].innerHTML;
      try {
        if (KEDITORTOP.RAONKEDITOR.browser.ie &&
            8 > KEDITORTOP.RAONKEDITOR.browser.ieVersion && (L = v.length, 0
            < L)) {
          for (var F = u.getElementsByTagName("a"), J = F.length, O = 0;
              O < J; O++) {
            F[O].href && 0 > F[O].href.toLowerCase().indexOf(
                "javascript") && 0 > F[O].href.indexOf("'") && 0
            > F[O].href.indexOf('"') && "" != w[O] && F[O].href != w[O]
            && (F[O].href = w[O], F[O].setAttribute("href", w[O]))
          }
        }
      } catch (W) {
        u.innerHTML = E.rows[m].cells[q].innerHTML
      }
      E.rows[m].cells[q].parentNode.replaceChild(u, E.rows[m].cells[q])
    }
  }
  setAdjustTableWidthHeight(E);
  ClearDraggingTableCellSelected();
  0 < E.rows[0].cells[0].childNodes.length ?
      setTimeout(function () {
        doSetCaretPosition(E.rows[0].cells[0].childNodes[0], 0)
      }, 0) : setTimeout(function () {
        doSetCaretPosition(E.rows[0].cells[0], 0)
      }, 0);
  "" != a && (B = parseInt(a, 10), C = a.replace(B, ""), B == parseInt(b, 10)
  && C == K || command_AdjustTableAndCellWidth(KEDITORTOP.G_CURRKEDITOR.ID,
      KEDITORTOP.G_CURRKEDITOR, {type: "forceAdjust", targetTable: E}));
  -1 < a.indexOf("px") && (a = parseInt(a, 10), a != parseInt(b, 10)
  && command_AdjustTableAndCellWidth(KEDITORTOP.G_CURRKEDITOR.ID,
      KEDITORTOP.G_CURRKEDITOR, {type: "forceAdjust", targetTable: E}));
  -1 < c.indexOf("px") && (c = parseInt(c, 10), c != parseInt(d, 10)
  && command_AdjustTableAndCellHeight(KEDITORTOP.G_CURRKEDITOR.ID,
      KEDITORTOP.G_CURRKEDITOR,
      {type: "forceAdjust", targetTable: E, beforeHeight: c}));
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.limitTableInoutdent) {
    b = 0;
    d = getClientRect(E);
    K = d.right;
    if ("" != _iframeDoc.body.style.width && -1
        < _iframeDoc.body.style.width.indexOf(
            "px")) {
      b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          _iframeDoc.body.style.width), K -= 10;
    } else {
      b = _iframeDoc.documentElement.clientWidth;
      if (0 == b ||
          null == b || void 0 == b) {
        b = _iframeDoc.body.clientWidth;
      }
      b = Math.floor(b);
      b -= 10
    }
    0 < b && K >= b && (b -= d.right - d.left + 10, 0 > b
    && (b = 0), E.style.marginLeft = b + "px")
  }
  KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell");
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertCellProperty(a, c, b, d, e, f, g, h, m, q, t, u, v, w, x,
    y, z, A, B, C) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = GetParentbyTagName(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT, "table");
  var D = "";
  "collapse" == a.style.borderCollapse && "1"
  == KEDITORTOP.G_CURRKEDITOR._config.tableNearCellBorderStyle ? D = "N"
      : "separate" == a.style.borderCollapse && (D = "Y");
  c = GetTDTHCell(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
  c = GetTableSelectionCellsPosition(c, !1);
  ClearDraggingTableCellSelected();
  var H = c.arrOutSideLeft.length, G = c.arrOutSideRight.length,
      I = c.arrOutSideTop.length, M = c.arrOutSideBottom.length,
      K = c.arrSelected.length, P = [], E = [], L = [], O = [], N = "";
  if ("" == h.outsideLeft) {
    for (var F = 0; F < H;
        F++) {
      N = c.arrOutSideLeft[F].style.borderLeftWidth + " "
          + c.arrOutSideLeft[F].style.borderLeftStyle + " "
          + c.arrOutSideLeft[F].style.borderLeftColor, P.push(N);
    }
  }
  if ("" == h.outsideRight) {
    for (F = 0; F < G;
        F++) {
      N = c.arrOutSideRight[F].style.borderRightWidth +
          " " + c.arrOutSideRight[F].style.borderRightStyle + " "
          + c.arrOutSideRight[F].style.borderRightColor, E.push(N);
    }
  }
  if ("" == h.outsideTop) {
    for (F = 0; F < I;
        F++) {
      N = c.arrOutSideTop[F].style.borderTopWidth + " "
          + c.arrOutSideTop[F].style.borderTopStyle + " "
          + c.arrOutSideTop[F].style.borderTopColor, L.push(N);
    }
  }
  if ("" == h.outsideBottom) {
    for (F = 0; F < M;
        F++) {
      N = c.arrOutSideBottom[F].style.borderBottomWidth + " "
          + c.arrOutSideBottom[F].style.borderBottomStyle + " "
          + c.arrOutSideBottom[F].style.borderBottomColor, O.push(N);
    }
  }
  if ("" != h.insideRow) {
    for (F =
        0; F < K; F++) {
      command_ApplyCellBorderProperty("inRow", c.arrSelected[F],
          h);
    }
  } else {
    for (F = 0; F < K; F++) {
      command_ApplyCellBorderProperty("inRow",
          c.arrSelected[F], null);
    }
  }
  if ("" != h.insideCol) {
    for (F = 0; F < K;
        F++) {
      command_ApplyCellBorderProperty("inCol", c.arrSelected[F],
          h);
    }
  } else {
    for (F = 0; F < K; F++) {
      command_ApplyCellBorderProperty(
          "inCol", c.arrSelected[F], null);
    }
  }
  N = function (a) {
    return "" !== a ? 1 >= KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        a.split(" ")[0]) ? !0 : !1 : !1
  };
  if ("" == h.outsideLeft) {
    for (F = 0; F < H;
        F++) {
      h.outsideLeft = P[F], command_ApplyCellBorderProperty("left",
          c.arrOutSideLeft[F], h);
    }
  } else {
    for (var J = N(h.outsideLeft), F = 0;
        F < H; F++) {
      if ("N" == D || J) {
        P = getCellNearLeftTop(
            c.arrOutSideLeft[F]), command_ApplyEdgeReduce(P.arrLeft, h, "left");
      }
      command_ApplyCellBorderProperty("left", c.arrOutSideLeft[F], h)
    }
  }
  if ("" == h.outsideRight) {
    for (F = 0; F < G;
        F++) {
      h.outsideRight = E[F], command_ApplyCellBorderProperty("right",
          c.arrOutSideRight[F], h);
    }
  } else {
    for (J = N(h.outsideRight), F = 0; F < G;
        F++) {
      if ("N" == D || J) {
        P = getCellNearLeftTop(
            c.arrOutSideRight[F]), command_ApplyEdgeReduce(P.arrRight, h,
            "right");
      }
      command_ApplyCellBorderProperty("right",
          c.arrOutSideRight[F], h)
    }
  }
  if ("" == h.outsideTop) {
    for (F = 0; F < I;
        F++) {
      h.outsideTop = L[F], command_ApplyCellBorderProperty("top",
          c.arrOutSideTop[F], h);
    }
  } else {
    for (J = N(h.outsideTop), F = 0; F < I;
        F++) {
      if ("N" == D || J) {
        P = getCellNearLeftTop(
            c.arrOutSideTop[F]), command_ApplyEdgeReduce(P.arrTop, h, "top");
      }
      command_ApplyCellBorderProperty("top", c.arrOutSideTop[F], h)
    }
  }
  if ("" == h.outsideBottom) {
    for (F = 0; F < M;
        F++) {
      h.outsideBottom = O[F], command_ApplyCellBorderProperty("bottom",
          c.arrOutSideBottom[F], h);
    }
  } else {
    for (J = N(h.outsideBottom), F = 0;
        F < M; F++) {
      if ("N" ==
          D || J) {
        P = getCellNearLeftTop(
            c.arrOutSideBottom[F]), command_ApplyEdgeReduce(P.arrBottom, h,
            "bottom");
      }
      command_ApplyCellBorderProperty("bottom", c.arrOutSideBottom[F], h)
    }
  }
  if (0 < K) {
    for (F = 0; F < K; F++) {
      command_ApplyCellProperty(c.arrSelected[F],
          b, d, f, g, m, q, t, u, v, w, x, y, z, A,
          e);
    }
  } else {
    command_ApplyCellProperty(
        KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT, b, d, f, g, m, q, t, u, v, w,
        x, y, z, A, e);
  }
  if ("" != B || "" != C) {
    d = [];
    0 < c.arrSelected.length ? d = c.arrSelected : d.push(
        KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
    e = d.length;
    g = [];
    for (F = 0; F <
    e; F++) {
      f = d[F], "" != B && (B = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          B), b = getClientRect(f), b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
          b.right - b.left), g.push(b)), "" != C && (f.style.height = C + "px");
    }
    if ("" != B) {
      for (F = 0; F < e; F++) {
        f = d[F], f.style.width = B + "px";
      }
      B = [0];
      for (F = 1; F < e; F++) {
        C = B.length;
        g = !1;
        f = d[F];
        b = getClientRect(f);
        for (f = 0; f < C; f++) {
          if (h = getClientRect(d[B[f]]), b.left >= h.left
          && b.right <= h.right) {
            g = !0;
            break
          }
        }
        0 == g && B.push(F)
      }
      C = B = F = !1;
      b = getClientRect(c.arrOutSideTop[0]);
      d = getClientRect(c.arrOutSideBottom[0]);
      e = getClientRect(a);
      1 >= Math.abs(b.top - e.top) && (B = !0);
      1 >= Math.abs(d.bottom - e.bottom) && (C = !0);
      B && C && (F = !0);
      if (F) {
        for (F = C = B = 0; F < c.virtualSelectionsCellTable.length;
            F++) {
          b = c.virtualSelectionsCellTable[F].length, b > C
          && (C = b, B = F);
        }
        c = c.virtualSelectionsCellTable[B][0].parentNode.cells;
        B = c.length;
        for (F = C = 0; F < B; F++) {
          b = 0, "" != c[F].style.width
          && c[F].style.width.indexOf("px")
              ? b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c[F].style.width)
              : (b = getClientRect(c[F]), b = b.right - b.left), C += b;
        }
        a.style.width = C + 1 + "px";
        G_Ruler && "2" == KEDITORTOP.G_CURRKEDITOR._config.ruler.mode &&
        G_Ruler.SetRulerPosition()
      }
    }
  }
  0 < KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.childNodes.length
      ? doSetCaretPosition(
          KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.childNodes[0], 0)
      : doSetCaretPosition(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT, 0);
  KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell");
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_ApplyCellProperty(a, c, b, d, e, f, g, h, m, q, t, u, v, w, x,
    y) {
  "" == v ? removeAttribute(a, "class") : null != v && (a.className = v);
  "" == w ? removeAttribute(a, "id") : null != w && (a.id = w);
  "" == c ? a.style.textAlign = "" : null != c && (a.style.textAlign = c);
  "" == b ? a.style.verticalAlign = "" : null != b && (removeAttribute(a,
      "valign"), a.style.verticalAlign = b);
  null != d && ("" == d ? a.removeAttribute("scope") : a.scope = d);
  if (null != e) {
    if ("break-all" == e) {
      if ("nowrap" == a.style.whiteSpace || "pre"
          == a.style.whiteSpace) {
        a.style.whiteSpace = "";
      }
      a.style.wordBreak =
          "break-all"
    } else if ("keep-all" == e) {
      if ("nowrap" == a.style.whiteSpace || "pre"
          == a.style.whiteSpace) {
        a.style.whiteSpace = "";
      }
      a.style.wordBreak = "keep-all"
    } else if ("nowrap" != a.style.whiteSpace || "pre"
        != a.style.whiteSpace) {
      a.style.whiteSpace = "nowrap";
    }
  }
  if ("Y"
      == f) {
    a.style.backgroundImage = "", a.style.backgroundAttachment = "", a.style.backgroundRepeat = "", a.style.backgroundPosition = "", a.style.backgroundColor = "", a.removeAttribute(
        "cellOrgBgColor"), a.removeAttribute("background");
  } else if ("N" == f) {
    "" != g && ("[FAIL]" == g.substring(0,
        6) && (a.setAttribute("alt", g.substring(6,
        g.length)), g = KEDITORTOP.G_CURRKEDITOR._config.webPath.image
        + "dialog/image_xbox.jpg"), 0 == g.indexOf("url")
        ? a.style.backgroundImage = g : a.style.backgroundImage = "url(" + g
            + ")", a.removeAttribute("background"));
    "" == h ? a.style.backgroundAttachment = "" : null != h
        && (a.style.backgroundAttachment = h);
    "" == m ? a.style.backgroundRepeat = "" : null != m
        && (a.style.backgroundRepeat = m);
    c = a.style.backgroundPosition;
    b = ["0px", "0px"];
    "" != c && (b = c.split(" "));
    if ("" != q && "" != t) {
      a.style.backgroundPosition =
          parseInt(q, 10) + "px " + parseInt(t, 10) + "px";
    } else if ("" != q || ""
        != t) {
      "" != q && "" == t ? a.style.backgroundPosition = parseInt(q, 10)
          + "px " + b[1] : "" == q && "" != t
          && (a.style.backgroundPosition = b[0] + " " + parseInt(t, 10) + "px");
    }
    "" != u && (a.style.backgroundColor = u);
    null != y && (q = a.tagName.toLowerCase(), t = "", "Y" == y
        ? (t = "th", y = _iframeDoc.createElement("th")) : "N" == y
            ? (t = "td", y = _iframeDoc.createElement("td"))
            : (y = _iframeDoc.createElement(
                a.tagName.toLowerCase()), t = a.tagName.toLowerCase()), q != t
    && (setCopyAllObjectAtributes(a, y, !0), y.innerHTML =
        a.innerHTML, y.style.width = a.style.width, y.style.height = a.style.height, 1
    < a.colSpan && (y.colSpan = a.colSpan), 1 < a.rowSpan
    && (y.rowSpan = a.rowSpan)), q != t && a.parentNode.replaceChild(y, a))
  }
}

function command_ApplyCellBorderProperty(a, c, b) {
  if (b) {
    var d = RegExp("^\\s\\s*$", "g");
    "top" == a ? b.outsideTop.match(d) ? "" != c.style.borderTop
        && (c.style.borderTop = "1px solid rgb(0, 0, 0)", showBorderForNoneClass(
            c, "keditor_table_border_t"))
        : (c.style.borderTop = b.outsideTop, showBorderForNoneClass(c,
            "keditor_table_border_t")) : "bottom" == a ? b.outsideBottom.match(
            d) ? "" != c.style.borderBottom
            && (c.style.borderBottom = "1px solid rgb(0, 0, 0)", showBorderForNoneClass(
                c, "keditor_table_border_b")) : (c.style.borderBottom =
            b.outsideBottom, showBorderForNoneClass(c, "keditor_table_border_b"))
        : "left" == a ? b.outsideLeft.match(d) ? "" != c.style.borderLeft
            && (c.style.borderLeft = "1px solid rgb(0, 0, 0)", showBorderForNoneClass(
                c, "keditor_table_border_l"))
            : (c.style.borderLeft = b.outsideLeft, showBorderForNoneClass(c,
                "keditor_table_border_l")) : "right" == a
            ? b.outsideRight.match(d) ? "" != c.style.borderRight
                && (c.style.borderRight = "1px solid rgb(0, 0, 0)", showBorderForNoneClass(
                    c, "keditor_table_border_r"))
                : (c.style.borderRight = b.outsideRight,
                    showBorderForNoneClass(c, "keditor_table_border_r"))
            : "inRow" == a ? b.insideRow.match(d) ? ("" != c.style.borderTop
                && (c.style.borderTop = "1px solid rgb(0, 0, 0)", showBorderForNoneClass(
                    c, "keditor_table_border_t")), "" != c.style.borderBottom
                && (c.style.borderBottom = "1px solid rgb(0, 0, 0)", showBorderForNoneClass(
                    c, "keditor_table_border_b")))
                : (c.style.borderTop = b.insideRow, c.style.borderBottom = b.insideRow, showBorderForNoneClass(
                    c, "keditor_table_border_t"), showBorderForNoneClass(c,
                    "keditor_table_border_b")) : "inCol" ==
                a && (b.insideCol.match(d) ? ("" != c.style.borderLeft
                    && (c.style.borderLeft = "1px solid rgb(0, 0, 0)", showBorderForNoneClass(
                        c, "keditor_table_border_l")), "" != c.style.borderRight
                    && (c.style.borderRight = "1px solid rgb(0, 0, 0)", showBorderForNoneClass(
                        c, "keditor_table_border_r")))
                    : (c.style.borderLeft = b.insideCol, c.style.borderRight = b.insideCol, showBorderForNoneClass(
                        c, "keditor_table_border_l"), showBorderForNoneClass(c,
                        "keditor_table_border_r")))
  }
}

function command_ApplyEdgeReduce(a, c, b) {
  if (a) {
    var d = a.length;
    if ("top" == b) {
      for (var e = 0; e < d;
          e++) {
        a[e].style.borderBottom = c.outsideTop;
      }
    }
    if ("left" == b) {
      for (e = 0; e < d;
          e++) {
        a[e].style.borderRight = c.outsideLeft;
      }
    }
    if ("right" == b) {
      for (e = 0; e < d;
          e++) {
        a[e].style.borderLeft = c.outsideRight;
      }
    }
    if ("bottom" == b) {
      for (e = 0; e < d;
          e++) {
        a[e].style.borderTop = c.outsideBottom
      }
    }
  }
}

function command_InsertRowColumn(a, c, b, d, e) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  "R" == b && "U" == d ? command_insertRowUp(a, _k_editor, e) : "R" == b && "D"
  == d ? command_insertRowDown(a, _k_editor, e) : "C" == b && "R" == d
      ? command_insertCellRight(a, _k_editor, e) : "C" == b && "L" == d
      && command_insertCellLeft(a, _k_editor, e)
}

function command_RowProperty(a, c, b, d, e, f, g) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  c = GetTDTHCell(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
  setTableRowSelect(c);
  a = getCellNearLeftTop(c);
  for (var h = a.arrSelected.length, m = 0; m < h; m++) {
    "" != d
    && (a.arrSelected[m].style.height = d
        + "px"), a.arrSelected[m].style.textAlign = "" == f ? ""
        : f, a.arrSelected[m].style.verticalAlign = "" == g ? "" : g, "" != b
    && a.arrSelected[m].setAttribute("cellOrgBgColor",
        b);
  }
  b = c.parentNode.rowIndex;
  d = c.cellIndex;
  m = function (a) {
    var b = "";
    return b = a.parentNode.parentNode.tagName.toLowerCase()
  };
  if (e) {
    if ("tbody" == m(c)) {
      e = ActiveCurrTable.getElementsByTagName("thead")[0];
      f = ActiveCurrTable.getElementsByTagName("tbody")[0];
      0 == !!e && (e = _iframeDoc.createElement(
          "thead"), ActiveCurrTable.insertBefore(e, f));
      h = [];
      g = [];
      var q = c.parentNode, m = q.rowIndex;
      1 < c.rowSpan && (m += c.rowSpan - 1, q = ActiveCurrTable.rows[m]);
      for (; "TBODY" == q.parentNode.tagName && (c = q, q = c.cloneNode(
          !1), q.innerHTML = c.innerHTML.replace(/<td/g,
          "<th").replace(/<\/td/g, "</th"), h.push(
          q), m--, q = ActiveCurrTable.rows[m], g.push(c), 0 != !!q);) {
        ;
      }
      for (m = h.length - 1; 0 <= m; m--) {
        e.appendChild(h[m]);
      }
      m = 0;
      for (c = g.length; m < c; m++) {
        g[m].parentNode.removeChild(g[m]);
      }
      0 == f.getElementsByTagName("tr").length && f.parentNode.removeChild(f)
    }
  } else if ("thead" == m(c)) {
    e = ActiveCurrTable.getElementsByTagName("thead")[0];
    f = ActiveCurrTable.getElementsByTagName("tbody")[0];
    0 == !!f && (f = _iframeDoc.createElement(
        "tbody"), ActiveCurrTable.appendChild(f));
    h = [];
    g = [];
    q = c.parentNode;
    for (m =
        q.rowIndex; "THEAD" == q.parentNode.tagName && (c = q, q = c.cloneNode(
        !1), q.innerHTML = c.innerHTML.replace(/<th/g, "<td").replace(/<\/th/g,
        "</td"), h.push(q), m++, q = ActiveCurrTable.rows[m], g.push(c), 0
    != !!q);) {
      ;
    }
    for (m = h.length - 1; 0 <= m; m--) {
      c = f.getElementsByTagName("tr"), 0
      == c.length ? f.appendChild(h[m]) : f.insertBefore(h[m], c[0]);
    }
    m = 0;
    for (c = g.length; m < c; m++) {
      g[m].parentNode.removeChild(g[m]);
    }
    0 == e.getElementsByTagName("tr").length && e.parentNode.removeChild(e)
  }
  setFocusChildForStyle(ActiveCurrTable.rows[b].cells[d]);
  ActiveCurrTable.setAttribute("KEditorCellSelected",
      "KEditorCellSelected");
  ClearDraggingTableCellSelected();
  a && 0 < a.arrSelected.length
  && (KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0)
}

function command_ColumnProperty(a, c, b, d, e, f, g) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = GetTDTHCell(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
  setTableColumnSelect(a);
  a = getCellNearLeftTop(a);
  c = a.arrSelected.length;
  for (g = 0; g < c; g++) {
    "" != d && (a.arrSelected[g].style.width = d
        + "px"), a.arrSelected[g].style.textAlign = "" == e ? ""
        : e, a.arrSelected[g].style.verticalAlign = "" == f ? "" : f, "" != b
    && a.arrSelected[g].setAttribute("cellOrgBgColor",
        b);
  }
  ActiveCurrTable.setAttribute("KEditorCellSelected", "KEditorCellSelected");
  ClearDraggingTableCellSelected();
  a && a.arrSelected.length
  && (KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0)
}

function command_InsertCellBorder(a, c, b, d, e, f) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = GetParentbyTagName(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT, "table");
  var g = "";
  "collapse" == a.style.borderCollapse ? g = "N" : "separate"
      == a.style.borderCollapse && (g = "Y");
  a = !1;
  c = GetTDTHCell(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
  c = getCellNearLeftTop(c);
  for (var h = c.arrSelected.length, m = 0; m < h; m++) {
    a = c.arrSelected[m],
    "" != b && (a.style.borderTop = b), "" != d && (a.style.borderLeft = d), ""
    != e && (a.style.borderRight = e), "" != f
    && (a.style.borderBottom = f), a = !0;
  }
  if ("N" == g) {
    if ("" != b) {
      for (g = c.arrTop.length, m = 0; m < g;
          m++) {
        c.arrTop[m].style.borderBottom = b, a = !0;
      }
    }
    if ("" != d) {
      for (b = c.arrLeft.length, m = 0; m < b;
          m++) {
        c.arrLeft[m].style.borderRight = d, a = !0;
      }
    }
    if ("" != e) {
      for (d = c.arrRight.length, m = 0; m < d;
          m++) {
        c.arrRight[m].style.borderLeft = e, a = !0;
      }
    }
    if ("" != f) {
      for (e = c.arrBottom.length, m = 0; m < e;
          m++) {
        c.arrBottom[m].style.borderTop = f, a = !0
      }
    }
  }
  a && (KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(),
      KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0)
}

function command_cellBGColor(a, c, b) {
  keditor_src_init(c);
  a = document.getElementById(
      "keditor_em_" + KEDITORTOP.G_CURRKEDITOR.ID + "cell_bg_color_show");
  b ? a.style.backgroundColor = b : b = a.style.backgroundColor;
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  var d;
  try {
    if (KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT) {
      d = GetTDTHCell(
          KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
    } else {
      var e = getFirstRange().range;
      a = null;
      e && e.startContainer &&
      (a = getMyElementNode(e.startContainer));
      d = GetTDTHCell(a)
    }
    var f = getCellNearLeftTop(d), g = f.arrSelected.length;
    for (d = 0; d < g; d++) {
      var h = f.arrSelected[d];
      h.style.backgroundColor = b;
      h.removeAttribute("keditor_select")
    }
    f && 0 < f.arrSelected.length
    && (KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0);
    KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell")
  } catch (m) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(m)
  }
}

function command_InsertDogBGImg(a, c, b, d, e, f, g, h) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  "Y" == b
      ? (_iframeDoc.body.style.backgroundImage = "", _iframeDoc.body.style.backgroundAttachment = "", _iframeDoc.body.style.backgroundRepeat = "", _iframeDoc.body.style.backgroundColor = "", _iframeDoc.body.removeAttribute(
          "background"), KEDITORTOP.G_CURRKEDITOR._PageProp.bodyimage = "", KEDITORTOP.G_CURRKEDITOR._PageProp.bodycolor =
          "", KEDITORTOP.G_CURRKEDITOR._PageProp.bodyattachment = "", KEDITORTOP.G_CURRKEDITOR._PageProp.bodyrepeat = "", showRuler(
          KEDITORTOP.G_CURRKEDITOR)) : "N" == b && ("1"
  != KEDITORTOP.G_CURRKEDITOR._config.horizontalLine.use && ("[FAIL]"
  == d.substring(0, 6) && (_iframeDoc.body.setAttribute("alt", d.substring(6,
      d.length)), d = KEDITORTOP.G_CURRKEDITOR._config.webPath.image
      + "dialog/image_xbox.jpg"), _iframeDoc.body.style.backgroundImage = "url("
      + d + ")", _iframeDoc.body.removeAttribute(
      "background"), _iframeDoc.body.style.backgroundAttachment =
      e, _iframeDoc.body.style.backgroundRepeat = f, "" != g
  && (_iframeDoc.body.style.backgroundColor = g)), KEDITORTOP.G_CURRKEDITOR._PageProp.bodyimage = "url("
      + d + ")", "" != g
  && (KEDITORTOP.G_CURRKEDITOR._PageProp.bodycolor = g), KEDITORTOP.G_CURRKEDITOR._PageProp.bodyattachment = e, KEDITORTOP.G_CURRKEDITOR._PageProp.bodyrepeat = f);
  KEDITORTOP.G_CURRKEDITOR._PageProp.bshowgrid && 1
  == KEDITORTOP.G_CURRKEDITOR._PageProp.bshowgrid ? changeBodyImageProperty(!1)
      : "1" != KEDITORTOP.G_CURRKEDITOR._config.horizontalLine.use
      && (changeBodyImageProperty(!0),
      G_BodyFit.noncreationAreaBackgroundStatus && setBodyFitStyle(
          KEDITORTOP.G_CURRKEDITOR, !0));
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertImage(a, c, b, d, e, f, g, h) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  b = getFirstRange().range;
  try {
    1 == b.collapsed && setRestoreCaretPos(!1)
  } catch (m) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(m)
  }
  b = _iframeDoc.createElement("img");
  "0" != KEDITORTOP.G_CURRKEDITOR._config.allowImgSize && ("" != h.width
  && (b.style.width = h.width + h.widthUnit), "" != h.height
  && (b.style.height = h.height + h.heightUnit));
  "[FAIL]" ==
  h.srcURL.substring(0, 6) ? (b.setAttribute("src",
          KEDITORTOP.G_CURRKEDITOR._config.webPath.image
          + "dialog/image_xbox.jpg"), b.setAttribute("alt",
          h.srcURL.substring(6, h.srcURL.length).replace(/"/g, "'")))
      : b.setAttribute("src", h.srcURL);
  0 == h.input_url_checked && "[FAIL]" != h.srcURL.substring(0, 6)
  && insertImageSrc(KEDITORTOP.G_CURRKEDITOR, h.srcURL);
  b.setAttribute("title", h.title);
  "[FAIL]" != h.srcURL.substring(0, 6) && (h.alt = h.alt.replace(/&#10;/g,
      "\n"), b.setAttribute("alt", h.alt));
  "undefined" != typeof h.id && "" != h.id &&
  b.setAttribute("id", h.id);
  "undefined" != typeof h.className && "" != h.className && b.setAttribute(
      "class", h.className);
  "" != h.margin_top.toString() && (b.style.marginTop = h.margin_top + "px");
  "" != h.margin_right.toString() && (b.style.marginRight = h.margin_right
      + "px");
  "" != h.margin_bottom.toString() && (b.style.marginBottom = h.margin_bottom
      + "px");
  "" != h.margin_left.toString() && (b.style.marginLeft = h.margin_left + "px");
  "" != h.align && b.setAttribute("align", h.align);
  "" == h.border ? b.setAttribute("border", "0") : b.setAttribute("border",
      h.border);
  "" == h.border ? b.style.border = "0px solid" : b.style.border = h.border
      + "px solid";
  b = setImageBorder(b, {
    borderStyle: h.borderStyle,
    borderWidth: h.borderThickness,
    borderColor: h.borderColor,
    borderKind: h.borderKind
  });
  if ((d = h.img_attr_info_arr) && 0 < d.length) {
    for (f = d.length, e = 0;
        e < f; e++) {
      b.setAttribute(d[e].name, d[e].value);
    }
  }
  d = getFirstRange().range;
  d.collapse(!0);
  if (h.figure) {
    e = _iframeDoc.createElement("figure");
    f = _iframeDoc.createElement("figcaption");
    e.setAttribute("contenteditable", "false");
    e.setAttribute("style",
        KEDITORTOP.G_CURRKEDITOR._config.figure.figurestyle);
    f.setAttribute("style",
        KEDITORTOP.G_CURRKEDITOR._config.figure.figcaptionstyle);
    f.setAttribute("contenteditable", "true");
    f.setAttribute("raon_default_caption", "true");
    e.appendChild(b);
    e.appendChild(f);
    e = e.outerHTML;
    if (KEDITORTOP.RAONKEDITOR.browser.chrome
        || KEDITORTOP.RAONKEDITOR.browser.opera) {
      if (_iframeDoc.execCommand("inserthtml", !1,
          e), d = getFirstRange().range) {
        rangy.getSelection(
            _iframeWin).removeAllRanges(), rangy.getSelection(
            _iframeWin).addRange(d)
      }
    } else {
      pasteHtmlAtCaretHuge(e);
    }
    f = _iframeDoc.getElementsByTagName("figcaption");
    g = f.length;
    for (e = 0; e < g; e++) {
      if ("true" == f[e].getAttribute(
          "raon_default_caption")) {
        f[e].removeAttribute("raon_default_caption");
        g = _iframeDoc.createElement("p");
        g.innerHTML = KEDITORTOP.G_CURRKEDITOR._config.figure.defaultcaption;
        f[e].appendChild(g);
        break
      }
    }
  } else {
    d.insertNode(b);
  }
  try {
    if (void 0 == b.nextSibling || null == b.nextSibling) {
      var q = d.getDocument().createTextNode(" ");
      b.parentNode.appendChild(q)
    }
  } catch (t) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
    console.log(t)
  }
  d.selectNode(b);
  d.collapse(!1);
  q = !1;
  KEDITORTOP.RAONKEDITOR.browser.safari && h.continueInsert
  && (q = !0, e = _iframeDoc.createElement("br"), d.insertNode(e), d.selectNode(
      e), d.collapse(!1));
  h.imageSpacing && (e = _iframeDoc.createElement("br"), d.insertNode(
      e), d.selectNode(e), d.collapse(!1), 0 == q
  && (e = _iframeDoc.createElement("br"), d.insertNode(e), d.selectNode(
      e), d.collapse(!1)));
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(d);
  "" != h.linkurl && (b.parentNode.removeChild(b),
      command_InsertHyperLink(a, c, {
        type: "hyperlink",
        text: b.outerHTML,
        url: h.linkurl,
        target: h.linktarget,
        title: h.linktitle
      }));
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertMedia(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange();
  0 == a.range.collapsed ? setRestoreCaretPos(!0) : setRestoreCaretPos(!1);
  range.pasteHtml(b);
  a.sel.collapseToEnd();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertReplacedImg(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  0 == getFirstRange().range.collapsed ? setRestoreCaretPos(!0)
      : setRestoreCaretPos(!1);
  a = makeImageElementForObject(b);
  c = getFirstRange().range;
  c.deleteContents();
  c.insertNode(a);
  c.selectNode(c.endContainer);
  c.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(c);
  rangy.getSelection(_iframeWin).collapseToEnd();
  "0" == KEDITORTOP.G_CURRKEDITOR._config.useReplaceImage
  && (KEDITORTOP.G_CURRKEDITOR._editorCustomDataMode = !1, ReplaceImageToRealObject(
      !1, !0));
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertLinkMedia(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange();
  c = a.range;
  0 == c.collapsed ? setRestoreCaretPos(!0) : setRestoreCaretPos(!1);
  c.pasteHtml(b);
  a.sel.collapseToEnd();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_ModifyReplacedImg(a, c, b, d) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  a = d.getAttribute("keditorcustomdata");
  if (null != a && void 0 != a) {
    if (a = getKEditorCustomData(a), "iframe"
    == b.type || "iframe"
    == b.type2) {
      a.type = b.type, a.type2 = b.type2, a.src = b.src ? b.src
          : "", a.id = b.id ? b.id : "", a.name = b.name ? b.name
          : "", a.title = b.title ? b.title : "", a.className = b.className
          ? b.className : "", a.width = b.width ? b.width
          : "", a.height = b.height
          ? b.height : "", a.align = b.align ? b.align
          : "", a.scrolling = b.scrolling ? b.scrolling :
          "", a.frameBorder = b.frameBorder ? b.frameBorder
          : "", a.attributes = b.attributes ? b.attributes
          : "", a.caption = b.caption ? b.caption : "", -1 < b.width.indexOf(
          "px")
      || -1 < b.width.indexOf("%") || -1 < b.width.indexOf("pt")
          ? d.style.width = b.width : "" != b.width && (d.style.width = b.width
          + "px"), -1 < b.height.indexOf("px") || -1 < b.height.indexOf("%")
      || -1
      < b.height.indexOf("pt") ? d.style.height = b.height
          : d.style.height = b.height + "px", d.align = b.align;
    } else if ("flash"
        == b.type || "flash" == b.type2) {
      a.type = b.type;
      a.type2 = b.type2;
      a.src = b.src;
      a.width =
          b.width;
      a.height = b.height;
      a.hspace = b.hspace;
      a.vspace = b.vspace;
      a.scale = b.scale;
      a.allowScriptAccess = b.allowScriptAccess;
      a.quality = b.quality;
      a.align = "";
      a.menu = b.menu;
      a.play = b.play;
      a.loop = b.loop;
      a.allowFullScreen = b.allowFullScreen;
      a.flashvars = b.flashvars;
      a.caption = b.caption;
      -1 < b.width.indexOf("px") || -1 < b.width.indexOf("%") || -1
      < b.width.indexOf("pt") ? d.style.width = b.width
          : d.style.width = b.width
              + "px";
      -1 < b.height.indexOf("px") || -1 < b.height.indexOf("%") || -1
      < b.height.indexOf("pt") ? d.style.height = b.height : d.style.height =
          b.height + "px";
      d.align = "";
      c = "absbottom absmiddle absmiddle bottom left middle right texttop top".split(
          " ");
      for (var e = c.length, f = 0; f < e; f++) {
        if (b.align == c[f]) {
          d.align = b.align;
          a.align = b.align;
          break
        }
      }
    }
  }
}

function command_InsertHR(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  0 == getFirstRange().range.collapsed ? setRestoreCaretPos(!0)
      : setRestoreCaretPos(!1);
  var b = getFirstRange().range;
  if (b) {
    for (var d = _iframeDoc.createElement("hr"), e = !1, f = b.startContainer;
        f;) {
      if ("p" === f.nodeName.toLowerCase()) {
        e = !0;
        break
      }
      f = f.firstChild
    }
    e && (b.setStartBefore(f), b.collapse(!0));
    b.insertNode(d);
    b.selectNode(d);
    b.collapse(!1)
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_insertHorizontalLine(a, c, b, d, e) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  0 == getFirstRange().range.collapsed ? setRestoreCaretPos(!0)
      : setRestoreCaretPos(!1);
  a = getFirstRange().range;
  c = _iframeDoc.createElement("hr");
  if (a) {
    d ? (c.style.cssText = d.style.cssText, 100 > e
    && KEDITORTOP.RAONKEDITOR.util.raonkSetAttribute(c, "width", e, "%")) : b
        && (100 > b.width && KEDITORTOP.RAONKEDITOR.util.raonkSetAttribute(c,
            "width", b.width, "%"), "" == b.height ? c.style.height = "1px"
            : c.style.height = b.height + "px", "" != b.align
        && (c.align = b.align), c.style.backgroundColor = "" != b.color
            ? b.color
            : "#000000", c.style.color = b.color, c.style.border = "0px");
    for (b = a.startContainer;
        b && "p" !== b.nodeName.toLowerCase();) {
      b = b.parentNode;
    }
    b = c.outerHTML;
    b += '<p id="dext_target"></p><p><br></p>';
    if (KEDITORTOP.RAONKEDITOR.browser.chrome
        || KEDITORTOP.RAONKEDITOR.browser.opera) {
      if (_iframeDoc.execCommand("inserthtml", !1,
          b), a = getFirstRange().range) {
        rangy.getSelection(
            _iframeWin).removeAllRanges(),
            rangy.getSelection(_iframeWin).addRange(a)
      }
    } else {
      pasteHtmlAtCaretHuge(b);
    }
    if (b = _iframeDoc.getElementById(
        "dext_target")) {
      d = b.nextSibling, a.selectNode(
          b), a.deleteContents(), d && doSetCaretPosition(d, 0)
    }
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertIframe(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  0 == getFirstRange().range.collapsed ? setRestoreCaretPos(!0)
      : setRestoreCaretPos(!1);
  a = _iframeDoc.createElement("iframe");
  "" != b.id && (a.id = b.id);
  "" != b.name && (a.name = b.name);
  "" != b.title && (a.title = b.title);
  a.style.width = "" != b.width ? b.width + "px" : "400px";
  a.style.height = "" != b.height ? b.height + "px" : "400px";
  a.align = b.align;
  a.scrolling = b.scroll;
  a.frameBorder = 1 == b.border ? 1 : 0;
  a.src = b.url;
  b = getFirstRange().range;
  b.deleteContents();
  b.insertNode(a);
  b.selectNode(b.endContainer);
  b.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(b);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertHyperLink(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  if ("hyperlink" == b.type || "image" == b.type) {
    if (1 == a.collapsed) {
      "" == b.text && (b.text = b.url);
      c = _iframeDoc.createElement("a");
      0 > b.text.toLowerCase().indexOf("<img")
      && (b.text = KEDITORTOP.RAONKEDITOR.util.escapeHtml(b.text));
      c.innerHTML = b.text;
      c.setAttribute("href", b.url);
      c.target = "undefined" !=
      typeof b.target && "" != b.target ? b.target : "_blank";
      " " == b.target && c.removeAttribute("target");
      "undefined" != typeof b.title && "" != b.title ? c.title = b.title : "0"
          != KEDITORTOP.G_CURRKEDITOR._config.accessibility && -1
          < KEDITORTOP.G_CURRKEDITOR._config.accessibilityValidationItems.indexOf(
              "a_title") && (c.title = b.url);
      "undefined" != typeof b.id && "" != b.id && (c.id = b.id);
      "undefined" != typeof b.className && "" != b.className
      && (c.className = b.className);
      "undefined" != typeof b.type2 && "insert_file" == b.type2
      && (c.setAttribute("KEditorInsertFile",
          ""), "1" == KEDITORTOP.G_CURRKEDITOR._config.attachFileImage
      && attachFileImage(c, b));
      if ("undefined" != typeof b.attr_info_arr && 1
          < b.attr_info_arr.length) {
        for (var d = b.attr_info_arr.length, e = 1;
            e < d; e++) {
          var f = b.attr_info_arr[e].split("^");
          2 == f.length && c.setAttribute(f[0], f[1])
        }
      }
      a.deleteContents();
      a.insertNode(c);
      a.selectNode(c);
      b = b.text.replace(/"/g, "'").match(
          RegExp("srcs*=s*(\"|')(([^\"']*))(\"|')", "gi"));
      e = "";
      b && 0 < b.length && (e = b[0].replace("src=", ""), e = e.replace(/\'/g,
          ""), e = e.replace(/&amp;/g, "&"), c.getElementsByTagName(
          "img")[0].src =
          e)
    } else {
      for (_iframeDoc.execCommand("CreateLink", !1,
          b.url), c = getFirstRange().range, 0 == !!c
      && (c = a), c = getNodesInRange(c), d = c.length, e = 0; e < d; e++) {
        "a"
        == c[e].nodeName.toLowerCase() && (c[e].target = "undefined"
        != typeof b.target && "" != b.target ? b.target : "_blank", "undefined"
        != typeof b.title && "" != b.title ? c[e].title = b.title : "0"
            != KEDITORTOP.G_CURRKEDITOR._config.accessibility && -1
            < KEDITORTOP.G_CURRKEDITOR._config.accessibilityValidationItems.indexOf(
                "a_title") && (c[e].title = b.url), "undefined" != typeof b.id
        && ""
        != b.id &&
        (c[e].id = b.id), "undefined" != typeof b.className && "" != b.className
        && (c[e].className = b.className), "undefined" != typeof b.type2
        && "insert_file" == b.type2 && (c[e].setAttribute("KEditorInsertFile",
            ""), "1" == KEDITORTOP.G_CURRKEDITOR._config.attachFileImage
        && attachFileImage(c[e], b)));
      }
    }
  } else {
    "bookmark" == b.type && (1 == a.collapsed
        ? ("" == b.text && (b.text = b.bookname), c = _iframeDoc.createElement(
            "a"), b.text = KEDITORTOP.RAONKEDITOR.util.escapeHtml(
            b.text), c.innerHTML = b.text, c.href = b.bookname, a.deleteContents(), a.insertNode(
            c),
            a.selectNode(c)) : (_iframeDoc.execCommand("CreateLink", !1,
            b.bookname), getNodesInRange(a)));
  }
  a.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  try {
    rangy.getSelection(_iframeWin).addRange(a)
  } catch (g) {
    alert("RAONKEDITOR Hyperlink error : " + g)
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertBookmark(a, c, b, d) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  0 == getFirstRange().range.collapsed ? setRestoreCaretPos(!0)
      : setRestoreCaretPos(!1);
  a = _iframeDoc.createElement("a");
  "" == b && (b = KEDITORTOP.RAONKEDITOR.browser.ie && "xp"
  != KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase() ? unescape(
      "%u200B") : unescape("%uFEFF"));
  a.innerHTML = b;
  a.setAttribute("id", d);
  a.setAttribute("name",
      d);
  a.className = "keditor_bookmark";
  b = getFirstRange().range;
  b.deleteContents();
  d = b.getDocument().createTextNode("\u00a0");
  b.insertNode(d);
  b.insertNode(a);
  b.selectNode(a.nextSibling);
  b.collapse(!1);
  KEDITORTOP.RAONKEDITOR.browser.ie && d.parentNode.removeChild(d);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(b);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertSymbol(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  a.deleteContents();
  0 == a.collapsed ? setRestoreCaretPos(!0) : setRestoreCaretPos(!1);
  a.pasteHtml(b + '<span id="keditor_symbol">keditor_symbol</span>');
  b = _iframeDoc.getElementById("keditor_symbol");
  doSetCaretPosition(b, 1);
  b.parentNode.removeChild(b);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_TableSelect(a, c, b, d) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  if (a = getFirstRange().range) {
    d = d ? d : GetTDTHCell(
        a.startContainer), GetParentbyTagName(d, "table").setAttribute(
        "KEditorCellSelected", "KEditorCellSelected"), "select_cell" == b
        ? setTableCellSelect(d) : "select_row" == b ? setTableRowSelect(d)
            : "select_column" == b ? setTableColumnSelect(d) : "select_all" == b
                && setTableAllSelect(d)
  }
}

function command_TableWidthHeightRemove(a, c, b) {
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  "width_remove" == b ? setTableWidthRemove() : "height_remove" == b
      ? setTableHeightRemove() : "width_height_remove" == b
      && setTableWidthHeightRemove();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_TableSameWidthheight(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  "same_width" == b ? setTableWidthSame() : "same_height" == b
      ? setTableHeightSame() : "same_widthheight" == b
      && (setTableWidthSame(), setTableHeightSame());
  a = GetTableSelectionCells();
  1 < a.length ? KEDITORTOP.G_CURRKEDITOR._iconEnable("selectedMultiCell") : 1
      == a.length && KEDITORTOP.G_CURRKEDITOR._iconEnable("selectedSingleCell");
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_TableRowClone(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var b = getFirstRange().range;
  b && (0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), b = GetTDTHCell(
      b.startContainer), setTableRowClone(
      b), KEDITORTOP.G_CURRKEDITOR._iconEnable(
      "focusInCell"), KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0)
}

function command_VerticalAlignExcute(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  if (a = getFirstRange().range) {
    var d = GetTDTHCell(a.startContainer);
    a = GetTableSelectionCells(d);
    c = a.length;
    0 == c && (a[0] = d, c = a.length);
    for (d = 0; d < c; d++) {
      var e = a[d];
      removeAttribute(e, "valign");
      e.style.verticalAlign = b
    }
    a = GetTableSelectionCells();
    c = a.length;
    0 == c ? KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell") :
        1 == c ? KEDITORTOP.G_CURRKEDITOR._iconEnable("selectedSingleCell") : 1
            < c && KEDITORTOP.G_CURRKEDITOR._iconEnable("selectedMultiCell");
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
  }
}

function command_editorSetting(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  a = KEDITORTOP.RAONKEDITOR.util.getEditorByName(a);
  a._setting.grid_color = b.grid_color;
  a._setting.grid_color_nm = b.grid_color_nm;
  a._setting.grid_spans = b.grid_spans;
  a._setting.grid_form = b.grid_form;
  a._setting.page_title = b.page_title;
  a._setting.encoding = b.encoding;
  a._setting.doctype = b.doctype;
  a._setting.xhtml = b.xhtml;
  a._setting.lang = b.lang;
  a._PageProp.encoding = b.encoding;
  a._PageProp.doctype = b.doctype;
  a._PageProp.xmlnsname =
      b.xhtml;
  a._PageProp.lang = b.lang;
  a._setting.auto_save = b.auto_save;
  c = !1;
  "1" == a._config.setAutoSave.saveAndStartInterval && b.auto_save && 0
  == b.auto_save.indexOf("1") && (c = !0);
  setAutoSave(a, void 0, c);
  KEDITORTOP.G_CURRKEDITOR.autoListUse = 0 < b.auto_list ? 1 < b.auto_list ? 0
      : 1 : a._config.autoList.use;
  KEDITORTOP.RAONKEDITOR.browser.LocalStorageSupported
  && (KEDITORTOP.KEDITORWIN.localStorage["raon_" + a.ID
  + "_auto_list"] = b.auto_list);
  var d = c = "";
  "1" == a._config.useLineBreak
  && (a._setting.word_break_type = b.word_break_type, a._setting.word_wrap_type =
      b.word_wrap_type, c = b.word_break_type, d = b.word_wrap_type, setUserSetting(
      a, "lineBreak"));
  var e = "", f = "", g = "";
  1 == a._config.usePersonalSetting
  && (a._setting.personal_font_family = b.personal_font_family, a._setting.personal_font_size = b.personal_font_size, a._setting.personal_line_height = b.personal_line_height, a._config.pasteToImage = "-1"
  == b.personal_paste_to_image ? a._setting.config_paste_to_image
      : b.personal_paste_to_image, a._setting.personal_paste_to_image = b.personal_paste_to_image, setUserSetting(
      a, "personalSetting"),
      e = b.personal_font_family, f = b.personal_font_size, g = b.personal_line_height, ""
  == e && (e = a._config.defaultFontFamily), "" == f
  && (f = a._config.defaultFontSize), "" == g
  && (g = a._config.defaultLineHeight), a._setting.font_family = e, a._kEditorFontFamily._fontFamily[a.ID]
  && (a._kEditorFontFamily._fontFamily[a.ID][0] = e), a._kEditorFontFamily._iframe_doc
  && (a._kEditorFontFamily._iframe_doc.getElementById(
      "ff_" + a.ID + "_0").getElementsByTagName(
      "span")[0].style.fontFamily = e), a._setting.font_size = f, a._kEditorFontSize._fontSize[a.ID]
  &&
  (a._kEditorFontSize._fontSize[a.ID][0] = f), a._kEditorFontSize._iframe_doc
  && (a._kEditorFontSize._iframe_doc.getElementById("fs_" + a.ID
      + "_0").style.fontSize = f), a._setting.line_height = g, a._kEditorLineHeight._lineHeight[a.ID]
  && (a._kEditorLineHeight._lineHeight[a.ID][0] = g));
  if (1 == a._config.useLineBreak || 1
      == a._config.usePersonalSetting) {
    e = createEditorDefaultStyleInnerHTML(
        a._config, e, f, g, c, d), d = _iframeDoc.createElement(
        "style"), d.type = "text/css", d.styleSheet
        ? (d.styleSheet.cssText = e, "" == d.innerHTML && (d.innerHTML =
            e)) : d.appendChild(
            _iframeDoc.createTextNode(e)), (e = getDefaultStyleTag(_iframeDoc,
        a))
        ? (e.parentNode.insertBefore(d, e), e.parentNode.removeChild(e))
        : (e = _iframeDoc.getElementsByTagName("head")[0]) && e.appendChild(d);
  }
  if (b.word_break_for_all_table) {
    for ("" == c
    && (c = "normal"), d = _iframeDoc.getElementsByTagName(
        "table"), e = d.length, f = 0; f < e; f++) {
      d[f].style.wordBreak = c;
    }
  }
  setDoctypeProperty(a._docType[b.doctype], b.encoding, b.lang, b.xhtml);
  c = a._config.webPath.image + "grid/bggrid_" + b.grid_spans + "_"
      + b.grid_color_nm.replace(" ",
          "").toLowerCase() + "_" + b.grid_form + ".png";
  _iframeDoc.title = b.page_title;
  a._PageProp.bshowgrid && 1 == a._PageProp.bshowgrid
  && (a._PageProp.gridimage = "url(" + KEDITORTOP.RAONKEDITOR.util.url.full_url(
          c)
      + ")", a._PageProp.gridattachment = "scroll", a._PageProp.gridrepeat = "repeat", changeBodyImageProperty(
      !1));
  G_BodyFit.noncreationAreaBackgroundStatus && setBodyFitStyle(a, !0)
}

function command_InsertInputText(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  c = _iframeDoc.createElement("input");
  c.type = b.insertType;
  c.setAttribute("value", b.insertValue);
  c.id = b.insertId;
  c.className = b.insertClass;
  c.title = b.insertTitle;
  "" != b.insertAlign && (c.style.textAlign = b.insertAlign);
  "" != b.insertWidth && (c.style.width = b.insertWidth + "px");
  "" != b.insertHeight &&
  (c.style.height = b.insertHeight + "px");
  b.insertDisabled ? c.disabled = !0 : c.removeAttribute("disabled");
  b.insertReadonly ? c.readOnly = !0 : c.removeAttribute("readonly");
  "" != b.insertSize && (c.size = b.insertSize);
  "" != b.insertMaxlength && (c.maxLength = b.insertMaxlength);
  var d = b.insertEventNameArr.length;
  if (0 < d) {
    for (var e = "", f = "", g = 0; g < d; g++) {
      0 != g
      && (e += "\x0B", f += "\x0B"), e += b.insertEventNameArr[g], f += b.insertEventFunctionArr[g];
    }
    d = {type: "event"};
    d.eventName = e;
    d.eventFunction = f;
    setKEditorCustomData(c, d)
  }
  a.deleteContents();
  KEDITORTOP.RAONKEDITOR.browser.ie && 8
  <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
  || !KEDITORTOP.RAONKEDITOR.browser.ie ? (c.setAttribute("name",
          b.insertName), a.insertNode(c), a.selectNode(c))
      : (c = c.outerHTML, c = c.replace(">",
          ' name="' + b.insertName + '" />'), a.pasteHtml(c));
  a.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(a);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertInputRadioOrCheckbox(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  c = _iframeDoc.createElement("input");
  c.type = b.insertType;
  c.id = b.insertId;
  c.className = b.insertClass;
  c.title = b.insertTitle;
  "" != b.insertWidth && (c.style.width = b.insertWidth + "px");
  "" != b.insertHeight && (c.style.height = b.insertHeight + "px");
  b.insertDisabled ? c.disabled = !0 : c.removeAttribute("disabled");
  b.insertChecked ? (c.checked = !0, c.setAttribute("checked", "checked"))
      : (c.checked = !1, c.removeAttribute("chekced"));
  c.setAttribute("value", b.insertValue);
  var d = b.insertEventNameArr.length;
  if (0 < d) {
    for (var e = "", f = "", g = 0; g < d; g++) {
      0 != g
      && (e += "\x0B", f += "\x0B"), e += b.insertEventNameArr[g], f += b.insertEventFunctionArr[g];
    }
    g = {type: "event"};
    g.eventName = e;
    g.eventFunction = f;
    setKEditorCustomData(c, g)
  }
  a.deleteContents();
  if (KEDITORTOP.RAONKEDITOR.browser.ie && 8
      <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
      || !KEDITORTOP.RAONKEDITOR.browser.ie) {
    c.setAttribute("name",
        b.insertName);
    if ("radio" == b.insertType
        && b.insertChecked) {
      for (e = _iframeDoc.getElementsByName(
          b.insertName), f = e.length, g = 0; g < f;
          g++) {
        e[g].checked = !1, e[g].removeAttribute("checked");
      }
    }
    a.insertNode(c);
    a.selectNode(c);
    b.insertChecked && (c.checked = !0, c.setAttribute("checked", "checked"))
  } else {
    if ("radio" == b.insertType
        && b.insertChecked) {
      for (e = _iframeDoc.getElementsByName(
          b.insertName), f = e.length, g = 0; g < f;
          g++) {
        e[g].checked = !1, e[g].removeAttribute("checked");
      }
    }
    c = c.outerHTML;
    c = c.replace(">", ' name="' + b.insertName + '" />');
    a.pasteHtml(c)
  }
  a.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(a);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertInputButton(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  c = _iframeDoc.createElement("input");
  c.type = b.insertType;
  c.setAttribute("value", b.insertValue);
  c.id = b.insertId;
  c.className = b.insertClass;
  c.title = b.insertTitle;
  "" != b.insertAlign && (c.style.textAlign = b.insertAlign);
  "" != b.insertWidth && (c.style.width = b.insertWidth + "px");
  "" != b.insertHeight &&
  (c.style.height = b.insertHeight + "px");
  b.insertDisabled ? c.disabled = !0 : c.removeAttribute("disabled");
  var d = b.insertEventNameArr.length;
  if (0 < d) {
    for (var e = "", f = "", g = 0; g < d; g++) {
      0 != g
      && (e += "\x0B", f += "\x0B"), e += b.insertEventNameArr[g], f += b.insertEventFunctionArr[g];
    }
    d = {type: "event"};
    d.eventName = e;
    d.eventFunction = f;
    setKEditorCustomData(c, d)
  }
  a.deleteContents();
  KEDITORTOP.RAONKEDITOR.browser.ie && 8
  <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
  || !KEDITORTOP.RAONKEDITOR.browser.ie ? (c.setAttribute("name", b.insertName),
      a.insertNode(c), a.selectNode(c)) : (c = c.outerHTML, c = c.replace(">",
      ' name="' + b.insertName + '" />'), a.pasteHtml(c));
  a.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(a);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertInputSelect(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  c = _iframeDoc.createElement("select");
  c.setAttribute("value", b.insertValue);
  c.multiple = b.insertMultiselect;
  c.id = b.insertId;
  c.className = b.insertClass;
  c.title = b.insertTitle;
  c.size = b.insertSize;
  "" != b.insertWidth && (c.style.width = b.insertWidth + "px");
  "" != b.insertHeight && (c.style.height = b.insertHeight +
      "px");
  b.insertDisabled ? c.disabled = !0 : c.removeAttribute("disabled");
  for (var d = b.insertOptionsArr.length, e = 0; e < d; e++) {
    var f = _iframeDoc.createElement("option");
    f.innerHTML = b.insertOptionsArr[e];
    f.setAttribute("value", b.insertOptionsValueArr[e]);
    f.selected = b.insertOptionsSelected[e];
    c.appendChild(f)
  }
  var g = b.insertEventNameArr.length;
  if (0 < g) {
    f = d = "";
    for (e = 0; e < g; e++) {
      0 != e
      && (d += "\x0B", f += "\x0B"), d += b.insertEventNameArr[e], f += b.insertEventFunctionArr[e];
    }
    e = {type: "event"};
    e.eventName = d;
    e.eventFunction = f;
    setKEditorCustomData(c,
        e)
  }
  a.deleteContents();
  KEDITORTOP.RAONKEDITOR.browser.ie && 8
  <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
  || !KEDITORTOP.RAONKEDITOR.browser.ie ? (c.setAttribute("name",
          b.insertName), a.insertNode(c), a.selectNode(c))
      : (c = c.outerHTML, c = c.replace(">",
          ' name="' + b.insertName + '" >'), a.pasteHtml(c));
  a.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(a);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertInputTextarea(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  c = _iframeDoc.createElement("textarea");
  c.value = b.insertValue;
  c.innerHTML = b.insertValue;
  c.id = b.insertId;
  c.className = b.insertClass;
  c.title = b.insertTitle;
  "" != b.insertRows && (c.rows = b.insertRows);
  "" != b.insertCols && (c.cols = b.insertCols);
  "" != b.insertWrap && (c.wrap = b.insertWrap);
  "" != b.insertWidth &&
  (c.style.width = b.insertWidth + "px");
  "" != b.insertHeight && (c.style.height = b.insertHeight + "px");
  "" != b.insertAlign && (c.style.textAlign = b.insertAlign);
  b.insertDisabled ? c.disabled = !0 : c.removeAttribute("disabled");
  b.insertReadonly ? c.readOnly = !0 : c.removeAttribute("readonly");
  var d = b.insertEventNameArr.length;
  if (0 < d) {
    for (var e = "", f = "", g = 0; g < d; g++) {
      0 != g
      && (e += "\x0B", f += "\x0B"), e += b.insertEventNameArr[g], f += b.insertEventFunctionArr[g];
    }
    d = {type: "event"};
    d.eventName = e;
    d.eventFunction = f;
    setKEditorCustomData(c, d)
  }
  a.deleteContents();
  KEDITORTOP.RAONKEDITOR.browser.ie && 8
  <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
  || !KEDITORTOP.RAONKEDITOR.browser.ie ? (c.setAttribute("name",
          b.insertName), a.insertNode(c), a.selectNode(c))
      : (c = c.outerHTML, c = c.replace(">",
          ' name="' + b.insertName + '" >'), a.pasteHtml(c));
  a.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(a);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertInputHidden(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  c = _iframeDoc.createElement("input");
  c.type = "hidden";
  c.setAttribute("value", b.insertValue);
  c.id = b.insertId;
  c.className = b.insertClass;
  c.title = b.insertTitle;
  a.deleteContents();
  KEDITORTOP.RAONKEDITOR.browser.ie && 8
  <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
  || !KEDITORTOP.RAONKEDITOR.browser.ie ?
      (c.setAttribute("name", b.insertName), a.insertNode(c), a.selectNode(c))
      : (c = c.outerHTML, c = c.replace(">",
          ' name="' + b.insertName + '" />'), a.pasteHtml(c));
  KEDITORTOP.G_CURRKEDITOR._editorCustomDataMode = !0;
  ReplaceRealObjectToImage(!1);
  a.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(a);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertInputImage(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  c = _iframeDoc.createElement("input");
  c.type = b.insertType;
  c.setAttribute("value", b.insertValue);
  c.id = b.insertId;
  c.className = b.insertClass;
  c.title = b.insertTitle;
  c.src = b.insertSrc;
  b.insertAlign && (c.align = b.insertAlign);
  "" != b.insertWidth && (c.style.width = b.insertWidth + "px");
  "" != b.insertHeight &&
  (c.style.height = b.insertHeight + "px");
  b.insertDisabled ? c.disabled = !0 : c.removeAttribute("disabled");
  var d = b.insertEventNameArr.length;
  if (0 < d) {
    for (var e = "", f = "", g = 0; g < d; g++) {
      0 != g
      && (e += "\x0B", f += "\x0B"), e += b.insertEventNameArr[g], f += b.insertEventFunctionArr[g];
    }
    d = {type: "event"};
    d.eventName = e;
    d.eventFunction = f;
    setKEditorCustomData(c, d)
  }
  a.deleteContents();
  KEDITORTOP.RAONKEDITOR.browser.ie && 8
  <= KEDITORTOP.RAONKEDITOR.browser.ieVersion
  || !KEDITORTOP.RAONKEDITOR.browser.ie ? (c.setAttribute("name", b.insertName),
      a.insertNode(c), a.selectNode(c)) : (c = c.outerHTML, c = c.replace(">",
      ' name="' + b.insertName + '" />'), a.pasteHtml(c));
  a.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(a);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function isContainerMode() {
  var a = !1;
  try {
    a = -1 < KEDITORTOP.KEDITORWIN.location.href.indexOf(
        "editor_container.html")
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
  return a
}

function command_fullScreen(a, c) {
  if (1 == isContainerMode()) {
    return !1;
  }
  var b = document.getElementById("ue_editor_holder_" + a);
  try {
    "function" === typeof c._config.event.beforeFullScreen
        ? c._config.event.beforeFullScreen(a, c.FrameStatus) : "function"
        === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeFullScreen
        && KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforeFullScreen(a, c.FrameStatus)
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  if ("" == c.FrameStatus) {
    for (var e = KEDITORTOP.KEDITORDOC.getElementById("raonk_frame_holder" +
        c.ID);
        e.parentNode && "body" != e.parentNode.tagName.toLowerCase() && "html"
        != e.parentNode.tagName.toLowerCase();) {
      e = e.parentNode, "relative"
      == e.style.position && "auto" == e.style.overflow
          ? (e.style.overflow = "", G_FullScreenCheckObject.push(
              {flag: "1", object: e}))
          : (e.style.overflow = "visible", G_FullScreenCheckObject.push(
              {flag: "2", object: e}));
    }
    if (e = KEDITORTOP.KEDITORDOC.getElementById(
        "div_resizebar_" + c.ID)) {
      e.style.display = "none";
    }
    originScrollSize = getWindowScrollPos(KEDITORTOP.KEDITORWIN);
    orginEditorSize = getClientSize(b);
    var e = document.getElementById("keditor_topstatusbar_" + a),
        f = document.getElementById("keditor_menu_" + a),
        g = document.getElementById("keditor_toolbar_" + a),
        h = document.getElementById("keditor_statusbar_" + a), m, q, t, u;
    e && (m = getClientRect(e));
    f && (q = getClientRect(f));
    g && (t = getClientRect(g));
    h && (u = getClientRect(h));
    e = 0;
    q && (e += q.bottom - q.top);
    t && (e += t.bottom - t.top);
    e = m ? e + (m.bottom - m.top) : e + 1;
    e = u ? e + (u.bottom - u.top) : e + 1;
    c.baseMenuToolbarHeight = e;
    m = window.frameElement;
    originfull.margin1 = KEDITORTOP.KEDITORDOC.documentElement.style.margin;
    originfull.padding1 = KEDITORTOP.KEDITORDOC.documentElement.style.padding;
    originfull.border1 = KEDITORTOP.KEDITORDOC.documentElement.style.border;
    originfull.height1 = KEDITORTOP.KEDITORDOC.documentElement.style.height;
    originfull.overflow1 = KEDITORTOP.KEDITORDOC.documentElement.style.overflow;
    originfull.margin2 = KEDITORTOP.KEDITORDOC.body.style.margin;
    originfull.padding2 = KEDITORTOP.KEDITORDOC.body.style.padding;
    originfull.border2 = KEDITORTOP.KEDITORDOC.body.style.border;
    originfull.height2 = KEDITORTOP.KEDITORDOC.body.style.height;
    originfull.overflow2 = KEDITORTOP.KEDITORDOC.body.style.overflow;
    KEDITORTOP.KEDITORDOC.documentElement.style.overflow = "hidden";
    KEDITORTOP.KEDITORDOC.documentElement.style.padding = "0";
    KEDITORTOP.KEDITORDOC.documentElement.style.margin = "0";
    KEDITORTOP.KEDITORDOC.documentElement.style.border = "0";
    KEDITORTOP.KEDITORDOC.documentElement.style.height = "100%";
    KEDITORTOP.KEDITORDOC.body.style.overflow = "hidden";
    KEDITORTOP.KEDITORDOC.body.style.padding = "0";
    KEDITORTOP.KEDITORDOC.body.style.margin = "0";
    KEDITORTOP.KEDITORDOC.body.style.border =
        "0";
    KEDITORTOP.KEDITORDOC.body.style.height = "100%";
    originfull.overflow3 = m.style.overflow;
    originfull.position3 = m.style.position;
    originfull.zIndex = m.style.zIndex;
    getClientRect(m);
    m.style.overflow = "hidden";
    m.style.position = "absolute";
    m.style.width = "100%";
    m.style.height = "100%";
    m.style.zIndex = c._config.zIndex;
    q = getWindowClientSize(KEDITORTOP.KEDITORWIN);
    m.style.width = q[0] + "px";
    m.style.height = q[1] + "px";
    b.style.height = q[1] - c.baseMenuToolbarHeight + "px";
    m.style.left = "0px";
    m.style.top = "0px";
    b = getClientRect(m);
    relativePos = isRelativePosition(m);
    0 < b.left || 0 < b.top ? relativePos = !0
        : (m.style.left = "0px", m.style.top = "0px");
    setBackupHiddenStyle(m, KEDITORTOP.KEDITORWIN);
    c.FrameStatus = "full_size";
    setEditorHeight(c, !1);
    resizeKeditorWin();
    KEDITORTOP.RAONKEDITOR.util.addEvent(KEDITORTOP.KEDITORWIN, "resize",
        resizeKeditorWin)
  } else {
    if (G_FullScreenCheckObject && 0 < G_FullScreenCheckObject.length) {
      m = G_FullScreenCheckObject.length;
      for (q = 0; q < m; q++) {
        "1" == G_FullScreenCheckObject[q].flag
            ? G_FullScreenCheckObject[q].object.style.overflow =
                "auto" : "2" == G_FullScreenCheckObject[q].flag
            && (G_FullScreenCheckObject[q].object.style.overflow = "");
      }
      G_FullScreenCheckObject = []
    }
    if (e = KEDITORTOP.KEDITORDOC.getElementById(
        "div_resizebar_" + c.ID)) {
      e.style.display = "";
    }
    KEDITORTOP.RAONKEDITOR.util.removeEvent(KEDITORTOP.KEDITORWIN, "resize",
        resizeKeditorWin);
    m = window.frameElement;
    KEDITORTOP.KEDITORDOC.documentElement.style.margin = originfull.margin1;
    KEDITORTOP.KEDITORDOC.documentElement.style.padding = originfull.padding1;
    KEDITORTOP.KEDITORDOC.documentElement.style.border =
        originfull.border1;
    KEDITORTOP.KEDITORDOC.documentElement.style.height = originfull.height1;
    KEDITORTOP.KEDITORDOC.documentElement.style.overflow = originfull.overflow1;
    KEDITORTOP.KEDITORDOC.body.style.margin = originfull.margin2;
    KEDITORTOP.KEDITORDOC.body.style.padding = originfull.padding2;
    KEDITORTOP.KEDITORDOC.body.style.border = originfull.border2;
    KEDITORTOP.KEDITORDOC.body.style.height = originfull.height2;
    KEDITORTOP.KEDITORDOC.body.style.overflow = originfull.overflow2;
    m.style.overflow = originfull.overflow3;
    m.style.position = originfull.position3;
    m.style.left = "0px";
    m.style.top = "0px";
    m.style.width = "100%";
    m.style.height = "100%";
    m.width = "100%";
    m.height = "100%";
    m.style.zIndex = originfull.zIndex;
    setRestorreHiddenStyle();
    setEditorHeight(c, !0);
    b.style.height = c._defaultHeight + "px";
    KEDITORTOP.KEDITORWIN.scroll(originScrollSize[0], originScrollSize[1]);
    c.FrameStatus = ""
  }
  b = [];
  "full_size" == c.FrameStatus ? b.push("full_screen") : removeArrayItemByValue(
      b, "full_screen");
  c._iconSelected(b);
  G_Ruler && "2" == c._config.ruler.mode &&
  G_Ruler.SetRulerPosition();
  setTimeout(function () {
    try {
      "function" === typeof c._config.event.fullScreen
          ? c._config.event.fullScreen(a, c.FrameStatus) : "function"
          === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_FullScreen
          && KEDITORTOP.KEDITORWIN.RAONKEDITOR_FullScreen(a, c.FrameStatus)
    } catch (b) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(b)
    }
  }, 100)
}

function command_grid(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  if (c._PageProp.bshowgrid && 1
      == c._PageProp.bshowgrid) {
    changeBodyImageProperty(
        !0), c._PageProp.bshowgrid = !1, G_BodyFit.noncreationAreaBackgroundStatus
    && setBodyFitStyle(c, !0);
  } else {
    var b = c._config.webPath.image + "grid/bggrid_" + c._setting.grid_spans
        + "_" + c._setting.grid_color_nm.replace(" ", "").toLowerCase() + "_"
        + c._setting.grid_form + ".png";
    c._PageProp.gridimage = "url(" + KEDITORTOP.RAONKEDITOR.util.url.full_url(b)
        +
        ")";
    c._PageProp.gridattachment = "scroll";
    c._PageProp.gridrepeat = "repeat";
    c._PageProp.bshowgrid = !0;
    changeBodyImageProperty(!1)
  }
}

function command_InsertPasteDialogHtml(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  a = KEDITORTOP.RAONKEDITOR.util.officeClean(b, !1);
  a = KEDITORTOP.RAONKEDITOR.util.htmlRevision(a);
  a = xssReplaceScript(null, a);
  "1" == c._config.tableAutoAdjustInPaste && /<table/i.test(a)
  && (a = command_AdjustTableAndCellWidth(c.ID, c,
      {type: "paste", htmlData: a}));
  a = removeEditorAttribute(a);
  "1" == c._config.compatibility.dingBatCharPaste && (a = dingBatFont(a, c));
  try {
    if ("function" === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste ||
        "function"
        === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste) {
      b = a;
      try {
        var d = {strHtml: a};
        "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste
            ? b = KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste(c.ID, d)
            : "function"
            === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste
            && (b = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste(c.ID, d))
      } catch (e) {
        b = a
      }
      if (b) {
        a = b;
      } else if (0 == b || "" == b) {
        return
      }
    }
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
  pasteWordCount(a) &&
  (0 < a.length
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), a = externalPageBreakDataRaplaceInEditor(
      a), -1 < a.indexOf("keditorcustomdata") && (a = checkExistCustomData(
      a)), _iframeDoc.execCommand("inserthtml", !1, a), 0 > a.indexOf(
      "keditorcustomdata") && (ReplaceImageToRealObject(
      !0), KEDITORTOP.G_CURRKEDITOR._editorCustomDataMode = !0, removeAllKEditorCustomData(), ReplaceRealObjectToImage(
      !1), xssReplaceScript(_iframeDoc)))
}

function command_tableIndentOutdent(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = GetParentbyTagName(parent.RAONKEDITOR.G_SELECTED_ELEMENT, "table", !0);
  try {
    if (null == a && 0 < GetTableSelectionCells().length) {
      var d = GetTableSelectionCells();
      a = GetParentbyTagName(d[0], "table", !0)
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
  var d =
          parseIntOr0(c._config.tableDefaultInoutdent),
      f = parseIntOr0(a.style.marginLeft, 10);
  if ("indent" == b) {
    if ("1" == c._config.limitTableInoutdent) {
      c = 0;
      b = getClientRect(a).right;
      if ("" != _iframeDoc.body.style.width && -1
          < _iframeDoc.body.style.width.indexOf(
              "px")) {
        c = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
            _iframeDoc.body.style.width), b -= 10;
      } else {
        c = _iframeDoc.documentElement.clientWidth;
        if (0 == c || null == c || void 0 == c) {
          c = _iframeDoc.body.clientWidth;
        }
        c = Math.floor(c);
        c -= 10
      }
      var g = b + d;
      0 < c && (g >= c && b < c ? f += c - b : g < c && (f += d), 0 > f && (f =
          0))
    } else {
      f = 989 >= f ? f + d : 999;
    }
  } else {
    "outdent" == b && (f = f >= d ? f - d
        : 0);
  }
  a.style.marginLeft = f + "px";
  doSetCaretPosition(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT, 0);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell")
}

function command_loadAutoSave(a, c, b) {
  c = function () {
    b && "" != b && KEDITORTOP.RAONKEDITOR.setHtmlValueExWithDocType(b, a)
  };
  0 == KEDITORTOP.RAONKEDITOR.isEmpty(a) ? 1 == confirm(
      RAONKEditor_lang.loadAutoSave.loadMsg) && c() : c()
}

function command_useRuler(a) {
  a = KEDITORTOP.KEDITORDOC.getElementById("raonk_frame_" + a);
  getIframeDocument(a);
  G_Ruler.viewRulerStatus = !G_Ruler.viewRulerStatus;
  G_Ruler.viewRulerStatus ? showRuler(KEDITORTOP.G_CURRKEDITOR) : hideRuler(
      KEDITORTOP.G_CURRKEDITOR)
}

function command_Direction(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  a = getFirstRange().range;
  var d = getFirstRange().sel, e = elems = null, f = [];
  if (a && a.startContainer) {
    if (1 == a.startContainer.nodeType) {
      var e = getMyElementNode(a.startContainer),
          g = rangy.dom.getBody(_iframeDoc).childNodes, h = g.length;
      for (c = 0; c < h; c++) {
        f.push(g[c])
      }
    } else {
      e = getMyElementNode(a.startContainer), f = getNodesInRange(a);
    }
    elems = getDirectionNode(a, d, e, f);
    d = elems.length;
    for (c = 0; c < d; c++) {
      elems[c].dir = b.toLowerCase();
    }
    setMenuIconRealable(getMyElementNode(a.startContainer))
  }
}

function command_tableCopy(a, c, b) {
  if (1 == b || 1
      == getCopyCellData()) {
    if (KEDITORTOP.RAONKEDITOR.browser.safari
        || KEDITORTOP.RAONKEDITOR.browser.ie && 12
        <= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
      if (b = KEDITORTOP.KEDITORDOC.getElementById(
          "keditor_paste_temp_frame")) {
        var d = getFirstRange().range;
        a = b.contentWindow;
        null == a.document.body && (a.document.open("text/html",
            "replace"), isCustomDomain(document)
        && (a.document.domain = document.domain), a.document.write(
            "<html><head></head><body></body></html>"), a.document.close());
        a.document.body.innerHTML = KEDITORTOP.RAONKEDITOR.G_COPIEDTABLE.outerHTML;
        b.style.display = "";
        b = _iframeWin.getSelection ? _iframeWin.getSelection()
            : _iframeDoc.selection;
        var e = a.document.createRange();
        e.selectNode(a.document.body.firstChild);
        b.removeAllRanges();
        b.addRange(e);
        var f = function (a) {
          a.preventDefault && a.preventDefault();
          a && a.clipboardData && a.clipboardData.setData
          && a.clipboardData.setData("text/html",
              KEDITORTOP.RAONKEDITOR.G_COPIEDTABLE.outerHTML);
          KEDITORTOP.RAONKEDITOR.util.removeEvent(_iframeDoc,
              "copy", f);
          _iframeWin.focus();
          a = getFirstRange();
          a.sel.removeAllRanges();
          a.sel.addRange(d)
        };
        KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "copy", f);
        a.document.execCommand("copy", !1, null)
      }
    } else {
      _iframeDoc.getElementById("editor_temp_copy_div")
      && _iframeDoc.getElementById(
          "editor_temp_copy_div").parentNode.removeChild(
          _iframeDoc.getElementById("editor_temp_copy_div"));
      var g = 0, h = 0;
      if (KEDITORTOP.RAONKEDITOR.browser.ie && 9
          > KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
        try {
          g = Math.max(_iframeDoc.documentElement.scrollLeft,
              _iframeDoc.body.scrollLeft), h = Math.max(
              _iframeDoc.documentElement.scrollTop, _iframeDoc.body.scrollTop)
        } catch (m) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(m)
        }
      }
      var q = _iframeDoc.createElement("div");
      q.style.position = "absolute";
      q.style.left = "-5000px";
      q.style.top = h + "px";
      q.id = "editor_temp_copy_div";
      q.style.width = "1px";
      q.style.height = "1px";
      q.innerHTML = KEDITORTOP.RAONKEDITOR.G_COPIEDTABLE.outerHTML;
      a = q.getElementsByTagName("table")[0];
      ClearDraggingTable(a);
      _iframeDoc.body.appendChild(q);
      setTimeout(function () {
        try {
          var a = saveSelection(c.ID, !0), b = getFirstRange(), d = b.range,
              e = b.sel;
          d.setStartBefore(q.firstChild);
          d.setEndAfter(q.firstChild);
          e.removeAllRanges();
          e.addRange(d);
          var f = function (a) {
            a.preventDefault && a.preventDefault();
            a && a.clipboardData && a.clipboardData.setData
            && a.clipboardData.setData("text/html", q.firstChild.outerHTML);
            KEDITORTOP.RAONKEDITOR.util.removeEvent(_iframeDoc, "copy", f)
          };
          KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "copy", f);
          _iframeDoc.execCommand("copy");
          if (a) {
            restoreSelection(a,
                !0);
            try {
              KEDITORTOP.RAONKEDITOR.browser.ie && 9
              > KEDITORTOP.RAONKEDITOR.browser.ieVersion && _iframeWin.scroll(g,
                  h)
            } catch (m) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(m)
            }
          }
          q.parentNode.removeChild(q)
        } catch (z) {
          _iframeDoc.getElementById("editor_temp_copy_div")
          && _iframeDoc.getElementById(
              "editor_temp_copy_div").parentNode.removeChild(
              _iframeDoc.getElementById("editor_temp_copy_div"))
        }
      }, 0)
    }
  }
}

function command_tablePaste(a, c, b) {
  try {
    keditor_src_init(c._EDITOR.design);
    if (b) {
      KEDITORTOP.RAONKEDITOR.G_COPIEDTABLE = b;
      KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA = [];
      var d = b.rows.length;
      for (a = 0; a < d; a++) {
        var e = b.rows[a], f = e.cells.length;
        for (c = 0; c < f; c++) {
          var g = e.cells[c];
          void 0 == KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA[a]
          && (KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA[a] = []);
          var h = "", h = KEDITORTOP.RAONKEDITOR.browser.ie && 11
          > KEDITORTOP.RAONKEDITOR.browser.ieVersion && "" == g.innerHTML
              ? "&nbsp;" : g.innerHTML;
          KEDITORTOP.RAONKEDITOR.G_COPIEDCELLDATA[a].push(h)
        }
      }
    }
    var m,
        q = getFirstRange().range;
    null != KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT ? "html"
    == KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.tagName.toLowerCase()
        ? m = _iframeDoc.body.lastChild : q && q.startContainer
        && (m = getMyElementNode(q.startContainer)) : q && q.startContainer
        && (m = getMyElementNode(q.startContainer));
    null != m && doSetCaretPosition(m, 0);
    0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    1 == setPasteCellData()
    && (KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount =
        0)
  } catch (t) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(t)
  }
}

function command_intablePaste(a, c) {
  try {
    keditor_src_init(c._EDITOR.design);
    var b, d = getFirstRange().range;
    null != KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT ? "html"
    == KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.tagName.toLowerCase()
        ? b = _iframeDoc.body.lastChild : d && d.startContainer
        && (b = getMyElementNode(d.startContainer)) : d && d.startContainer
        && (b = getMyElementNode(d.startContainer));
    null != b && doSetCaretPosition(b, 0);
    0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    DrageStartCell = null;
    1 == setPasteCellData()
    && (KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0)
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
}

function command_listNumberBullets(a, c, b, d) {
  restoreSelection();
  setFocusToBody();
  var e = getFirstRange(), f = e.range, g = getFirstRange().range, h = null;
  g && g.startContainer && (h = getMyElementNode(g.startContainer));
  a = GetParentbyTagName(h, "ol");
  var m = GetParentbyTagName(h, "ul");
  "N" == b && m || "N" == b && !a && !m ? DoExecuteCommand2(e.sel, f,
      "insertOrderedList", !1, !0) : ("B" == b && a || "B" == b && !a && !m)
      && DoExecuteCommand2(e.sel, f, "insertUnOrderedList", !1, !0);
  g = getFirstRange().range;
  h = null;
  g && g.startContainer && (h = getMyElementNode(g.startContainer));
  h && (e = null, "N" == b ? e = GetParentbyTagName(h, "ol") : "B" == b
      && (e = GetParentbyTagName(h, "ul")), e && (e.style.listStyleType = d, "N"
  == b && "" != c._config.orderListDefaultClass ? e.setAttribute("class",
      c._config.orderListDefaultClass) : "B" == b && ""
      != c._config.unOrderListDefaultClass && e.setAttribute("class",
          c._config.unOrderListDefaultClass)));
  e = getFirstRange().range;
  0 == !!e && (e = g);
  c = getNodesInRange(e);
  b = c.length;
  for (d = 0; d < b; d++) {
    if (e = c[d].nodeName.toLowerCase(), "ol" == e || "ul"
    == e) {
      e = c[d].parentNode, "p" == e.nodeName.toLowerCase() &&
      (e.parentNode.replaceChild(c[d],
          e), e = getFirstRange(), e.sel.removeAllRanges(), e.range.selectNodeContents(
          c[d]), e.sel.addRange(e.range));
    }
  }
  null == a && null == m && setLiStyle();
  removeDivInLiTag();
  if (null == KEDITORTOP.G_CURRKEDITOR._formatPainterList
      || KEDITORTOP.G_CURRKEDITOR._formatPainterList && "1"
      != KEDITORTOP.G_CURRKEDITOR._formatPainterList.nowApplying) {
    try {
      KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
    } catch (q) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
      console.log(q)
    }
  }
  G_Ruler && "2" == KEDITORTOP.G_CURRKEDITOR._config.ruler.mode
  && G_Ruler.SetRulerPosition();
  onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0})
}

function command_setClassStyle(a, c) {
  keditor_src_init(a._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var b = getFirstRange(), d = b.range;
  0 < a.UndoManager.charCount && a.UndoManager.putUndo();
  try {
    if (1 == d.collapsed) {
      var e = GetTableSelectionCells();
      if (0 != e.length) {
        var f = e.length,
            g = "BackCompat" == KEDITORTOP.G_CURRKEDITOR._DOC.compatMode,
            h = KEDITORTOP.RAONKEDITOR.browser.quirks;
        if (KEDITORTOP.RAONKEDITOR.browser.ie && (8
            >= KEDITORTOP.RAONKEDITOR.browser.ieVersion || 1 == g || 1
            == h)) {
          for (var m = 0; m < f; m++) {
            var q = e[m];
            "<p></p>" ==
            q.innerHTML.toLowerCase() ? q.innerHTML = "<p>&nbsp;</p>"
                : "<span></span>" == q.innerHTML.toLowerCase()
                    ? q.innerHTML = "<span>&nbsp;</span>" : ""
                    == q.innerHTML.toLowerCase() && (q.innerHTML = "&nbsp;")
          }
        }
        for (m = 0; m < f; m++) {
          b.sel.removeAllRanges();
          d.selectNode(e[m]);
          b.sel.addRange(d);
          var t = rangy.createCssClassApplier(c);
          t.applyToSelection(_iframeWin);
          rangy.getSelection(_iframeWin).removeAllRanges()
        }
        b.sel.removeAllRanges();
        doSetCaretPosition(DrageEndCell.childNodes[0], 1);
        !KEDITORTOP.RAONKEDITOR.browser.ie || 8
        != KEDITORTOP.RAONKEDITOR.browser.ieVersion &&
        1 != g && 1 != h || (KEDITORTOP.G_CURRKEDITOR._LastRange = null)
      }
    } else {
      t = rangy.createCssClassApplier(c), t.applyToSelection(_iframeWin);
    }
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
  } catch (u) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(u)
  }
}

function command_removeClassStyle(a, c) {
  keditor_src_init(a._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var b = getFirstRange(), d = b.range;
  0 < a.UndoManager.charCount && a.UndoManager.putUndo();
  try {
    if (1 == d.collapsed) {
      var e = GetTableSelectionCells();
      if (0 != e.length) {
        for (var f = e.length, g = 0; g < f; g++) {
          b.sel.removeAllRanges();
          d.selectNode(e[g]);
          b.sel.addRange(d);
          var h = rangy.createCssClassApplier(c);
          h.undoToSelection(_iframeWin);
          rangy.getSelection(_iframeWin).removeAllRanges()
        }
        b.sel.removeAllRanges();
        doSetCaretPosition(DrageEndCell.childNodes[0],
            1);
        !KEDITORTOP.RAONKEDITOR.browser.ie || 8
        != KEDITORTOP.RAONKEDITOR.browser.ieVersion && 1 != iframeQuirks && 1
        != browserQuirks || (KEDITORTOP.G_CURRKEDITOR._LastRange = null)
      }
    } else {
      h = rangy.createCssClassApplier(c), h.undoToSelection(_iframeWin);
    }
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
  } catch (m) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(m)
  }
}

function command_custom(a, c, b, d) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  try {
    c = {strCmd: b, objElement: d}, "function"
    === typeof KEDITORTOP.G_CURRKEDITOR._config.event.customAction
        ? KEDITORTOP.G_CURRKEDITOR._config.event.customAction(a, c) : "function"
        === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_CustomAction
        && KEDITORTOP.KEDITORWIN.RAONKEDITOR_CustomAction(a, c)
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
}

function command_formatPainter(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  try {
    var b = getFirstRange().range;
    if (1 == b.collapsed) {
      if (0 < GetTableSelectionCells().length) {
        null
        != c._formatPainterList && (c._formatPainterList = null, c._iconEnable(
            ""));
      } else {
        c._formatPainterList = [];
        var d = c._config.applyFormatExceptStyle, e = b.endContainer, b = e;
        3 == e.nodeType && (b = e.parentNode);
        if (1 == b.nodeType && "BODY" != b.tagName) {
          var f = KEDITORTOP.RAONKEDITOR.util.getStyle(b, "all"),
              g = getElementInParentStyleProperty(b,
                  "lineHeight");
          "" != g && 0 < d.length && -1 < d.indexOf("lineHeight") && (g = "");
          c._formatPainterList.lineHeight = g;
          var h = getElementInParentStyleProperty(b, "fontFamily");
          "" == h && (h = f.fontFamily);
          c._formatPainterList.fontFamily = h;
          var m = getElementInParentStyleProperty(b, "fontSize");
          "" == m && (m = f.fontSize);
          c._formatPainterList.fontSize = m;
          var q = getElementInParentStyleProperty(b, "color");
          "" == q && (q = f.color);
          c._formatPainterList.color = q;
          var t = getElementInParentStyleProperty(b, "backgroundColor");
          c._formatPainterList.backgroundColor =
              t;
          c._formatPainterList.textAlign = f.textAlign;
          var u = getElementInParentStyleProperty(b, "paddingLeft");
          c._formatPainterList.paddingLeft = u;
          var v = f.fontWeight;
          "" != v && ("700" <= v || "bold" == v)
          && (c._formatPainterList.b = !0);
          c._formatPainterList.i = "" != getElementInParentTag(b, ["em", "i"])
              ? !0 : !1;
          var w = GetParentbyTagName(b, "u");
          if (w) {
            c._formatPainterList.u = !0;
            var x = getElementInParentStyleProperty(w, "color");
            "" != x && (c._formatPainterList.u_has_color = !0)
          } else {
            _iframeDoc.queryCommandState("underline")
            && (c._formatPainterList.u =
                !0);
          }
          (w = GetParentbyTagName(b, "s") || GetParentbyTagName(b, "strike"))
              ? (c._formatPainterList.s = !0, x = getElementInParentStyleProperty(
                  w, "color"), "" != x && (c._formatPainterList.s_has_color = !0))
              : _iframeDoc.queryCommandState("strikeThrough")
              && (c._formatPainterList.s = !0);
          c._formatPainterList.sup = "" != getElementInParentTag(b, ["sup"])
              ? !0
              : !1;
          c._formatPainterList.sub = "" != getElementInParentTag(b, ["sub"])
              ? !0
              : !1;
          if ("" != getElementInParentTag(b, ["ol"])) {
            var w = GetParentbyTagName(b, "ol"), y = w.style.listStyleType;
            c._formatPainterList.ol =
                y
          }
          "" != getElementInParentTag(b, ["ul"]) && (w = GetParentbyTagName(b,
              "ul"), y = w.style.listStyleType, c._formatPainterList.ul = y)
        } else {
          c._formatPainterList = null
        }
      }
    }
  } catch (z) {
    c._formatPainterList = null
  }
}

function command_applyFormat(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  if (null != c._formatPainterList) {
    try {
      var b, d;
      KEDITORTOP.RAONKEDITOR.browser.ie && (b = 0 < _iframeDoc.body.scrollLeft
          ? _iframeDoc.body.scrollLeft
          : _iframeDoc.documentElement.scrollLeft, d = 0
      < _iframeDoc.body.scrollTop ? _iframeDoc.body.scrollTop
          : _iframeDoc.documentElement.scrollTop);
      var e = "";
      if ("undefined" != typeof _iframeWin.getSelection) {
        var f = _iframeWin.getSelection();
        if (f.rangeCount) {
          for (var g = _iframeDoc.createElement("div"),
              h = 0, m = f.rangeCount; h < m; ++h) {
            g.appendChild(
                f.getRangeAt(h).cloneContents());
          }
          e = g.innerHTML
        }
      } else {
        "undefined" != typeof _iframeDoc.selection && "Control"
        != _iframeDoc.selection.type
        && (e = _iframeDoc.selection.createRange().htmlText);
      }
      if (/<table|<td|<tr|<th/i.test(e)) {
        alert(
            RAONKEditor_lang.msg.apply_format_alert1);
      } else {
        var q = c._formatPainterList;
        q.nowApplying = "1";
        var t = getFirstRange(), u = t.range;
        0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
        && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
        command_removeCss2(a,
            c, e);
        try {
          setSelectionWithKMark();
          var t = getFirstRange(), u = t.range, v = u.startContainer;
          3 == v.nodeType && (v = v.parentNode);
          var w = GetTDTHCell(v);
          if (v) {
            if (w) {
              if ("700" <= w.style.fontWeight || "bold"
                  <= w.style.fontWeight) {
                setSelectionWithKMark(), command_bold(a,
                    c), setSelectionWithKMark(), command_bold(a, c);
              }
              "italic" == w.style.fontStyle
              && (setSelectionWithKMark(), command_italic(a,
                  c), setSelectionWithKMark(), command_italic(a, c))
            } else {
              var x = KEDITORTOP.RAONKEDITOR.util.getStyle(v, "all");
              if ("" == getElementInParentTag(v, ["b",
                "strong"])) {
                var y = x.fontWeight;
                "" != y && ("700" <= y || "bold" == y)
                && (setSelectionWithKMark(), command_bold(a,
                    c), setSelectionWithKMark(), command_bold(a, c))
              }
              if ("" == getElementInParentTag(v, ["em", "i"])) {
                var z = x.fontStyle;
                "" != z && "italic" == z
                && (setSelectionWithKMark(), command_italic(a,
                    c), setSelectionWithKMark(), command_italic(a, c))
              }
            }
          }
        } catch (A) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(A)
        }
        setSelectionWithKMark();
        command_removeFormat(a, c);
        if (void 0 != q.ol) {
          switch (setSelectionWithKMark(),
              q.ol.toLowerCase()) {
            case "decimal-leading-zero":
              command_listDecimalLeadingZero(a, c);
              break;
            case "lower-alpha":
              command_listLowerAlpha(a, c);
              break;
            case "lower-greek":
              command_listLowerGreek(a, c);
              break;
            case "lower-roman":
              command_listLowerRoman(a, c);
              break;
            case "upper-alpha":
              command_listUpperAlpha(a, c);
              break;
            case "upper-roman":
              command_listUpperRoman(a, c);
              break;
            default:
              command_listDecimal(a, c)
          }
        }
        if (void 0 != q.ul) {
          switch (setSelectionWithKMark(), q.ul.toLowerCase()) {
            case "circle":
              command_listCircle(a, c);
              break;
            case "square":
              command_listSquare(a,
                  c);
              break;
            default:
              command_listDisc(a, c)
          }
        }
        1 == q.b && (setSelectionWithKMark(), command_bold(a, c));
        1 == q.i && (setSelectionWithKMark(), command_italic(a, c));
        1 == q.u && 1 != q.u_has_color
        && (setSelectionWithKMark(), command_underline(a, c));
        1 == q.s && 1 != q.s_has_color
        && (setSelectionWithKMark(), command_strikeThrough(a, c));
        "" != q.color && (setSelectionWithKMark(), command_fontColor(a,
            c._EDITOR.design, q.color));
        1 == q.u && 1 == q.u_has_color
        && (setSelectionWithKMark(), command_underline(a, c));
        1 == q.s && 1 == q.s_has_color && (setSelectionWithKMark(),
            command_strikeThrough(a, c));
        "" != q.fontFamily && (setSelectionWithKMark(), command_fontfamily(a,
            c._EDITOR.design, q.fontFamily));
        "" != q.fontSize && 0 > q.fontSize.indexOf("em")
        && (setSelectionWithKMark(), command_fontsize(a, c._EDITOR.design,
            q.fontSize));
        "" != q.lineHeight && (setSelectionWithKMark(), command_lineHeight(a,
            c._EDITOR.design, q.lineHeight));
        var B = q.textAlign;
        "" != B && -1 < B.toLowerCase().indexOf("right")
            ? (setSelectionWithKMark(
                null, !0), command_align(a, c, "right")) : -1
            < B.toLowerCase().indexOf("left") ? (setSelectionWithKMark(null,
                !0), command_align(a, c, "left")) : -1 < B.toLowerCase().indexOf(
                "center") ? (setSelectionWithKMark(null, !0), command_align(a, c,
                "center")) : -1 < B.toLowerCase().indexOf("full")
                && (setSelectionWithKMark(null, !0), command_align(a, c,
                    "justify"));
        "" != q.paddingLeft
        && (setSelectionWithKMark(), command_setIndentOutdent(
            a, c, q.paddingLeft));
        "" != q.backgroundColor
        && (setSelectionWithKMark(), command_fontBgColor(
            a, c._EDITOR.design, q.backgroundColor));
        1 == q.sup && (setSelectionWithKMark(), command_superscript(a, c));
        1 == q.sub && (setSelectionWithKMark(),
            command_subscript(a, c));
        q.nowApplying = "0";
        void 0 == b && void 0 == d || _iframeWin.scroll(b, d);
        removeKMark(!0);
        KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
        KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
      }
    } catch (C) {
      q.nowApplying = "0", removeKMark()
    }
  }
}

function command_setIndentOutdent(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  c = getFirstRange().range;
  if (!c || !GetTDTHCell(c.startContainer) || 0 != c.collapsed) {
    a = getNodesInRange(c);
    null != c.startContainer.previousSibling && "HEAD"
    == c.startContainer.previousSibling.tagName && null
    == c.endContainer.nextSibling && (a = _iframeDoc.body.childNodes);
    c = a.length;
    for (var d = 0; d < c; d++) {
      null != a[d].parentNode && "body"
      == a[d].parentNode.nodeName.toLowerCase() && "table"
      != a[d].tagName.toLowerCase() &&
      (0 < parseIntOr0(a[d].style.paddingLeft)
      && (a[d].style.paddingLeft = ""), a[d].style.marginLeft = b)
    }
  }
}

function command_margin(a, c, b, d) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var e = getFirstRange().range;
  a = GetTableSelectionCells();
  c = a.length;
  if (0 == c) {
    for (a = getNodesInRange(e), null
    != e.startContainer.previousSibling && "HEAD"
    == e.startContainer.previousSibling.tagName && null
    == e.endContainer.nextSibling
    && (a = _iframeDoc.body.childNodes), c = a.length, e = 0; e < c; e++) {
      null
      == a[e].parentNode || "body" != a[e].parentNode.nodeName.toLowerCase()
      && "td"
      != a[e].parentNode.nodeName.toLowerCase() && "td" !=
      a[e].parentNode.nodeName.toLowerCase() || !a[e].tagName || "table"
      == a[e].tagName.toLowerCase() || ("margin" == b ? a[e].style.margin = d
          : ("marginTop" == b && (a[e].style.marginTop = d), "marginBottom" == b
          && (a[e].style.marginBottom = d), "marginLeft" == b
          && (a[e].style.marginLeft = d), "marginRight" == b
          && (a[e].style.marginRight = d)));
    }
  } else {
    for (e = 0; e < c;
        e++) {
      for (var f = a[e].childNodes, g = f.length, h = 0; h < g; h++) {
        1
        != f[h].nodeType || "P" != f[h].tagName && "SPAN" != f[h].tagName
        || ("margin" == b ? f[h].style.margin = d : ("marginTop" == b
        && (f[h].style.marginTop =
            d), "marginBottom" == b
        && (f[h].style.marginBottom = d), "marginLeft"
        == b && (f[h].style.marginLeft = d), "marginRight" == b
        && (f[h].style.marginRight = d)))
      }
    }
  }
}

function command_textIndent(a, c, b, d) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var e = getFirstRange().range;
  a = GetTableSelectionCells();
  c = a.length;
  if (0 == c) {
    for (a = getNodesInRange(e), null
    != e.startContainer.previousSibling && "HEAD"
    == e.startContainer.previousSibling.tagName && null
    == e.endContainer.nextSibling
    && (a = _iframeDoc.body.childNodes), c = a.length, e = 0; e < c; e++) {
      null
      == a[e].parentNode || "body" != a[e].parentNode.nodeName.toLowerCase()
      && "td"
      != a[e].parentNode.nodeName.toLowerCase() &&
      "td" != a[e].parentNode.nodeName.toLowerCase() || "table"
      == a[e].tagName.toLowerCase() || "textIndent" != b
      || (a[e].style.textIndent = d);
    }
  } else {
    for (e = 0; e < c;
        e++) {
      for (var f = a[e].childNodes, g = f.length, h = 0; h < g; h++) {
        1
        != f[h].nodeType || "P" != f[h].tagName && "SPAN" != f[h].tagName
        || "textIndent" != b || (f[h].style.textIndent = d)
      }
    }
  }
}

function command_imageAlign(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  getFirstRange();
  a = KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT;
  "" == b ? a.removeAttribute("align") : a.setAttribute("align", b)
}

function command_letterSpacing(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var d = getFirstRange().range;
  try {
    KEDITORTOP.G_CURRKEDITOR.beforeOffset = [], KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
        d.startOffset), KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
        d.endOffset), 3 == d.startContainer.nodeType
        ? KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
            d.startContainer.parentNode)
        : KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(d.startContainer), 3
    == d.endContainer.nodeType ? KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
            d.endContainer.parentNode) :
        (KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(d.endContainer), 1
        == d.endOffset
        && (KEDITORTOP.G_CURRKEDITOR.beforeOffset[1] = (d.endContainer.innerText
            || d.endContainer.textContent).length)), KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
        d.toString().length)
  } catch (e) {
    KEDITORTOP.G_CURRKEDITOR.beforeOffset = null
  }
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = "p span li dt dd h1 h2 h3 h4 h5 h6 pre address".split(" ");
  var f = a.length, g, h, m = GetTableSelectionCells();
  if (0 == m.length) {
    if (null != d.startContainer.previousSibling && "HEAD"
        == d.startContainer.previousSibling.tagName && null
        == d.endContainer.nextSibling) {
      for (c = 0; c < f; c++) {
        g = _iframeDoc.body.getElementsByTagName(a[c]);
        h = g.length;
        for (var q = 0; q < h; q++) {
          "span" == g[q].tagName.toLowerCase() ? ""
              != g[q].style.letterSpacing && (g[q].style.letterSpacing = b)
              : g[q].style.letterSpacing = b
        }
      }
      f = _iframeDoc.body.getElementsByTagName("table");
      g = f.length;
      for (c = 0; c < g; c++) {
        h = f[c].rows;
        for (var t = h.length, q = 0; q < t; q++) {
          for (var m = h[q].cells,
              d = m.length,
              u = 0; u < d; u++) {
            setBlockTag(m[u].childNodes, a, "letterSpacing",
                b)
          }
        }
      }
      setBlockTag(_iframeDoc.body.childNodes, a, "letterSpacing", b);
      g = _iframeDoc.body.getElementsByTagName("div");
      h = g.length;
      for (q = 0; q < h; q++) {
        setBlockTag(g[q].childNodes, a, "letterSpacing",
            b)
      }
    } else {
      g = getNodesInRange(d);
      h = g.length;
      1 == d.collapsed && 0 == d.getNodes().length && d.pasteHtml(
          '<span id="_kEditorPosition">&nbsp;</span>');
      for (m = 0; m < h; m++) {
        if (1 == g[m].nodeType
            && (u = g[m].tagName.toLowerCase(), -1 < a.indexOf(u))) {
          if ("div" != u) {
            for (c = 0; c < f;
                c++) {
              for (var t = g[m].getElementsByTagName(a[c]),
                  v = t.length, q = 0; q < v; q++) {
                "span"
                == t[q].tagName.toLowerCase() ? "" != t[q].style.letterSpacing
                    && (t[q].style.letterSpacing = b)
                    : t[q].style.letterSpacing = b;
              }
            }
          }
          "span" == u ? "" != g[m].style.letterSpacing
              && (g[m].style.letterSpacing = b) : g[m].style.letterSpacing = b
        }
      }
      var w;
      0 == d.toString().length && 1 == d.getNodes().length
      && (w = d.getNodes()[0], g.push(d.getNodes()[0]));
      setBlockTag(g, a, "letterSpacing", b)
    }
    (b = _iframeDoc.getElementById("_kEditorPosition")) ? (doSetCaretPosition(b,
        1), b.parentNode.removeChild(b)) : w && (b = getFirstRange().range,
        getFirstRange().sel.removeAllRanges(), b.selectNode(
        w), getFirstRange().sel.addRange(b))
  } else {
    for (d = m.length, c = 0; c < d; c++) {
      for (q = 0; q < f; q++) {
        for (g = m[c].getElementsByTagName(
            a[q]), h = g.length, u = 0; u < h; u++) {
          "span"
          == g[u].tagName.toLowerCase() ? "" != g[u].style.letterSpacing
              && (g[u].style.letterSpacing = b) : g[u].style.letterSpacing = b;
        }
      }
      setBlockTag(m[c].childNodes, a, "letterSpacing", b);
      g = m[c].getElementsByTagName("div");
      h = g.length;
      for (q = 0; q < h; q++) {
        setBlockTag(g[q].childNodes, a, "letterSpacing", b)
      }
    }
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  KEDITORTOP.G_CURRKEDITOR.beforeOffset = null
}

function command_InsertOpenFile(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  c = b.data;
  "html" != b.fileExt && "htm" != b.fileExt && "txt" == b.fileExt
  && (c = htmlSpecialChars(b.data), c = addLineBreaker(
      KEDITORTOP.G_CURRKEDITOR._config.enterTag, c));
  KEDITORTOP.RAONKEDITOR.setHtmlContents(c, a)
}

function command_InsertBlockquote(a, c, b) {
  var d = "";
  switch (b.tagvalue) {
    case "1":
      d = "margin:0 0 30px 20px;padding:0 8px;border-left:2px solid #999999";
      break;
    case "2":
      d = "margin:0 0 30px 13px;padding:0 8px 0 16px;background:url("
          + KEDITORTOP.G_CURRKEDITOR._config.webPath.image
          + "icon/img_blockquote02.gif)  0 3px no-repeat;";
      break;
    case "3":
      d = "BORDER-TOP: #7a7d83 1px dashed; BORDER-RIGHT: #7a7d83 1px dashed; BORDER-BOTTOM: #7a7d83 1px dashed; ZOOM: 1; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 10px; MARGIN: 0px 0px 30px; BORDER-LEFT: #7a7d83 1px dashed; PADDING-RIGHT: 10px;";
      break;
    case "4":
      d = "BORDER-TOP: #007ace 1px dashed; BORDER-RIGHT: #007ace 1px dashed; BORDER-BOTTOM: #007ace 1px dashed; ZOOM: 1; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 10px; MARGIN: 0px 0px 30px; BORDER-LEFT: #007ace 1px dashed; PADDING-RIGHT: 10px;";
      break;
    case "5":
      d = "BORDER-TOP: #7a7d83 1px dashed; BORDER-RIGHT: #7a7d83 1px dashed; background:#ebebeb; BORDER-BOTTOM: #7a7d83 1px dashed; ZOOM: 1; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 10px; MARGIN: 0px 0px 30px; BORDER-LEFT: #7a7d83 1px dashed; PADDING-RIGHT: 10px";
      break;
    case "6":
      d = "BORDER-TOP: #7a7d83 1px solid; BORDER-RIGHT: #7a7d83 1px solid; BORDER-BOTTOM: #7a7d83 1px solid; ZOOM: 1; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 10px; MARGIN: 0px 0px 30px; BORDER-LEFT: #7a7d83 1px solid; PADDING-RIGHT: 10px;";
      break;
    case "7":
      d = "BORDER-TOP: #007ace 1px solid; BORDER-RIGHT: #007ace 1px solid; BORDER-BOTTOM: #007ace 1px solid; ZOOM: 1; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 10px; MARGIN: 0px 0px 30px; BORDER-LEFT: #007ace 1px solid; PADDING-RIGHT: 10px;";
      break;
    case "8":
      d = "BORDER-TOP: #7a7d83 1px solid; BORDER-RIGHT: #7a7d83 1px solid; background:#ebebeb; BORDER-BOTTOM: #7a7d83 1px solid; ZOOM: 1; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 10px; MARGIN: 0px 0px 30px; BORDER-LEFT: #7a7d83 1px solid; PADDING-RIGHT: 10px";
      break;
    case "9":
      d = "BORDER-TOP: #999 2px solid; BORDER-RIGHT: #999 2px solid; BORDER-BOTTOM: #999 2px solid; ZOOM: 1; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 10px; MARGIN: 0px 0px 30px; BORDER-LEFT: #999 2px solid; PADDING-RIGHT: 10px";
      break;
    case "10":
      d = "BORDER-TOP: #007ace 2px solid; BORDER-RIGHT: #007ace 2px solid; background:#ebebeb; BORDER-BOTTOM: #007ace 2px solid; ZOOM: 1; PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 10px; MARGIN: 0px 0px 30px; BORDER-LEFT: #007ace 2px solid; PADDING-RIGHT: 10px"
  }
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  a = function (a) {
    try {
      var b = getFirstRange(), c = b.range, e = c.startContainer,
          g = c.endContainer;
      a && (1 != e.nodeType || "TD" != e.tagName && "TH" != e.tagName
      || (e = e.childNodes[c.startOffset]), 1 != g.nodeType || "TD" != g.tagName
      && "TH" != g.tagName || (g = g.childNodes[c.endOffset - 1]));
      var h = GetParentbyTagName(e, "blockquote", !0),
          m = GetParentbyTagName(g, "blockquote", !0), q = h, t = !1;
      if (null != h || null != m) {
        if (h == m) {
          t = !0;
        } else if (h != m) {
          var D = c.commonAncestorContainer;
          if (D && D.tagName && "blockquote"
              == D.tagName.toLowerCase()) {
            q = D;
          } else {
            if (h) {
              c.setStartBefore(h.firstChild);
            } else {
              for (h = c.startContainer; !h.tagName;) {
                h = h.parentNode;
              }
              c.setStartBefore(h)
            }
            m || (m = c.endContainer);
            for (; m.parentNode != D;) {
              m = m.parentNode;
            }
            for (; h.parentNode != D;) {
              h = h.parentNode;
            }
            q = _iframeDoc.createElement("blockquote");
            D.insertBefore(q, h);
            c.setStartAfter(q);
            c.setEndAfter(m);
            c.surroundContents(q);
            c.setStartBefore(q.firstChild);
            c.setEndAfter(q.lastChild);
            b.sel.removeAllRanges();
            b.sel.addRange(c)
          }
          t = !0
        }
      }
      if (t) {
        q.style.cssText = d;
      } else {
        b = !1;
        c && 1 == c.collapsed && e == g && e.tagName && "p"
        == e.tagName.toLowerCase() && "<br>" == e.innerHTML
        && (e.innerHTML = unescape("%u200B"), b = !0);
        _iframeDoc.execCommand("indent",
            !1, null);
        if (b) {
          var H = getFirstRange().range, G = H.startContainer;
          if (3 == G.nodeType) {
            G = G.parentNode;
          } else if ("TD" == G.tagName
              || "TH" == G.tagName) {
            G = G.getElementsByTagName("p")[0];
          }
          G && "P" == G.tagName && G.innerHTML == unescape("%u200B")
          && (G.innerHTML = "<br>")
        }
        if (a) {
          for (var I = a.getElementsByTagName("blockquote"), M = I.length,
              K = 0; K < M; K++) {
            I[K].style.cssText = d;
          }
        } else {
          H = getFirstRange().range;
          0 == !!H && (H = f);
          for (var K = getNodesInRange(H), P = K.length, I = 0; I < P;
              I++) {
            if ("blockquote" == K[I].nodeName.toLowerCase()) {
              K[I].style.cssText = d;
              break
            }
          }
        }
      }
    } catch (E) {
      KEDITORTOP &&
      KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(E)
    }
  };
  c = GetTableSelectionCells();
  b = c.length;
  if (0 < b) {
    for (var e = getFirstRange(), f = e.range, g = f.cloneRange(),
        h = 0; h < b; h++) {
      e.sel.removeAllRanges();
      var m = getMyFirstOrLastChildElementNode(c[h], !1),
          q = getMyFirstOrLastChildElementNode(c[h], !0);
      if (null == m && null == q) {
        var t = _iframeDoc.createElement("p");
        t.innerHTML = "<br>";
        q = m = t;
        c[h].appendChild(t)
      }
      m && q && (f.setStartBefore(m), f.setEndAfter(q), e.sel.addRange(f), a(
          c[h]), e.sel.removeAllRanges(), e.sel.addRange(g))
    }
  } else {
    a();
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_CancelBlockquote(a, c) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  var b = getFirstRange(), d = b.range, e = function (a) {
    for (; 0 < a.childNodes.length;) {
      a.parentNode.insertBefore(a.childNodes[0],
          a);
    }
    null != a.previousSibling && doSetCaretPosition(a.previousSibling, 1);
    a.parentNode.removeChild(a)
  }, f = function (a) {
    if (a) {
      a = a.getElementsByTagName("blockquote");
      for (var b = a.length - 1; 0 <= b; b--) {
        e(a[b])
      }
    } else {
      (a =
          GetParentbyTagName(d.startContainer, "blockquote", !0)) && e(a)
    }
  }, g = GetTableSelectionCells(), h = g.length;
  if (0 < h) {
    for (b = getFirstRange(), b = 0; b < h; b++) {
      f(g[b]);
    }
  } else {
    f();
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_inputSameWidthHeight(a, c, b) {
  "1" == c._config.formMode && (keditor_src_init(
      c._EDITOR.design), restoreSelection(), setFocusToBody(), "width" == b
      ? d5ApplySameWidth() : "height" == b ? d5ApplySameHeight() : "widthheight"
          == b
          && d5ApplySameWidthHeight(), KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0)
}

function command_setAccessibility(a, c, b, d, e) {
  keditor_src_init(c);
  a = !1;
  if (b.idSamMode) {
    b.id != b.sameOrgId && (d.setAttribute("id",
        b.id), a = !0);
  } else if (c = null, a = d.getAttribute(
      "keditorcustomdata"), null != a && void 0 != a
  && (c = getKEditorCustomData(a)), b.skip) {
    d.setAttribute("keditorwebaccskip",
        "keditorwebaccskip"), a = !0;
  } else {
    d.removeAttribute("keditorwebaccskip");
    a = !1;
    var f = d.tagName.toLowerCase();
    if (-1 < "frame,framset,a".indexOf(f) || c && ("iframe" == c.type
        || "iframe" == c.type2)) {
      c ? c.title = b.title : d.title = b.title, ""
      != b.title &&
      (a = !0);
    } else if ("table" == f) {
      if (-1
          < KEDITORTOP.G_CURRKEDITOR._config.accessibilityValidationItems.indexOf(
              "table_caption") || ""
          == KEDITORTOP.G_CURRKEDITOR._config.accessibilityValidationItems) {
        if (d.caption) {
          if (""
              == b.title) {
            c = 0;
            for (var f = d.childNodes.length, g = 0; g < f;
                g++) {
              if (d.childNodes[g].nodeName.match(/caption/i)) {
                c = g;
                break
              }
            }
            d.removeChild(d.childNodes[c])
          } else {
            d.caption.innerHTML = b.title, a = !0;
          }
        } else {
          "" != b.title
          && (a = _iframeDoc.createElement(
              "caption"), a.innerHTML = b.title, d.insertBefore(a,
              d.firstChild), a = !0);
        }
      } else {
        a = !0;
      }
      a = a && "" != b.alt ? !0 : !1;
      if (-1
          < KEDITORTOP.G_CURRKEDITOR._config.accessibilityValidationItems.indexOf(
              "table_summary") || ""
          == KEDITORTOP.G_CURRKEDITOR._config.accessibilityValidationItems) {
        d.summary = b.alt
      }
    } else {
      "" != b.alt && (a = !0), d.alt = b.alt
    }
  }
  b = _iframeDoc.createElement("img");
  b.alt = "web_accessibility_ok";
  b.src = "../images/editor/dialog/check01.png";
  b.name = "chkImg";
  d = e.getElementsByTagName("img");
  c = e.getElementsByTagName("div");
  a ? 0 < c.length && ("chkImg" != d[0].name && e.insertBefore(b,
      c[0]), c[0].style.display =
      "none") : ("chkImg" == d[0].name && e.removeChild(d[0]), 0 < c.length
  && (c[0].style.display = ""));
  onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0});
  onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: "accessibility_validation"})
}

function command_calculationFormula(a, c, b) {
  c = GetTDTHCell(KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT);
  if (null != c) {
    0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    var d;
    switch (b) {
      case "horizontal_sum":
      case "horizontal_avg":
        d = getLeftHorizontalCells(c);
        break;
      case "vertical_sum":
      case "vertical_avg":
        d = getTopVerticalCells(c)
    }
    for (var e = d.length, f = a = 0, g = !1, h = 0; h < e; h++) {
      var m = d[h].innerHTML, m = m.replace(/\r/g, ""),
          m = m.replace(/[\n|\t]/g, ""), m = m.replace(/[\v|\f]/g,
              ""), m = m.replace(/<p><br><\/p>/gi, "\n"),
          m = m.replace(/<P>&nbsp;<\/P>/gi, "\n"),
          m = m.replace(/<br(\s)*\/?>/gi, "\n"),
          m = m.replace(/<br(\s[^\/]*)?>/gi, "\n"),
          m = m.replace(/<\/p(\s[^\/]*)?>/gi, "\n"),
          m = m.replace(/<\/li(\s[^\/]*)?>/gi, "\n"),
          m = m.replace(/<\/tr(\s[^\/]*)?>/gi, "\n");
      nIdx = m.lastIndexOf("\n");
      -1 < nIdx && "\n" == m.substring(nIdx) && (m = m.substring(0, nIdx));
      m = removeStripTags(m, null);
      m = unhtmlSpecialChars(m);
      -1 < m.indexOf(",") && (g || (g = !0), m = m.replace(/,/gi, ""));
      isNaN(Number(m)) || "" == m || (a = command_NumCal(a, m,
          "+"), f++)
    }
    if ("horizontal_avg" == b || "vertical_avg" == b) {
      a = command_NumCal(a, f,
          "/");
    }
    a || (a = 0);
    a = a.toString();
    g && (a = -1 < a.indexOf(".") ? fnCommaExec(a.substring(0, a.indexOf(".")))
        + a.substring(a.indexOf("."), a.length) : fnCommaExec(a));
    b = null;
    if (null == c.firstChild) {
      b = _iframeDoc.createElement(
          "p"), b.innerHTML = a, c.innerHTML = "", c.appendChild(b);
    } else {
      for (b = c.firstChild; null != b && void 0 != b;) {
        if (3
            == b.nodeType) {
          if (d = b.nodeValue, d = d.replace(/\r\n/g,
              ""), d = d.replace(/\n/g, ""), d = d.replace(/\r/g,
              ""), d = d.replace(/\t/g, ""), d = d.replace(/ /g,
              ""), d = d.replace(/\s/g, ""), d = d.replace(/&nbsp;/g, ""), ""
          == d
          && null != b.nextSibling) {
            b = b.nextSibling;
          } else {
            b = b.parentNode;
            break
          }
        } else if (1 == b.nodeType) {
          if ("IMG" == b.tagName || "BR" == b.tagName
              || "TABLE" == b.tagName || "HR" == b.tagName || "A"
              == b.tagName) {
            b = b.parentNode;
            break
          } else if (d = b.innerHTML, d = d.replace(/&nbsp;/g,
              " "), b.innerHTML = d, b.firstChild) {
            if (b && "TD" != b.tagName && "TH" != b.tagName) {
              for (;
                  b.nextSibling;) {
                b.parentNode.removeChild(b.nextSibling);
              }
            }
            b = b.firstChild
          } else {
            break;
          }
        } else {
          break;
        }
      }
      b.innerHTML = a
    }
    doSetCaretPosition(b,
        1);
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
  }
}

function command_NumCal(a, c, b) {
  if (isNaN(Number(a)) || isNaN(Number(c))) {
    return !1;
  }
  var d, e, f;
  e = /\./;
  e.test(a) ? (a = a.toString(), d = a.split("."), d = d[1].length) : d = 0;
  e.test(c) ? (c = c.toString(), e = c.split("."), e = e[1].length) : e = 0;
  d = d > e ? d : e;
  e = "1";
  for (var g = 1; g <= d; g++) {
    e += "0";
  }
  switch (b) {
    case "+":
      f = Math.round(Number(a) * e + Number(c) * e) / e;
      break;
    case "/":
      f = Number(a) / Number(c)
  }
  return f
}

function command_tableSelection(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  if (a = getFirstRange().range) {
    if (!b) {
      b = GetTDTHCell(a.startContainer);
      if (null == b || void 0 == b) {
        return;
      }
      b = GetParentbyTagName(b, "table");
      if (null == b) {
        return
      }
    }
    if (getApplyDragResize(
        c)) {
      KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.resizeHandleClear(), KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem = b, clearInterval(
          KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.dragResizeIconInterval), KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.setResizeHandle(
          null,
          !1, null);
    } else {
      c = _iframeDoc.body.createControlRange();
      try {
        ClearDraggingTableCellSelected(), c.add(
            b), c.select(), KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = b, setMenuIconRealable(
            b), _iframeDoc_MouseUpMenu(null, b)
      } catch (d) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(d)
      }
    }
  }
}

function command_showBlocks(a, c) {
  document.getElementById("ue_editor_holder_" + a);
  if ("" == KEDITORTOP.G_CURRKEDITOR.ShowBlocks) {
    var b = KEDITORTOP.G_CURRKEDITOR._config.webPath.css;
    KEDITORTOP.RAONKEDITOR.isRelease
    || (b = KEDITORTOP.G_CURRKEDITOR._config.webPath.css_dev);
    KEDITORTOP.RAONKEDITOR.addUserCssUrl(
        b + "editor_showblocks.css?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp);
    KEDITORTOP.G_CURRKEDITOR.ShowBlocks = "show_blocks"
  } else {
    for (var b = c._DOC.getElementsByTagName("link"), d = null,
        e = b.length - 1; 0 <= e; e--) {
      -1 < b[e].href.indexOf(
          "editor_showblocks.css") &&
      (d = b[e], d.parentNode.removeChild(d));
    }
    KEDITORTOP.G_CURRKEDITOR.ShowBlocks = ""
  }
  b = [];
  "show_blocks" == KEDITORTOP.G_CURRKEDITOR.ShowBlocks ? b.push("show_blocks")
      : removeArrayItemByValue(b, "show_blocks");
  KEDITORTOP.G_CURRKEDITOR._iconSelected(b)
}

function command_tableLock(a, c) {
  var b = getFirstRange().range.startContainer;
  3 == b.nodeType && (b = b.parentNode);
  var d = getSelectionTable(c);
  if (d) {
    if (checkLockAttr(d, !0)) {
      removeLockAttr(d), removeClassName(d,
          "k_editor_table_lock");
    } else {
      var e = KEDITORTOP.G_CURRKEDITOR._config.adminTableLock.defaultLockName,
          f = KEDITORTOP.G_CURRKEDITOR._config.adminTableLock.defaultTableLockMode,
          g = KEDITORTOP.G_CURRKEDITOR._config.adminTableLock.defaultShowLockIconUserMode;
      setClassName(d, "k_editor_table_lock");
      d.setAttribute(e, "");
      d.setAttribute("lock_mode", f);
      d.setAttribute("show_icon", g)
    }
  } else {
    e = GetTableSelectionCells();
    f = e.length;
    g = GetTDTHCell(b);
    if (0 < f) {
      d = GetParentbyTagName(e[0], "table");
    } else {
      if (null == g || "TD" != g.tagName && "TH" != g.tagName) {
        return;
      }
      d = GetParentbyTagName(g, "table")
    }
    d && (checkLockAttr(d, !0) ? (removeLockAttr(d), removeClassName(d,
            "k_editor_table_lock"))
        : (e = KEDITORTOP.G_CURRKEDITOR._config.adminTableLock.defaultLockName, f = KEDITORTOP.G_CURRKEDITOR._config.adminTableLock.defaultTableLockMode, g = KEDITORTOP.G_CURRKEDITOR._config.adminTableLock.defaultShowLockIconUserMode,
            setClassName(d, "k_editor_table_lock"), d.setAttribute(e,
            ""), d.setAttribute("lock_mode", f), d.setAttribute("show_icon",
            g)))
  }
  b && 1 == b.nodeType && setMenuIconRealable(b)
}

function command_cellLock(a, c) {
  var b = GetTableSelectionCells(), d = b.length,
      e = getFirstRange().range.startContainer;
  3 == e.nodeType && (e = e.parentNode);
  currElem = GetTDTHCell(e);
  if (0 < d) {
    var f = !1;
    checkLockAttr(b[0], !0) && (f = !0);
    for (var g = 0; g < d; g++) {
      f ? (removeLockAttr(b[g]), removeClassName(b[g],
          "k_editor_cell_lock")) : (b[g].setAttribute("keditor_lock",
          ""), setClassName(b[g], "k_editor_cell_lock"))
    }
  } else {
    if (null == currElem || "TD" != currElem.tagName && "TH"
        != currElem.tagName) {
      return;
    }
    checkLockAttr(currElem, !0) ? (removeLockAttr(currElem),
            removeClassName(currElem, "k_editor_cell_lock"))
        : (currElem.setAttribute("keditor_lock", ""), setClassName(currElem,
            "k_editor_cell_lock"))
  }
  e && 1 == e.nodeType && setMenuIconRealable(e)
}

function command_help() {
  var a = "ko";
  "ko-kr" != KEDITORTOP.G_CURRKEDITOR._config.lang && (a = "en");
  var a = KEDITORTOP.G_CURRKEDITOR._config.webPath.help + "index_" + a
      + ".html", c = 1200, b = screen.availHeight, d = 40;
  KEDITORTOP.RAONKEDITOR.browser.ie ? d = 40
      : KEDITORTOP.RAONKEDITOR.browser.chrome ? d = 70
          : KEDITORTOP.RAONKEDITOR.browser.gecko ? d = 40
              : KEDITORTOP.RAONKEDITOR.browser.opera ? d = 80
                  : KEDITORTOP.RAONKEDITOR.browser.safari && (d = 100);
  var e = screen.availHeight;
  e <= b && (b = e - d);
  try {
    c > parseInt(screen.width, 10) && (c = parseInt(screen.width,
        10) - 50)
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
  d = 0;
  try {
    d = screen.width / 2 - c / 2
  } catch (g) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(g)
  }
  var h = KEDITORTOP.KEDITORWIN.open(a, "DEXT5Help",
      "width=" + c + "," + ("height=" + b) + "," + ("left=" + d + "px")
      + ",top=0px,resizable=yes");
  setTimeout(function () {
    h.focus()
  }, 100)
}

function command_InsertImagePhotoEdit(a, c) {
  var b = KEDITORTOP.G_CURRKEDITOR._config.photoEditorId,
      d = getFirstRange().range;
  d.startOffset == d.endOffset && 1 == d.collapsed ? null
  != KEDITORTOP.G_CURRKEDITOR.dialogWindow ? "" != b
      ? KEDITORTOP.KEDITORWIN.RAONKPHOTO.ShowPopup(b)
      : KEDITORTOP.KEDITORWIN.RAONKPHOTO.ShowPopup() : "" != b
      ? (KEDITORTOP.RAONKPHOTO.ShowPopup(b), KEDITORTOP.RAONKPHOTO.Reset(
          b), KEDITORTOP.RAONKPHOTO.SetRAONKEditorID(
          KEDITORTOP.G_CURRKEDITOR.ID, !0, b))
      : (KEDITORTOP.RAONKPHOTO.ShowPopup(), KEDITORTOP.RAONKPHOTO.Reset(),
          KEDITORTOP.RAONKPHOTO.SetRAONKEditorID(KEDITORTOP.G_CURRKEDITOR.ID,
              !0)) : KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT && "IMG"
      == KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT.tagName
      && command_photoEditProperty(a, c)
}

function command_InsertMiniPhotoEditor(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  a = function (a) {
    var b;
    a ? (c.miniPhotoLastMode = "modify", b = {
      url: a,
      width: KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT.clientWidth,
      height: KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT.clientHeight,
      dialogWindow: c.dialogWindow ? c.dialogWindow : null,
      parentEditor: c,
      completeEvent: kMiniPhotoComplete
    }) : (c.miniPhotoLastMode = "new", b = {
      url: null,
      width: "",
      height: "",
      dialogWindow: c.dialogWindow ? c.dialogWindow :
          null,
      parentEditor: c,
      completeEvent: kMiniPhotoComplete
    });
    var f = getDialogWindow();
    setTimeout(function () {
      f.KMINIPHOTO.ShowPhotoPopup(b)
    }, 20)
  };
  b ? KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT && "IMG"
      == KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT.tagName
      && (b = KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT.src, a(b))
      : (b = getFirstRange().range, b.startOffset == b.endOffset && 1
      == b.collapsed ? a(null) : KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT
          && "IMG" == KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT.tagName &&
          (b = KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT.src, a(b)))
}

function kMiniPhotoComplete(a, c) {
  var b = KEDITORTOP.G_CURRKEDITOR;
  keditor_src_init(b._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var d = c.src, e = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c.width),
      f = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c.height), g = function (a) {
        if (a && a[0]) {
          var c = a[0].urlInfo;
          0 == c.originalWidth && (c.originalWidth = e);
          0 == c.originalHeight && (c.originalHeight = f);
          c = "new" == b.miniPhotoLastMode ? _iframeDoc.createElement("img")
              : KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT;
          applyImageAutoFit(c,
              a[0]);
          "new" == b.miniPhotoLastMode
          && (a = c.outerHTML, KEDITORTOP.RAONKEDITOR.browser.chrome
          || KEDITORTOP.RAONKEDITOR.browser.opera
          || KEDITORTOP.RAONKEDITOR.browser.gecko ? _iframeDoc.execCommand(
              "inserthtml", !1, a) : pasteHtmlAtCaretHuge(a, !0));
          b.UndoManager.putUndo();
          b.UndoManager.charCount = 0;
          if (0 < b._config.miniPhotoEditor.imgTagRemoveAttribute.length && null
              != KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT) {
            for (a = b._config.miniPhotoEditor.imgTagRemoveAttribute.length, c = 0;
                c < a;
                c++) {
              KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT.removeAttribute(
                  b._config.miniPhotoEditor.imgTagRemoveAttribute[c]);
            }
          }
          onChange({editor: b, isPossibleDirty: !0})
        }
      }, d = KEDITORTOP.RAONKEDITOR.util.dataURItoBlob(d);
  (function (a) {
    var c = new FileProcessHandler(b);
    a = {files: a, uploadType: "image", errorType: "imageUpload"};
    "base64" == b._config.uploadMethod ? c.convertBase64(a, g) : c.uploadFiles(
        a, g)
  })(getFileProcessObjectArrayHtml5([d]))
}

function command_photoEditProperty(a, c) {
  if (null != KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT) {
    var b = KEDITORTOP.G_CURRKEDITOR._config.photoEditorId,
        d = function (a, b) {
          null != KEDITORTOP.G_CURRKEDITOR.dialogWindow ? "" != b
              ? (KEDITORTOP.KEDITORWIN.RAONKPHOTO.ShowPopup(
                  b), KEDITORTOP.KEDITORWIN.RAONKPHOTO.LoadImgFromUrl(a,
                  b), KEDITORTOP.KEDITORWIN.RAONKPHOTO.SetRAONKEditorID(
                  KEDITORTOP.G_CURRKEDITOR.ID, !1, b))
              : (KEDITORTOP.KEDITORWIN.RAONKPHOTO.ShowPopup(), KEDITORTOP.KEDITORWIN.RAONKPHOTO.LoadImgFromUrl(
                  a), KEDITORTOP.KEDITORWIN.RAONKPHOTO.SetRAONKEditorID(
                  KEDITORTOP.G_CURRKEDITOR.ID,
                  !1)) : "" != b ? (KEDITORTOP.RAONKPHOTO.ShowPopup(
                  b), KEDITORTOP.RAONKPHOTO.LoadImgFromUrl(a,
                  b), KEDITORTOP.RAONKPHOTO.SetRAONKEditorID(
                  KEDITORTOP.G_CURRKEDITOR.ID, !1, b))
              : (KEDITORTOP.RAONKPHOTO.ShowPopup(), KEDITORTOP.RAONKPHOTO.LoadImgFromUrl(
                  a), KEDITORTOP.RAONKPHOTO.SetRAONKEditorID(
                  KEDITORTOP.G_CURRKEDITOR.ID, !1))
        }, e = {
          url: KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.src,
          width: KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.clientWidth,
          height: KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.clientHeight,
          fileName: ""
        };
    if ("1" ==
        KEDITORTOP.G_CURRKEDITOR._config.useKManager && 0 == e.url.indexOf(
            KEDITORTOP.RAONKSolution.managerFinalUrl)) {
      var f = decodeURIComponent(e.url), f = convertImageAgentSrc(f, !1),
          f = decodeURIComponent(f), g = {
            localPath: f, fn_callback: function (a) {
              e.url = a;
              d(e, b)
            }
          };
      e.fileName = getFileName(f);
      localImageToBase64(g)
    } else {
      d(e, b)
    }
  }
}

function command_showTableBorder(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var b = _iframeDoc.body.getElementsByTagName("table"), d = b.length, e = [];
  if (1 == KEDITORTOP.G_CURRKEDITOR.ShowTableBorder) {
    for (var f = 0; f < d; f++) {
      removeClassName(b[f], "keditor_tableborder");
    }
    removeArrayItemByValue(e, "table_border");
    KEDITORTOP.G_CURRKEDITOR.ShowTableBorder = !1
  } else {
    for (f = 0; f < d; f++) {
      checkExistClassName(b[f].className,
          "keditor_tableborder") || setClassName(b[f], "keditor_tableborder");
    }
    e.push("table_border");
    KEDITORTOP.G_CURRKEDITOR.ShowTableBorder = !0
  }
  KEDITORTOP.G_CURRKEDITOR._iconSelected(e)
}

function command_pasteToImage(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  c.bTextorHtmlData = "image" == b.type ? !1 : !0;
  command_pasteHtml5(c, b)
}

function command_pasteHtml5(a, c) {
  var b = a.clipData, d = a.pasteEvt;
  if (KEDITORTOP.G_CURRKEDITOR.setTextPaste) {
    for (var e = "span font strong i em u strike s sub sup".split(
            " "), f = e.length, b = b.replace(/<b>/gi, ""),
        b = b.replace(/<b ([^>?+])*>/gi, ""), b = b.replace(/<\/b>/gi, ""),
        g = 0;
        g < f; g++) {
      var h = new RegExp("</" + e[g] + ">", "gi"),
          b = b.replace(new RegExp("<" + e[g] + " *([^>?+])*>", "gi"), ""),
          b = b.replace(h, "");
    }
  }
  b = dummyTagClassClear(b);
  if (a.bTextorHtmlData) {
    0 < b.length && (b = execReplaceMsoStyle(b), "1"
    == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker ?
        (showProcessingBackground(), fn_processHtmlWorker({
          editorBrowser: {
            ie: KEDITORTOP.RAONKEDITOR.browser.ie,
            ieVersion: KEDITORTOP.RAONKEDITOR.browser.ieVersion,
            gecko: KEDITORTOP.RAONKEDITOR.browser.gecko
          },
          editorConfig: a._config,
          callFn: "SetCorrectOfficeHtml",
          callFnParam: [b, void 0, void 0,
            KEDITORTOP.G_CURRKEDITOR.agentPasteFormatType],
          callBackFn: command_pasteHtml5_After
        }), KEDITORTOP.RAONKEDITOR.util.cancelEvent(d))
        : (KEDITORTOP.RAONKEDITOR.util.cancelEvent(d), b = SetCorrectOfficeHtml(
            b), command_pasteHtml5_After(b,
            a, G_wordProcessorType)));
  } else if ("0"
  == a._config.paste_image_base64_remove && setPasteImageFromClipboard(d, c), 0
  == KEDITORTOP.RAONKEDITOR.browser.gecko
  || a.AccessClipboardForIEGecko) {
    a.UndoManager.putUndo(), a.UndoManager.charCount = 0, KEDITORTOP.RAONKEDITOR.util.cancelEvent(
        d);
  } else {
    return !0
  }
}

function command_pasteHtml5_After(a, c, b, d) {
  "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
  && destoryWebWorkerVar();
  "undefined" == typeof c && (c = KEDITORTOP.G_CURRKEDITOR);
  "undefined" != typeof b && "" != b && (G_wordProcessorType = b);
  if ("HWP" == b && (a = handlingSpacingTableInHwp(a), "1"
  == c._config.compatibility.hwpPasteImageInHtml5)) {
    b = a;
    try {
      d = /<img[^>]*\bsrc="(file:\/\/\/.*?)"|<td[^>]*\bbackground:(&quot;c:.*?&quot;)/i;
      var e = b.match(/\x3c!--\[data-hwpjson]({[\s\S]*?})--\x3e/i);
      if (e && d.test(a)) {
        var f = JSON.parse(e[1]);
        if (f) {
          e = [];
          for (p in f.bidt) {
            var g = KEDITORTOP.RAONKEDITOR.util.getExtensionFromFileName(p);
            "jpg" == g && (g = "jpeg");
            e.push("data:image/" + g + ";base64," + f.bidt[p])
          }
          for (var f = {}, g = !0, h = null, m = -1; h = d.exec(b);) {
            try {
              if (m == h.index) {
                break;
              } else {
                m = h.index;
              }
              var q = "string" == typeof h[1] ? !0 : !1,
                  t = "string" == typeof h[1] ? h[1] : h[2];
              "undefined" == typeof f[t] && (f[t] = e.shift());
              var u = f[t];
              b = b.replace(d, function (a, b, c) {
                return a = q ? a.replace(b, u) : a.replace(c, "url(" + u
                    + "); background-repeat: no-repeat; background-size: 100% 100%;")
              })
            } catch (v) {
              g =
                  !1;
              break
            }
          }
          0 < e.length && (g = !1);
          g ? a = b : (b = null, b = void 0)
        }
      }
    } catch (w) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(w)
    }
  }
  (new ProcessImageInHtml5(c)).inHtml({html: a}, function (a) {
    a = SetCorrectOfficeHtmlForDOM(a);
    "1" == c._config.useHtmlCorrection && (a = htmlTagRevision(a, !0));
    a = removeTagStyle(a);
    a = repairPasteTextInCell(a);
    0 < c.UndoManager.charCount && (c.UndoManager.putUndo(), c._iconEnable(""));
    a = KEDITORTOP.RAONKEDITOR.util.officeClean(a, !1);
    if ("1" == c._config.tableAutoAdjustInPaste) {
      var b =
          /<table/i;
      b.test(a) && (a = command_AdjustTableAndCellWidth(c.ID, c,
          {type: "paste", htmlData: a}))
    }
    a = OfficePasteClean(a);
    "PPT" != G_wordProcessorType
    && (a = KEDITORTOP.RAONKEDITOR.util.emptyTagRemove(a));
    a = KEDITORTOP.RAONKEDITOR.util.htmlRevision(a);
    a = xssReplaceScript(null, a);
    a = c._FRAMEWIN.RAONK_EDITOR.HTMLParser.RemoveOfficeTag2(a);
    "1" == c._config.ie_BugFixed_Hyfont
    && (a = KEDITORTOP.RAONKEDITOR.util.replaceHyFont(a, c));
    a = removeEditorAttribute(a);
    "HWP" == G_wordProcessorType && (a = replaceCharToWingdings(
        a), a = handlingFontFamilyInHwp(a));
    "1" == c._config.compatibility.dingBatCharPaste && (a = dingBatFont(a, c));
    try {
      if ("function" === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste
          || "function"
          === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste) {
        var d = a;
        try {
          var e = {strHtml: a};
          "function"
          === typeof KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste
              ? d = KEDITORTOP.G_CURRKEDITOR._config.event.beforePaste(c.ID, e)
              : "function"
              === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste
              && (d = KEDITORTOP.KEDITORWIN.RAONKEDITOR_BeforePaste(c.ID, e))
        } catch (f) {
          d =
              a
        }
        if (d) {
          a = d;
        } else if (0 == d || "" == d) {
          KEDITORTOP.RAONKEDITOR.util.cancelEvent(c.pasteEvt);
          "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
          && hideProcessingBackground();
          return
        }
      }
    } catch (g) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(g)
    }
    if (pasteWordCount(a)) {
      0 < a.length && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
      a = externalPageBreakDataRaplaceInEditor(a);
      -1 < a.indexOf("keditorcustomdata") && (a = checkExistCustomData(a));
      e = GetTableSelectionCells();
      d = document.createElement("div");
      d.innerHTML = a;
      var h = d.childNodes;
      if (1 == h.length && h[0].tagName && "table" == h[0].tagName.toLowerCase()
          && 0 < e.length) {
        command_tablePaste(KEDITORTOP.G_CURRKEDITOR.ID,
            KEDITORTOP.G_CURRKEDITOR, h[0]);
      } else {
        b = getFirstRange().range;
        e = null;
        b.startContainer == b.endContainer && (e = b.startContainer, 3
        == e.nodeType && (e = e.parentNode), e = GetTDTHCell(e));
        var m = !1;
        "1" == KEDITORTOP.G_CURRKEDITOR._config.useTablePasteDialog && e && 1
        == h.length && h[0].tagName && "table" == h[0].tagName.toLowerCase()
        && (m = !0);
        if (m) {
          KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableNode =
              h[0], KEDITORTOP.G_CURRKEDITOR.pasteTableParam.tableHtml = a, KEDITORTOP.G_CURRKEDITOR.pasteTableParam.currCellNode = e, KEDITORTOP.G_CURRKEDITOR.pasteTableParam.currTableNode = GetParentbyTagName(
              e, "table"), null != dragPopup && 0 != (dragPopup && "none"
              != dragPopup.style.display) || RAONK_EDITOR.prototype.dialog.show(
              KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
              KEDITORTOP.G_CURRKEDITOR._config.pages.paste_table);
        } else {
          var m = h = !1, q;
          if (q = e && b.startOffset == b.endOffset) {
            var u = !1;
            q = GetParentbyTagName(e, "table");
            1 < d.getElementsByTagName("p").length &&
            "" == q.style.fontSize ? (b = KEDITORTOP.RAONKEDITOR.util.getStyle(
                q, "fontSize"), q.style.fontSize = b, u = m = !0) : 1
            < d.getElementsByTagName("p").length && "" != q.style.fontSize
                ? u = !0 : 3 == b.startContainer.nodeType ? u = !1 : 1
                    == b.startContainer.nodeType && 0 == b.startOffset && "P"
                    == b.startContainer.nodeName && 1
                    == b.startContainer.childNodes.length && (1
                        != b.startContainer.childNodes[0].nodeType || "BR"
                        != b.startContainer.childNodes[0].nodeName && "SPAN"
                        != b.startContainer.childNodes[0].nodeName || (u = !0));
            q = !u
          }
          q && (h = !0);
          h || (b = /<h[0-9]/i, h =
              b.test(a));
          if (h || KEDITORTOP.RAONKEDITOR.browser.ie && 12
              <= KEDITORTOP.RAONKEDITOR.browser.ieVersion || "TEXT"
              == G_wordProcessorType) {
            pasteHtmlAtCaretHuge(a, !1, !1,
                !0);
          } else {
            "1" == KEDITORTOP.G_CURRKEDITOR._config.pasteWhenTableIsLast
            && d.lastChild && 1 == d.lastChild.nodeType && "TABLE"
            == d.lastChild.tagName && (a += "<p><br></p>");
            _iframeDoc.execCommand("inserthtml", !1, a);
            m && (GetParentbyTagName(e, "table").style.fontSize = "");
            try {
              for (var t in G_KPlugin) {
                if ("function"
                    === typeof G_KPlugin[t].onCommand) {
                  G_KPlugin[t].onCommand()
                }
              }
            } catch (v) {
              KEDITORTOP &&
              KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(v)
            }
          }
        }
      }
      if (KEDITORTOP.RAONKEDITOR.browser.chrome
          || KEDITORTOP.RAONKEDITOR.browser.opera) {
        for (t = getElementsByClass(
            "raon_placeholder", _iframeDoc.body, "span"), d = t.length, e = 0;
            e < d; e++) {
          t[e].getAttribute("contentEditable") || t[e].setAttribute(
              "contentEditable", "true");
        }
      }
      checkPasteImage(a);
      if (t = getFirstRange().range) {
        rangy.getSelection(_iframeWin).removeAllRanges();
        rangy.getSelection(_iframeWin).addRange(t);
        try {
          KEDITORTOP.RAONKEDITOR.browser.gecko &&
          0 == _iframeDoc.hasFocus() && _iframeWin.focus()
        } catch (w) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(w)
        }
      }
      0 > a.indexOf("keditorcustomdata") && (ReplaceImageToRealObject(
          !0), c._editorCustomDataMode = !0, removeAllKEditorCustomData(), ReplaceRealObjectToImage(
          !1), ClearDraggingTableAllTable());
      "1" == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
      && hideProcessingBackground();
      G_wordProcessorType = "";
      if (c.AccessClipboardForIEGecko) {
        c.UndoManager.putUndo(), c.UndoManager.charCount =
            0, KEDITORTOP.RAONKEDITOR.util.cancelEvent(c.pasteEvt);
      } else if (0
          == KEDITORTOP.RAONKEDITOR.browser.gecko) {
        c.UndoManager.putUndo(), c.UndoManager.charCount = 0, KEDITORTOP.RAONKEDITOR.util.cancelEvent(
            c.pasteEvt);
      } else {
        return !0
      }
    } else {
      KEDITORTOP.RAONKEDITOR.util.cancelEvent(c.pasteEvt), "1"
      == KEDITORTOP.G_CURRKEDITOR._config.useHtmlProcessByWorker
      && hideProcessingBackground()
    }
  })
}

function command_insertLayer(a, c) {
  try {
    keditor_src_init(c._EDITOR.design);
    getApplyDragResize(c)
    && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.resizeHandleClear();
    restoreSelection();
    0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    0 == getFirstRange().range.collapsed ? setRestoreCaretPos(!0)
        : setRestoreCaretPos(!1);
    getFirstRange();
    var b = _iframeDoc.createElement("div");
    b.style.display = "block";
    b.className = "K_edITor_Layer";
    b.style.width = "150px";
    b.style.height =
        "100px";
    b.style.border = "#000000 1px solid";
    b.style.position = "absolute";
    var d = getWindowScrollPos(_iframeWin);
    b.style.left = d[0] + 30 + "px";
    b.style.top = d[1] + 30 + "px";
    _iframeDoc.body.appendChild(b);
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
}

function command_elementZindex(a, c, b) {
  try {
    if (KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
        && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem) {
      var d = KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem;
      d.style.position = "absolute";
      var e = _iframeDoc.body.getElementsByTagName("*"), f = e.length;
      a = [];
      for (c = 0; c < f; c++) {
        1 == e[c].nodeType && -1
        < ",img,iframe,table,embed,div,".indexOf(
            "," + e[c].tagName.toLowerCase() + ",") && a.push(e[c]);
      }
      var g = a.length;
      for (c = g - 1; 0 <= c; c--) {
        for (var h = 1; h <= c; h++) {
          if (a[h -
          1].style.zIndex > a[h].style.zIndex) {
            var m = a[h - 1];
            a[h - 1] = a[h];
            a[h] = m
          }
        }
      }
      switch (b) {
        case 1:
          d != a[a.length - 1] && (d.style.zIndex = a[a.length - 1].style.zIndex
              + 1);
          break;
        case 2:
          if (d != a[0]) {
            for (c = 0; c < g; c++) {
              d == a[c] ? d.style.zIndex = 0
                  : a[c].style.zIndex += 1;
            }
          }
          break;
        case 3:
          if (d != a[a.length - 1]) {
            for (c = 0; c < g; c++) {
              if (d == a[c]) {
                a[c] = a[c + 1];
                a[c + 1] = d;
                for (h = 0; h < g; h++) {
                  a[h].style.zIndex = h;
                }
                break
              }
            }
          }
          break;
        case 4:
          if (d != a[0]) {
            for (c = 0; c < g; c++) {
              if (d == a[c]) {
                a[c] = a[c - 1];
                a[c - 1] = d;
                for (h = 0; h < g; h++) {
                  a[h].style.zIndex = h;
                }
                break
              }
            }
          }
      }
    }
  } catch (q) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
    KEDITORTOP.RAONKEDITOR.logMode && console.log(q)
  }
}

function command_elementPosition(a, c) {
  try {
    getApplyDragResize(KEDITORTOP.G_CURRKEDITOR)
    && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResizeDiv
    && (KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem.style.position = "absolute"
    == KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem.style.position
        ? ""
        : "absolute", KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.resizeHandleClear())
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
}

function command_insert_datetime(a, c, b) {
  try {
    keditor_src_init(c._EDITOR.design);
    restoreSelection();
    setFocusToBody();
    0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    var d = getFirstRange().range, e;
    if (b) {
      e = b;
    } else if ("undefined"
        != typeof KEDITORTOP.KEDITORWIN.G_CURRKEDITOR._FRAMEWIN.KEDITOR_LANG_CONFIG
        || "undefined"
        != typeof KEDITORTOP.KEDITORWIN.G_CURRKEDITOR._FRAMEWIN.KEDITOR_LANG_CONFIG.dateTime) {
      e = KEDITORTOP.G_CURRKEDITOR.lastDateType;
      var f = KEDITORTOP.G_CURRKEDITOR._config.lang,
          f = f.replace("-", ""), g = new Date, h = b = c = a = "", m = "",
          q = "", t = "", u = "", v = "", w = "", x = "";
      a = g.getFullYear();
      c = a.toString().substring(2, 4);
      b = KEDITORTOP.RAONKEDITOR.util.leadingZeros(g.getMonth() + 1, 2);
      h = KEDITORTOP.RAONKEDITOR.util.leadingZeros(g.getDate(), 2);
      m = g.getDay();
      void 0 != KEDITOR_LANG_CONFIG.dateTime["date_" + f].Month[g.getMonth()]
      && (q = KEDITOR_LANG_CONFIG.dateTime["date_" + f].Month[g.getMonth()]);
      void 0 != KEDITOR_LANG_CONFIG.dateTime["date_" + f].Day[m]
      && (t = KEDITOR_LANG_CONFIG.dateTime["date_" + f].Day[m]);
      u = KEDITORTOP.RAONKEDITOR.util.leadingZeros(g.getHours(),
          2);
      v = KEDITORTOP.RAONKEDITOR.util.leadingZeros(g.getMinutes(), 2);
      w = KEDITORTOP.RAONKEDITOR.util.leadingZeros(g.getSeconds(), 2);
      x = 12 <= g.getHours() ? "PM" : "AM";
      e = e.replace("YYYY", a);
      e = e.replace("YY", c);
      e = e.replace("MM", b);
      e = e.replace("DD", h);
      e = e.replace("Month", q);
      e = e.replace("Day", t);
      e = e.replace("hh", u);
      e = e.replace("mm", v);
      e = e.replace("ss", w);
      e = e.replace("AMPM", x)
    } else {
      e = "";
    }
    d.deleteContents();
    0 == d.collapsed ? setRestoreCaretPos(!0) : setRestoreCaretPos(!1);
    d.pasteHtml(e + '<span id="keditor_datevalue">keditor_datevalue</span>');
    var y = _iframeDoc.getElementById("keditor_datevalue");
    doSetCaretPosition(y, 1);
    y.parentNode.removeChild(y);
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
    onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0});
    onCommand({editor: KEDITORTOP.G_CURRKEDITOR, cmd: "insert_datetime"})
  } catch (z) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(z)
  }
}

function command_InsertConversion(a, c, b) {
  try {
    keditor_src_init(c);
    restoreSelection();
    setFocusToBody();
    0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    var d = getFirstRange().range;
    d.deleteContents();
    var e = d.getDocument().createTextNode(b.text);
    d.insertNode(e);
    d.selectNode(e);
    d.select();
    if (e.parentNode && e.parentNode.tagName && "BODY"
        == e.parentNode.tagName) {
      var f = _iframeDoc.createElement("p");
      _iframeDoc.body.insertBefore(f, e);
      f.appendChild(e)
    }
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
  } catch (g) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(g)
  }
}

function command_InsertVideo(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange();
  c = a.range;
  0 == c.collapsed ? setRestoreCaretPos(!0) : setRestoreCaretPos(!1);
  c.pasteHtml(b);
  a.sel.collapseToEnd();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertCalculator(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange();
  c = a.range;
  0 == c.collapsed ? setRestoreCaretPos(!0) : setRestoreCaretPos(!1);
  c.pasteHtml(b);
  a.sel.collapseToEnd();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_zoom(a, c, b) {
  try {
    var d = KEDITORTOP.G_CURRKEDITOR.getEditorMode();
    c = null;
    "design" == d ? c = _iframeDoc.body : "preview" == d
        && (c = KEDITORTOP.G_CURRKEDITOR._EDITOR.preview.contentDocument.body);
    d = 0;
    "p" == b ? d = 10 : "m" == b && (d = -10);
    var e = document.getElementById("ue_" + a + "zoom_text").value,
        e = parseIntOr0(e) + d;
    0 == e ? (b = /\((.*)\)/i, c && c.style.transform.match(b), e = ""
    == RegExp.$1 ? 100 : 100 * parseFloat(RegExp.$1)) : 10 > e && (e = 10);
    document.getElementById("ue_" + a + "zoom_text").value = e.toString() + "%";
    e /= 100;
    KEDITORTOP.RAONKEDITOR.browser.ie &&
    10 > KEDITORTOP.RAONKEDITOR.browser.ieVersion ? c.style.zoom = 100 * e + "%"
        : (c.style.transform = "scale(" + e
            + ")", c.style.transformOrigin = "0% 0% 0px")
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
}

function command_InsertPlaceholder(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange();
  c = a.range;
  0 == c.collapsed ? setRestoreCaretPos(!0) : setRestoreCaretPos(!1);
  var d = document.createElement("span");
  d.className = "raon_placeholder";
  d.setAttribute("placeholder", b.notice);
  d.setAttribute("contenteditable", "true");
  c.pasteHtml(d.outerHTML);
  a.sel.collapseToEnd();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_removeBackgroundColor(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var b = function (a, b) {
    try {
      b || makeRangeSelectionMarkInDesign();
      var c = _iframeDoc.getElementsByTagName("kmark"), d, e,
          f = c[0].parentNode;
      if (f) {
        for (; ;) {
          if ("P" == f.tagName || "DIV" == f.tagName || "BODY" == f.tagName
              || "TD" == f.tagName) {
            d = f;
            break
          }
          f = f.parentNode
        }
        e = GetParentbyTagName(d, "table")
      }
      var g, h, z = c[1].parentNode;
      if (z) {
        for (; ;) {
          if ("P" == z.tagName || "DIV" == z.tagName || "BODY" == z.tagName
              || "TD" == z.tagName) {
            g =
                z;
            break
          }
          z = z.parentNode
        }
        h = GetParentbyTagName(g, "table")
      }
      var A = RAONKEditor_lang.msg.error_remove_background_color, f = !1;
      if (e && h) {
        e != h && (f = !0);
      } else if (e || h) {
        f = !0;
      }
      if (f) {
        alert(A);
      } else {
        h = function (a, b, c, d) {
          b = b.childNodes;
          for (var e = b.length, f = "", g = 0; g < e; g++) {
            var h = "";
            1 == b[g].nodeType ? (h = b[g].outerHTML, h = CleanZeroChar(h)) : 3
                == b[g].nodeType && (h = b[g].data);
            f += h
          }
          c ? (a.innerHTML = f, d ? a.appendChild(d) : a.innerHTML = f
              + '<kmark class="kmark"></kmark>') : d
              ? (a.innerHTML += f, a.firstChild ? a.insertBefore(d,
                  a.firstChild) : a.appendChild(d)) :
              a.innerHTML += '<kmark class="kmark"></kmark>' + f
        };
        A = function (a, b) {
          null == a.firstChild && ("xp"
          == KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase()
              ? a.innerHTML = unescape("%uFEFF")
              : a.innerHTML = KEDITORTOP.RAONKEDITOR.browser.ie ? unescape(
                  "%u200B") : "<br>");
          b.setStartBefore(a.firstChild);
          b.setEndAfter(a.lastChild);
          return b.extractContents()
        };
        e = function (a, b, c) {
          c.setStartAfter(a);
          c.setEndBefore(b);
          return c.extractContents()
        };
        "BODY" == d.tagName ? a.setStartBefore(c[0]) : a.setStartBefore(
            d.firstChild);
        a.setEndBefore(c[0]);
        var B = a.extractContents();
        a.setStartAfter(c[1]);
        "BODY" == g.tagName ? a.setEndAfter(c[1]) : a.setEndAfter(g.lastChild);
        var C = a.extractContents();
        if (d == g) {
          removeKMarkInFrame();
          var D = A(d, a);
          h(d, B, !0);
          h(g, C, !1);
          for (var H = removeBackgroundColorInNodes(D, "backgroundColor",
              ",table,td,p,"); H.firstChild;) {
            c[1].parentNode.insertBefore(
                H.firstChild, c[1])
          }
        } else {
          D = null;
          "BODY" != d.tagName && (_iframeDoc.body.firstChild
              ? _iframeDoc.body.insertBefore(c[0], _iframeDoc.body.firstChild)
              : _iframeDoc.body.appendChild(c[0]), D = A(d, a));
          f = null;
          "BODY" != g.tagName && (_iframeDoc.body.appendChild(c[1]), f = A(g,
              a));
          if ("BODY" != d.tagName) {
            for (h(d, B, !0,
                c[0]), H = removeBackgroundColorInNodes(D, "backgroundColor",
                ",table,td,p,"); H.firstChild;) {
              d.appendChild(H.firstChild);
            }
          }
          if ("BODY" != g.tagName) {
            h(g, C, !1, c[1]);
            for (var H = removeBackgroundColorInNodes(f, "backgroundColor",
                ",table,td,p,"), G = g.getElementsByTagName("kmark");
                H.firstChild;) {
              G[0].parentNode.insertBefore(H.firstChild, G[0])
            }
          }
          B = null;
          c = _iframeDoc.getElementsByTagName("kmark");
          "BODY" == d.tagName && (d = c[0]);
          "BODY" == g.tagName && (g = c[1]);
          B = e(d, g, a);
          for (H = removeBackgroundColorInNodes(B, "backgroundColor",
              ",table,td,p,"); H.firstChild;) {
            g.parentNode.insertBefore(
                H.firstChild, g)
          }
        }
        b || (c = _iframeDoc.getElementsByTagName("kmark"), a.setStartAfter(
            c[0]), a.setEndBefore(c[1]), rangy.getSelection(
            _iframeWin).removeAllRanges(), rangy.getSelection(
            _iframeWin).addRange(a))
      }
      removeKMarkInFrame()
    } catch (I) {
      removeKMarkInFrame()
    }
  };
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  var d =
      getFirstRange().range, e = GetTableSelectionCells(), f = e.length;
  if (0 < f) {
    for (var g = 0; g < f; g++) {
      var h = _iframeDoc.createElement("kmark");
      e[g].insertBefore(h, e[g].firstChild);
      h = _iframeDoc.createElement("kmark");
      e[g].appendChild(h);
      d.setStartBefore(e[g].firstChild);
      d.setEndAfter(e[g].lastChild);
      b(d, !0)
    }
  } else {
    b(d);
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_ParagraphAttribute(a, c, b) {
  try {
    keditor_src_init(c);
    restoreSelection();
    setFocusToBody();
    var d = getFirstRange().range;
    try {
      KEDITORTOP.G_CURRKEDITOR.beforeOffset = [], KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
          d.startOffset), KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
          d.endOffset), 3 == d.startContainer.nodeType
          ? KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
              d.startContainer.parentNode)
          : KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(d.startContainer), 3
      == d.endContainer.nodeType ? KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
              d.endContainer.parentNode) :
          (KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(d.endContainer), 1
          == d.endOffset
          && (KEDITORTOP.G_CURRKEDITOR.beforeOffset[1] = (d.endContainer.innerText
              || d.endContainer.textContent).length)), KEDITORTOP.G_CURRKEDITOR.beforeOffset.push(
          d.toString().length)
    } catch (e) {
      KEDITORTOP.G_CURRKEDITOR.beforeOffset = null
    }
    0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    a = "p li dt dd h1 h2 h3 h4 h5 h6 pre address".split(" ");
    var f = a.length, g, h, m = GetTableSelectionCells();
    if (0 ==
        m.length) {
      if (null != d.startContainer.previousSibling && "HEAD"
          == d.startContainer.previousSibling.tagName && null
          == d.endContainer.nextSibling) {
        for (var q = 0; q < f; q++) {
          g = _iframeDoc.body.getElementsByTagName(a[q]);
          h = g.length;
          for (var t = 0; t < h; t++) {
            "" != b.marginLeft.toString()
            && (g[t].style.marginLeft = b.marginLeft + b.marginLeftType), ""
            != b.marginRight.toString()
            && (g[t].style.marginRight = b.marginRight
                + b.marginRightType), "" != b.marginTop.toString()
            && (g[t].style.marginTop = b.marginTop + b.marginTopType), ""
            != b.marginBottom.toString() &&
            (g[t].style.marginBottom = b.marginBottom + b.marginBottomType), ""
            != b.letterSpacing.toString()
            && (g[t].style.letterSpacing = b.letterSpacing + "px"), ""
            != b.wordSpacing.toString()
            && (g[t].style.wordSpacing = b.wordSpacing
                + "px"), "" != b.textIndent.toString()
            && (g[t].style.textIndent = b.textIndent + b.textIndentType), ""
            != b.fontSize.toString() && (g[t].style.fontSize = b.fontSize
                + b.fontType), "" != b.fontFamily.toString() && ("default"
            == b.fontFamily ? g[t].style.fontFamily = ""
                : g[t].style.fontFamily = b.fontFamily)
          }
        }
        for (var u = _iframeDoc.body.getElementsByTagName("table"),
            v = u.length, q = 0; q < v; q++) {
          for (var w = u[q].rows,
              x = w.length, t = 0; t < x; t++) {
            for (var m = w[t].cells,
                y = m.length, z = 0; z < y; z++) {
              setBlockTag(m[z].childNodes, a,
                  "paragraphAttribute", b);
            }
          }
        }
        setBlockTag(_iframeDoc.body.childNodes, a, "paragraphAttribute", b);
        for (var A = _iframeDoc.body.getElementsByTagName("div"), B = A.length,
            t = 0; t < B; t++) {
          setBlockTag(A[t].childNodes, a,
              "paragraphAttribute", b)
        }
      } else {
        g = getNodesInRange(d);
        h = g.length;
        1 == d.collapsed && 0 == d.getNodes().length && d.pasteHtml(
            '<span id="_kEditorPosition">&nbsp;</span>');
        for (f = 0; f <
        h; f++) {
          if (1 == g[f].nodeType) {
            var C = g[f].tagName.toLowerCase();
            -1 < a.indexOf(C) && ("" != b.marginLeft.toString()
            && (g[f].style.marginLeft = b.marginLeft + b.marginLeftType), ""
            != b.marginRight.toString()
            && (g[f].style.marginRight = b.marginRight
                + b.marginRightType), "" != b.marginTop.toString()
            && (g[f].style.marginTop = b.marginTop + b.marginTopType), ""
            != b.marginBottom.toString()
            && (g[f].style.marginBottom = b.marginBottom
                + b.marginBottomType), ""
            != b.letterSpacing.toString()
            && (g[f].style.letterSpacing = b.letterSpacing + "px"), "" !=
            b.wordSpacing.toString() && (g[f].style.wordSpacing = b.wordSpacing
                + "px"), "" != b.textIndent.toString()
            && (g[f].style.textIndent = b.textIndent + b.textIndentType), ""
            != b.fontSize.toString() && (g[f].style.fontSize = b.fontSize
                + b.fontType), "" != b.fontFamily.toString() && ("default"
            == b.fontFamily ? g[f].style.fontFamily = ""
                : g[f].style.fontFamily = b.fontFamily))
          }
        }
        var D;
        0 == d.toString().length && 1 == d.getNodes().length
        && (D = d.getNodes()[0], g.push(d.getNodes()[0]));
        setBlockTag(g, a, "paragraphAttribute", b)
      }
      var H = _iframeDoc.getElementById("_kEditorPosition");
      if (H) {
        doSetCaretPosition(H, 1), H.parentNode.removeChild(
            H);
      } else if (D) {
        var G = getFirstRange().range;
        getFirstRange().sel.removeAllRanges();
        G.selectNode(D);
        getFirstRange().sel.addRange(G)
      }
    } else {
      for (y = m.length, q = 0; q < y; q++) {
        for (t = 0; t < f; t++) {
          for (g = m[q].getElementsByTagName(
              a[t]), h = g.length, z = 0; z < h; z++) {
            "" != b.marginLeft.toString()
            && (g[t].style.marginLeft = b.marginLeft + b.marginLeftType), ""
            != b.marginRight.toString()
            && (g[t].style.marginRight = b.marginRight
                + b.marginRightType), "" != b.marginTop.toString()
            && (g[t].style.marginTop =
                b.marginTop + b.marginTopType), "" != b.marginBottom.toString()
            && (g[t].style.marginBottom = b.marginBottom
                + b.marginBottomType), ""
            != b.letterSpacing.toString()
            && (g[t].style.letterSpacing = b.letterSpacing + "px"), ""
            != b.wordSpacing.toString()
            && (g[t].style.wordSpacing = b.wordSpacing
                + "px"), "" != b.textIndent.toString()
            && (g[t].style.textIndent = b.textIndent + b.textIndentType), ""
            != b.fontSize.toString() && (g[t].style.fontSize = b.fontSize
                + b.fontType), "" != b.fontFamily.toString() && ("default"
            == b.fontFamily ? g[t].style.fontFamily =
                "" : g[t].style.fontFamily = b.fontFamily);
          }
        }
        setBlockTag(m[q].childNodes, a, "paragraphAttribute", b);
        A = m[q].getElementsByTagName("div");
        B = A.length;
        for (t = 0; t < B; t++) {
          setBlockTag(A[t].childNodes, a,
              "paragraphAttribute", b)
        }
      }
    }
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
    KEDITORTOP.G_CURRKEDITOR.beforeOffset = null;
    G_Ruler && "2" == KEDITORTOP.G_CURRKEDITOR._config.ruler.mode
    && G_Ruler.SetRulerPosition()
  } catch (I) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
    console.log(I)
  }
}

function command_BeforeSetCompleteSpellCheck(a) {
  try {
    a._BODY && "spellcheck" in a._BODY && "1" == a._config.browserSpellCheck
    && 0 == a._BODY.spellcheck && a._BODY.removeAttribute("spellcheck")
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
}

function command_AdjustTableAndCellWidth(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  a = function (a, b) {
    for (var c = a.length, d = 0; d < c; d++) {
      var m = a[d];
      if ("PPT" == getPasteFormatType()) {
        break;
      }
      if ("" != m.style.width && "fixed" != m.style.tableLayout) {
        if (1 == b && m.oWidth && 0 < m.oWidth) {
          for (var q = m.getElementsByTagName("colgroup"), t = q.length - 1;
              0 <= t; t--) {
            q[t].parentNode.removeChild(q[t]);
          }
          for (var c = m.clientWidth, d = m.rows, u = d.length, t = 0; t < u;
              t++) {
            for (var v = d[t], w = v.cells.length, q = 0; q < w; q++) {
              var x =
                  v.cells[q];
              if ("" != x.style.width && -1 < x.style.width.indexOf("px")) {
                var y = 1 * KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
                        x.style.width)
                    * c / m.oWidth;
                x.style.width = y + "px"
              }
            }
          }
          m.oWidth = "";
          break
        }
        t = 0;
        if (m && 1 != m.raonAdjusted) {
          for (var z = [], A = [], B = m.rows, C = B.length, D = 0, q = x = 0;
              q < C; q++) {
            u = B[q].cells.length, u > x && (x = u, D = q);
          }
          for (var q = B[D].cells.length, H = 0; H < q; H++) {
            var x = B[D].cells[H], G = {rect: null, width: null};
            G.rect = getClientRect(x);
            G.width = x.offsetWidth;
            z.push(G);
            t += x.offsetWidth
          }
          for (q = 0; q < C; q++) {
            v = B[q].cells;
            u = v.length;
            D =
                [];
            for (H = 0; H < u; H++) {
              for (var x = v[H], x = getClientRect(x), G = z.length, I = !1,
                  M = !1, K = 0; K < G; K++) {
                var P = 0, w = 0;
                1 > Math.abs(x.left - z[K].rect.left) && 1 > Math.abs(
                    x.right - z[K].rect.right) ? (M = I = !0, P = x.right
                    - x.left) : x.left <= z[K].rect.left && x.right
                    >= z[K].rect.right && (1 > Math.abs(x.left - z[K].rect.left)
                        ? I = !0 : 1 > Math.abs(x.right - z[K].rect.right)
                        && (M = !0), P += x.right - x.left);
                if (I && M) {
                  w = parseInt(P, 10);
                  break
                }
              }
              D.push(w)
            }
            A.push(D)
          }
          try {
            for (q = 0; q < C; q++) {
              for (v = B[q].cells, u = v.length, H = 0;
                  H < u; H++) {
                y = A[q][H], v[H].style.width = 0 == y ? "" : y
                    + "px"
              }
            }
          } catch (E) {
            KEDITORTOP &&
            KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(E)
          }
          1 != b && (m.style.width = t + 2 + "px");
          q = m.getElementsByTagName("colgroup");
          for (t = q.length - 1; 0 <= t; t--) {
            q[t].parentNode.removeChild(q[t]);
          }
          m.raonAdjusted = !0
        }
      }
    }
  };
  var d = null;
  c = [];
  if (b) {
    if ("paste" == b.type) {
      return c = b.htmlData, b = document.createElement(
          "div"), b.style.width = "2000px", b.style.height = "2000px", b.style.position = "absolute", b.style.left = "-10000px", b.style.top = "-10000px", document.body.appendChild(
          b), b.innerHTML = c, c = b.getElementsByTagName("table"),
          a(c), a = b.innerHTML, b.parentNode.removeChild(b), a;
    }
    "setHtml" == b.type ? (c = _iframeDoc.getElementsByTagName("table"), a(c))
        : "forceAdjust" == b.type && (b = b.targetTable, 1 == b.raonAdjusted
    && (b.raonAdjusted = !1), c.push(b), a(c, !0))
  } else {
    null != KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT
        ? d = KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT
        : d = ActiveCurrTable, b = GetParentbyTagName(d, "table"), c.push(b), a(
        c), KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
  }
}

function command_AdjustTableAndCellHeight(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  a = [];
  if (b && "forceAdjust" == b.type) {
    a.push(b.targetTable);
    try {
      var d = a.length;
      for (c = 0; c < d; c++) {
        var e = a[c];
        if ("" != e.style.height) {
          for (var f = e.rows, g = f.length,
              h = parseInt(e.style.height, 10), m = b.beforeHeight, q = 0;
              q < g;
              q++) {
            for (var t = f[q].cells, u = t.length, v = 0; v < u; v++) {
              var w = t[v], x = w.style.height;
              "" != x && -1 < x.indexOf("px") && (x = parseInt(x,
                  10), w.style.height = h * x / m + "px")
            }
          }
        }
      }
    } catch (y) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
      KEDITORTOP.RAONKEDITOR.logMode && console.log(y)
    }
  }
}

function command_PluginAction(a, c, b) {
  switch (b.action) {
    case "insert_image":
      plugin_insertImage(a, c, b);
      break;
    case "replace_image":
      plugin_replaceImage(a, c, b);
      break;
    case "insert_element":
      plugin_insertElement(a, c, b);
      break;
    case "replace_element":
      plugin_replaceElement(a, c, b)
  }
}

function plugin_insertImage(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  try {
    1 == selObjectText.collapsed && setRestoreCaretPos(!1)
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  a.collapse(!0);
  a.insertNode(b.image);
  b.image.setAttribute("raon_plugin", b.pluginName);
  a.selectNode(b.image);
  a.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(a);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function plugin_replaceImage(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  try {
    1 == selObjectText.collapsed && setRestoreCaretPos(!1)
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  a.selectNode(b.element);
  a.deleteContents();
  a.collapse(!0);
  a.insertNode(b.image);
  b.image.setAttribute("raon_plugin", b.pluginName);
  a.selectNode(b.image);
  a.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(a);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function plugin_insertElement(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  try {
    1 == selObjectText.collapsed && setRestoreCaretPos(!1)
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  a.collapse(!0);
  a.insertNode(b.newElement);
  b.newElement.setAttribute("raon_plugin", b.pluginName);
  a.selectNode(b.newElement);
  a.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(a);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function plugin_replaceElement(a, c, b) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  try {
    1 == selObjectText.collapsed && setRestoreCaretPos(!1)
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  a.selectNode(b.element);
  a.deleteContents();
  a.collapse(!0);
  a.insertNode(b.newElement);
  b.newElement.setAttribute("raon_plugin", b.pluginName);
  a.selectNode(b.newElement);
  a.collapse(!1);
  rangy.getSelection(_iframeWin).removeAllRanges();
  rangy.getSelection(_iframeWin).addRange(a);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function command_InsertTableTopBottomParagraph(a, c, b) {
  restoreSelection();
  setFocusToBody();
  if (null != b) {
    b && ("insert_table_top_paragraph" == a ? insertPtagTableNear(
        !0, b) : insertPtagTableNear(!1, b));
  } else {
    var d = getFirstRange().range;
    b = null;
    d && d.startContainer && (b = getMyElementNode(d.startContainer));
    if (b) {
      d = GetTDTHCell(b);
      if (null == d && "tr" == b.tagName.toLowerCase()) {
        var e = b.cells.length;
        0 < e && (d = b.cells[e - 1])
      }
      d && (GetParentbyTagName(d, "tr"), (b = GetParentbyTagName(d, "table"))
      && ("insert_table_top_paragraph" == a ? insertPtagTableNear(!0,
          b) : insertPtagTableNear(!1, b)))
    }
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  c._iconEnable("default")
}

function command_fontSizeIncDec(a, c, b) {
  var d = "";
  "1" == b._config.useFontSizeKeyin ? d = document.getElementById(
      "txtara_" + a + "font_size").value : (d = document.getElementById(
      "ue_" + a + "font_size").innerHTML, KEDITORTOP.RAONKEDITOR.browser.ie && 8
  >= KEDITORTOP.RAONKEDITOR.browser.ie.ieVersion ? (d = d.replace("<SPAN>",
      ""), d = d.replace("</SPAN>", "")) : (d = d.replace("<span>",
      ""), d = d.replace("</span>", "")));
  if ("" != d && d != RAONKEditor_lang.icon.font_size) {
    var e = "", f = "", g = 1;
    "" != b._config.fontSizeIncDecGap && (g = parseInt(
        b._config.fontSizeIncDecGap));
    "font_size_dec" == c && (g *= -1);
    f = parseInt(d);
    if (-1 < d.indexOf("pt") || -1 < d.indexOf("px") || -1 < d.indexOf("em")
        || 0 < d.indexOf("%")) {
      0 < d.indexOf("pt") ? e = "pt" : 0 < d.indexOf(
          "px") ? e = "px" : 0 < d.indexOf("em") ? e = "em" : 0 < d.indexOf("%")
          && (e = "%", g *= 10);
    }
    d = f + g;
    "font_size_dec" == c && 1 > d && (d = f);
    f = d + e;
    "1" == KEDITORTOP.G_CURRKEDITOR._config.useFontSizeKeyin
        ? document.getElementById("txtara_" + a + "font_size").value = f
        : document.getElementById("ue_" + a + "font_size").innerHTML = "<span>"
            + f + "</span>";
    command_fontsize(a, b._EDITOR.design, f)
  }
}

function command_lineHeightIncDec(a, c, b) {
  var d = "";
  "1" == b._config.useLineHeightKeyin ? d = document.getElementById(
      "txtara_" + a + "line_height").value : (d = document.getElementById(
      "ue_" + a + "line_height").innerHTML, KEDITORTOP.RAONKEDITOR.browser.ie
  && 8 >= KEDITORTOP.RAONKEDITOR.browser.ie.ieVersion ? (d = d.replace("<SPAN>",
      ""), d = d.replace("</SPAN>", "")) : (d = d.replace("<span>",
      ""), d = d.replace("</span>", "")));
  if ("" != d && d != RAONKEditor_lang.icon.line_height) {
    var e = d, f = 1;
    "" != b._config.lineHeightIncDecGap && (f = parseFloat(
        b._config.lineHeightIncDecGap));
    "line_height_dec" == c && (f *= -1);
    0 < d.indexOf("%") ? (f *= 10, e = e.substring(0,
        e.length - 1), f = parseInt(parseInt(e) + f), 0 < parseInt(e, 10) && 0
    <= f && (e = f), c = "%") : (c = "", 0 < d.indexOf("pt") || 0 < d.indexOf(
        "px") || 0 < d.indexOf("em") ? (f = parseFloat(
        parseFloat(e) + f).toFixed(2), 0 < d.indexOf("pt") ? c = "pt" : 0
    < d.indexOf("px") ? c = "px" : 0 < d.indexOf("em") && (c = "em"), 0 <= f
    && (e = f)) : (f *= .1, f = parseFloat(parseFloat(e) + f).toFixed(2), e = 0
    <= f ? f : parseFloat(e)));
    e = parseFloat(e) + c;
    "1" == KEDITORTOP.G_CURRKEDITOR._config.useLineHeightKeyin
        ? document.getElementById("txtara_" +
            a + "line_height").value = e : document.getElementById(
            "ue_" + a + "line_height").innerHTML = "<span>" + e + "</span>";
    command_lineHeight(a, b._EDITOR.design, e)
  }
}

function command_letterSpacingIncDec(a, c, b) {
  var d = document.getElementById("ue_" + a + "letter_spacing").innerHTML;
  KEDITORTOP.RAONKEDITOR.browser.ie && 8
  >= KEDITORTOP.RAONKEDITOR.browser.ie.ieVersion ? (d = d.replace("<SPAN>",
      ""), d = d.replace("</SPAN>", "")) : (d = d.replace("<span>",
      ""), d = d.replace("</span>", ""));
  if ("" != d && d != RAONKEditor_lang.icon.letter_spacing) {
    var e = 1;
    void 0 != b._config.letterSpacingIncDecGap && ""
    != b._config.letterSpacingIncDecGap && (e = parseFloat(
        b._config.letterSpacingIncDecGap));
    "letter_spacing_dec" ==
    c && (e *= -1);
    c = d.substring(d.length, d.length - 2);
    b = parseFloat(d);
    if (-1 < d.indexOf("pt") || -1 < d.indexOf("px") || -1 < d.indexOf(
        "em")) {
      c = "", 0 < d.indexOf("pt") ? c = "pt" : 0 < d.indexOf("px")
          ? c = "px" : 0 < d.indexOf("em") && (c = "em"), b = parseFloat(
          parseFloat(parseFloat(b) + e).toFixed(2)) + c;
    }
    document.getElementById("ue_" + a + "letter_spacing").innerHTML = "<span>"
        + b + "</span>";
    command_letterSpacing(a, KEDITORTOP.G_CURRKEDITOR, b)
  }
}

function command_bodyFit(a, c) {
  if (!(KEDITORTOP.RAONKEDITOR.browser.ie && 8
      >= KEDITORTOP.RAONKEDITOR.browser.ieVersion)) {
    G_BodyFit.widthFixStatus = !G_BodyFit.widthFixStatus;
    G_BodyFit.widthFixedStatus = !G_BodyFit.widthFixedStatus;
    G_BodyFit.SetBodyWidth();
    var b = "", d = "";
    G_BodyFit.widthFixedStatus ? (b = "break-word;", d = "normal"
        == c._setting.word_break_type ? "break-all"
            : c._setting.word_break_type, setBodyFitStyle(c, !0))
        : (b = c._setting.word_wrap_type, d = c._setting.word_break_type, setBodyFitStyle(
            c, !1));
    G_Ruler && G_Ruler.viewRulerStatus &&
    G_Ruler.SetRulerPosition();
    d = createEditorDefaultStyleInnerHTML(c._config, "", "", "", d, b);
    b = _iframeDoc.createElement("style");
    b.type = "text/css";
    b.styleSheet ? (b.styleSheet.cssText = d, "" == b.innerHTML
    && (b.innerHTML = d)) : b.appendChild(_iframeDoc.createTextNode(d));
    (d = getDefaultStyleTag(_iframeDoc, c)) ? (d.parentNode.insertBefore(b,
        d), d.parentNode.removeChild(d)) : (d = _iframeDoc.getElementsByTagName(
        "head")[0]) && d.appendChild(b)
  }
}

function command_forbidden_word(a, c, b) {
  RAONK_EDITOR.prototype.dialog.show(c._config.webPath.page,
      c._config.pages.forbidden_word)
}

function command_saveAsImage(a, c, b) {
  try {
    keditor_src_init(b._EDITOR.design);
    var d = c.src.split(/(\\|\/)/g).pop().substring(0,
        c.src.split(/(\\|\/)/g).pop().lastIndexOf("."));
    "" == d && (d = "untitled");
    var e = "", f = !1;
    a = function () {
      var a = c.src.split("?")[0].split(".");
      e = a[a.length - 1].toLowerCase();
      "jpg" != e && "gif" != e && "png" != e && "tif" != e && "tiff" != e
      && "bmp" != e && "jpeg" != e && "jpe" != e && "jfif" != e
      && (d = "untitled", e = "png", f = !0)
    };
    var g = function (a) {
      var b = new Image;
      b.src = c.src;
      b.onload = function () {
        var c = document.createElement("canvas");
        c.style.display = "none";
        document.body.appendChild(c);
        var d = c.getContext("2d");
        c.id = "saveCanvas";
        c.width = b.width;
        c.height = b.height;
        d.drawImage(b, 0, 0, b.width, b.height);
        a ? (dataURL = "jpg" == e || "jpeg" == e ? c.toDataURL("image/jpeg")
            : c.toDataURL(), m(dataURL)) : (dataURL = c.toDataURL(), h(dataURL))
      }
    };
    if ("1" == b._config.useKManager && -1 == c.src.indexOf(
        "data:image/")) {
      a(), c.src.indexOf("/"), agentSaveImageFile(b, c.src,
          d + "." + e, function (a) {
            "" == a && alert(RAONKEditor_lang.msg.error_save_as_image)
          });
    } else {
      var h = function (a) {
        var b =
            document.createElement("a");
        b.setAttribute("href", a);
        b.setAttribute("download", d + "." + e);
        document.createEvent ? (a = document.createEvent(
                "MouseEvents"), a.initEvent("click", !0, !0), b.dispatchEvent(a))
            : b.click()
      }, m = function (a) {
        if (KEDITORTOP.navigator.msSaveOrOpenBlob) {
          a = KEDITORTOP.RAONKEDITOR.util.dataURItoBlob(a);
          var b = "." + a.type.substring(a.type.indexOf("/") + 1,
              a.type.length);
          ".jpeg" == b && (b = ".jpg");
          KEDITORTOP.navigator.msSaveOrOpenBlob(a, d + b)
        } else {
          alert(RAONKEditor_lang.msg.error_browser_save_as_image)
        }
      };
      KEDITORTOP.RAONKEDITOR.browser.mobile
      || KEDITORTOP.RAONKEDITOR.browser.safari ? alert(
          RAONKEditor_lang.msg.error_browser_save_as_image) : -1
      < c.src.indexOf("data:image/") ? KEDITORTOP.RAONKEDITOR.browser.ie ? m(
          c.src) : (e = getExtFromImageDataSrc(c.src), h(c.src)) : c.src.match(
          /:\/\/(.[^\/]+)/)[1] != window.location.host ? alert(
              RAONKEditor_lang.msg.error_cors_save_as_image)
          : (a(), KEDITORTOP.RAONKEDITOR.browser.ie ? f
              ? KEDITORTOP.RAONKEDITOR.browser.canvasSupported ? g(!0) : alert(
                  RAONKEditor_lang.msg.error_browser_save_as_image) :
              g(!0) : f ? g(!1) : h(c.src))
    }
  } catch (q) {
    alert(RAONKEditor_lang.msg.error_save_as_image)
  }
};var ColorCellBackColor = "#d0e6fd", ColorCellDefColor = "#ffffff",
    Mouse_IsPlain = 0, Mouse_IsTableSelecting = 1, Mouse_IsTableDragging = 2,
    Mouse_IsControlSelecting = 3, Mouse_IsCellDragging = 4,
    Mouse_IsCellResizing = 5, Mouse_Status = Mouse_IsPlain,
    DrageStartCell = null, DrageEndCell = null, ActiveCurrTable = null,
    ActiveLastTable = null, mouseStartPos = {}, mouseEndPos = {}, elResizeBar,
    elResizeBarCover, ResizeInfo = {}, nDraggableCellEdge = 4,
    nPageLeftRightMargin = 0, nPageTopBottomMargin = 0, MIN_CELL_WIDTH = 10,
    MIN_CELL_HEIGHT = 10;

function createTableResizeBar(a) {
  a = document.getElementById("table_resizebar");
  if (null == a) {
    a = document.createElement("div");
    try {
      a.innerHTML = '<div id="table_resizebar" style="position:absolute; overflow:hidden; z-index: 99; "><div onmousedown="return false" style="background-color:#000000;filter:alpha(opacity=0);opacity:0.0;-moz-opacity:0.0;-khtml-opacity:0.0;cursor: col-resize; left: 0px; top: 0px; width: 100%; height: 100%;font-size:1px;z-index: 999; "></div></div>', elResizeBar = a.firstChild, elResizeBarCover =
          elResizeBar.firstChild
    } catch (c) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(c)
    }
    document.body.appendChild(elResizeBar);
    KEDITORTOP.RAONKEDITOR.util.addEvent(elResizeBarCover, "mousedown",
        _mousedown_ResizeBarCover);
    KEDITORTOP.RAONKEDITOR.util.addEvent(elResizeBarCover, "dblclick",
        dbclick_ResizeBarCover);
    nPageLeftRightMargin = parseIntOr0(document.body.marginLeft) + parseIntOr0(
        document.body.marginRight);
    nPageTopBottomMargin = parseIntOr0(document.body.marginTop) + parseIntOr0(
        document.body.marginBottom)
  }
}

function dbclick_ResizeBarCover() {
  if (3 == ResizeInfo.nResizeMode || 4 == ResizeInfo.nResizeMode) {
    var a = getFirstRange().sel;
    a && a.docSelection && "Control" == a.docSelection.type
        ? (a = GetParentbyTagName(ResizeInfo.currCell,
            "table"), KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a, RAONK_EDITOR.prototype.dialog.show(
            KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
            KEDITORTOP.G_CURRKEDITOR._config.pages.table_property, a))
        : (a._ranges.length = a.rangeCount = a.nativeSelection.rangeCount, a.rangeCount
        && (a = GetParentbyTagName(ResizeInfo.currCell,
            "table"), KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = a, RAONK_EDITOR.prototype.dialog.show(
            KEDITORTOP.G_CURRKEDITOR._config.webPath.page,
            KEDITORTOP.G_CURRKEDITOR._config.pages.table_property, a)))
  }
}

var nStartHeight = 0, nStartWidth = 0;

function coverResizeLayer() {
  elResizeBarCover.style.position = "absolute";
  var a = getClientSize();
  elResizeBarCover.style.width = a.width - nPageLeftRightMargin + "px";
  elResizeBarCover.style.height = a.height - nPageTopBottomMargin + "px";
  document.body.appendChild(elResizeBarCover)
}

function uncoverResizeLayer() {
  elResizeBar.appendChild(elResizeBarCover);
  elResizeBarCover.style.position = "";
  elResizeBarCover.style.width = "100%";
  elResizeBarCover.style.height = "100%"
}

function _mousedown_ResizeBarCover(a) {
  a = getElementPos(a);
  nStartHeight = a.clientY;
  KEDITORTOP.RAONKEDITOR.util.addEvent(elResizeBarCover, "mousemove",
      mousemove_ResizeBarCover);
  KEDITORTOP.RAONKEDITOR.util.addEvent(document, "mouseup",
      mouseup_ResizeBarCover);
  coverResizeLayer();
  parseIntOr0(elResizeBar.style.width) > parseIntOr0(elResizeBar.style.height)
      ? elResizeBar.style.height = "1px" : elResizeBar.style.width = "1px";
  elResizeBar.style.border = "1px dotted black";
  elResizeBar.style.fontSize = "1pt";
  nStartWidth = a.clientX;
  nStartHeight = a.clientY;
  onCellResize({cmd: "start"})
}

function mousemove_ResizeBarCover(a) {
  a = getElementPos(a);
  1 == ResizeInfo.nResizeMode ? elResizeBar.style.left = a.pageX - parseIntOr0(
      elResizeBar.style.width) / 2 + "px" : elResizeBar.style.top = a.pageY
      - parseIntOr0(elResizeBar.style.height) / 2 + "px"
}

function mouseup_ResizeBarCover(a) {
  hideResizeBar();
  uncoverResizeLayer();
  elResizeBar.style.border = "";
  KEDITORTOP.RAONKEDITOR.util.removeEvent(elResizeBarCover, "mousemove",
      mousemove_ResizeBarCover);
  KEDITORTOP.RAONKEDITOR.util.removeEvent(document, "mouseup",
      mouseup_ResizeBarCover);
  var c = getElementPos(a), b = 0, d = 0;
  2 == ResizeInfo.nResizeMode && (b = c.clientY - nStartHeight);
  1 == ResizeInfo.nResizeMode && (d = c.clientX - nStartWidth);
  c = GetParentbyTagName(ResizeInfo.currCell, "table");
  if (null != c) {
    for (var e = [], f = 0, g = c.rows.length,
        h = 0; h < g; h++) {
      for (var m = c.rows[h], q = m.cells.length, t = 0;
          t < q; t++) {
        var u = m.cells[t], v = getClientRect(u),
            w = getElementOffset(_iframeWin.frameElement);
        1 == ResizeInfo.nResizeMode ? nStartWidth <= v.right + w.left + 2
            * nDraggableCellEdge && nStartWidth > v.right + w.left - 2
            * nDraggableCellEdge
            && (w = {}, w.cell = u, w.right = v.right, e[f] = w, f += 1) : 2
            == ResizeInfo.nResizeMode && nStartHeight <= v.bottom + w.top + 2
            * nDraggableCellEdge && nStartHeight > v.bottom + w.top - 2
            * nDraggableCellEdge
            && (w = {}, w.cell = u, w.right = v.bottom, e[f] = w, f += 1)
      }
    }
    setResizeCells(d,
        b, e);
    onChange({editor: KEDITORTOP.G_CURRKEDITOR, isPossibleDirty: !0});
    onCellResize({cmd: "end", event: a})
  }
}

function setResizeCells(a, c, b) {
  var d = GetParentbyTagName(ResizeInfo.currCell, "table");
  if (null != d && !(0 >= b.length || 0 == a && 0 == c)) {
    0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    try {
      if (0 != c) {
        for (var e = b.length, f = 0; f < e; f++) {
          var g = b[f].cell.parentNode;
          if (1 == g.nodeType && ("TR" == g.tagName || "TH" == g.tagName) && ""
              != g.style.height) {
            for (var h = g.cells.length, m = 0; m < h;
                m++) {
              g.cells[m].style.height = g.style.height;
            }
            g.style.removeProperty ? g.style.removeProperty("height")
                : g.style.removeAttribute("height")
          }
        }
      }
    } catch (q) {
      KEDITORTOP &&
      KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(q)
    }
    G_ResizeFixedTable.resizeFixedTable(
        {nNewWidth: a, targetCell: ResizeInfo.currCell});
    for (var g = [], e = 0, h = d.rows.length, f = 0; f < h;
        f++) {
      for (var t = d.rows[f], u = t.cells.length, m = 0; m < u; m++) {
        var v = t.cells[m], w = getClientRect(v);
        1 == ResizeInfo.nResizeMode && isSameRect(b[0].right, w.left)
        && (g[e] = v, e += 1)
      }
    }
    var x = 0;
    if (1 == ResizeInfo.nResizeMode) {
      0 < a && 0 < g.length && (w = getClientRect(g[0]), x = w.right - w.left, x
      - a < MIN_CELL_WIDTH && (a = x - MIN_CELL_WIDTH));
      0 > a && 0 < b.length &&
      (w = getClientRect(b[0].cell), x = w.right - w.left, x + a
      < MIN_CELL_WIDTH && (a = MIN_CELL_WIDTH - x));
      if (0 == g.length) {
        f = parseIntOr0(d.style.width);
        if ("" == d.style.width || "" != d.style.width && -1
            < d.style.width.indexOf("%")) {
          w = getClientRect(d), f = w.right
              - w.left;
        }
        0 < f + a && 0 == G_ResizeFixedTable.isModifiedTable(d)
        && (d.style.width = f + a + "px")
      }
      e = b.length;
      for (f = 0; f < e; f++) {
        getClientRect(
            b[f].cell), x = getElemAdjustWidthHeight(b[f].cell).width, m = a, x
        + a < MIN_CELL_WIDTH && (m = MIN_CELL_WIDTH - x), b[f].newWidth = x + m
            + "px";
      }
      for (f = 0; f < e; f++) {
        b[f].cell.style.width =
            b[f].newWidth;
      }
      e = g.length;
      b = [];
      for (f = 0; f < e; f++) {
        getClientRect(g[f]), x = getElemAdjustWidthHeight(
            g[f]).width, x - a < MIN_CELL_WIDTH && (a = x
            - MIN_CELL_WIDTH), b[f] = x - a + "px";
      }
      for (f = 0; f < e; f++) {
        g[f].style.width = b[f]
      }
    } else {
      e = b.length;
      for (f = 0; f < e; f++) {
        w = getClientRect(
            b[f].cell), x = getElemAdjustWidthHeight(b[f].cell).height, x + c
        < MIN_CELL_HEIGHT && (c = MIN_CELL_HEIGHT - x), b[f].newHeight = x + c
            + "px";
      }
      for (f = 0; f < e; f++) {
        b[f].cell.style.height = b[f].newHeight;
      }
      try {
        if (0 < e) {
          a = [];
          for (var y = getClientRect(b[0].cell), h = d.rows.length, f = 0;
              f < h; f++) {
            for (t =
                d.rows[f], u = t.cells.length, m = 0; m < u;
                m++) {
              if (v = t.cells[m], w = getClientRect(v), w.top <= y.top
              && w.bottom >= y.bottom) {
                c = !1;
                for (g = 0; g < e; g++) {
                  if (v == b[g].cell) {
                    c = !0;
                    break
                  }
                }
                c || a.push(v)
              }
            }
          }
          for (var z = a.length, f = 0; f < z; f++) {
            a[f].style.height = "";
          }
          d.removeAttribute("height");
          d.style.height = "";
          var A = getClientRect(d);
          d.style.height = A.bottom - A.top + "px";
          for (f = 0; f < z; f++) {
            var B = getClientRect(a[f]);
            a[f].style.height = B.bottom - B.top + "px"
          }
        }
      } catch (C) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(C)
      }
    }
    setAdjustTableWidthHeight(d);
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
    getApplyDragResize(KEDITORTOP.G_CURRKEDITOR)
    && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
    && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem
    && (d = KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem, KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.resizeHandleClear(), KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem = d, clearInterval(
        KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.dextResizeIconInterval),
        KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.setResizeHandle(null, !1,
            null));
    try {
      setFocusToBody()
    } catch (D) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(D)
    }
  }
}

function setAdjustTableWidthHeight(a) {
  if ("0" != KEDITORTOP.G_CURRKEDITOR._config.tableAutoAdjust) {
    var c, b, d;
    c = null;
    b = a.rows.length;
    if (0 < b) {
      var e = a.rows[0];
      d = e.cells.length;
      0 < d && (c = e.cells[0])
    }
    if (null != c) {
      var f, g;
      g = f = 0;
      var h = [], m = [], q = getClientRect(c);
      for (c = 0; c < b; c++) {
        e = a.rows[c];
        d = e.cells.length;
        for (var t = 0; t < d; t++) {
          var u = e.cells[t], u = getClientRect(u);
          if (q.left == u.left) {
            var v = u.bottom - u.top - 1;
            g += v
          }
          v = parseIntOr0(a.cellPadding);
          v = u.bottom - u.top - 2 - 2 * v + "px";
          h.push(v);
          q.top == u.top && (v = u.right - u.left, f +=
              v);
          v = u.right - u.left - 1 + "px";
          m.push(v)
        }
      }
      0 < f && 0 < g && (a.style.width = f + "px", removeAttribute(a.style,
          "height"));
      for (c = f = 0; c < b; c++) {
        for (e = a.rows[c], d = e.cells.length, t = 0;
            t < d;
            t++) {
          u = e.cells[t], u.style.width = m[f], u.style.height = h[f], f++
        }
      }
    }
  }
}

function getPosition(a) {
  for (var c = 0, b = 0; a;) {
    c += a.offsetLeft - a.scrollLeft
        + a.clientLeft, b += a.offsetTop - a.scrollTop
        + a.clientTop, a = a.offsetParent;
  }
  return {x: c, y: b}
}

function hideResizeBar() {
  elResizeBar.style.display = "none"
}

function showResizeBar() {
  elResizeBar.style.display = "block";
  var a = getElementOffset(_iframeWin.frameElement);
  if (1 == ResizeInfo.nResizeMode || 3 == ResizeInfo.nResizeMode) {
    setResizeBarSize(2 * (ResizeInfo.nBorderSize + nDraggableCellEdge),
        parseIntOr0(_iframeWin.frameElement.offsetHeight));
    var c = a.left + ResizeInfo.nBorderLeftPos + ResizeInfo.Pos.clientX
        - ResizeInfo.Pos.offsetX - parseIntOr0(elResizeBar.style.width);
    if (KEDITORTOP.RAONKEDITOR.browser.ie && (8
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && "BackCompat"
        != _iframeDoc.compatMode ||
        9 == KEDITORTOP.RAONKEDITOR.browser.ieVersion
        && KEDITORTOP.RAONKEDITOR.browser.quirks)) {
      var b = getWindowScrollPos(
          _iframeWin), c = 9 == KEDITORTOP.RAONKEDITOR.browser.ieVersion
      && KEDITORTOP.RAONKEDITOR.browser.quirks && 0 < b[0] ? c + 2 : c + b[0];
    }
    3 == ResizeInfo.nResizeMode && (c += 2);
    setElementOffset(elResizeBar, a.top, c)
  } else {
    setResizeBarSize(
        parseIntOr0(_iframeWin.frameElement.offsetWidth + "px"),
        2 * (ResizeInfo.nBorderSize + nDraggableCellEdge)), c = a.top
        + ResizeInfo.Pos.clientY + ResizeInfo.nBorderTopPos
        - ResizeInfo.Pos.offsetY - parseIntOr0(elResizeBar.style.height),
    KEDITORTOP.RAONKEDITOR.browser.ie && (8
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && "BackCompat"
        != _iframeDoc.compatMode || 9
        == KEDITORTOP.RAONKEDITOR.browser.ieVersion
        && KEDITORTOP.RAONKEDITOR.browser.quirks) && (b = getWindowScrollPos(
        _iframeWin), c = 9 == KEDITORTOP.RAONKEDITOR.browser.ieVersion
    && KEDITORTOP.RAONKEDITOR.browser.quirks && 0 < b[1] ? c
        + nDraggableCellEdge
        : c + b[1]), 4 == ResizeInfo.nResizeMode && (c += 2), setElementOffset(
        elResizeBar, c, a.left);
  }
  KEDITORTOP.RAONKEDITOR.util.removeEvent(elResizeBarCover, "mousedown",
      _mousedown_ResizeBarCover);
  KEDITORTOP.RAONKEDITOR.util.removeEvent(elResizeBarCover, "click",
      setTableSelectEvt);
  3 == ResizeInfo.nResizeMode || 4 == ResizeInfo.nResizeMode
      ? getApplyDragResize(KEDITORTOP.G_CURRKEDITOR)
      || (elResizeBarCover.style.cursor = "move", KEDITORTOP.RAONKEDITOR.util.addEvent(
          elResizeBarCover, "click", setTableSelectEvt))
      : (KEDITORTOP.RAONKEDITOR.util.addEvent(elResizeBarCover, "mousedown",
          _mousedown_ResizeBarCover), elResizeBarCover.style.cursor = 1
      == ResizeInfo.nResizeMode ? "col-resize" : "row-resize")
}

function setTableSelectEvt() {
  var a = GetParentbyTagName(ResizeInfo.currCell, "table");
  command_tableSelection(KEDITORTOP.G_CURRKEDITOR.ID, KEDITORTOP.G_CURRKEDITOR,
      a)
}

function setResizeBarSize(a, c) {
  elResizeBar.style.width = a + "px";
  elResizeBar.style.height = c + "px"
}

function IsMousePointOnBorder(a) {
  if (dragMove.dragStart) {
    return !1;
  }
  ResizeInfo.nResizeMode = 0;
  ResizeInfo.currCell = a.target ? a.target : a.srcElement;
  var c = ResizeInfo.currCell.tagName;
  if ("TD" != ResizeInfo.currCell.tagName && "TH" != ResizeInfo.currCell.tagName
      && (ResizeInfo.currCell = GetTDTHCell(ResizeInfo.currCell), null
      == ResizeInfo.currCell)) {
    return !1;
  }
  var b = GetParentbyTagName(ResizeInfo.currCell, "table");
  if (null == b) {
    return !1;
  }
  var d = KEDITORTOP.G_CURRKEDITOR._config.tableNoResizeClass;
  if ("" != d && b.className && "" != b.className) {
    for (var e =
        b.className.split(" "), f = e.length, g = !1, h = 0; h < f;
        h++) {
      if (e[h] == d) {
        g = !0;
        break
      }
    }
    if (g) {
      return !1
    }
  }
  ResizeInfo.currTable = b;
  ResizeInfo.nBorderLeftPos = 0;
  ResizeInfo.nBorderTopPos = -1;
  ResizeInfo.Pos = "contextmenu" == a.type ? getClientRect(ResizeInfo.currCell)
      : getElementPos(a, !0);
  ResizeInfo.nBorderSize = parseIntOr0(b.border);
  KEDITORTOP.RAONKEDITOR.browser.ie || KEDITORTOP.RAONKEDITOR.browser.opera
      ? (a = ResizeInfo.nBorderSize
          + nDraggableCellEdge, b = nDraggableCellEdge)
      : (a = nDraggableCellEdge, b = ResizeInfo.nBorderSize
          + nDraggableCellEdge);
  d = ResizeInfo.Pos.offsetX;
  e = ResizeInfo.Pos.offsetY;
  KEDITORTOP.RAONKEDITOR.browser.ie && (8
      >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && "BackCompat"
      != _iframeDoc.compatMode || 9 == KEDITORTOP.RAONKEDITOR.browser.ieVersion
      && KEDITORTOP.RAONKEDITOR.browser.quirks) && (f = getWindowScrollPos(
      _iframeWin), d -= f[0], e -= f[1]);
  e <= a && ResizeInfo.currCell.parentNode.previousSibling && ("td"
      == c.toLowerCase() || "th" == c.toLowerCase())
  && (ResizeInfo.nResizeMode = 2);
  ResizeInfo.currCell.offsetHeight - b <= e
  && (ResizeInfo.nBorderTopPos = ResizeInfo.currCell.offsetHeight +
      a - 1, ResizeInfo.nResizeMode = 2);
  c = 1;
  9 == KEDITORTOP.RAONKEDITOR.browser.ieVersion
  && KEDITORTOP.RAONKEDITOR.browser.quirks && (f = getWindowScrollPos(
      _iframeWin), c = f[0]);
  if (ResizeInfo.currCell.offsetWidth - b <= d + c
      || KEDITORTOP.RAONKEDITOR.browser.chrome && 0
      == ResizeInfo.Pos.offsetX) {
    ResizeInfo.nBorderLeftPos = ResizeInfo.currCell.offsetWidth
        + a - 1, ResizeInfo.nResizeMode = 1;
  }
  c = getClientRect(ResizeInfo.currTable);
  d = !1;
  e = !0;
  "1" != KEDITORTOP.G_CURRKEDITOR._config.formMode && "1"
  == KEDITORTOP.G_CURRKEDITOR._config.userTableLock.use &&
  (f = KEDITORTOP.G_CURRKEDITOR._config.userTableLock.defaultTableLockMode, ResizeInfo.currTable.getAttribute(
      "lock_mode") && "" != ResizeInfo.currTable.getAttribute("lock_mode")
  && (f = ResizeInfo.currTable.getAttribute("lock_mode")), "1" == f
  && (d = !0), checkLockAttr(ResizeInfo.currTable, d) && (e = !1));
  e && KEDITORTOP.RAONKEDITOR.browser.ie && 11
  >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && (c.left + a
  >= ResizeInfo.Pos.clientX ? ResizeInfo.nResizeMode = 3 : c.top + b
      >= ResizeInfo.Pos.clientY && (ResizeInfo.nResizeMode = 4));
  return 0 === ResizeInfo.nResizeMode ?
      !1 : !0
}

function parseIntOr0(a) {
  a = parseInt(a, 10);
  return isNaN(a) ? 0 : a
}

function getClientSize() {
  var a = {};
  "number" === typeof window.innerWidth
      ? (a.width = window.innerWidth, a.height = window.innerHeight)
      : document.documentElement && (document.documentElement.clientWidth
          || document.documentElement.clientHeight)
          ? (a.width = document.documentElement.clientWidth, a.height = document.documentElement.clientHeight)
          : document.body && (document.body.clientWidth
              || document.body.clientHeight)
              ? (a.width = document.body.clientWidth, a.height = document.body.clientHeight)
              : (a.width = 0, a.height = 0);
  a.width = changeValueForZoom(a.width,
      KEDITORTOP.G_CURRKEDITOR);
  a.height = changeValueForZoom(a.height, KEDITORTOP.G_CURRKEDITOR);
  return a
}

function setElementOffset(a, c, b) {
  if ("number" == typeof c && "number" == typeof b) {
    isNaN(parseInt(a.style.top, 10)) && (a.style.top = "0px");
    isNaN(parseInt(a.style.left, 10)) && (a.style.left = "0px");
    var d = getElementOffset(a);
    c -= d.top;
    b -= d.left;
    a.style.top = parseInt(a.style.top, 10) + c + "px";
    a.style.left = parseInt(a.style.left, 10) + b + "px"
  }
}

function getElementPos(a, c) {
  var b = a.target ? a.target : a.srcElement,
      d = (b.ownerDocument || _iframeDoc).body,
      e = (b.ownerDocument || _iframeDoc).documentElement,
      e = [d.scrollLeft || e.scrollLeft, d.scrollTop || e.scrollTop], d = {
        clientX: a.clientX,
        clientY: a.clientY,
        pageX: "pageX" in a ? a.pageX : a.clientX + e[0] - d.clientLeft,
        pageY: "pageY" in a ? a.pageY : a.clientY + e[1] - d.clientTop
      };
  c && (b = getElementOffset(b), d.offsetX = d.pageX
      - b.left, d.offsetY = d.pageY - b.top);
  return d
}

function getElementOffset(a) {
  var c = {left: 0, top: 0}, b = a.ownerDocument || a.document || _iframeDoc,
      d = b.documentElement, e = b.body, f;
  "undefined" != typeof b.defaultView ? f = b.defaultView : "undefined"
      != typeof b.parentWindow && (f = b.parentWindow);
  box = a.getBoundingClientRect();
  a = d.clientTop || e.clientTop || 0;
  b = f.pageYOffset && d.scrollTop || e.scrollTop;
  c.left = box.left + (f.pageXOffset && d.scrollLeft || e.scrollLeft)
      - (d.clientLeft || e.clientLeft || 0);
  c.top = box.top + b - a;
  return c
}

function GetParentInTag(a, c) {
  for (var b = a;
      null != b && (!b.tagName || "html" != b.tagName.toLowerCase());) {
    if (b.tagName.toLowerCase() == c) {
      return b;
    }
    b = b.parentNode
  }
  return null
}

function GetParentTagPath(a) {
  for (var c = ""; null != a && (!a.tagName || "html"
      != a.tagName.toLowerCase());) {
    c = a.tagName.toLowerCase() + "&nbsp;"
        + c, a = a.parentNode;
  }
  return c
}

function getMyElementNode(a) {
  if (1 == a.nodeType) {
    return a;
  }
  for (; null != a;) {
    if (1 == a.nodeType) {
      return a;
    }
    a = a.parentNode
  }
  return null
}

function getMyChildElementNode(a) {
  if (3 == a.nodeType) {
    return a.parentNode;
  }
  for (; null != a.childNodes && 0 < a.childNodes.length;) {
    a = a.lastChild;
    if (3 == a.nodeType) {
      return a.parentNode;
    }
    if ("BR" == a.tagName || "IMG" == a.tagName) {
      return a.previousSibling
          ? getMyChildElementNode(a.previousSibling) : a.parentNode
    }
  }
  return 1 == a.nodeType && a.parentNode && "BODY" != a.parentNode.tagName
      ? a.parentNode : null
}

function getElementInParentStyleProperty(a, c) {
  for (var b = "", d = a;
      null != d && (!d.tagName || "body" != d.tagName.toLowerCase());) {
    var e = "";
    if ("fontSize" == c) {
      if (d.tagName && "FONT" == d.tagName) {
        if (e = d.size, 0 == !!e || "" == e) {
          e = d.style[c]
        }
      } else {
        d.style && (e = d.style[c]);
      }
    } else {
      d.style && (e = d.style[c]);
    }
    if ("" != e && (b = e, void 0 != b && 0 < b.length)) {
      return b = b.replace(
          /"/gi, ""), b = b.replace(/'/gi, ""), "backgroundColor" != c
      && "color"
      != c && (b = b.split(",")[0]), ("backgroundColor" == c || -1 < c.indexOf(
          "margin") || -1 < c.indexOf("padding")) && -1
      < ",TD,TH,TABLE,TR,".indexOf("," +
          d.tagName + ",") && (b = ""), b;
    }
    d = d.parentNode
  }
  "fontFamily" == c ? b = getElementInParentProperty(a, "face") : "fontSize"
      == c && (b = getElementInParentProperty(a, "size"));
  return void 0 == b ? "" : b
}

function getElementInParentProperty(a, c) {
  for (var b = "", d = a;
      null != d && (!d.tagName || "body" != d.tagName.toLowerCase());) {
    if (void 0 != d[c] && (b = d[c], 0 < b.length)) {
      return b = b.replace(/"/gi,
          ""), b = b.replace(/'/gi, ""), b = b.split(",")[0];
    }
    d = d.parentNode
  }
  return void 0 == b ? "" : b
}

function getElementInParentTag(a, c) {
  for (var b = "", d = a, e = "";
      null != d && (!(e = d.nodeName.toLowerCase()) || "body" != e);) {
    for (var f = 0; f < c.length; f++) {
      if (e == c[f]) {
        switch (e) {
          case "b":
          case "strong":
            b = "blod";
            break;
          case "em":
          case "i":
            b = "italic";
            break;
          case "u":
            b = "underline";
            break;
          case "s":
          case "strike":
            b = "strike_through";
            break;
          case "sup":
            b = "superscript";
            break;
          case "sub":
            b = "subscript";
            break;
          case "ol":
            b = "list_number";
            break;
          case "ul":
            b = "list_bullets";
            break;
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
            b = e
        }
        return b
      }
    }
    d =
        d.parentNode
  }
  return b
}

function _iframeDoc_MouseDown(a) {
  var c = null, c = a ? a : _iframeWin.event,
      c = c.target ? c.target : c.srcElement,
      b = c.tagName ? c.tagName.toLowerCase() : null, d = getEditrFromEvent(a);
  d._RangeBlurBug = !0;
  d._LastRange = null;
  if (KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
      && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem) {
    KEDITORTOP.RAONKEDITOR.browser.ie
    && 8 >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && (checkClickOnScrollBar(
        a)
        ? KEDITORTOP.G_CURRKEDITOR.isMouseDownOnScrollBar = !0
        : KEDITORTOP.G_CURRKEDITOR.isMouseDownOnScrollBar = !1);
  } else {
    if (getApplyDragResize(KEDITORTOP.G_CURRKEDITOR)
        && KEDITORTOP.RAONKEDITOR.browser.ie && 8
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && ("div" == b || "img"
            == b)) {
      return KEDITORTOP.RAONKEDITOR.util.cancelEvent(a), !1;
    }
    if (0 != checkContentEditable(d, c)) {
      setKEDITORWINDOC(d);
      if (isRightClick(a)) {
        return KEDITORTOP.RAONKEDITOR.util.cancelEvent(
            a), !1;
      }
      if (!isViewMode(d) && null != c && null != b) {
        setTimeout(function () {
          if (!G_keditorResize_Elem_Flag) {
            var a = getFirstRange().range.startContainer;
            3 == a.nodeType && (a = a.parentNode);
            G_CURSOR_ELEMENT =
                a;
            onChange({editor: d})
          }
        }, 10);
        if (d.useFocusDivForIOS) {
          d.useFocusDivForIOS = !1;
          var e = document.getElementById("ue_editor_holder_" + d.ID);
          if (e) {
            var f = getClientRect(e), g = document.createElement("div");
            g.style.width = "100%";
            g.style.height = "100%";
            g.style.position = "absolute";
            g.style.left = f.left + "px";
            g.style.top = f.top + "px";
            g.style.zIndex = d._config.zIndex + 10;
            f = document.createElement("textarea");
            f.style.width = "100%";
            f.style.height = "100%";
            g.appendChild(f);
            e.appendChild(g);
            f.focus();
            f.blur();
            e.firstChild.contentWindow.document.body.focus();
            e.removeChild(g)
          }
        }
        if ("1" != d._config.formMode && "1" == d._config.userTableLock.use) {
          var e = GetTDTHCell(c), h;
          e && (h = GetParentbyTagName(c, "table"));
          g = d._config.userTableLock.defaultTableLockMode;
          h && h.getAttribute("lock_mode") && "" != h.getAttribute("lock_mode")
          && (g = h.getAttribute("lock_mode"));
          f = !0;
          "1" == g && (f = !1);
          if (e) {
            if (f && checkLockAttr(h)) {
              d.lastElemForLock ? setFocusForLock(d.lastElemForLock)
                  : (c = findNoLockElem(h)) ? setFocusForLock(c)
                      : (window.focus(), document.body.focus());
              KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              return
            }
            if (checkLockAttr(e, !f)) {
              d.lastElemForLock ? setFocusForLock(d.lastElemForLock)
                  : setFocusForLock(findNoLockCell(h));
              KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              return
            }
          }
        }
        if ("1" == d._config.formMode) {
          if (a.ctrlKey) {
            return setFormControlSelected(
                c), KEDITORTOP.RAONKEDITOR.util.cancelEvent(a), !1;
          }
          clearAllFormControlSelected()
        }
        if ("1" == d._config.returnEvent.mouse_event) {
          try {
            h = {strEventName: "mousedown", objEvent: a, objElement: c};
            var m;
            "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.mouse
                ? m = KEDITORTOP.G_CURRKEDITOR._config.event.mouse(d.ID, h)
                : "function"
                === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_MouseEvent
                && (m = KEDITORTOP.KEDITORWIN.RAONKEDITOR_MouseEvent(d.ID, h));
            if (!1 === m) {
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              return
            }
          } catch (q) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(q)
          }
        }
        if (b && ("textarea" == b || "input" == b || "select" == b)) {
          return !1;
        }
        try {
          var t = G_KPlugin.mention;
          if (t) {
            var u = t.onMouseDown({evt: a});
          }
          if (!1 === u) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return
          }
        } catch (v) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(v)
        }
        if ("1" == d._config.adjustCursorInRelative && (h = null, h = c.tagName
        && "BODY" == c.tagName ? c : getBlockContainer(
            c))) {
          for (h = h.getElementsByTagName("span"), m = h.length, t = 0;
              t < m; t++) {
            "relative" == h[t].style.position
            && (h[t].style.position = "", d.relativeNode.push(h[t]));
          }
        }
        h = GetTDTHCell(c);
        null == h && null != ActiveCurrTable
        && ClearDraggingTableCellSelected();
        if (h) {
          ActiveCurrTable =
              GetParentbyTagName(h, "table");
          try {
            ActiveLastTable ? ActiveLastTable != ActiveCurrTable
                && (ClearDraggingTable(
                    ActiveLastTable), ActiveLastTable = ActiveCurrTable)
                : ActiveLastTable = ActiveCurrTable
          } catch (w) {
            ActiveLastTable = ActiveCurrTable
          }
          "1" == KEDITORTOP.G_CURRKEDITOR._config.ie11_BugFixed_JASO && 1
          == c.nodeType && "TD" == c.nodeName && (RegExp("<p([^>?+]*)></p>",
              "gi").test(c.innerHTML), h = ReplaceAll(c.innerHTML, RegExp.$1,
              ""), "" != RegExp.$1 && "<p></p>" == h ? c.innerHTML = "<p "
              + RegExp.$1 + "><br /></p>" : "<p></p>" == c.innerHTML &&
              (c.innerHTML = "<p><br /></p>"))
        }
        null != ActiveCurrTable && c == ActiveCurrTable
            ? Mouse_Status = Mouse_IsTableDragging
            : (b = c.tagName.toLowerCase(), "img" == b || "hr" == b ? ("img"
                == b
                && (KEDITORTOP.RAONKEDITOR.G_SELECTED_IMAGE_ELEMENT = c), Mouse_Status = Mouse_IsControlSelecting)
                : (m = null, m = GetTDTHCell(c), null == m
                    ? (Mouse_Status = Mouse_IsPlain, ClearDraggingTableCellSelected(), DrageStartCell = null, KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = c)
                    : (h = !1, t = KEDITORTOP.G_CURRKEDITOR._config.tableNoSelectionClass, ""
                    != t && (h = GetParentbyTagName(c,
                        "table"), h = checkContainClass(h, t)), 0 == h
                    && (Mouse_Status = Mouse_IsCellDragging, a.shiftKey
                        ? SelectedCellRange(DrageStartCell, m)
                        : (ClearDraggingTableCellSelected(), removeCellDefValue(m,
                            !1), mouseStartPos = getMousePosition(
                            a), DrageStartCell = m, DrageEndCell = null, KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = c)))))
      }
    }
  }
}

function _iframeDoc_MouseUp(a) {
  if (!dragMove.dragStart) {
    var c = getEditrFromEvent(a);
    setKEDITORWINDOC(c);
    c._RangeBlurBug = !1;
    if (isRightClick(a)) {
      return KEDITORTOP.RAONKEDITOR.util.cancelEvent(a), !1;
    }
    if (!isViewMode(c)) {
      var b = null, d = a ? a : _iframeWin.event,
          b = d.target ? d.target : d.srcElement;
      if ("1" == c._config.adjustCursorInRelative) {
        for (d = c.relativeNode.length - 1; 0 <= d;
            d--) {
          c.relativeNode[d].style.position = "relative";
        }
        c.relativeNode = []
      }
      if (0 == checkContentEditable(c,
          b)) {
        KEDITORTOP.RAONKEDITOR.util.cancelEvent(a), c._iconEnable(
            "editableFalse");
      } else {
        G_keditorResize_Elem_Flag
        || (d = getFirstRange().range.startContainer, 3 == d.nodeType
        && (d = d.parentNode), G_CURSOR_ELEMENT = d, set_ruler_vertical_height(
            c));
        G_keditorResize_Elem_Flag = !1;
        if (c.useFocusDivForIOS
            && (c.useFocusDivForIOS = !1, d = document.getElementById(
                "ue_editor_holder_" + c.ID))) {
          var e = getClientRect(d), f = document.createElement("div");
          f.style.width = "100%";
          f.style.height = "100%";
          f.style.position = "absolute";
          f.style.left = e.left + "px";
          f.style.top = e.top + "px";
          f.style.zIndex = c._config.zIndex + 10;
          e = document.createElement("textarea");
          e.style.width = "100%";
          e.style.height = "100%";
          f.appendChild(e);
          d.appendChild(f);
          e.focus();
          e.blur();
          d.firstChild.contentWindow.document.body.focus();
          d.removeChild(f)
        }
        if ("1" != c._config.formMode && "1" == c._config.userTableLock.use) {
          var f = GetTDTHCell(b), g;
          f && (g = GetParentbyTagName(b, "table"));
          e = c._config.userTableLock.defaultTableLockMode;
          g && g.getAttribute("lock_mode") && "" != g.getAttribute("lock_mode")
          && (e = g.getAttribute("lock_mode"));
          d = !0;
          "1" == e && (d = !1);
          if (f) {
            e = !1;
            if (e = d ? !checkLockAttr(f) && !checkLockAttr(g) :
                !checkLockAttr(f, !d)) {
              "TABLE" == b.tagName ? checkLockAttr(b,
                      !d) ? c.lastElemForLock = findNoLockElem(b)
                      : (f = findNoLockCell(b), c.lastElemForLock = f)
                  : c.lastElemForLock = b;
            }
            if (d && checkLockAttr(g)) {
              c.lastElemForLock ? setFocusForLock(c.lastElemForLock)
                  : (c = findNoLockElem(g)) ? setFocusForLock(c)
                      : (window.focus(), document.body.focus());
              KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              return
            }
          } else {
            "BODY" != b.tagName && ("TABLE" == b.tagName ? checkLockAttr(b,
                    !d) ? c.lastElemForLock = findNoLockElem(b) :
                    (f = findNoLockCell(b), c.lastElemForLock = f)
                : c.lastElemForLock = b), checkLockElemInSelectionRange();
          }
          d || (d = getFirstRange().range.startContainer, 3 == d.nodeType
          && (d = d.parentNode), (f = GetParentbyTagName(d, "td"))
          && checkLockAttr(f, !0) && (c.lastElemForLock ? setFocusForLock(
              c.lastElemForLock) : (g = GetParentbyTagName(f,
              "td"), setFocusForLock(findNoLockCell(g)))));
          f = GetTableSelectionCells();
          e = f.length;
          if (0 < e) {
            for (var h = !1, d = 0; d < e; d++) {
              if (checkLockAttr(f[d], !0)) {
                h = !0;
                break
              } else {
                var m = [];
                m.push(f[d].getElementsByTagName("table"));
                m.push(f[d].getElementsByTagName("td"));
                var q = m.length;
                for (j = 0; j < q; j++) {
                  var t = m[j].length;
                  for (k = 0; k < t; k++) {
                    if (checkLockAttr(m[j][k], !0)) {
                      h = !0;
                      break
                    }
                  }
                  if (h) {
                    break
                  }
                }
              }
              if (h) {
                break
              }
            }
            h && (c.lastElemForLock ? setFocusForLock(c.lastElemForLock)
                : setFocusForLock(
                    findNoLockCell(g)), ClearDraggingTableCellSelected())
          }
          (g = getSelectionTable(c)) && checkLockAttr(g) && (c.lastElemForLock
              ? setFocusForLock(c.lastElemForLock) : setFocusForLock(
                  findNoLockCell(g)))
        }
        g = b.tagName ? b.tagName.toLowerCase() : null;
        if ("input" == g && (d = !1, KEDITORTOP.RAONKEDITOR.browser.ie &&
        (d = b.disabled ? !1 : !0), d
        && (KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = b, "checkbox"
        == b.type.toLowerCase() || "radio" == b.type.toLowerCase()))) {
          if (1
              == b.checked) {
            b.checked = !1, b.removeAttribute("checked");
          } else {
            if ("radio"
                == b.type.toLowerCase()) {
              for (f = _iframeDoc.getElementsByName(
                  b.name), e = f.length, d = 0; d < e;
                  d++) {
                f[d].checked = !1, f[d].removeAttribute("checked");
              }
            }
            b.checked = !0;
            b.setAttribute("checked", "checked")
          }
        }
        if (g && ("textarea" == g || "input" == g || "select" == g) && "1"
            != KEDITORTOP.G_CURRKEDITOR._config.formMode) {
          return !1;
        }
        if ("1" ==
            c._config.returnEvent.mouse_event) {
          try {
            g = {strEventName: "mouseup", objEvent: a, objElement: b};
            var u;
            "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.mouse
                ? u = KEDITORTOP.G_CURRKEDITOR._config.event.mouse(c.ID, g)
                : "function"
                === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_MouseEvent
                && (u = KEDITORTOP.KEDITORWIN.RAONKEDITOR_MouseEvent(c.ID, g));
            if (!1 === u) {
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              return
            }
          } catch (v) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(v)
          }
        }
        if (Mouse_Status ==
            Mouse_IsCellDragging) {
          if (KEDITORTOP.RAONKEDITOR.browser.ie) {
            try {
              _iframeDoc.body.releaseCapture()
            } catch (w) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(w)
            }
          }
          Mouse_Status = Mouse_IsPlain;
          try {
            var x, y = GetTDTHCell(b);
            y ? "true" == y.getAttribute("keditor_select") ? x = ""
                    == ReplaceAll(y.innerHTML, " ", "") || 1 == checkCellDefValue(
                        y.innerHTML) ? 1 : 2
                    : (ClearDraggingTableCellSelected(), DrageEndCell = null, x = 3)
                : DrageEndCell && (x = "" == ReplaceAll(DrageEndCell.innerHTML,
                " ", "") || 1 == checkCellDefValue(DrageEndCell.innerHTML) ?
                1 : 2);
            switch (x) {
              case 1:
                setTimeout(function () {
                  KEDITORTOP.G_CURRKEDITOR._iconSelected();
                  try {
                    DrageEndCell ? DrageEndCell.firstChild && "P"
                    == DrageEndCell.firstChild.tagName ? doSetCaretPosition(
                        DrageEndCell.firstChild, 0) : doSetCaretPosition(
                        DrageEndCell, 0) : y && (y.firstChild && "P"
                    == y.firstChild.tagName ? doSetCaretPosition(y.firstChild,
                        0) : doSetCaretPosition(y, 0))
                  } catch (a) {
                    KEDITORTOP && KEDITORTOP.RAONKEDITOR
                    && KEDITORTOP.RAONKEDITOR.logMode && console.log(a)
                  }
                }, 0);
                break;
              case 2:
                setTimeout(function () {
                  try {
                    var a;
                    DrageEndCell ?
                        a = DrageEndCell : y && (a = y);
                    if (KEDITORTOP.RAONKEDITOR.browser.ie) {
                      var b = getCellLastChildNode(a);
                      doSetCaretPosition(b.node, b.position)
                    } else {
                      a = a.lastChild, a = getMyChildElementNode(
                          a), doSetCaretPosition(a, 1);
                    }
                    KEDITORTOP.G_CURRKEDITOR._iconSelected()
                  } catch (c) {
                    KEDITORTOP && KEDITORTOP.RAONKEDITOR
                    && KEDITORTOP.RAONKEDITOR.logMode && console.log(c)
                  }
                }, 0);
                break;
              case 3:
                break;
              default:
                KEDITORTOP.G_CURRKEDITOR._iconSelected();
                try {
                  DrageEndCell ? doSetCaretPosition(DrageEndCell, 0) : y
                      && doSetCaretPosition(y, 0)
                } catch (z) {
                  KEDITORTOP &&
                  KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
                  && console.log(z)
                }
            }
          } catch (A) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode && console.log(A)
          }
        }
        try {
          var B = G_KPlugin.mention;
          if (B) {
            var C = B.onMouseUp({evt: a});
          }
          if (!1 === C) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return
          }
        } catch (D) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(D)
        }
        if (u = b.tagName) {
          if (u = u.toLowerCase(), "img" == u) {
            0
            == Mouse_Status && (b.getAttribute("raon_chart") && b.setAttribute(
                "raon_plugin",
                "chart"), onResize({
              cmd: "end",
              isResize: getApplyDragResize(KEDITORTOP.G_CURRKEDITOR),
              target: b
            }), KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0);
          } else if ("html"
              == u) {
            if (KEDITORTOP.RAONKEDITOR.browser.ie && 8
                >= KEDITORTOP.RAONKEDITOR.browser.ieVersion
                && (KEDITORTOP.G_CURRKEDITOR.isMouseDownOnScrollBar
                    || checkClickOnScrollBar(a))) {
              return;
            }
            setFocusToBody()
          }
        }
        G_Ruler && "2" == c._config.ruler.mode && G_Ruler.SetRulerPosition();
        if (KEDITORTOP.RAONKEDITOR.browser.ie && 11
            >= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          try {
            setTimeout(function () {
              var a,
                  c = getFirstRange().range;
              c && c.startContainer == c.endContainer && 1 == c.collapsed
              && (a = getMyElementNode(c.startContainer));
              if (1 == c.collapsed && ("undefined" == typeof a && "a"
              == getMyElementNode(c.startContainer).tagName.toLowerCase()
              && (a = getMyElementNode(c.startContainer)), null == a)) {
                var d = !1;
                try {
                  var e;
                  c.startContainer && c.startContainer.tagName
                  && (e = c.startContainer.tagName.toLowerCase());
                  var f = getElementsFromSelection(e);
                  e ? KEDITORTOP.RAONKEDITOR.browser.ie && (8
                      > KEDITORTOP.RAONKEDITOR.browser.ieVersion
                      || KEDITORTOP.RAONKEDITOR.browser.quirks) ?
                      1 == f.length && "IMG" == f[0].tagName && (d = !0) : 2
                      == f.length && "IMG" == f[1].tagName && (d = !0) : 3
                      == f.length && "IMG" == f[2].tagName && (d = !0)
                } catch (g) {
                  KEDITORTOP && KEDITORTOP.RAONKEDITOR
                  && KEDITORTOP.RAONKEDITOR.logMode && console.log(g)
                }
                !d && b && "DIV" != b.tagName && "IMG" != b.tagName && "TABLE"
                != b.tagName && "INPUT" != b.tagName && "TEXTAREA" != b.tagName
                && "SELECT" != b.tagName && (b.tagName && "P" == b.tagName
                && "TD"
                == b.parentNode.tagName ? doSetCaretPosition(b, 1) : b.tagName
                    && "SPAN" == b.tagName && "raon_placeholder" == b.className
                    || ("VIDEO" == b.tagName ?
                        (setFocusToBody(), d = getFirstRange().sel, c.setStartBefore(
                            b), c.setEndBefore(
                            b), d.removeAllRanges(), d.addRange(c))
                        : (setFocusToBody(), setFocusChildForStyle(
                            KEDITORTOP.G_CURRKEDITOR._BODY), (c = getFirstRange().range)
                        && c.startContainer == c.endContainer && 1
                        == c.collapsed
                        && (a = getMyElementNode(c.startContainer)))))
              }
              if (11 <= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
                if ("undefined" == typeof a && c.endContainer
                && (a = getMyElementNode(c.endContainer)), a && "P"
                == a.nodeName
                && a.lastChild && "BR" == a.lastChild.nodeName
                && a.lastChild.previousSibling &&
                (c = c.getBoundingDocumentRect(), Math.round(c.right)
                == Math.round(getClientRect(a.lastChild).right))) {
                  for (a = a.lastChild.previousSibling;
                      a && a.lastChild;) {
                    a = a.lastChild;
                  }
                  a = getMyElementNode(a)
                }
              } else if (a) {
                if (a = getFirstRange().sel.focusNode) {
                  for (;
                      1 != a.nodeType;) {
                    a = a.parentNode;
                  }
                } else {
                  a = getMyElementNode(
                      c.startContainer);
                }
              }
              a && setMenuIconRealable(a)
            }, 10)
          } catch (H) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(H)
          }
        }
        onChange({editor: KEDITORTOP.G_CURRKEDITOR})
      }
    }
  }
}

function CheckNoWhere(a, c, b) {
  var d = c.Y, e = _iframeDoc.body.clientHeight, f = _iframeDoc.body.firstChild,
      g = _iframeDoc.body.lastChild;
  c = !1;
  a = "spanTag_NoWhere_" + KEDITORTOP.G_CURRKEDITOR.ID;
  if (10 >= d && -1 < ",table,hr,div,ul,ol,dl,form,blockquote,".indexOf(
      "," + f.tagName.toLowerCase() + ",")) {
    c = !0;
  } else if (d >= e && -1
      < ",table,hr,div,ul,ol,dl,form,blockquote,".indexOf(
          "," + g.tagName.toLowerCase() + ",")) {
    c = !0;
  } else if (10 < d && d
      < e) {
    c = !1;
    d = " table hr div ul ol dl form blockquote ".split(" ");
    f = e = null;
    for (g = 0; g < d.length && (e = GetParentInTag(b,
        d[g]), null == e); g++) {
      ;
    }
    if (null != e) {
      if (null == e.previousSibling) {
        c = !0, getElementOffset(
            e);
      } else {
        for (g = 0;
            g < d.length && (f = GetParentInTag(e.previousSibling, d[g]), null
            == f); g++) {
          ;
        }
        null != e && null != f && (c = !0, getElementOffset(e))
      }
    }
  } else if (f.id == a) {
    return;
  }
  0 == c ? (b = _iframeDoc.getElementById(a), null != b
  && _iframeDoc.body.removeChild(b)) : (b = _iframeDoc.getElementById(a), null
  == b && (b = _iframeDoc.createElement("span"), b.setAttribute("id",
      a), b.innerHTML = "", _iframeDoc.body.insertBefore(b,
      _iframeDoc.body.firstChild)))
}

function _iframeDoc_MouseMove(a) {
  var c = getEditrFromEvent(a);
  if (!isViewMode(c)) {
    if (getApplyDragResize(c) && c.keditor_dragresize
        && c.keditor_dragresize.G_keditorResize_elem
        && c.keditor_dragresize.G_isDrag) {
      c.keditor_dragresize.dragElem(a,
          "doc"), KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
    } else {
      var b = null, d = a ? a : _iframeWin.event,
          b = d.target ? d.target : d.srcElement,
          e = b.tagName ? b.tagName.toLowerCase() : null;
      set_ruler_mouse_guide(c, d);
      if (null != e && Mouse_Status != Mouse_IsCellResizing && Mouse_Status
          != Mouse_IsTableDragging &&
          null != b) {
        if ("1" == c._config.returnEvent.mouse_event) {
          try {
            var d = {strEventName: "mousemove", objEvent: a, objElement: b}, f;
            "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.mouse
                ? f = KEDITORTOP.G_CURRKEDITOR._config.event.mouse(c.ID, d)
                : "function"
                === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_MouseEvent
                && (f = KEDITORTOP.KEDITORWIN.RAONKEDITOR_MouseEvent(c.ID, d));
            if (!1 === f) {
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              return
            }
          } catch (g) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(g)
          }
        }
        if ("1" ==
            KEDITORTOP.G_CURRKEDITOR._config.clickCtrlHyperlink) {
          if ("a"
              == b.tagName.toLowerCase() || b.parentElement && "a"
              == b.parentElement.tagName.toLowerCase()) {
            KEDITORTOP.G_CURRKEDITOR.isAOver.linkStyle && !a.ctrlKey
            && hyperLinkOut();
            c = b;
            "a" != b.tagName.toLowerCase() && (c = b.parentElement);
            f = null;
            "a" != b.tagName.toLowerCase() && (f = b);
            if (!c.getAttribute("href") || -1 < c.getAttribute("href").indexOf(
                "#")) {
              return;
            }
            if (KEDITORTOP.G_CURRKEDITOR.isAOver.node != c
                && !KEDITORTOP.G_CURRKEDITOR.isAOver.openHelp) {
              var h = a.clientX, m = a.clientY;
              KEDITORTOP.G_CURRKEDITOR.isAOver = {
                over: !0,
                node: c,
                nodeChild: f,
                linkStyle: !1
              };
              KEDITORTOP.G_CURRKEDITOR.isAOver.timer = setTimeout(function () {
                hyperHelpOpen(h, m)
              }, 500)
            }
          } else {
            KEDITORTOP.G_CURRKEDITOR.isAOver.timer && (clearTimeout(
                KEDITORTOP.G_CURRKEDITOR.isAOver.timer), KEDITORTOP.G_CURRKEDITOR.isAOver.node = null, KEDITORTOP.G_CURRKEDITOR.isAOver.nodeChild = null), KEDITORTOP.G_CURRKEDITOR.isAOver.linkStyle
            && hyperLinkOut(), KEDITORTOP.G_CURRKEDITOR.isAOver.openHelp
            && hyperHelpClose(), KEDITORTOP.G_CURRKEDITOR.isAOver.timer =
                null;
          }
        }
        c = GetTDTHCell(b);
        mouseEndPos = getMousePosition(a);
        if (isLeftClick(a) && Mouse_Status == Mouse_IsCellDragging) {
          if (null != c && null != DrageStartCell && (DrageStartCell != c || 0
              != GetTableSelectionCells().length) && (GetParentbyTagName(b,
              "table") == ActiveCurrTable
          && (DrageEndCell = c), SelectedCellRange(DrageStartCell,
              c), KEDITORTOP.RAONKEDITOR.browser.ie && setAutoScroll(
              mouseEndPos), KEDITORTOP.RAONKEDITOR.browser.ie)) {
            try {
              _iframeDoc.body.setCapture(!1)
            } catch (q) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode
              &&
              console.log(q)
            }
          }
        } else {
          "img" != e && "hr" != e && "div" != e && "a" != e
          && (Mouse_Status = Mouse_IsPlain), KEDITORTOP.RAONKEDITOR.browser.mobile
          || (null != c ? (b = !1, null
          != KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
          && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_ResizeHandlerActivatedFlag
          || (b = !0), IsMousePointOnBorder(a) && b ? c.isContentEditable
              && showResizeBar() : hideResizeBar()) : hideResizeBar())
        }
      }
    }
  }
}

function _iframeDoc_MouseOut(a) {
  a = getEditrFromEvent(a);
  isViewMode(a) || (setKEDITORWINDOC(a), a.isAOver.linkStyle
  && hyperLinkOut(), a.isAOver.openHelp && hyperHelpClose())
}

function setAutoScroll(a) {
  var c = getElementOffset(_iframeWin.frameElement), b, d;
  b = _iframeWin.frameElement.offsetHeight;
  d = _iframeWin.frameElement.offsetWidth;
  var c = c.left + d, e, f;
  KEDITORTOP.RAONKEDITOR.browser.ie ? (e = _iframeDoc.documentElement.scrollLeft
          + _iframeDoc.body.scrollLeft, f = _iframeDoc.documentElement.scrollTop
          + _iframeDoc.body.scrollTop)
      : (e = _iframeWin.scrollX, f = _iframeWin.scrollY);
  a.X + 20 > c && _iframeWin.scroll(e + 30, f);
  0 < e && a.X - 20 < c - d && _iframeWin.scroll(e - 30, f);
  a.Y + 20 > b && _iframeWin.scroll(e, f + 30);
  0 < f && a.Y - 20 < b - b && _iframeWin.scroll(e, f - 30)
}

function isLeftClick(a) {
  return a.which ? 1 == a.which : a.button ? 1 == a.button : !1
}

function isRightClick(a) {
  var c = !1;
  a = a || window.event;
  a.which || void 0 === a.button || (a.which = a.button & 1 ? 1 : a.button & 2
      ? 3 : a.button & 4 ? 2 : 0);
  switch (a.which) {
    case 1:
      c = !1;
      break;
    case 2:
      c = !1;
      break;
    case 3:
      c = !0;
      break;
    case 0:
      0 == a.button && (c = !0)
  }
  return c
}

function ClearDraggingTableCellSelected() {
  if (null != ActiveCurrTable && ActiveCurrTable.getAttribute(
      "KEditorCellSelected")) {
    try {
      ActiveCurrTable.removeAttribute("KEditorCellSelected");
      for (var a = ActiveCurrTable, c = a.rows.length, b = 0; b < c;
          b++) {
        for (var d = a.rows[b], e = d.cells.length, f = 0; f < e; f++) {
          var g = d.cells[f];
          "true" == g.getAttribute("keditor_select")
          && (g.style.backgroundColor = g.getAttribute(
              "cellOrgBgColor"), removeAttribute(g,
              "cellOrgBgColor"), removeAttribute(g,
              "keditor_select"), removeEmptyStyleTag(g))
        }
      }
    } catch (h) {
      KEDITORTOP &&
      KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode && console.log(h)
    }
  }
}

function ClearDraggingTable(a) {
  if (null != a && a.getAttribute("KEditorCellSelected")) {
    try {
      a.removeAttribute("KEditorCellSelected");
      for (var c = a.rows.length, b = 0; b < c; b++) {
        for (var d = a.rows[b],
            e = d.cells.length, f = 0; f < e; f++) {
          var g = d.cells[f];
          "true" == g.getAttribute("keditor_select")
          && (g.style.backgroundColor = g.getAttribute(
              "cellOrgBgColor"), removeAttribute(g,
              "cellOrgBgColor"), removeAttribute(g,
              "keditor_select"), removeEmptyStyleTag(g))
        }
      }
    } catch (h) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode &&
      console.log(h)
    }
  }
}

function ClearDraggingTableAllTable(a) {
  try {
    var c = _iframeDoc;
    a && (c = a);
    for (var b = c.getElementsByTagName("TABLE"), d = b.length, e = c = null,
        f = 0, g = 0, h = 0, m = 0; m < d;
        m++) {
      if (c = b[m], f = c.rows.length, c.getAttribute(
          "KEditorCellSelected")) {
        try {
          if (a) {
            var q = c.cloneNode();
            q.innerHTML = c.innerHTML;
            c.parentNode.replaceChild(q, c);
            c = q
          }
        } catch (t) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(t)
        }
        c.removeAttribute("KEditorCellSelected");
        for (var u = 0; u < f; u++) {
          for (var g = c.rows[u], h = g.cells.length,
              v =
                  0; v < h; v++) {
            e = g.cells[v], "true" == e.getAttribute(
                "keditor_select") && (e.style.backgroundColor = e.getAttribute(
                "cellOrgBgColor"), removeAttribute(e,
                "cellOrgBgColor"), removeAttribute(e,
                "keditor_select"), removeEmptyStyleTag(e))
          }
        }
      }
    }
  } catch (w) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(w)
  }
}

function colorToHex(a) {
  if (6 > a.length) {
    return "#tttttt";
  }
  if ("#" === a.substr(0, 1)) {
    return a;
  }
  a = /(.*?)rgb\((\d+), (\d+), (\d+)\)/.exec(a);
  if (null == a) {
    return "#tttttt";
  }
  var c = parseInt(a[2]), b = parseInt(a[3]),
      c = parseInt(a[4]) | b << 8 | c << 16;
  return a[1] + "#" + c.toString(16)
}

function removeAttribute(a, c) {
  if (null != a) {
    try {
      a.removeProperty ? a.removeProperty(c) : a.removeAttribute(c)
    } catch (b) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(b)
    }
  }
}

function getClientRect(a) {
  var c = {left: 0, top: 0, right: 0, bottom: 0};
  try {
    c = a.getBoundingClientRect()
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
  return c
}

function getMousePosition(a) {
  var c = {};
  if (a.clientX || a.clientY) {
    c.X = Math.round(a.clientX), c.Y = Math.round(
        a.clientY);
  } else if (a.pageX || a.pageY) {
    c.X = Math.round(
        a.pageX), c.Y = Math.round(a.pageY);
  }
  return c
}

function SelectedCellRange(a, c, b) {
  b = GetParentbyTagName(a, "tr");
  var d = GetParentbyTagName(c, "tr");
  if (null != b && null != d && (ActiveCurrTable = GetParentbyTagName(b,
      "table"), ClearDraggingTableCellSelected(), a != c)) {
    a = getClientRect(a);
    d = getClientRect(c);
    b = function (a, b) {
      null == a ? a = {
        left: b.left,
        top: b.top,
        right: b.right,
        bottom: b.bottom
      } : (b.left < a.left && (a.left = b.left), b.right > a.right
      && (a.right = b.right), b.top < a.top && (a.top = b.top), b.bottom
      > a.bottom && (a.bottom = b.bottom));
      return a
    };
    c = function (a, b) {
      var c = 0;
      b.left >= a.left &&
      b.right <= a.right && b.top >= a.top && b.bottom <= a.bottom ? c = 2 : !(1
          > Math.abs(b.left - a.right)) && b.left < a.right && !(1 > Math.abs(
          b.right - a.left)) && b.right > a.left && !(1 > Math.abs(
          b.top - a.bottom)) && b.top < a.bottom && !(1 > Math.abs(
          b.bottom - a.top)) && b.bottom > a.top && (c = 1);
      return c
    };
    a = b(null, a);
    a = b(a, d);
    for (d = ActiveCurrTable.rows.length; ;) {
      for (var e = 0, f = 0; f < d; f++) {
        for (var g = ActiveCurrTable.rows[f], h = g.cells.length, m = 0; m < h;
            m++) {
          var e = g.cells[m], q = getClientRect(e), e = c(a, q);
          if (1 == e) {
            a = b(a, q);
            break
          }
        }
        if (1 == e) {
          break
        }
      }
      if (1 != e) {
        break
      }
    }
    b =
        !1;
    for (f = 0; f < d;
        f++) {
      for (g = ActiveCurrTable.rows[f], h = g.cells.length, m = 0; m < h;
          m++) {
        e = g.cells[m], q = getClientRect(e), 2 == c(a, q) && (null
        != e.getAttribute("cellOrgBgColor") && e.removeAttribute(
            "cellOrgBgColor"), e.setAttribute("cellOrgBgColor",
            e.style.backgroundColor), e.style.backgroundColor = ColorCellBackColor, "1"
        == KEDITORTOP.G_CURRKEDITOR._config.setDefaultTagInEmptyCell
        && setCellDefValue(e), e.setAttribute("keditor_select",
            "true"), b = !0);
      }
    }
    if (b) {
      try {
        if (ActiveCurrTable.setAttribute("KEditorCellSelected",
            "KEditorCellSelected"),
        "1" == KEDITORTOP.G_CURRKEDITOR._config.cellSelectionMode) {
          var t = getFirstRange().sel;
          t && t.removeAllRanges && t.removeAllRanges()
        }
      } catch (u) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(u)
      }
    }
  }
}

function GetTDTHCell(a) {
  if (a.nodeName.match(/t[dh]/i)) {
    return a;
  }
  for (; null != a && !a.nodeName.match(/t[dh]/i);) {
    a = a.parentNode;
  }
  return a
}

function CanMerge() {
  if (null == ActiveCurrTable) {
    return 0;
  }
  var a = 0, c, b, d, e, f, g, h, m;
  c = b = 1E7;
  for (var q = d = e = 0; q < ActiveCurrTable.rows.length;
      q++) {
    for (var t = ActiveCurrTable.rows[q], u = 0; u < t.cells.length;
        u++) {
      var v = t.cells[u];
      if ("true" == v.getAttribute("keditor_select")) {
        h = v.colSpan;
        var w = v.rowSpan, a = a + h * w;
        m = getClientRect(v);
        f = m.left;
        g = m.top;
        h = m.right;
        m = m.bottom
      }
      c > f && (c = parseInt(f, 10));
      b > g && (b = parseInt(g, 10));
      d < h && (d = parseInt(h, 10));
      e < m && (e = parseInt(m, 10))
    }
  }
  for (q = g = f = 0; q < ActiveCurrTable.rows.length;
      q++) {
    for (t = ActiveCurrTable.rows[q],
        u = 0; u < t.cells.length; u++) {
      if (v = t.cells[u], m = getClientRect(
          v), c <= parseInt(m.left, 10) && b <= parseInt(m.top, 10) && d
      >= parseInt(m.right, 10) && e >= parseInt(m.bottom, 10) || c > parseInt(
          m.left, 10) && b <= parseInt(m.top, 10) && c < parseInt(m.right, 10)
      && e
      >= parseInt(m.bottom, 10) || d > parseInt(m.left, 10) && b <= parseInt(
          m.top,
          10) && d < parseInt(m.right, 10) && e >= parseInt(m.bottom, 10) || c
      <= parseInt(m.left, 10) && e > parseInt(m.top, 10) && d >= parseInt(
          m.right,
          10) && e < parseInt(m.bottom, 10) || c <= parseInt(m.left, 10) && b
      > parseInt(m.top, 10) && d >= parseInt(m.right,
          10) && b < parseInt(m.bottom, 10)) {
        h = v.colSpan, w = v.rowSpan, f += h
            * w, d == m.right && (g += v.rowSpan);
      }
    }
  }
  c = 0;
  0 < g && (c = a / g);
  return "number" == typeof c && 0 < c.toString().indexOf(".") ? !1 : f == a
  && 1 < f ? f : 0
}

function command_mergeCell(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  if (0 != CanMerge()) {
    0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
    && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    var b, d, e, f, g, h, m, q;
    b = d = 1E7;
    e = f = 0;
    var t = "";
    ActiveCurrTable
    && (t = ActiveCurrTable.style.borderCollapse, ActiveCurrTable.style.borderCollapse = "");
    for (var u = 0; u < ActiveCurrTable.rows.length;
        u++) {
      for (var v = ActiveCurrTable.rows[u], w = 0; w < v.cells.length;
          w++) {
        var x = v.cells[w];
        "true" == x.getAttribute("keditor_select") &&
        (q = getClientRect(
            x), g = q.left, h = q.top, m = q.right, q = q.bottom);
        b > g && (b = g);
        d > h && (d = h);
        e < m && (e = m);
        f < q && (f = q)
      }
    }
    m = h = "";
    var y, z;
    y = z = 0;
    g = null;
    for (u = 0; u < ActiveCurrTable.rows.length;
        u++) {
      for (v = ActiveCurrTable.rows[u], w = 0; w < v.cells.length;
          w++) {
        x = v.cells[w], q = getClientRect(x), b <= q.left && d <= q.top
        && e >= q.right && f >= q.bottom && (d == q.top && b == q.left
            ? (g = x, m = x.innerHTML)
            : x.style.visibility = "hidden", h += removeCellDefValue(x, !0), 1
        > Math.abs(b - q.left) && (y += x.rowSpan), 1 > Math.abs(d - q.top)
        && (z += x.colSpan));
      }
    }
    if (g) {
      q = 0;
      b = getClientRect(g);
      for (u = ActiveCurrTable.rows.length - 1; 0 <= u;
          u--) {
        for (v = ActiveCurrTable.rows[u], w = v.cells.length - 1; 0 <= w;
            w--) {
          x = v.cells[w], d = getClientRect(x), "hidden"
          == x.style.visibility && (b.top == d.top && (q += parseIntOr0(
              x.style.width)), b.right == d.left && b.top != d.top
          && parseIntOr0(
              x.style.height));
        }
      }
      0 < q && (g.style.width = parseIntOr0(g.style.width) + q + "px")
    }
    u = !1;
    g && (u = !0);
    if (u) {
      ActiveCurrTable.style.borderCollapse = "";
      e = d = 0;
      f = [];
      b = getClientRect(g);
      for (u = 0; u < ActiveCurrTable.rows.length;
          u++) {
        for (nTemp = 0, v = ActiveCurrTable.rows[u], w = 0; w <
        v.cells.length; w++) {
          x = v.cells[w], q = getClientRect(x), (b.left
              != q.left || b.right != q.right) && b.left <= q.left && b.right
          >= q.right && (0 == nTemp && f.push(x), nTemp += x.colSpan), b.bottom
          == q.top && (e = nTemp), b.top == q.bottom && (d = nTemp);
        }
      }
      0 < d || 0 < e ? g.colSpan = d < e ? e : d : removeAttribute(g,
          "colSpan");
      if (f.length == ActiveCurrTable.rows.length) {
        for (u = 0; u < f.length; u++) {
          removeAttribute(f[u], "colSpan");
        }
        removeAttribute(g, "colSpan")
      }
    }
    if (g) {
      1 < z && (g.colSpan = z);
      1 < y && (g.rowSpan = y);
      for (u = ActiveCurrTable.rows.length - 1; 0 <= u; u--) {
        v = ActiveCurrTable.rows[u];
        for (w = v.cells.length - 1; 0 <= w; w--) {
          x = v.cells[w], "hidden"
          == x.style.visibility && v.deleteCell(w);
        }
        0 == v.cells.length && deleteRow(v)
      }
      g.innerHTML = 0 == h.length ? "" != m ? m
          : KEDITORTOP.RAONKEDITOR.browser.ie ? "" : getCellDefValue() : h;
      try {
        KEDITORTOP.RAONKEDITOR.browser.gecko ? 0 == h.length
            ? setFocusChildForStyle(g.childNodes[0])
            : setGeckoCellCaretPosistion(g, !0) : (setFocusChildForStyle(
            g.childNodes[0]), removeCellDefValue(g, !1))
      } catch (A) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(A)
      }
      ClearDraggingTableCellSelected();
      if (1
          == ActiveCurrTable.rows.length) {
        for (v = ActiveCurrTable.rows[0], w = 0;
            w < v.cells.length; w++) {
          x = v.cells[w], removeAttribute(x,
              "rowSpan"), removeAttribute(x, "colSpan");
        }
      }
      1 == ActiveCurrTable.rows.length && 1
      == ActiveCurrTable.rows[0].cells.length && (removeAttribute(
          ActiveCurrTable.rows[0].cells[0], "width"), removeAttribute(
          ActiveCurrTable.rows[0].cells[0], "height"), removeAttribute(
          ActiveCurrTable.rows[0].cells[0], "colSpan"), removeAttribute(
          ActiveCurrTable.rows[0].cells[0], "rowSpan"));
      if (g && 1 < g.colSpan && 1 < ActiveCurrTable.rows.length) {
        m =
            0;
        h = [];
        b = getClientRect(g);
        for (u = 0; u < ActiveCurrTable.rows.length;
            u++) {
          for (v = ActiveCurrTable.rows[u], w = 0; w < v.cells.length;
              w++) {
            x = v.cells[w], q = getClientRect(x), b.left == q.left
            && b.right == q.right && parseIntOr0(g.colSpan) == parseIntOr0(
                x.colSpan) && (q = parseIntOr0(x.rowSpan), m = 1 < q ? m + q : m
                + 1, h.push(x));
          }
        }
        if (m == ActiveCurrTable.rows.length) {
          for (v = h.length, u = 0; u < v;
              u++) {
            removeAttribute(h[u], "colSpan")
          }
        }
      }
    }
    ActiveCurrTable && (ActiveCurrTable.style.borderCollapse = t);
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount =
        0;
    KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell")
  }
}

function command_deleteTable(a, c) {
  keditor_src_init(c._EDITOR.design);
  if (null == ActiveCurrTable) {
    return 0;
  }
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  var b = ActiveCurrTable.previousSibling;
  try {
    if (b) {
      if (3 == b.nodeType || 1 == b.nodeType && "BR" == b.tagName) {
        b = "text"
      }
    } else {
      var d = ActiveCurrTable.parentNode;
      1 == d.nodeType && "BODY" != d.tagName && (b = d)
    }
  } catch (e) {
    b = null
  }
  ActiveCurrTable.parentNode.removeChild(ActiveCurrTable);
  ActiveCurrTable = null;
  if ("text" != b) {
    if (null == b) {
      "" ==
      _iframeDoc.body.innerHTML ? (setBodyDefaultValue(), setFocusToBody())
          : (doSetCaretPosition(_iframeDoc.body.firstChild,
              0), KEDITORTOP.G_CURRKEDITOR._iconEnable(
              "default"));
    } else if (doSetCaretPosition(b,
        1), b = GetParentbyTagName(b, "table")) {
      var d = c._config.tableNoActionClass, f = !1;
      "" != d && (f = checkContainClass(b, d));
      ActiveCurrTable = b;
      KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell", f)
    } else {
      KEDITORTOP.G_CURRKEDITOR._iconEnable("default");
    }
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount =
      0
}

function command_insertRowUp(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  InsertRowUpDown(!0, !1, b);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell")
}

function command_insertRowDown(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  InsertRowUpDown(!1, !1, b);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell")
}

function InsertRowUpDown(a, c, b) {
  var d = getFirstRange().range;
  if (d && (d = GetTDTHCell(d.startContainer), null != d)) {
    ActiveCurrTable = GetParentbyTagName(d, "table");
    var e = GetParentbyTagName(d, "tr");
    if (e) {
      var f = 0;
      a ? f = e.rowIndex : (f = 1 < d.rowSpan ? e.rowIndex + d.rowSpan
          : e.rowIndex + 1, f > ActiveCurrTable.rows.length
      && (f = ActiveCurrTable.rows.length));
      for (var g = [], h = [], m = getClientRect(d), q = 0;
          q < ActiveCurrTable.rows.length;
          q++) {
        for (var t = ActiveCurrTable.rows[q], u = 0; u < t.cells.length;
            u++) {
          var v = t.cells[u], w = getClientRect(v);
          if (a) {
            if (.1 > Math.abs(m.top - w.top) || w.top < m.top && w.bottom
                > m.top) {
              var x = {};
              x.left = w.left;
              x.cell = v;
              h.push(x)
            }
          } else if (.1 > Math.abs(m.bottom - w.bottom) || w.bottom > m.bottom
              && m.bottom > w.top) {
            x = {}, x.left = w.left, x.cell = v, h.push(x)
          }
        }
      }
      h.sort(function (a, b) {
        return a.left - b.left
      });
      for (q = 0; q < h.length; q++) {
        g.push(h[q].cell);
      }
      h = [];
      for (q = 0; q < g.length; q++) {
        t = g[q], u = t.rowSpan, w = getClientRect(
            t), h[q] = 1 < u && 1 == a && w.top != m.top || 1 < u && 0 == a
        && w.bottom != m.bottom ? t.rowSpan + 1 : 1;
      }
      b || (b = 1);
      for (a = 0; a < b; a++) {
        for (m = insertRowByIndex(ActiveCurrTable,
            e, f), setCopyAllObjectAtributes(e, m, !1), q = 0; q < g.length;
            q++) {
          if (t = g[q], u = t.rowSpan, 1
          < h[q]) {
            t.rowSpan = h[q], removeAttribute(t,
                "height");
          } else if (w = insertCellByIndex(m, d, -1)) {
            "th" == t.tagName.toLowerCase() && (u = document.createElement(
                "th"), w.parentNode.replaceChild(u, w), w = u);
            w.innerHTML = getCellDefValue();
            if (c) {
              u = [];
              v = [];
              try {
                if (KEDITORTOP.RAONKEDITOR.browser.ie && 8
                    > KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
                  for (var u = t.getElementsByTagName(
                      "a"), y = u.length, z = 0; z < y; z++) {
                    u[z].outerHTML.match(
                        RegExp("(hrefs*=s*(?:\"|')(.*?)(?:\"|'))",
                            "gi")), v.push(RegExp.$2)
                  }
                }
              } catch (A) {
                u = [], v = []
              }
              setCopyAllObjectAtributes(t, w, !0);
              try {
                if (KEDITORTOP.RAONKEDITOR.browser.ie && 8
                    > KEDITORTOP.RAONKEDITOR.browser.ieVersion
                    && (y = u.length, 0
                    < y)) {
                  for (var B = w.getElementsByTagName("a"), C = B.length,
                      z = 0; z < C; z++) {
                    B[z].href && 0
                    > B[z].href.toLowerCase().indexOf("javascript") && 0
                    > B[z].href.indexOf("'") && 0 > B[z].href.indexOf('"') && ""
                    != v[z] && B[z].href != v[z]
                    && (B[z].href = v[z], B[z].setAttribute("href", v[z]))
                  }
                }
              } catch (D) {
                w.innerHTML = t.innerHTML
              }
            } else {
              setCopyAllObjectAtributes(t, w, !1);
            }
            1 < w.rowSpan && removeAttribute(w, "rowSpan")
          }
        }
      }
    }
  }
}

function command_deleteRow(a, c) {
  keditor_src_init(c._EDITOR.design);
  if (null == ActiveCurrTable) {
    return 0;
  }
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  var b = null, d = -1, e = 0, f = getFirstRange().range;
  if (f) {
    f = GetTDTHCell(f.startContainer);
    b = ActiveCurrTable.previousSibling;
    try {
      if (b) {
        if (3 == b.nodeType || 1 == b.nodeType && "BR" == b.tagName) {
          b = "text"
        }
      } else {
        var g = ActiveCurrTable.parentNode;
        1 == g.nodeType && "BODY" != g.tagName && (b = g)
      }
    } catch (h) {
      b =
          null
    }
    g = GetParentbyTagName(f, "tr");
    for (f = 0; f < ActiveCurrTable.rows.length;
        f++) {
      for (var m = ActiveCurrTable.rows[f], q = 0; q < m.cells.length;
          q++) {
        if ("true" == m.cells[q].getAttribute("keditor_select")) {
          -1 == d && (d = m.rowIndex);
          e++;
          break
        }
      }
    }
    e = e || 1;
    for (f = 0; f < e; f++) {
      -1 != d && (g = ActiveCurrTable.rows[d]);
      if (null == g) {
        return;
      }
      deleteRow(g)
    }
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  ActiveCurrTable ? (doSetCaretPosition(
          ActiveCurrTable.rows[0].cells[0].childNodes[0],
          0), KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell")) :
      "text" != b && (null == b ? "" == _iframeDoc.body.innerHTML
          ? (setBodyDefaultValue(), setFocusToBody()) : (doSetCaretPosition(
              _iframeDoc.body.firstChild, 0), KEDITORTOP.G_CURRKEDITOR._iconEnable(
              "default")) : (doSetCaretPosition(b, 1), (b = GetParentbyTagName(b,
          "table")) ? (d = c._config.tableNoActionClass, e = !1, "" != d
      && (e = checkContainClass(b,
          d)), ActiveCurrTable = b, KEDITORTOP.G_CURRKEDITOR._iconEnable(
          "focusInCell", e)) : KEDITORTOP.G_CURRKEDITOR._iconEnable("default")))
}

function deleteRow(a) {
  if (null != a) {
    ActiveCurrTable = GetParentbyTagName(a, "table");
    var c = a.rowIndex;
    ActiveCurrTable.previousSibling && doSetCaretPosition(
        ActiveCurrTable.previousSibling, 0);
    for (var b = 0; b < ActiveCurrTable.rows.length; b++) {
      var d = ActiveCurrTable.rows[b], e = d.rowIndex;
      if (c == e) {
        break;
      }
      for (var f = 0; f < d.cells.length; f++) {
        var g = d.cells[f], h = g.rowSpan;
        1 < h && c < e + h && (2 == h ? removeAttribute(g, "rowSpan")
            : g.rowSpan = h - 1)
      }
    }
    for (f = 0; f < a.cells.length; f++) {
      if (g = a.cells[f], h = g.rowSpan, 1
      < h) {
        b = insertCellByIndex(ActiveCurrTable.rows[a.rowIndex +
        1], g, g.cellIndex);
        if (null == b) {
          return;
        }
        d = g.colSpan;
        e = g.style.width;
        b.innerHTML = g.innerHTML;
        b.style.border = "1px solid #000000";
        b.style.width = e;
        2 < h && (b.rowSpan = h - 1);
        1 < d && (b.colSpan = d)
      }
    }
    1 == ActiveCurrTable.rows.length ? (ActiveCurrTable.parentNode.removeChild(
        ActiveCurrTable), ActiveCurrTable = null) : ActiveCurrTable.deleteRow(c)
  }
}

function command_insertCellLeft(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  insertCell(!0, b);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell")
}

function command_insertCellRight(a, c, b) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  insertCell(!1, b);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell")
}

function insertCell(a, c) {
  var b = getFirstRange().range;
  if (b && (b = GetTDTHCell(b.startContainer), null != b
  && (ActiveCurrTable = GetParentbyTagName(b, "table"), GetParentbyTagName(b,
      "tr")))) {
    for (var d = [], e = [], f = getClientRect(b), g = 0;
        g < ActiveCurrTable.rows.length;
        g++) {
      for (var h = ActiveCurrTable.rows[g], m = 0; m < h.cells.length;
          m++) {
        var q = h.cells[m], t = getClientRect(q);
        a ? 1 > Math.abs(f.left - t.left)
            ? (t = {}, t.x = g, t.y = m, t.width = 0
            < q.style.width.length ? q.style.width : "", t.height = 0
            < q.style.height.length ? q.style.height : "", t.rowSpan =
                q.rowSpan, t.cell = q, d.push(t)) : (f.top >= t.bottom
                || f.bottom
                <= t.top) && .1 < t.right - f.left && .1 < f.left - t.left
            && e.push(
                q) : 1 > Math.abs(f.right - t.right) ? (t = {}, t.x = g, t.y = m
            + 1, t.rowSpan = q.rowSpan, t.width = 0 < q.style.width.length
            ? q.style.width : "", t.height = 0 < q.style.height.length
            ? q.style.height : "", t.cell = q, d.push(t)) : (f.top >= t.bottom
                || f.bottom <= t.top) && .1 < t.right - f.right && .1 < f.right
            - t.left && e.push(q)
      }
    }
    c || (c = 1);
    for (g = 0; g < d.length; g++) {
      for (f = 0; f < c; f++) {
        q = d[g];
        h = insertCellByIndex(ActiveCurrTable.rows[q.x], b, q.y);
        if (null ==
            h) {
          return;
        }
        "th" == q.cell.tagName.toLowerCase() && (m = document.createElement(
            "th"), h.parentNode.replaceChild(m, h), h = m);
        h.innerHTML = getCellDefValue();
        setCopyAllObjectAtributes(q.cell, h, !1);
        1 < q.rowSpan ? h.rowSpan = q.rowSpan : removeAttribute(h, "rowSpan");
        1 < q.cell.colSpan && removeAttribute(h, "colSpan");
        0 == g && "" != ActiveCurrTable.style.width && -1
        < ActiveCurrTable.style.width.indexOf("px")
        && (h = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
            ActiveCurrTable.style.width), m = 0, "" != q.width && -1
        < q.width.indexOf("px") && (m = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
            q.width)),
            ActiveCurrTable.style.width = h + m + "px")
      }
    }
    for (g = 0; g < e.length; g++) {
      for (f = 0; f < c;
          f++) {
        q = e[g], q.colSpan += 1
      }
    }
  }
}

function command_InsertSplitCell(a, c, b, d) {
  keditor_src_init(c);
  restoreSelection();
  setFocusToBody();
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  a = getFirstRange().range;
  var e, f, g;
  !KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT || "TD"
  != KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.tagName && "TH"
  != KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.tagName ? a && (g = GetTDTHCell(
      a.startContainer)) : g = KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT;
  g && (e = GetTableSelectionCells(g), f =
      e.length);
  if (0 == f) {
    1 < parseInt(b) && splitCellByRow(b, !0, g), 1 < parseInt(d)
    && splitCellByColumn(d, !0, g);
  } else {
    for (g = 0; g < f; g++) {
      1 < parseInt(b)
      && splitCellByRow(b, !0, e[g]), 1 < parseInt(d) && splitCellByColumn(d,
          !0,
          e[g]);
    }
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0;
  b = "focusInCell";
  try {
    e = GetTableSelectionCells(), 0 < e.length && (b = 1 == e.length
        ? "selectedSingleCell" : "selectedMultiCell")
  } catch (h) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(h)
  }
  KEDITORTOP.G_CURRKEDITOR._iconEnable(b)
}

function splitCellByRow(a, c, b) {
  if (c = null == b || void 0 == b ? getFirstRange().range : b) {
    if (c = null
    == b || void 0 == b ? GetTDTHCell(c.startContainer) : GetTDTHCell(c), null
    != c) {
      ActiveCurrTable = GetParentbyTagName(c, "table");
      var d = GetParentbyTagName(c, "tr"), e = "";
      ActiveCurrTable
      && (e = ActiveCurrTable.style.borderCollapse, ActiveCurrTable.style.borderCollapse = "");
      var f = null;
      if ("1" == KEDITORTOP.G_CURRKEDITOR._config.splitCellStyle) {
        var g = [];
        if (c.firstChild) {
          var h = c.firstChild.nodeName.toLowerCase();
          if ("p" == h || "span" == h || "ol" ==
              h || "ul" == h || "li" == h) {
            var m = function (a) {
              g.push(a.cloneNode());
              if (a.firstChild) {
                h = a.firstChild.nodeName.toLowerCase();
                for (var b = "span b strong i em strike u sup sub font ul ol li".split(
                    " "), c = !1, d = 0; d < b.length; d++) {
                  if (b[d] == h) {
                    c = !0;
                    break
                  }
                }
                return c ? m(a.firstChild) : !0
              }
              return !0
            };
            if (m(c.firstChild)) {
              for (var f = null, q = g.length - 1; 0 <= q; q--) {
                f
                    ? g[q].appendChild(f)
                    : g[q].innerHTML = getCellDefValue().replace(/<p>|<\/p>/gi,
                        ""), f = g[q];
              }
              f = f.outerHTML
            }
          }
        }
      }
      if (d) {
        whereRowIdx = d.rowIndex;
        if (1 < c.rowSpan) {
          --c.rowSpan;
          var q = c.style.width,
              t = c.style.height,
              u = ActiveCurrTable.rows[whereRowIdx + c.rowSpan],
              v = GetFirstIndexInRowByCurrCell(u, c);
          if (u = insertCellByIndex(u, c, v + 1)) {
            u.innerHTML = f ? f
                : getCellDefValue(), u.style.borderTop = c.style.borderTop, u.style.borderRight = c.style.borderRight, u.style.borderBottom = c.style.borderBottom, u.style.borderLeft = c.style.borderLeft, u.style.padding = c.style.padding, u.style.marginTop = c.style.marginTop, u.style.marginRight = c.style.marginRight, u.style.marginBottom = c.style.marginBottom, u.style.marginLeft = c.style.marginLeft,
                u.className = c.className, "true" == c.getAttribute(
                "keditor_select") ? (u.setAttribute("cellOrgBgColor",
                c.getAttribute(
                    "cellOrgBgColor")), u.style.backgroundColor = ColorCellBackColor, u.setAttribute(
                "keditor_select", "true")) : "" == c.style.backgroundColor || 0
                != c.style.backgroundColor.indexOf("#") && 0
                != c.style.backgroundColor.indexOf("rgb")
                || (u.style.backgroundColor = c.style.backgroundColor), 0
            < q.length
            && (u.style.width = q), 0 < t.length && (u.style.height = t), 1
            < c.colSpan && (u.colSpan = c.colSpan);
          }
          --a;
          1 == c.rowSpan && removeAttribute(c,
              "rowSpan");
          1 < a && splitCellByRow(a, !1, b);
          ActiveCurrTable && (ActiveCurrTable.style.borderCollapse = e);
          return
        }
        b = [];
        for (var w = 0, t = getClientRect(c), q = 0;
            q < ActiveCurrTable.rows.length;
            q++) {
          for (u = ActiveCurrTable.rows[q], v = 0; v < u.cells.length;
              v++) {
            var x = u.cells[v], y = getClientRect(x);
            if (1 > Math.abs(t.top - y.top) || 1 <= Math.abs(t.top - y.top)
                && y.top
                < t.top && 1 <= Math.abs(t.top - y.bottom) && y.bottom
                > t.top) {
              b[w] = x, w += 1
            }
          }
        }
        w = [];
        for (q = 0; q < b.length; q++) {
          t = b[q], y = getClientRect(t), t != c
          && (w[q] = t.rowSpan + (a - 1));
        }
        for (y = 1; y < a; y++) {
          u = insertRowByIndex(ActiveCurrTable,
              d, whereRowIdx + y);
          q = c.style.width;
          t = c.style.height;
          v = GetFirstIndexInRowByCurrCell(u, c);
          if (u = insertCellByIndex(u, c, v)) {
            u.innerHTML = f ? f
                : getCellDefValue(), u.style.borderTop = c.style.borderTop, u.style.borderRight = c.style.borderRight, u.style.borderBottom = c.style.borderBottom, u.style.borderLeft = c.style.borderLeft, u.style.padding = c.style.padding, u.style.marginTop = c.style.marginTop, u.style.marginRight = c.style.marginRight, u.style.marginBottom = c.style.marginBottom, u.style.marginLeft = c.style.marginLeft, u.className =
                c.className, "true" == c.getAttribute("keditor_select")
                ? (u.setAttribute("cellOrgBgColor", c.getAttribute(
                    "cellOrgBgColor")), u.style.backgroundColor = ColorCellBackColor, u.setAttribute(
                    "keditor_select", "true")) : "" == c.style.backgroundColor
                || 0
                != c.style.backgroundColor.indexOf("#") && 0
                != c.style.backgroundColor.indexOf("rgb")
                || (u.style.backgroundColor = c.style.backgroundColor), 0
            < q.length
            && (u.style.width = q), 0 < t.length && (u.style.height = t), 1
            < c.colSpan && (u.colSpan = c.colSpan);
          }
          for (q = 0; q < b.length; q++) {
            t = b[q], 1 <= w[q] &&
            (t.rowSpan = w[q], removeAttribute(t, "height"))
          }
        }
      }
      ActiveCurrTable && (ActiveCurrTable.style.borderCollapse = e)
    }
  }
}

function GetFirstIndexInRowByCurrCell(a, c) {
  for (var b = -1, d = a.cells.length, e = getClientRect(c), d = d - 1; 0 <= d;
      d--) {
    var f = getClientRect(a.cells[d]);
    if (isSameRect(e.left, f.right) || e.left >= f.right) {
      b = d;
      break
    }
  }
  return b
}

function splitCellByColumn(a, c, b) {
  if (c = null == b || void 0 == b ? getFirstRange().range : b) {
    if (c = null
    == b || void 0 == b ? GetTDTHCell(c.startContainer) : GetTDTHCell(c), null
    != c) {
      ActiveCurrTable = GetParentbyTagName(c, "table");
      var d = GetParentbyTagName(c, "tr"), e = "";
      ActiveCurrTable
      && (e = ActiveCurrTable.style.borderCollapse, ActiveCurrTable.style.borderCollapse = "");
      var f = null;
      if ("1" == KEDITORTOP.G_CURRKEDITOR._config.splitCellStyle) {
        var g = [];
        if (c.firstChild) {
          var h = c.firstChild.nodeName.toLowerCase();
          if ("p" == h || "span" == h || "ol" ==
              h || "ul" == h || "li" == h) {
            var m = function (a) {
              g.push(a.cloneNode());
              if (a.firstChild) {
                h = a.firstChild.nodeName.toLowerCase();
                for (var b = "span b strong i em strike u sup sub font ul ol li".split(
                    " "), c = !1, d = 0; d < b.length; d++) {
                  if (b[d] == h) {
                    c = !0;
                    break
                  }
                }
                return c ? m(a.firstChild) : !0
              }
              return !0
            };
            if (m(c.firstChild)) {
              for (var f = null, q = g.length - 1; 0 <= q; q--) {
                f
                    ? g[q].appendChild(f)
                    : g[q].innerHTML = getCellDefValue().replace(/<p>|<\/p>/gi,
                        ""), f = g[q];
              }
              f = f.outerHTML
            }
          }
        }
      }
      if (d) {
        if (1 < c.colSpan) {
          --c.colSpan;
          var t = parseInt(c.style.width), q =
                  isNaN(parseInt(parseInt(c.style.width) / a)) ? "" : parseInt(
                      parseInt(c.style.width, 10) / a, 10) + "px",
              u = c.style.height,
              v = insertCellByIndex(d, c, c.cellIndex + 1);
          v && (v.innerHTML = f ? f
              : getCellDefValue(), v.style.borderTop = c.style.borderTop, v.style.borderRight = c.style.borderRight, v.style.borderBottom = c.style.borderBottom, v.style.borderLeft = c.style.borderLeft, v.style.padding = c.style.padding, v.style.marginTop = c.style.marginTop, v.style.marginRight = c.style.marginRight, v.style.marginBottom = c.style.marginBottom, v.style.marginLeft =
              c.style.marginLeft, v.className = c.className, "true"
          == c.getAttribute("keditor_select") ? (v.setAttribute(
              "cellOrgBgColor",
              c.getAttribute(
                  "cellOrgBgColor")), v.style.backgroundColor = ColorCellBackColor, v.setAttribute(
              "keditor_select", "true")) : "" == c.style.backgroundColor || 0
              != c.style.backgroundColor.indexOf("#") && 0
              != c.style.backgroundColor.indexOf("rgb")
              || (v.style.backgroundColor = c.style.backgroundColor), 0
          < q.length
          && (v.style.width = q), 0 < u.length && (v.style.height = u), 1
          < c.rowSpan && (v.rowSpan = c.rowSpan));
          --a;
          1 ==
          c.colSpan && removeAttribute(c, "colSpan");
          1 < a ? (q = t - parseInt(q), 0 < q && (c.style.width = q
              + "px"), splitCellByColumn(a, !1, b)) : 0 < q.length
              && (c.style.width = q);
          ActiveCurrTable && (ActiveCurrTable.style.borderCollapse = e);
          return
        }
        b = [];
        v = 0;
        u = getClientRect(c);
        for (q = 0; q < ActiveCurrTable.rows.length;
            q++) {
          for (var w = ActiveCurrTable.rows[q], t = 0; t < w.cells.length;
              t++) {
            var x = w.cells[t], y = getClientRect(x);
            if (x != c) {
              if (u.left >= y.left && u.right <= y.right) {
                w = {};
                w.x = q;
                w.y = t;
                w.width = 0 < x.style.width.length ? x.style.width : "";
                w.colSpan = x.colSpan;
                b[v] = w;
                v += 1;
                break
              }
            } else if (x == c) {
              break
            }
          }
        }
        for (q = 0; q < b.length; q++) {
          v = b[q];
          v = ActiveCurrTable.rows[v.x].cells[v.y];
          if (null == v) {
            return;
          }
          v.colSpan += a - 1
        }
        q = isNaN(parseInt(parseInt(c.style.width) / a)) ? "" : parseInt(
            parseInt(c.style.width, 10) / a, 10) + "px";
        0 >= q.length && (q = isNaN(parseInt(parseInt(c.clientWidth) / a)) ? ""
            : parseInt(parseInt(c.clientWidth, 10) / a, 10) + "px");
        "" == q && 1 == ActiveCurrTable.rows.length && (q = parseInt(
            parseInt(ActiveCurrTable.style.width, 10) / a, 10) + "px");
        u = c.style.height;
        0 < q.length && (c.style.width = q);
        0 < u.length &&
        (c.style.height = u);
        for (b = 1; b < a; b++) {
          if (v = insertCellByIndex(d, c,
              c.cellIndex + b)) {
            v.innerHTML = f ? f
                : getCellDefValue(), v.style.borderTop = c.style.borderTop, v.style.borderRight = c.style.borderRight, v.style.borderBottom = c.style.borderBottom, v.style.borderLeft = c.style.borderLeft, v.style.padding = c.style.padding, v.style.marginTop = c.style.marginTop, v.style.marginRight = c.style.marginRight, v.style.marginBottom = c.style.marginBottom, v.style.marginLeft = c.style.marginLeft, v.className = c.className, "true"
            == c.getAttribute("keditor_select") ?
                (v.setAttribute("cellOrgBgColor", c.getAttribute(
                    "cellOrgBgColor")), v.style.backgroundColor = ColorCellBackColor, v.setAttribute(
                    "keditor_select", "true")) : "" == c.style.backgroundColor
                || 0
                != c.style.backgroundColor.indexOf("#") && 0
                != c.style.backgroundColor.indexOf("rgb")
                || (v.style.backgroundColor = c.style.backgroundColor), 0
            < q.length
            && (v.style.width = q), 0 < u.length && (v.style.height = u), 1
            < c.rowSpan && (v.rowSpan = c.rowSpan)
          }
        }
      }
      ActiveCurrTable && (ActiveCurrTable.style.borderCollapse = e)
    }
  }
}

function command_deleteCell(a, c) {
  keditor_src_init(c._EDITOR.design);
  if (null == ActiveCurrTable) {
    return 0;
  }
  restoreSelection();
  setFocusToBody();
  var b = null;
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  var d = getFirstRange().range;
  if (d) {
    var e = "";
    ActiveCurrTable
    && (e = ActiveCurrTable.style.borderCollapse, ActiveCurrTable.style.borderCollapse = "");
    b = ActiveCurrTable.previousSibling;
    try {
      if (b) {
        if (3 == b.nodeType || 1 == b.nodeType && "BR" == b.tagName) {
          b = "text"
        }
      } else {
        var f = ActiveCurrTable.parentNode;
        1 == f.nodeType && "BODY" != f.tagName && (b = f)
      }
    } catch (g) {
      b = null
    }
    f = 0;
    if ("0" == KEDITORTOP.G_CURRKEDITOR._config.tableAutoAdjust) {
      var h = ActiveCurrTable.innerHTML,
          h = h.replace(/<[td|th][^>]*?width.*?>/gim, "");
      /<td|<th/.test(h)
      && (KEDITORTOP.G_CURRKEDITOR._config.tableAutoAdjust = "1", "1"
      == KEDITORTOP.G_CURRKEDITOR._config.adjustCellSizeAfterDeleteCell
      && setAdjustTableWidthHeight(
          ActiveCurrTable), KEDITORTOP.G_CURRKEDITOR._config.tableAutoAdjust = "0")
    } else {
      "1" == KEDITORTOP.G_CURRKEDITOR._config.adjustCellSizeAfterDeleteCell
      &&
      setAdjustTableWidthHeight(ActiveCurrTable);
    }
    h = GetTableSelectionCells();
    for (0 == h.length && h.push(GetTDTHCell(d.startContainer));
        0 < h.length;) {
      var d = 0, m = h[h.length - 1], q = getClientRect(m);
      if (m) {
        for (var t = [], h = 0; h < ActiveCurrTable.rows.length; h++) {
          var u = ActiveCurrTable.rows[h];
          if (m.parentNode.rowIndex == h) {
            var v = {};
            v.x = h;
            v.y = m.cellIndex;
            v.isDel = !0;
            t.push(v)
          } else {
            for (var w = 0; w < u.cells.length; w++) {
              var v = u.cells[w], x = getClientRect(v), v = {};
              v.x = h;
              v.y = w;
              q.left <= x.left && q.right >= x.right ? (v.isDel = !0, t.push(v))
                  : q.left >=
                  x.left && q.right <= x.right && (v.isDel = !1, t.push(v))
            }
          }
        }
        for (h = t.length; 0 < h; h--) {
          u = t[h - 1];
          w = ActiveCurrTable.rows[u.x].cells[u.y];
          if (null == w) {
            ActiveCurrTable.style.borderCollapse = e;
            return
          }
          u.isDel ? (w = parseIntOr0(w.style.width), d < w
          && (d = w), ActiveCurrTable.rows[u.x].deleteCell(u.y)) : 2 < w.colSpan
              ? --w.colSpan : removeAttribute(w, "colSpan")
        }
        for (h = ActiveCurrTable.rows.length - 1; 0 <= h; h--) {
          if (0
              == ActiveCurrTable.rows[h].cells.length) {
            t = ActiveCurrTable.rows[h].rowIndex;
            for (w = 0; w < h; w++) {
              u = ActiveCurrTable.rows[w];
              m = u.rowIndex;
              if (t == m) {
                break;
              }
              for (q = 0; q < u.cells.length;
                  q++) {
                v = u.cells[q], x = v.rowSpan, 1 < x && t < m + x && (2
                == x ? removeAttribute(v, "rowSpan") : v.rowSpan = x - 1)
              }
            }
            ActiveCurrTable.deleteRow(h)
          }
        }
        0 == ActiveCurrTable.rows.length
        && (ActiveCurrTable.parentNode.removeChild(
            ActiveCurrTable), ActiveCurrTable = null)
      }
      f += d;
      h = GetTableSelectionCells()
    }
    ActiveCurrTable && (d = parseIntOr0(ActiveCurrTable.style.width), 0 < d
    && (ActiveCurrTable.style.width = d - f
        + "px"), ActiveCurrTable.style.borderCollapse = e)
  }
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount =
      0;
  ActiveCurrTable ? (doSetCaretPosition(
      ActiveCurrTable.rows[0].cells[0].childNodes[0],
      0), KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell")) : "text" != b
      && (null == b ? "" == _iframeDoc.body.innerHTML
              ? (setBodyDefaultValue(), setFocusToBody()) : (doSetCaretPosition(
                  _iframeDoc.body.firstChild,
                  0), KEDITORTOP.G_CURRKEDITOR._iconEnable("default"))
          : (doSetCaretPosition(b, 1), (b = GetParentbyTagName(b, "table"))
              ? (e = c._config.tableNoActionClass, f = !1, "" != e
              && (f = checkContainClass(b,
                  e)), ActiveCurrTable = b, KEDITORTOP.G_CURRKEDITOR._iconEnable(
                  "focusInCell",
                  f)) : KEDITORTOP.G_CURRKEDITOR._iconEnable("default")))
}

function GetTableSelectionCells(a) {
  null == ActiveCurrTable && (ActiveCurrTable = GetParentbyTagName(a, "table"));
  if (null == ActiveCurrTable) {
    return [];
  }
  a = [];
  for (var c = 0, b = 0; b < ActiveCurrTable.rows.length;
      b++) {
    for (var d = ActiveCurrTable.rows[b], e = 0; e < d.cells.length;
        e++) {
      var f = d.cells[e];
      "true" == f.getAttribute("keditor_select") && (a[c] = f, c += 1)
    }
  }
  return a
}

function GetTableSelectionCellsPosition(a, c) {
  null == ActiveCurrTable && (ActiveCurrTable = GetParentbyTagName(a, "table"));
  if (null == ActiveCurrTable) {
    return [];
  }
  for (var b = {
    arrOutSideLeft: [],
    arrOutSideRight: [],
    arrOutSideTop: [],
    arrOutSideBottom: [],
    arrSelected: [],
    rowCnt: 0,
    colCnt: 0
  }, d, e = [], f = [], g = ActiveCurrTable.rows.length, h = [], m = 0, q = 0;
      q < g; q++) {
    for (var t = ActiveCurrTable.rows[q], f = [], u = 0, v = t.cells.length,
        w = 0; w < v; w++) {
      var x = t.cells[w];
      c ? (f.push(x), b.arrSelected.push(x), d = q, u += 1) : "true"
          == x.getAttribute("keditor_select") &&
          (f.push(x), b.arrSelected.push(x), d = q, u += 1, void 0 == h[m]
          && (h[m] = []), h[m].push(x))
    }
    h[m] && 0 < h[m].length && m++;
    0 < f.length && e.push(f);
    u > b.colCnt && (b.colCnt = u)
  }
  b.virtualSelectionsCellTable = h;
  if (0 == e.length && (null == a || void 0 == a)) {
    return b;
  }
  if (0 == e.length) {
    return b.arrOutSideLeft.push(a), b.arrOutSideRight.push(
        a), b.arrOutSideTop.push(a), b.arrOutSideBottom.push(
        a), b.rowCnt = 1, b.colCnt = 1, b;
  }
  b.arrOutSideTop = e[0].slice();
  f = e.length;
  b.rowCnt = f;
  if (0 < f) {
    for (b.arrOutSideBottom = e[f - 1].slice(), q = t = m = h = g = 0;
        q < f; q++) {
      u = e[q];
      w = u.length;
      x = 0;
      v = w;
      if (0 == g || u[0].parentNode.rowIndex == h + g) {
        b.arrOutSideLeft.push(
            u[0]), x = 1, 1 < u[0].rowSpan && (g = parseIntOr0(
            u[0].rowSpan), h = u[0].parentNode.rowIndex, 1 < g && g + h - 1 >= d
        && b.arrOutSideBottom.push(u[0]));
      }
      if (0 == m || u[w - 1].parentNode.rowIndex == t + m) {
        b.arrOutSideRight.push(
            u[w - 1]), --v, 1 < u[w - 1].rowSpan && (m = parseIntOr0(
            u[w - 1].rowSpan), t = u[w - 1].parentNode.rowIndex), 1 < m && m + t
        - 1
        >= d && b.arrOutSideBottom.push(u[w - 1]);
      }
      u[0].parentNode.rowIndex == h + g && (g = h = 0);
      u[w - 1].parentNode.rowIndex == t + m && (m = t = 0);
      if (q < f - 1) {
        for (w =
            x; w < v; w++) {
          var x = u[w].rowSpan, y = u[w].parentNode.rowIndex;
          1 < x && y + x - 1 >= d && b.arrOutSideBottom.push(u[w])
        }
      }
    }
  }
  return b
}

function CellSelectedCopy(a) {
  var c = {all: !0, selected: !1, cellValue: [], Table: null}, b = l = 0, d,
      e = "", f = 0;
  if (null == a || void 0 == a) {
    return !1;
  }
  for (var g = a.rows.length, h = !1, m = 0; m < g; m++) {
    for (var q = a.rows[m], t = q.cells.length, e = e + "<tr>", u = 0; u < t;
        u++) {
      var v = q.cells[u];
      if ("true" == v.getAttribute("keditor_select")) {
        c.selected = !0;
        void 0 == c.cellValue[b] && (c.cellValue[b] = []);
        d = KEDITORTOP.RAONKEDITOR.browser.ie && 11
        > KEDITORTOP.RAONKEDITOR.browser.ieVersion && "" == v.innerHTML
            ? "&nbsp;" : v.innerHTML;
        c.cellValue[b].push(d);
        e += v.outerHTML;
        try {
          var w = isNaN(parseInt(v.style.width, 10)) ? w = parseInt(v.width, 10)
              : parseInt(v.style.width, 10);
          if (isNaN(w)) {
            var x = getClientRect(v), w = x.right - x.left;
          }
          isNaN(w) && (w = 0)
        } catch (y) {
          w = 0
        }
        0 == h && (f += parseInt(w, 10) + 1)
      } else {
        c.all = !1
      }
    }
    0 != f && (h = !0);
    e += "</tr>";
    void 0 != c.cellValue[b] && (b += 1)
  }
  if (0 == c.all) {
    for (table_tag = KEDITORTOP.RAONKEDITOR.util.replaceAll(
        a.outerHTML, a.innerHTML,
        e), table_tag = KEDITORTOP.RAONKEDITOR.util.replaceAll(table_tag,
        "<tr></tr>", ""), m = document.createElement(
        "div"), m.innerHTML = table_tag, a = m.getElementsByTagName("table")[0],
        a.style.width = f
            + "px", a.style.height = "", a.height = "", f = a.getElementsByTagName(
        "td"), b = f.length, m = 0; m < b; m++) {
      "" != f[m].getAttribute(
          "cellOrgBgColor") && "undefined" != typeof f[m].getAttribute(
          "cellOrgBgColor") ? (f[m].style.backgroundColor = f[m].getAttribute(
              "cellOrgBgColor"), removeAttribute(f[m],
              "cellOrgBgColor"), removeAttribute(f[m], "keditor_select"))
          : f[m].style.backgroundColor = "";
    }
  }
  c.Table = a;
  return c
}

function getTableBorderCells(a) {
  var c = {arrLeft: [], arrTop: [], arrRight: [], arrBottom: []};
  if (null == a || void 0 == a) {
    return c;
  }
  var b = a.tagName.toLowerCase(), d = a;
  "table" != b && (d = GetParentbyTagName(a, "table"));
  if (null == d) {
    return c;
  }
  a = d.rows.length;
  for (var e = getClientRect(d.rows[0].cells[0]), b = 0; b < a;
      b++) {
    for (var f = d.rows[b], g = f.cells.length, h = 0; h < g; h++) {
      var m = f.cells[h], q = getClientRect(m);
      e.left == q.left && c.arrLeft.push(m);
      e.top == q.top && c.arrTop.push(m)
    }
  }
  for (var b = c.arrTop[c.arrTop.length - 1],
      e = getClientRect(c.arrLeft[c.arrLeft.length -
      1]), t = getClientRect(b), b = 0; b < a;
      b++) {
    for (f = d.rows[b], g = f.cells.length, h = 0; h < g;
        h++) {
      m = f.cells[h], q = getClientRect(m), e.bottom == q.bottom
      && c.arrBottom.push(m), t.right == q.right && c.arrRight.push(m);
    }
  }
  return c
}

function getCellNearLeftTop(a, c) {
  var b = {
    arrLeft: [],
    arrRight: [],
    arrTop: [],
    arrBottom: [],
    arrSelected: []
  }, d = [];
  void 0 == c && (d = GetTableSelectionCells(a));
  if (0 == d.length && (null == a || void 0 == a)) {
    return b;
  }
  0 == d.length && d.push(a);
  b.arrSelected = d;
  var e = GetParentbyTagName(d[0], "table");
  getClientRect(e.rows[0].cells[0]);
  for (var f = 0; f < d.length; f++) {
    for (var g = getClientRect(d[f]),
        h = e.rows.length, m = 0; m < h; m++) {
      for (var q = e.rows[m],
          t = q.cells.length, u = 0; u < t; u++) {
        var v = q.cells[u], w = getClientRect(v);
        g.left == w.right && (g.top <=
            w.top && g.bottom >= w.bottom || g.top >= w.top && g.bottom
            <= w.bottom
            && 1 < v.rowSpan) && b.arrLeft.push(v);
        g.right == w.left && (g.top <= w.top && g.bottom >= w.bottom || g.top
            >= w.top && g.bottom <= w.bottom && 1 < v.rowSpan)
        && b.arrRight.push(
            v);
        g.top == w.bottom && (g.left <= w.left && g.right >= w.right || g.left
            >= w.left && g.right <= w.right && 1 < v.colSpan) && b.arrTop.push(
            v);
        g.bottom == w.top && (g.left <= w.left && g.right >= w.right || g.left
            >= w.left && g.right <= w.right && 1 < v.colSpan)
        && b.arrBottom.push(v)
      }
    }
  }
  return b
}

function setTableRowSelect(a) {
  if (null != a && void 0 != a) {
    var c = GetParentbyTagName(a, "table"), b = GetParentbyTagName(a, "tr");
    if (null != c && null != b) {
      for (var c = null, d = 0; d < b.cells.length;
          d++) {
        c = b.cells[d], c.setAttribute("cellOrgBgColor",
            c.style.backgroundColor), c.style.backgroundColor = ColorCellBackColor, c.setAttribute(
            "keditor_select", "true"), setCellDefValue(c);
      }
      DrageEndCell = c;
      b = getMyChildElementNode(
          DrageEndCell.childNodes[DrageEndCell.childNodes.length - 1]);
      doSetCaretPosition(b, 0);
      setMenuIconRealable(DrageEndCell);
      _iframeDoc_MouseUpMenu(null, a)
    }
  }
}

function setTableColumnSelect(a) {
  if (null != a && void 0 != a) {
    var c = GetParentbyTagName(a, "table");
    if (null != c) {
      for (var b = c.rows.length, d = null, e = getClientRect(a), f = 0; f < b;
          f++) {
        for (var g = c.rows[f], h = g.cells.length, m = 0; m < h; m++) {
          cell = g.cells[m];
          var q = getClientRect(cell);
          e.left == q.left && (cell.setAttribute("cellOrgBgColor",
              cell.style.backgroundColor), cell.style.backgroundColor = ColorCellBackColor, cell.setAttribute(
              "keditor_select", "true"), setCellDefValue(cell), d = cell)
        }
      }
      DrageEndCell = d;
      c = getMyChildElementNode(
          DrageEndCell.childNodes[DrageEndCell.childNodes.length -
          1]);
      doSetCaretPosition(c, 0);
      setMenuIconRealable(DrageEndCell);
      _iframeDoc_MouseUpMenu(null, a)
    }
  }
}

function setTableCellSelect(a) {
  if (null != a && void 0 != a) {
    var c = a.tagName.toLowerCase();
    if ("td" != c || "th" != c) {
      a = GetTDTHCell(a);
    }
    null != a && (a.setAttribute("cellOrgBgColor",
        a.style.backgroundColor), a.style.backgroundColor = ColorCellBackColor, a.setAttribute(
        "keditor_select", "true"), setCellDefValue(
        a), DrageEndCell = a, _iframeDoc_MouseUpMenu(null, a))
  }
}

function setTableAllSelect(a) {
  if (null != a && void 0 != a) {
    var c = GetParentbyTagName(a, "table");
    if (null != c) {
      for (var b = c.rows.length, d = null, e = 0; e < b;
          e++) {
        for (var f = c.rows[e], g = f.cells.length, h = 0; h < g;
            h++) {
          d = f.cells[h], d.setAttribute("cellOrgBgColor",
              d.style.backgroundColor), d.style.backgroundColor = ColorCellBackColor, d.setAttribute(
              "keditor_select", "true"), setCellDefValue(d);
        }
      }
      DrageEndCell = d;
      c = getMyChildElementNode(
          DrageEndCell.childNodes[DrageEndCell.childNodes.length - 1]);
      doSetCaretPosition(c, 1);
      setMenuIconRealable(DrageEndCell);
      _iframeDoc_MouseUpMenu(null, a)
    }
  }
}

function setTableWidthRemove() {
  for (var a = GetTableSelectionCells(), c = 0; c < a.length; c++) {
    var b = a[c];
    removeAttribute(b, "width");
    removeAttribute(b.style, "width")
  }
}

function setTableHeightRemove() {
  for (var a = GetTableSelectionCells(), c = a.length, b = 0; b < c; b++) {
    var d = a[b];
    removeAttribute(d, "height");
    removeAttribute(d.style, "height")
  }
}

function setTableWidthHeightRemove() {
  for (var a = GetTableSelectionCells(), c = a.length, b = 0; b < c; b++) {
    var d = a[b];
    removeAttribute(d, "width");
    removeAttribute(d.style, "width");
    removeAttribute(d, "height");
    removeAttribute(d.style, "height")
  }
}

function setTableWidthSame() {
  var a = GetTableSelectionCells();
  if (0 != a.length) {
    var c = GetParentbyTagName(a[0], "table");
    if (null != c) {
      G_ResizeFixedTable.setSameWidth();
      for (var b = GetTableSelectionCellsPosition(a[0],
          !1).virtualSelectionsCellTable, d = 0, e = 0, f = 0; f < b.length;
          f++) {
        var g = b[f].length;
        g > e && (e = g, d = f)
      }
      for (var g = 0, e = b[d], h = e.length, f = 0; f < h;
          f++) {
        d = 0, b = e[f], "" != b.style.width && -1
        < b.style.width.indexOf("%") ? (d = getClientRect(b), d = d.right
            - d.left) : d = parseIntOr0(b.style.width), 0 == d
        && (d = parseIntOr0(b.width)), 0 ==
        d && (d = getClientRect(b), d = d.right - d.left), g += d;
      }
      for (var e = c.rows.length, g = Math.ceil(g / h), h = [], m = 0;
          m < a.length; m++) {
        for (d = getClientRect(a[m]), f = 0; f < e;
            f++) {
          for (var q = c.rows[f], t = q.cells.length, u = 0; u < t; u++) {
            var b = q.cells[u], v = getClientRect(b);
            d.left == v.left && d.right == v.right && h.push(b)
          }
        }
      }
      a = h.length;
      for (c = 0; c < a; c++) {
        b = h[c], b.style.width = g
            + "px", removeAttribute(b, "width")
      }
    }
  }
}

function setTableHeightSame() {
  var a = GetTableSelectionCells(), c = a.length;
  if (0 != c) {
    for (var b = [], d, e = 0; e < c; e++) {
      d ? d == getClientRect(a[e]).left
          && b.push(a[e]) : (d = getClientRect(a[e]).left, b.push(a[e]));
    }
    var a = b, e = c = a.length, f = GetParentbyTagName(a[0], "table");
    if (null != f) {
      for (var g = 0, h = b = 0; h < c; h++) {
        var m = a[h], g = g + getCellSize(m).height;
        if (1 < m.rowSpan) {
          var q = parseInt(m.rowSpan, 10), e = e + (q - 1)
        }
      }
      q = f.rows.length;
      d = 0;
      d = parseInt(g / e, 10);
      g = [];
      for (h = 0; h < c; h++) {
        for (var t = getClientRect(a[h]), e = 0; e < q;
            e++) {
          for (var u = f.rows[e],
              v = u.cells.length, w = 0; w < v; w++) {
            var m = u.cells[w], x = getClientRect(m);
            1 < parseIntOr0(a[h].rowSpan) ? t.top <= x.top && t.bottom
                >= x.bottom
                && g.push(m) : 1 < parseIntOr0(m.rowSpan) || t.top == x.top
                && t.bottom == x.bottom && g.push(m)
          }
        }
      }
      a = g.length;
      for (e = 0; e < a; e++) {
        q = (q = parseIntOr0(g[e].rowSpan)) ? q
            : 1, g[e].style.height = d * q + "px", removeAttribute(m, "height");
      }
      c = !1;
      for (e = 0; e < a; e++) {
        f = getCellSize(
            g[e]).height, q = (q = parseIntOr0(g[e].rowSpan)) ? q : 1, f /= q, d
        < f && (b = f, c = !0);
      }
      if (c) {
        for (e = 0; e < a; e++) {
          q = (q = parseIntOr0(g[e].rowSpan)) ? q
              : 1, g[e].style.height =
              b * q + "px", removeAttribute(m, "height")
        }
      }
    }
  }
}

function setTableRowClone(a) {
  null != a && void 0 != a && (GetTDTHCell(a), 0
  < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), InsertRowUpDown(!1,
      !0), KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo(), KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0)
}

function command_convertTableToText(a, c) {
  keditor_src_init(c._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  if (null == ActiveCurrTable) {
    return 0;
  }
  0 < KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount
  && KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  for (var b = "", d = ActiveCurrTable, e = d.rows.length, f = 0; f < e;
      f++) {
    for (var g = d.rows[f], h = g.cells.length, m = 0; m < h;
        m++) {
      var q = g.cells[m], t = "",
          t = "innerText" in q ? q.innerText : "textContent" in q
              ? q.textContent
              : "", b = b + t;
    }
  }
  d = ActiveCurrTable.parentNode;
  d.removeChild(ActiveCurrTable);
  ActiveCurrTable = null;
  b = b.replace("&nbsp;", "");
  e = _iframeDoc.createElement("p");
  e.innerHTML = b;
  d.appendChild(e);
  KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
  KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
}

function _iframeDoc_MouseUpMenu(a, c) {
  var b = getEditrFromEvent(a);
  setKEDITORWINDOC(b);
  if (!isViewMode(b)) {
    var d = null;
    try {
      var e = a ? a : _iframeWin.event,
          d = void 0 != c || null != c ? c : e.target ? e.target : e.srcElement;
      if (0 == checkContentEditable(b,
          d)) {
        KEDITORTOP.RAONKEDITOR.util.cancelEvent(a), b._iconEnable(
            "editableFalse");
      } else {
        KEDITORTOP.G_CURRKEDITOR.keditor_dragresize
        && KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem
        && (d = KEDITORTOP.G_CURRKEDITOR.keditor_dragresize.G_keditorResize_elem);
        if ("1" != KEDITORTOP.G_CURRKEDITOR._config.formMode &&
            "1" == KEDITORTOP.G_CURRKEDITOR._config.userTableLock.use) {
          var f = GetTDTHCell(d), g;
          f && (g = GetParentbyTagName(d, "table"));
          var h = KEDITORTOP.G_CURRKEDITOR._config.userTableLock.defaultTableLockMode;
          g && g.getAttribute("lock_mode") && "" != g.getAttribute("lock_mode")
          && (h = g.getAttribute("lock_mode"));
          b = !0;
          "1" == h && (b = !1);
          if (f) {
            if (b && checkLockAttr(g)) {
              if (currEditor.lastElemForLock) {
                setFocusForLock(
                    currEditor.lastElemForLock);
              } else {
                var m = findNoLockElem(g);
                m ? setFocusForLock(m) : (window.focus(), document.body.focus())
              }
              KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              return
            }
            if (checkLockAttr(f, !b)) {
              currEditor.lastElemForLock ? setFocusForLock(
                  currEditor.lastElemForLock) : setFocusForLock(
                  findNoLockCell(g));
              KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
              KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
              return
            }
          }
        }
        var q = d.tagName.toLowerCase();
        if (q && ("textarea" == q || "input" == q || "select" == q) && "1"
            != KEDITORTOP.G_CURRKEDITOR._config.formMode) {
          return !1;
        }
        if (q && "img" == q) {
          var t = d.getAttribute("keditorcustomdata");
          if (null != t && void 0 != t && "hidden" == getKEditorCustomData(
              t).type) {
            return !1
          }
        }
        var u =
            function () {
              var a = getFirstRange(), b = a.range,
                  c = GetTableSelectionCells(), e = !1,
                  f = KEDITORTOP.G_CURRKEDITOR._config.tableNoActionClass;
              if (0 < c.length) {
                if ("" != f && (a = GetParentbyTagName(c[0],
                    "table"), e = checkContainClass(a, f)), 1
                == c.length) {
                  KEDITORTOP.G_CURRKEDITOR._iconEnable(
                      "selectedSingleCell", e);
                } else {
                  f = "selectedMultiCell";
                  for (a = 0; a < c.length - 1; a++) {
                    if (c[a].tagName != c[a
                    + 1].tagName) {
                      f += "_noMerge";
                      break
                    }
                  }
                  KEDITORTOP.G_CURRKEDITOR._iconEnable(f, e)
                }
              } else {
                var c = GetTDTHCell(b.startContainer),
                    g = GetParentbyTagName(d, "div");
                if (g && "keditor_Page_Break" == g.className && b.startContainer
                    == b.endContainer) {
                  a.sel.removeAllRanges(), b.selectNode(
                      g), a.sel.addRange(
                      b), KEDITORTOP.G_CURRKEDITOR._iconEnable(
                      "focusPageBreak");
                } else if ("table" == q) {
                  "" != f
                  && (e = checkContainClass(d,
                      f)), KEDITORTOP.G_CURRKEDITOR._iconEnable("focusTable",
                      e);
                } else if (b && 0 == b.collapsed && "" != b.text()) {
                  var h;
                  "body" == q && 1 == b.startContainer.nodeType
                  && (h = getSelectionTable(KEDITORTOP.G_CURRKEDITOR));
                  h ? ("" != f && (e = checkContainClass(h,
                      f)), KEDITORTOP.G_CURRKEDITOR._iconEnable("focusTable",
                      e)) : c ? KEDITORTOP.G_CURRKEDITOR._iconEnable(
                      "cellSelectText") : KEDITORTOP.G_CURRKEDITOR._iconEnable(
                      "selectArea")
                } else if (h = getSelectionTable(KEDITORTOP.G_CURRKEDITOR)) {
                  ""
                  != f && (e = checkContainClass(h,
                      f)), KEDITORTOP.G_CURRKEDITOR._iconEnable("focusTable",
                      e);
                } else if (c = GetTDTHCell(d), "img"
                == q) {
                  KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = d, GetParentbyTagName(
                      d, "figure") ? KEDITORTOP.G_CURRKEDITOR._iconEnable(
                      "focusFigure") : KEDITORTOP.G_CURRKEDITOR._iconEnable(
                      "focusImage");
                } else if (c) {
                  if ("1" != KEDITORTOP.G_CURRKEDITOR._config.formMode ||
                      "input" != q && "textarea" != q && "select"
                      != q) {
                    a = GetParentbyTagName(c, "table"), "" != f
                    && (e = checkContainClass(a, f)), checkLockAttr(a, !0)
                    && "1"
                    != KEDITORTOP.G_CURRKEDITOR._config.formMode
                        ? KEDITORTOP.G_CURRKEDITOR._iconEnable(
                            "focusInCellLockTable", e)
                        : KEDITORTOP.G_CURRKEDITOR._iconEnable("focusInCell",
                            e), KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT = c
                  }
                } else {
                  "a" != q && "table" != q && "video" != q && ("embed" == q
                      ? KEDITORTOP.G_CURRKEDITOR._iconEnable("focusEmbed")
                      : "span" == q && "raon_placeholder" == d.className
                          ? KEDITORTOP.G_CURRKEDITOR._iconEnable("placeholder")
                          :
                          KEDITORTOP.G_CURRKEDITOR._iconEnable("default"))
                }
              }
            };
        0 == KEDITORTOP.G_CURRKEDITOR._config.editorBodyEditable
            ? (f = d, KEDITORTOP.RAONKEDITOR.browser.ie && 7
            < KEDITORTOP.RAONKEDITOR.browser.ieVersion
            && (f = getFirstRange().range.startContainer, 3 == f.nodeType
            && (f = f.parentNode)), 0 == f.isContentEditable
                ? KEDITORTOP.G_CURRKEDITOR._iconEnable("editableFalse") : "2"
                == KEDITORTOP.G_CURRKEDITOR._config.toolBarEnableDisableMode ? u()
                    : setTimeout(function () {
                      u()
                    }, 10)) : "2"
            == KEDITORTOP.G_CURRKEDITOR._config.toolBarEnableDisableMode ?
                u() : setTimeout(function () {
                  u()
                }, 10)
      }
    } catch (v) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(v)
    }
  }
}

function _iframeBody_Select(a) {
  _iframeDoc_MouseUpMenu(a)
}

function setGeckoCellCaretPosistion(a, c) {
  if (0 < a.childNodes.length) {
    var b = a.childNodes[a.childNodes.length - 1];
    b.childNodes ? c ? doSetCaretPosition(b.childNodes[0], 1)
        : doSetCaretPosition(b.childNodes[0], 0) : doSetCaretPosition(b, 0)
  } else {
    doSetCaretPosition(a, 0)
  }
}

function setTableShortcut(a) {
  var c = "which" in a ? a.which : a.keyCode, b = !1, d = getEditrFromEvent(a);
  if (null == d) {
    return b;
  }
  try {
    if (a.ctrlKey) {
      a = null;
      var e = getFirstRange().range;
      e && 1 == e.collapsed && e.startContainer && (a = getMyElementNode(
          e.startContainer));
      if (a) {
        if (a = GetTDTHCell(a)) {
          switch (ActiveCurrTable = GetParentbyTagName(a,
              "table"), c) {
            case 116:
              ClearDraggingTableCellSelected();
              d._editorCommands(d.ID, "table_select_cell");
              b = !0;
              break;
            case 117:
              ClearDraggingTableCellSelected();
              d._editorCommands(d.ID, "table_select_row");
              b = !0;
              break;
            case 118:
              ClearDraggingTableCellSelected();
              d._editorCommands(d.ID, "table_select_column");
              b = !0;
              break;
            case 119:
              ClearDraggingTableCellSelected();
              d._editorCommands(d.ID, "table_select_all");
              b = !0;
              break;
            case 120:
              d._editorCommands(d.ID, "merge_cell");
              b = !0;
              break;
            case 121:
              d._editorCommands(d.ID, "table_same_width");
              b = !0;
              break;
            case 122:
              d._editorCommands(d.ID, "table_same_height"), b = !0
          }
        }
        b && _iframeDoc_MouseUpMenu(null, a)
      }
    }
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
  return b
}

function getElemAdjustWidthHeight(a) {
  var c = {width: 0, height: 0};
  if (a.style.width && "" != a.style.width) {
    if (-1 < a.style.width.indexOf("%")
        || -1 < a.style.width.indexOf("in")) {
      var b = getClientRect(a);
      c.width = b.right - b.left
    } else {
      c.width = parseInt(a.style.width);
    }
  } else {
    a.width && "" != a.width
        ? c.width = parseInt(a.width) : (b = getClientRect(a), c.width = b.right
            - b.left);
  }
  if (a.style.height && "" != a.style.height) {
    if (b = getClientRect(a), -1
    < a.style.height.indexOf("%") || -1 < a.style.width.indexOf(
        "in")) {
      c.height = b.bottom - b.top;
    } else {
      c.height =
          parseInt(a.style.height);
      try {
        20 < b.bottom - b.top - c.height && (c.height = b.bottom - b.top)
      } catch (d) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(d)
      }
    }
  } else {
    a.height && "" != a.height ? c.height = parseInt(a.height)
        : (b = getClientRect(a), c.height = b.bottom - b.top);
  }
  return c
}

function setCopyAllObjectAtributes(a, c, b) {
  try {
    for (var d = a.attributes.length, e = 0; e < d; e++) {
      var f = a.attributes[e];
      f.specified && "id" != f.name && ("style" == f.name
          ? c.style.cssText = a.style.cssText : "class" == f.name
              ? c.className = f.value : c.setAttribute(f.name, f.value))
    }
    1 == b && (c.innerHTML = a.innerHTML)
  } catch (g) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(g)
  }
}

function setCopyAllObjectAtributesForInput(a, c, b) {
  try {
    for (var d = a.attributes.length, e = 0; e < d; e++) {
      var f = a.attributes[e];
      f.specified && "type" != name && ("style" == f.name
          ? c.style.cssText = a.style.cssText : "type" != f.name && ("class"
      == f.name ? c.className = f.value : c.setAttribute(f.name, f.value)))
    }
    1 == b && (c.innerHTML = a.innerHTML)
  } catch (g) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(g)
  }
}

function getTopVerticalCells(a) {
  var c = GetParentbyTagName(a, "table");
  if (GetParentbyTagName(a, "tr")) {
    var b = [];
    a = getClientRect(a);
    for (var d = 0; d < c.rows.length; d++) {
      for (var e = c.rows[d], f = 0;
          f < e.cells.length; f++) {
        var g = e.cells[f], h = getClientRect(g);
        a.top > h.top && (a.left == h.left ? b.push(g) : (a.top >= h.bottom
                || a.bottom <= h.top) && .1 < h.right - a.left && .1 < a.left
            - h.left
            && b.push(g))
      }
    }
    return b
  }
}

function getLeftHorizontalCells(a) {
  var c = GetParentbyTagName(a, "table");
  if (GetParentbyTagName(a, "tr")) {
    var b = [], d = [];
    a = getClientRect(a);
    for (var e = 0; e < c.rows.length; e++) {
      for (var f = c.rows[e], g = 0;
          g < f.cells.length; g++) {
        var h = f.cells[g], m = getClientRect(h);
        if (a.left > m.left && (a.top == m.top || m.top < a.top && m.bottom
            > a.top)) {
          var q = {};
          q.left = m.left;
          q.cell = h;
          d.push(q)
        }
      }
    }
    d.sort(function (a, b) {
      return a.left - b.left
    });
    for (e = 0; e < d.length; e++) {
      b.push(d[e].cell);
    }
    return b
  }
}

function getHorizontalCells(a, c) {
  var b = [], d = GetParentbyTagName(a, "table"),
      e = GetParentbyTagName(a, "tr");
  if (c) {
    for (var f = 0; f < d.rows.length; f++) {
      for (var g = d.rows[f], h = 0;
          h < g.cells.length; h++) {
        var m = g.cells[h];
        e.rowIndex == g.rowIndex ? b.push(m) : 1 < m.rowSpan ? e.rowIndex
        > g.rowIndex && e.rowIndex < g.rowIndex + m.rowSpan ? b.push(m) : 1
            < a.rowSpan && (e.rowIndex > g.rowIndex && e.rowIndex < g.rowIndex
            + m.rowSpan ? b.push(m) : e.rowIndex < g.rowIndex && e.rowIndex
                + a.rowSpan > g.rowIndex && b.push(m)) : 1 < a.rowSpan
            && e.rowIndex
            < g.rowIndex && e.rowIndex +
            a.rowSpan > g.rowIndex && b.push(m)
      }
    }
  } else {
    b = e.cells;
  }
  return b
}

function getCellSize(a) {
  var c = {height: 0};
  if (a) {
    var b = getClientRect(a), b = Math.round(b.bottom - b.top);
    if (parseIntOr0(a.style.height) >= b) {
      return c.height = parseIntOr0(
          a.style.height), c;
    }
    var d = parseIntOr0(a.style.paddingTop) + parseIntOr0(
            a.style.paddingBottom), e = 0, f = GetParentbyTagName(a, "table"),
        g = "collapse" == f.style.borderCollapse, h = getCellNearLeftTop(a, !0),
        m = function (a, b) {
          var c = a.parentElement, d = b.parentElement;
          return c.rowIndex == d.rowIndex ? 0 : c.rowIndex > d.rowIndex ? 1 : -1
        }, q = function (a, b) {
          var c = a.parentElement,
              d = b.parentElement;
          if (1 < a.rowSpan) {
            return 1 < b.rowSpan ? c.rowIndex + a.rowSpan
            == d.rowIndex + b.rowSpan ? 0 : c.rowIndex + a.rowSpan > d.rowIndex
            + b.rowSpan ? 1 : -1 : c.rowIndex + a.rowSpan == d.rowIndex + 1 ? 0
                : c.rowIndex + a.rowSpan > d.rowIndex + 1 ? 1 : -1;
          }
          if (1 < b.rowSpan) {
            return c.rowIndex + 1 == d.rowIndex + b.rowSpan ? 0
                : c.rowIndex + 1 > d.rowIndex + b.rowSpan ? 1 : -1;
          }
          if (c.rowIndex == d.rowIndex) {
            return 0;
          }
          if (c.rowIndex > d.rowIndex) {
            return 1;
          }
          if (c.rowIndex > d.rowIndex) {
            return -1
          }
        }, t = 0;
    if (h.arrTop[0]) {
      if (g) {
        for (var u = h.arrTop[0], v = getHorizontalCells(u, !0), w = 0; w <
        v.length; w++) {
          if (0 === q(u, v[w])) {
            var x = parseIntOr0(
                v[w].style.borderBottomWidth), t = t > x ? t : x;
          }
        }
      }
      v = getHorizontalCells(a);
      w = 0
    } else {
      g && (t = parseIntOr0(f.style.borderTopWidth));
      var v = getHorizontalCells(a), w = 0
    }
    for (; w < v.length; w++) {
      u = parseIntOr0(v[w].style.borderTopWidth), t = t
      > u ? t : u;
    }
    u = 0;
    if (h.arrBottom[0]) {
      v = getHorizontalCells(a, !0);
      for (w = 0; w < v.length; w++) {
        0 === q(a, v[w]) && (x = parseIntOr0(
            v[w].style.borderBottomWidth), u = u > x ? u : x);
      }
      if (g) {
        for (h = getHorizontalCells(h.arrBottom[0]), w = 0; w < h.length;
            w++) {
          v = parseIntOr0(h[w].style.borderTopWidth),
              u = u > v ? u : v
        }
      }
    } else {
      for (g && (u = parseIntOr0(
          f.style.borderBottomWidth)), v = getHorizontalCells(a, !0), w = 0;
          w < v.length; w++) {
        0 === q(a, v[w]) && (x = parseIntOr0(
            v[w].style.borderBottomWidth), u = u > x ? u : x);
      }
    }
    v = h = 0;
    if (1 < parseIntOr0(a.rowSpan)) {
      for (var x = {}, y = {}, z = getHorizontalCells(a, !0), w = 0;
          w < z.length; w++) {
        var A = z[w].parentElement.rowIndex;
        if (-1 === m(a, z[w])) {
          var B = parseIntOr0(z[w].style.borderTopWidth),
              C = parseIntOr0(z[w].style.paddingTop), D = "posTop" + A;
          x[D] ? (x[D] = x[D] > B ? x[D] : B, y[D] = y[D] > C ? y[D] : C)
              : (x[D] = B, y[D] = C)
        }
        1 === q(a, z[w]) &&
        (B = parseIntOr0(z[w].style.borderBottomWidth), C = parseIntOr0(
            z[w].style.paddingBottom), D = "pos" + (g ? "Top" + (A + 1)
            : "Bottom" + A), x[D] ? (x[D] = x[D] > B ? x[D] : B, y[D] = y[D] > C
            ? y[D] : C) : (x[D] = B, y[D] = C))
      }
      for (D in x) {
        h += x[D], v += y[D];
      }
      g || (v += parseIntOr0(f.style.borderSpacing))
    }
    g && (t = Math.ceil(t / 2), u = Math.floor(u / 2));
    e = e + t + u;
    e += h;
    c.height = b - e - (d + v)
  }
  return c
}

function command_AddTableLeftAndRight(a, c, b) {
  keditor_src_init(a._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  var d = -1;
  a = -1;
  for (var e = c.currTableNode.rows.length, f = 0; f < e; f++) {
    for (var g = c.currTableNode.rows[f].cells.length, h = 0; h < g;
        h++) {
      if (c.currTableNode.rows[f].cells[h] == c.currCellNode) {
        d = f;
        a = h;
        break
      }
    }
    if (-1 < d) {
      break
    }
  }
  if (-1 < d && -1 < a) {
    "right" == b && (a += 1);
    d = 0;
    e = [];
    for (f = 0; f < c.tableNode.rows.length; f++) {
      e.push(
          c.tableNode.rows[f].cells);
    }
    for (f = e.length - 1; 0 <= f; f--) {
      for (g = e[f].length, h = g - 1; 0 <= h;
          h--) {
        0 == f &&
        (d += KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
            e[f][0].style.width)), g = c.currTableNode.rows[f], "right" == b
        && 0
        == !!g.cells[a] ? g.appendChild(e[f][h]) : g.insertBefore(e[f][h],
            g.cells[a]);
      }
    }
    b = c.currTableNode.style.width;
    -1 < b.indexOf("px") && (b = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
        b), c.currTableNode.style.width = b + d + "px");
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
  }
}

function command_AddTableUpAndDown(a, c, b) {
  keditor_src_init(a._EDITOR.design);
  restoreSelection();
  setFocusToBody();
  a = -1;
  for (var d = c.currTableNode.rows.length, e = 0; e < d; e++) {
    for (var f = c.currTableNode.rows[e].cells.length, g = 0; g < f;
        g++) {
      if (c.currTableNode.rows[e].cells[g] == c.currCellNode) {
        a = e;
        break
      }
    }
    if (-1 < a) {
      break
    }
  }
  if (-1 < a) {
    "down" == b && (a += 1);
    d = c.tableNode.getElementsByTagName("tr");
    if ("down" == b && 0 == !!c.currTableNode.rows[a]) {
      for (;
          0 < d.length;) {
        c.currTableNode.rows[a - 1].parentNode.appendChild(
            d[0]);
      }
    } else {
      for (;
          0 < d.length;) {
        c.currTableNode.rows[a].parentNode.insertBefore(
            d[d.length -
            1], c.currTableNode.rows[a]);
      }
    }
    KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
    KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount = 0
  }
}

var dragMove = {
  dragStart: !1,
  dragData: null,
  dragRange: null,
  dragTarget: null,
  bodyRect: null,
  backX: 0,
  backY: 0,
  dragCursorOffsetX: 0,
  dragCursorOffsetY: 0,
  dragDummy: null,
  dragDummyBack: null,
  dragCaretValid: !1,
  dragCaret: null,
  dragEndContainer: null,
  ieButton: 0
};

function dragMoveStart(a, c) {
  if (!(c || "0" != KEDITORTOP.G_CURRKEDITOR._config.dragMove
      && KEDITORTOP.RAONKEDITOR.browser.chrome)) {
    return !0;
  }
  var b = _iframeDoc.body.getAttribute("contenteditable");
  if ("" != b && "true" != b) {
    return KEDITORTOP.RAONKEDITOR.util.stopEvent(
        a), KEDITORTOP.RAONKEDITOR.util.cancelEvent(a), !1;
  }
  Mouse_Status = 0;
  b = getFirstRange();
  b = b.range;
  if (c
      || !b.collapsed) {
    return _iframeDoc.body.contentEditable = "false", _iframeDoc.body.style.cursor = "move", _iframeDoc.documentElement.style.cursor = "move", hideResizeBar(),
        dragMove.dragStart = !0, c ? (dragMove.dragTarget = c, b.selectNode(c))
        : dragMove.target = null, dragMove.dragRange = b, dragMove.dragData = b.toHtml(), createDragDummy(
        a), KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "selectstart",
        dragMoveSelect), KEDITORTOP.RAONKEDITOR.browser.ie
        ? (KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc, "mousemove",
            dragStop), KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc,
            "mouseup",
            dragStop)) : KEDITORTOP.RAONKEDITOR.util.addEvent(_iframeDoc,
            "mousemove", dragMoving), KEDITORTOP.RAONKEDITOR.util.addEvent(
        document,
        "mousemove", dragStop), KEDITORTOP.RAONKEDITOR.util.addEvent(
        KEDITORTOP.KEDITORDOC, "mousemove",
        dragStop), dragMove.bodyRect = _iframeDoc.body.getBoundingClientRect(), dragMove.dragCursorOffsetX = _iframeDoc.defaultView.frameElement.offsetLeft, dragMove.dragCursorOffsetY = _iframeDoc.defaultView.frameElement.offsetTop, KEDITORTOP.RAONKEDITOR.browser.ie
    && (dragMove.ieButton = 1), KEDITORTOP.RAONKEDITOR.util.stopEvent(
        a), KEDITORTOP.RAONKEDITOR.util.cancelEvent(a), !1
  }
}

function dragMoveSelect(a) {
  KEDITORTOP.RAONKEDITOR.util.stopEvent(a);
  KEDITORTOP.RAONKEDITOR.util.cancelEvent(a)
}

function createDragDummy(a) {
  KEDITORTOP.RAONKEDITOR.browser.ie || (dragMove.dragDummyBack
      ? dragMove.dragDummyBack.style.display = ""
      : (dragMove.dragDummyBack = document.createElement(
          "div"), dragMove.dragDummyBack.id = "drag_dummy_back", dragMove.dragDummyBack.style.position = "absolute", dragMove.dragDummyBack.style.top = "0px", dragMove.dragDummyBack.style.left = "0px", dragMove.dragDummyBack.style.width = "100%", dragMove.dragDummyBack.style.height = "100%", dragMove.dragDummyBack.style.zIndex = "10100", KEDITORTOP.RAONKEDITOR.util.addEvent(
          dragMove.dragDummyBack,
          "mousemove", dragStop), dragMove.dragDummy = document.createElement(
          "div"), dragMove.dragDummy.style.position = "absolute", dragMove.dragDummy.style.border = "0px solid black", dragMove.dragDummy.style.width = "20px", dragMove.dragDummy.style.height = "10px", dragMove.dragDummyBack.appendChild(
          dragMove.dragDummy), document.body.appendChild(
          dragMove.dragDummyBack)))
}

function createSelectionFromPoint(a, c) {
  var b = _iframeDoc, d = null;
  if ("undefined" != typeof b.caretPositionFromPoint) {
    if (d = b.caretPositionFromPoint(a, c), "object" == typeof d && "undefined"
    == typeof d.startContainer && "undefined" == typeof d.endContainer) {
      var e = b.caretPositionFromPoint(a, c),
          f = b.caretPositionFromPoint(a, c), d = b.createRange();
      d.setStart(e.offsetNode, e.offset);
      d.setEnd(f.offsetNode, f.offset)
    }
  } else {
    "undefined" != typeof b.caretRangeFromPoint
    && (d = b.caretRangeFromPoint(a, c));
  }
  d && dragMove.dragRange.containsNode(d.startContainer) &&
  (d = null);
  if (null !== d && "undefined"
      != typeof window.getSelection) {
    b = getFirstRange().sel, b.removeAllRanges(), b.addRange(
        d);
  } else if ("undefined" != typeof b.body.createTextRange) {
    e = b.body.createTextRange();
    try {
      var g = dragMove.bodyRect.left, h = dragMove.bodyRect.right,
          m = dragMove.bodyRect.top,
          q = b.body.lastElementChild.getBoundingClientRect().bottom;
      a < g ? a = g + 1 : a > h && (a = h - 1);
      c < m ? c = m + 1 : c > q && (c = q - 1);
      e.moveToPoint(a, c);
      e.select();
      var t = getFirstRange(), d = t.range;
      dragMove.dragRange.containsNode(d.startContainer)
          ? (t.sel.removeAllRanges(),
              d = null) : d.collapse(!1)
    } catch (u) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(u)
    }
  }
  return d
}

function dragMoving(a) {
  if (dragMove.dragStart) {
    var c = !0, b = a.target ? a.target : a.srcElement;
    if (b == dragMove.dragDummyBack || b == dragMove.dragDummy) {
      var d = _iframeWin.frameElement.getBoundingClientRect();
      dragMove.backX = d.left;
      dragMove.backY = d.top
    } else {
      b.ownerDocument == _iframeDoc
          ? (dragMove.backX = 0, dragMove.backY = 0) : (dragMove.dragDummy
          && (dragMove.dragDummy.style.display = "none"), c = !1);
    }
    d = a.clientX - dragMove.backX;
    a = a.clientY - dragMove.backY;
    dragMove.dragCaret && dragMove.dragCaret.parentNode && b
    != dragMove.dragCaret.parentNode &&
    dragMove.dragCaret.parentNode.removeChild(dragMove.dragCaret);
    if (c = c && createSelectionFromPoint(d,
        a)) {
      if (targetNode = c.startContainer, offset = c.startOffset, targetNode
      != dragMove.dragCaret && "html" != targetNode.nodeName.toLowerCase() && (3
          != targetNode.nodeType || "false"
          != targetNode.parentNode.getAttribute(
              "contenteditable"))) {
        if (targetNode && 3 != targetNode.nodeType
            && targetNode.childNodes[offset] && 3
            == targetNode.childNodes[offset].nodeType
            && targetNode.childNodes[offset].wholeText.charAt(0) == unescape(
                "%uFEFF")) {
          return;
        }
        c.setStart(targetNode, offset);
        c.collapse(!1);
        null == dragMove.dragCaret
        && (dragMove.dragCaret = _iframeDoc.createElement(
            "span"), dragMove.dragCaret.style.display = "inline-block", dragMove.dragCaret.style.width = "0px", dragMove.dragCaret.style.height = "1em", dragMove.dragCaret.style.borderLeft = "1px solid black", dragMove.dragCaret.style.marginLeft = "-0.5px");
        c.insertNode(dragMove.dragCaret);
        c = targetNode.parentNode.childNodes;
        for (b = c.length - 1; -1 < b; b--) {
          var e = c[b];
          3 == e.nodeType && "" == e.nodeValue
          && dragMove.dragRange.startContainer !=
          e && dragMove.dragEndContainer != e && e.parentNode.removeChild(e)
        }
      }
    }
    dragMove.dragCaret && dragMove.dragCaret.parentNode
        ? (dragMove.dragCaretValid = !0, _iframeDoc.body.style.cursor = "move", _iframeDoc.documentElement.style.cursor = "move")
        : (dragMove.dragCaretValid = !1, _iframeDoc.body.style.cursor = "no-drop", _iframeDoc.documentElement.style.cursor = "no-drop");
    null != dragMove.dragDummy && (dragMove.dragDummy.style.left = d - 10
        + dragMove.dragCursorOffsetX + "px", dragMove.dragDummy.style.top = a
        - 5 + dragMove.dragCursorOffsetY + "px",
        dragMove.dragDummy.style.display = "")
  }
}

function dragEnd(a) {
  if (KEDITORTOP.RAONKEDITOR.browser.ie || dragMove.dragCaret
      && dragMove.dragCaret.parentNode) {
    var c = getFirstRange();
    a = c.sel;
    var b = c.range;
    if ((KEDITORTOP.RAONKEDITOR.browser.ie || !b.containsNode(
        dragMove.dragCaret)) && dragMove.dragCaret && dragMove.dragCaretValid) {
      KEDITORTOP.RAONKEDITOR.browser.ie ? (b.selectNode(
              dragMove.dragTarget), b.deleteContents(), b.collapseBefore(
              dragMove.dragCaret), dragMove.dragCaret.parentNode.removeChild(
              dragMove.dragCaret))
          : (dragMove.dragRange.deleteContents(), b.deleteContents(),
          dragMove.dragCaret.parentNode && (b.collapseAfter(
              dragMove.dragCaret), dragMove.dragCaret.parentNode.removeChild(
              dragMove.dragCaret)));
      dragMove.dragCaret = null;
      a.focusNode.parentNode && (c = a.focusNode.parentNode, c.nextSibling && ""
      == c.nextSibling.innerHTML && c.nextSibling.parentNode
      && c.nextSibling.parentNode.removeChild(c.nextSibling), "" == c.innerHTML
      && c.parentNode && c.parentNode.removeChild(c));
      dragMove.dragData = dragMove.dragData.replace(/<p><\/p>/gi, "");
      a.removeAllRanges();
      a.addRange(b);
      var d = '<span name="raon_drag_mark"></span>' +
          dragMove.dragData + '<span name="raon_drag_mark"></span>';
      pasteHtmlAtCaretHuge(d, !1, !0, !1, !0);
      c = _iframeDoc.getElementsByName("raon_drag_mark");
      if (1 < c.length) {
        if (KEDITORTOP.RAONKEDITOR.browser.ie) {
          if (-1 < d.indexOf("<table")) {
            try {
              b.setStart(
                  c[0].parentNode.nextSibling.rows[0].cells[0].childNodes[0],
                  0)
            } catch (e) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(e)
            }
          } else {
            b.setStartBefore(c[1]);
          }
          b.collapse(!0)
        } else {
          d = _iframeDoc.createTextNode(""), c[0].parentNode.insertBefore(d,
              c[0]),
              b.setStart(d,
                  0), dragMove.dragEndContainer = _iframeDoc.createTextNode(
              ""), c[1].parentNode.insertBefore(dragMove.dragEndContainer,
              c[1]), b.setEnd(dragMove.dragEndContainer, 0);
        }
      }
      a.removeAllRanges();
      a.addRange(b);
      _iframeDoc.body.focus();
      for (a = c.length - 1; -1 < a; a--) {
        b = c[a].parentNode, b.removeChild(
            c[a]), (0 == b.childNodes.length || 1 == b.childNodes.length && 3
            == b.childNodes[0].nodeType && "" == b.childNodes[0].nodeValue
            && b.parentNode) && b.parentNode.removeChild(b);
      }
      KEDITORTOP.G_CURRKEDITOR.UndoManager.putUndo();
      KEDITORTOP.G_CURRKEDITOR.UndoManager.charCount =
          0
    }
  }
}

function dragStop(a) {
  0 == dragMove.ieButton && 1 != a.buttons
      ? (_iframeDoc.body.contentEditable = "true", _iframeDoc.body.style.cursor = "", _iframeDoc.documentElement.style.cursor = "", dragEnd(
          a), dragMove.dragStart = !1, dragMove.dragDummy
      && (dragMove.dragDummyBack.style.display = "none", dragMove.dragDummy.style.display = "none", KEDITORTOP.RAONKEDITOR.util.removeEvent(
          dragMove.dragDummyBack, "mousemove", dragStop)), dragMove.dragCaret
      && dragMove.dragCaret.parentNode && dragMove.dragCaret.parentNode.removeChild(
          dragMove.dragCaret), KEDITORTOP.RAONKEDITOR.util.removeEvent(_iframeDoc,
          "selectstart", dragMoveSelect), KEDITORTOP.RAONKEDITOR.browser.ie
          ? (KEDITORTOP.RAONKEDITOR.util.removeEvent(_iframeDoc, "mousemove",
              dragStop), KEDITORTOP.RAONKEDITOR.util.removeEvent(_iframeDoc,
              "mouseup", dragStop)) : KEDITORTOP.RAONKEDITOR.util.removeEvent(
              _iframeDoc, "mousemove",
              dragMoving), KEDITORTOP.RAONKEDITOR.util.removeEvent(document,
          "mousemove", dragStop), KEDITORTOP.RAONKEDITOR.util.removeEvent(
          KEDITORTOP.KEDITORDOC, "mousemove", dragStop))
      : (KEDITORTOP.RAONKEDITOR.browser.ie
      && (dragMove.ieButton = 0), dragMoving(a))
}

function isSameRect(a, c, b) {
  var d = !1, e = 1;
  "number" == typeof b && (e = b + .99);
  Math.abs(a - c) < e && (d = !0);
  return d
}

var G_ResizeFixedTable = {
  modifiedName: "ke_col", changeColWidth: function (a, c) {
    var b = this.getColWidth(a);
    this.setColWidth(a, b + c)
  }, setColWidth: function (a, c) {
    a.style.width && (a.style.width = c + "px");
    a.width = c + "px"
  }, getColWidth: function (a) {
    return parseFloat("" != a.style.width ? a.style.width : a.width)
  }, getCellIndex: function (a) {
    for (var c = 0, b = this.getColgroup(a).childNodes.length,
        d = getClientRect(a), e = a.parentNode,
        f = GetParentbyTagName(e, "table"); e;) {
      for (var g = 0, h = e.cells, m = h.length, q = 0; q < m;
          q++) {
        g += this.getColSpanInt(h[q]);
      }
      if (g == b) {
        break;
      } else {
        e = f.rows[e.rowIndex - 1]
      }
    }
    e = e.cells;
    f = e.length;
    for (q = 0; q < f; q++) {
      if (g = e[q], b = getClientRect(
          g), g = this.getColSpanInt(g), c += g, this.isSameLeftRect(b, d)) {
        c -= g;
        break
      } else if (this.isSameRightRect(b, d)) {
        c -= this.getColSpanInt(a);
        break
      } else if (this.isContainedRect(b, d)) {
        c -= g;
        for (a = a.previousSibling;
            a && (d = getClientRect(a), c += this.getColSpanInt(
                a), !this.isSameLeftRect(b, d));) {
          a = a.previousSibling;
        }
        break
      }
    }
    return c
  }, getColIndex: function (a) {
    var c = null, c = this.getCellIndex(a);
    a = c + this.getColSpanInt(a) - 1;
    return c = {start: c, end: a}
  }, getColgroup: function (a) {
    var c = null;
    if ("TABLE" == a.tagName) {
      c = a.getElementsByTagName(
          "colgroup")[0];
    } else if ("TD" == a.tagName || "TH"
        == a.tagName) {
      c = GetParentbyTagName(a, "table").getElementsByTagName(
          "colgroup")[0];
    }
    return c
  }, getColSpanInt: function (a) {
    return a.colSpan ? a.colSpan : 1
  }, isSameLeftRect: function (a, c) {
    return 1 > Math.abs(a.left - c.left) ? !0 : !1
  }, isSameRightRect: function (a, c) {
    return 1 > Math.abs(a.right - c.right) ? !0 : !1
  }, isContainedRect: function (a, c) {
    return 1 <= Math.abs(a.left - c.left) &&
    a.left < c.left && 1 <= Math.abs(a.right - c.right) && a.right > c.right
        ? !0 : !1
  }, isExcute: function (a) {
    var c = !1;
    "fixed" == a.style.tableLayout && -1 != a.innerHTML.indexOf("<col")
    && (c = !0);
    return c
  }, isModifiedTable: function (a) {
    var c = !1;
    null != a.getAttribute(this.modifiedName) && (c = !0);
    return c
  }, setColgroupToTable: function (a) {
    try {
      if (0 == this.isModifiedTable(a)) {
        for (var c = a.rows[0].cells, b = c.length,
            d = _iframeDoc.createElement("colgroup"), e = 0; e < b;
            e++) {
          for (var f = c[e], g = f.colSpan ? parseInt(f.colSpan) : 1,
              h = f.clientWidth, m = 0; m < g; m++) {
            var q =
                _iframeDoc.createElement("col");
            this.setColWidth(q, (h / g).toFixed(1));
            d.appendChild(q)
          }
        }
        for (var t = a.getElementsByTagName("colgroup"), u = t.length - 1;
            0 <= u; u--) {
          a == GetParentbyTagName(t[u], "table")
          && t[u].parentNode.removeChild(t[u]);
        }
        var v = a.getElementsByTagName("tbody")[0];
        a.insertBefore(d, v);
        a.setAttribute(this.modifiedName, "")
      }
    } catch (w) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(w)
    }
  }, resizeFixedTable: function (a) {
    try {
      var c = a.nNewWidth;
      if (0 != c) {
        var b = a.targetCell, d = GetParentbyTagName(b,
            "table");
        if (1 == this.isExcute(d)) {
          this.setColgroupToTable(d);
          var e = this.getColgroup(b).childNodes,
              f = this.getCellIndex(b) + (b.colSpan ? b.colSpan : 1);
          0 < c && --f;
          a = 0 > c ? -1 : 1;
          c = Math.abs(c);
          e[f] && this.changeColWidth(e[f], c);
          f += a;
          if (e[f]) {
            for (; e[f];) {
              var g = this.getColWidth(e[f]);
              g <= c ? (c -= g - 1, this.changeColWidth(e[f], -(g - 1)), f += a)
                  : (this.changeColWidth(e[f], -c), c = 0);
              if (0 == c) {
                break
              }
            }
          }
          d.style.width = "1px";
          var h = getClientRect(d);
          d.style.width = h.right - h.left + "px"
        } else {
          this.getColgroup(d) && command_AdjustTableAndCellWidth(
              KEDITORTOP.G_CURRKEDITOR.ID,
              KEDITORTOP.G_CURRKEDITOR, {type: "forceAdjust", targetTable: d})
        }
      }
    } catch (m) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(m)
    }
  }, setSameWidth: function (a) {
    try {
      var c = GetTableSelectionCells(), b = GetParentbyTagName(c[0], "table");
      if (0 != this.isExcute(b)) {
        this.setColgroupToTable(b);
        a = [];
        for (var d = c.length, e = -1, f = -1, b = 0; b < d;
            b++) {
          c[b].parentNode.rowIndex != e
          && (e = c[b].parentNode.rowIndex, f++, a[f] = []), c[b].parentNode.rowIndex
          == e && a[f].push(c[b]);
        }
        a.sort(function (a, b) {
          return b.length > a.length ?
              1 : b.length < a.length ? -1 : 0
        });
        for (var g = a.length, h = this.getColgroup(c[0]).childNodes, c = 0;
            c < g; c++) {
          for (var d = 0, e = [], m = a[c], q = m.length, b = 0; b < q; b++) {
            var t = this.getColIndex(m[b]);
            e.push(t);
            for (var u = t.start; u <= t.end; u++) {
              d += this.getColWidth(h[u])
            }
          }
          for (var v = d / m.length, w = e.length, b = 0; b < w;
              b++) {
            for (var x = (v / (e[b].end - e[b].start + 1)).toFixed(1),
                u = e[b].start; u <= e[b].end; u++) {
              this.setColWidth(h[u], x)
            }
          }
        }
      }
    } catch (y) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(y)
    }
  }
};

function splitTable(a, c) {
  for (var b = {table1: null, table2: null}, d = a.parentNode, e = d.cells,
      f = e.length, g = !0, h = getClientRect(c), m = 0; m < f; m++) {
    var q = e[m], t = getClientRect(q);
    if (0 == m) {
      var q = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(q.style.borderLeftWidth),
          u = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c.style.borderLeftWidth),
          q = Math.abs((q - u) / 2 + 1);
      if (Math.abs(t.left - h.left) > q) {
        g = !1;
        break
      }
    } else {
      u = getClientRect(e[m - 1]);
      if (0 == isSameRect(t.top, u.top)) {
        g = !1;
        break
      }
      if (0 == isSameRect(t.left, u.right)) {
        g = !1;
        break
      }
      if (m == f - 1 &&
          (q = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              q.style.borderRightWidth), u = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(
              c.style.borderRightWidth), q = Math.abs(
              (q - u) / 2 + 1), Math.abs(t.right - h.right) > q)) {
        g = !1;
        break
      }
    }
  }
  if (g) {
    if (0 == d.rowIndex) {
      b.table1 = null, b.table2 = c;
    } else {
      e = c.rows;
      g = e.length;
      f = c.cloneNode();
      h = c.getElementsByTagName("colgroup");
      t = h.length;
      for (m = 0; m < t; m++) {
        q = h[m].cloneNode(!0), f.appendChild(q);
      }
      h = (m = c.getElementsByTagName("tbody")[0]) ? m.cloneNode()
          : _iframeDoc.createElement("tbody");
      t = [];
      for (m = g - 1; 0 <= m &&
      (g = e[m], t.push(g.cloneNode(!0)), g.parentNode.removeChild(g), g != d);
          m--) {
        ;
      }
      for (m = t.length - 1; 0 <= m; m--) {
        h.appendChild(t[m]);
      }
      f.appendChild(h);
      c.nextSibling ? c.parentNode.insertBefore(f, c.nextSibling)
          : c.parentNode.appendChild(f);
      b.table1 = c;
      b.table2 = f
    }
  }
  return b
}

function removeEmptyStyleTag(a) {
  try {
    if (KEDITORTOP.RAONKEDITOR.browser.ie && 8
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
      var c = new RegExp("(<" + a.tagName + " [^>]*>)", "i");
      c.test(a.outerHTML);
      var b = RegExp.$1, c = /style="[^"](.*)"/i;
      c.test(b) || removeAttribute(a, "style")
    }
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
}

function insertRowByIndex(a, c, b) {
  var d = _iframeDoc.createElement("tr");
  a = a.rows;
  (b = a[b]) ? b.parentNode != c.parentNode ? c.parentNode.appendChild(d)
      : b.parentNode.insertBefore(d, b) : (b = a[a.length
  - 1], b.parentNode.appendChild(d));
  return d
}

function insertCellByIndex(a, c, b) {
  c = _iframeDoc.createElement(c.tagName);
  (b = a.cells[b]) ? a.insertBefore(c, b) : a.appendChild(c);
  return c
}

function oneCellAndRowContentsDeleteAction(a, c) {
  if (!KEDITORTOP.RAONKEDITOR.browser.ie) {
    var b = getFirstRange().range, d = getFirstRange().sel;
    if (!b.collapsed && (1 == d.focusNode.nodeType && "BODY"
        == d.focusNode.tagName || 0 == b.startOffset)) {
      var e = b.endContainer, f = b.endOffset, g = b.startContainer, h = "s",
          m = GetParentbyTagName(e, "table");
      null == m && "" == e.textContent && (m = GetParentbyTagName(g,
          "table"), h = "e");
      if (m && (a.UndoManager.putUndo(), a.UndoManager.charCount = 0, 1
      == m.rows.length && 1 == m.rows[0].cells.length)) {
        var q = m.rows[0].cells[0];
        "s" == h ? 1 == d.focusNode.nodeType && "BODY" == d.focusNode.tagName
            && (b.setStart(q.firstChild, 0), b.setEnd(e,
                f), d.removeAllRanges(), d.addRange(b))
            : (e = q.lastChild, b.setStart(g, 0), b.setEndAfter(
                e), d.removeAllRanges(), d.addRange(b));
        88 == c && command_copy(a.ID, a);
        b.deleteContents();
        if ("" == q.innerHTML || "<p></p>" == q.innerHTML || ""
            == q.textContent) {
          q.innerHTML = "<p><br /></p>";
        }
        b = m.getElementsByTagName("p");
        d = b.length;
        g = [];
        for (m = 0; m < d; m++) {
          q = b[m], "" == q.innerHTML && g.push(q);
        }
        for (; 0 < g.length;) {
          q = g.pop(), q.parentNode.removeChild(q);
        }
        return !0
      }
    }
  }
};

function setTopMenu(a, c, b, d) {
  KEDITORTOP.G_CURRKEDITOR = c;
  KEDITOR_TOPMENU.show(a, c.ID, b, d)
}

function hideTopMenu() {
  KEDITOR_TOPMENU.hide()
}

function hideTopMenuAndFocus() {
  KEDITOR_TOPMENU.hide_focus()
}

var KEDITOR_TOPMENU = {
  _editor: null,
  _topmenu_id: "",
  _topmenu_iframe: null,
  _topmenu_zIndex: 0,
  _topmenu_bg_zIndex: 0,
  _topmenu_document: null,
  _topmenu_main: null,
  _topmenu_sub: null,
  _topmenu_bg: null,
  _topmenu_bg_id: "",
  _top_menu_click_id: "",
  _item_position: {},
  _width: "",
  _height: "0",
  _item_sub_list: {
    entity: ["insert_link_media", "iframe_create", "flash_create",
      "media_create", "video"],
    align: ["align_left", "align_center", "align_right", "align_full"],
    insert_row: ["insert_row_up", "insert_row_down"],
    insert_column: ["insert_column_left",
      "insert_column_right"],
    table_select: ["table_select_cell", "table_select_all", "",
      "table_select_row", "table_select_column"],
    cell_size: ["table_same_width", "table_same_height",
      "table_same_widthheight"],
    align_vertical: ["valign_up", "valign_center", "valign_baseline",
      "valign_bottom"],
    table_tool: ["table_adjust", "convert_table_to_text"],
    list_number: "list_decimal list_decimal_leading_zero list_lower_alpha list_lower_greek list_lower_roman list_upper_alpha list_upper_roman".split(
        " "),
    list_bullets: ["list_disc",
      "list_circle", "list_square"],
    table_copy_paste: ["table_copy", "", "intable_paste",
      "table_content_paste"],
    table_row_column: "table_row_clone  insert_row_column insert_row_up insert_row_down insert_column_left insert_column_right  insert_table_top_paragraph insert_table_bottom_paragraph".split(
        " "),
    delete_table_and_row_column: ["table_delete", "delete_row",
      "delete_column"],
    table_row_column_cell_property: ["table_property", "cell_property",
      "row_property", "column_property"],
    calculation_formula: ["horizontal_sum",
      "vertical_sum", "horizontal_avg", "vertical_avg"],
    cell_size: ["table_same_width", "table_same_height",
      "table_same_widthheight"]
  },
  _non_image_item: " design source preview text entity align insert_row insert_column table_select cell_size align_vertical table_tool list_number list_bullets".split(
      " "),
  _disabeld_menu: [],
  _create: function (a) {
    var c = KEDITORTOP.G_CURRKEDITOR;
    a && "" != a && (c = KEDITORTOP.RAONKEDITOR.util._setEditor(a))
    && (KEDITORTOP.G_CURRKEDITOR = c);
    this._editor = c;
    for (var b in this._item_sub_list) {
      for (var c =
          this._item_sub_list[b], d = c.length - 1; 0 <= d; d--) {
        "" == c[d] ? d
        == c.length - 1 ? c.splice(d, 1) : 0 == d ? ("" == c[d + 1] && c.splice(
            d + 1, 1), c.splice(d, 1)) : "" != c[d - 1] && "" != c[d + 1]
            || c.splice(d, 1) : -1 < this._editor.remove_item.indexOf(c[d])
            && c.splice(d, 1);
      }
      0 == c.length && this._editor.remove_item.push(b)
    }
    (a = KEDITORTOP.KEDITORDOC.getElementById("keditor_topmenu_iframe" + a))
    && a.parentNode.removeChild(a);
    this._topmenu_id = "keditor_topmenu_iframe"
        + KEDITORTOP.G_CURRKEDITOR._config.editor_id;
    this._topmenu_bg_id = "keditor_topmenu_background" +
        KEDITORTOP.G_CURRKEDITOR._config.editor_id;
    this._topmenu_zIndex = G_MAIN_ZINDEX + 2E3;
    this._topmenu_bg_zIndex = G_MAIN_ZINDEX + 1E3;
    if (a = KEDITORTOP.KEDITORDOC.getElementById(
        this._topmenu_id)) {
      _topmenu_document = a.contentWindow.document, this._topmenu_iframe = a, this._topmenu_document = _topmenu_document, this._topmenu_main = _topmenu_document.getElementById(
          "div_topmenu_main"), this._topmenu_sub = _topmenu_document.getElementById(
          "div_topmenu_sub");
    } else {
      try {
        a = KEDITORTOP.KEDITORDOC.createElement("<iframe>")
      } catch (e) {
        a =
            KEDITORTOP.KEDITORDOC.createElement("iframe")
      }
      KEDITORTOP.KEDITORDOC.body.appendChild(a);
      a.id = this._topmenu_id;
      a.title = "RAON K Editor Topmenu " + this._editor._config.editor_id;
      a.style.margin = "0px";
      a.style.padding = "0px";
      a.style.zIndex = this._topmenu_zIndex;
      a.style.position = "absolute";
      a.scrolling = "no";
      a.style.overflow = "auto";
      a.style.overflowX = "hidden";
      a.style.display = "none";
      a.allowTransparency = "true";
      a.frameBorder = "0";
      b = "document.open();" + (isCustomDomain(document) ? 'document.domain="'
          + document.domain + '";' :
          "") + " document.close();";
      b = KEDITORTOP.RAONKEDITOR.browser.ie && 12
      > KEDITORTOP.RAONKEDITOR.browser.ieVersion ? "javascript:void(function(){"
          + encodeURIComponent(b) + "}())" : "";
      a.src = b;
      b = "";
      b = KEDITORTOP.RAONKEDITOR.isRelease ? this._editor._config.webPath.css
          : this._editor._config.webPath.css_dev;
      c = "editor_context.css";
      "ko-kr" != this._editor._config.lang && (c = "editor_context_"
          + this._editor._config.lang + ".css");
      d = this._editor._config.lang;
      -1 < d.indexOf("-") && (d = d.split("-")[0]);
      d = "" + ('<html lang="' + d + '" xml:lang="' +
          d + '"><head>') + ("<title>RAON K Editor Topmenu "
          + this._editor._config.editor_id + "</title>");
      isCustomDomain(document) && (d += '<script>document.domain = "'
          + document.domain + '";\x3c/script></head>');
      d += '<link rel="stylesheet" type="text/css" href="' + b + c + "?t="
          + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">';
      "1" == this._editor._config.customCssUrlDetailApply
      && (d += '<link rel="stylesheet" type="text/css" href="'
          + this._editor._config.style.customCssUrl + "?t="
          + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">');
      d += '<link rel="stylesheet" type="text/css" href="' + b + "editor_"
          + this._editor._config.style.iconName + ".css?t="
          + KEDITORTOP.RAONKEDITOR.UrlStamp + '" charset="utf-8">';
      d += '</head><body scroll="no" style="overflow-x:hidden; overflow-y:hidden; margin:0px; padding:0px; background-color:transparent;" oncontextmenu="return false">';
      d += '<div onselectstart="return false;" style="width:100%; height:100%" id="topmenu_iframe_bg">';
      d += '<div class="K_EDitoR_popup">';
      d += '<div class="K_EDitoR_EDP">';
      d += '<div class="KEd_popup K_edITor_' +
          this._editor._config.style.skinName + '">';
      d += '<dl id="div_topmenu_main"></dl>';
      d += "</div>";
      d += "</div>";
      d += '<div class="K_EDitoR_EDP_s" id="topmenu_sub" style="display:none; position:relative;">';
      d += '<div class="KEd_popup K_edITor_'
          + this._editor._config.style.skinName + '">';
      d += '<dl id="div_topmenu_sub"></dl>';
      d += "</div>";
      d += "</div>";
      d += "</div>";
      d += "</div>";
      d += "</body></html>";
      _topmenu_document = a.contentWindow.document;
      _topmenu_document.open("text/html", "replace");
      _topmenu_document.write(d);
      _topmenu_document.close();
      this._topmenu_iframe = a;
      this._topmenu_document = _topmenu_document;
      this._topmenu_main = _topmenu_document.getElementById("div_topmenu_main");
      this._topmenu_sub = _topmenu_document.getElementById("div_topmenu_sub");
      KEDITORTOP.RAONKEDITOR.util.addEvent(_topmenu_document, "dragover",
          function (a) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return !1
          });
      KEDITORTOP.RAONKEDITOR.util.addEvent(_topmenu_document, "drop",
          function (a) {
            KEDITORTOP.RAONKEDITOR.util.cancelEvent(a);
            return !1
          });
      this.setTopMenuEvents()
    }
    this._topmenu_main.innerHTML =
        "";
    this._topmenu_sub.innerHTML = ""
  },
  _setMenu: function (a) {
    var c = [];
    switch (a) {
      case "m_file":
        var c = "new file_open  template layout  save save_as save_as_image manually_temp_save load_auto_save  print pagebreak".split(
            " "), b = 290;
        -1 < this._editor.remove_item.indexOf("save_as") && (b -= 30);
        "0" == this._editor._config.setAutoSave.useManuallySave && (c.splice(
            c.indexOf("manually_temp_save"), 1), b -= 30);
        this._height = b + "px";
        this._width = "200px";
        break;
      case "m_edit":
        c = "undo redo  copy cut paste  select_all  find replace".split(" ");
        this._height = "230px";
        this._width = "200px";
        break;
      case "m_view":
        c = "grid ruler body_fit full_screen  design source preview text".split(
            " ");
        this._height = "190px";
        this._width = "200px";
        break;
      case "m_insert":
        c = "doc_bg_image image_create entity  insert_file hyperlink_create bookmark  horizontal_line symbol emoticon".split(
            " ");
        this._height = "250px";
        this._width = "400px";
        break;
      case "m_form":
        c = "bold italic underline strike_through superscript subscript  remove_format remove_css  list_number list_bullets  indent outdent  align".split(
            " ");
        this._height = "420px";
        this._width = "400px";
        break;
      case "m_table":
        c = "detail_table_insert table_selection  table_indent table_outdent  merge_cell split_cell  table_tool table_copy_paste table_row_column delete_table_and_row_column table_row_column_cell_property  table_select cell_size align_vertical  calculation_formula".split(
            " ");
        this._height = "513px";
        this._width = "400px";
        0 >= GetTableSelectionCells().length
            ? (b = getFirstRange().range.startContainer, 3 == b.nodeType
            && (b = b.parentNode), b = GetParentbyTagName(b, "table"),
            null != b && (0 >= parseIntOr0(b.style.marginLeft) ? 0
                > this._disabeld_menu.indexOf("table_outdent")
                && this._disabeld_menu.push("table_outdent")
                : this._disabeld_menu.splice(
                    this._disabeld_menu.indexOf("table_outdent"), 1)))
            : this._disabeld_menu.push("table_outdent");
        break;
      case "m_tool":
        c = ["clean_nested_tag", "", "tool_replace", "", "setting"];
        this._height = "80px";
        this._width = "200px";
        break;
      case "m_help":
        c = ["shortcut", "", "help", "", "about"];
        this._height = "80px";
        this._width = "200px";
        break;
      default:
        this._height = this._width =
            "1px"
    }
    if ("m_file" == a) {
      b = this._editor._setting.auto_save.toString().split(",");
      "0" == this._editor._config.setAutoSave.useManuallySave && "2" == b[0]
      || void 0 == getAutoSaveHtml_userID(this._editor.ID,
          this._editor._config.setAutoSave.unique_key,
          this._editor._config.setAutoSave.maxCount) || ""
      == getAutoSaveHtml_userID(this._editor.ID,
          this._editor._config.setAutoSave.unique_key,
          this._editor._config.setAutoSave.maxCount) ? this._disabeld_menu.push(
          "load_auto_save") : -1 < this._disabeld_menu.indexOf("load_auto_save")
          &&
          (this._disabeld_menu = this._disabeld_menu.slice(
              this._disabeld_menu.indexOf("load_auto_save"), 1));
      var b = null, d = !1;
      _iframeWin.getSelection ? (b = _iframeWin.getSelection()) && b.rangeCount
          && b.getRangeAt && (b = b.getRangeAt(0)) : _iframeDoc.selection
          && (b = _iframeDoc.selection.createRange());
      try {
        var e = null, e = b ? b : getFirstRange().rng;
        if (e.startContainer != e.endContainer || e.startOffset
            != e.endOffset) {
          d = !0
        }
      } catch (f) {
        d = !1
      }
      d ? null != KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT && "img"
          == KEDITORTOP.RAONKEDITOR.G_SELECTED_ELEMENT.tagName.toLowerCase() ||
          this._disabeld_menu.push("save_as_image") : this._disabeld_menu.push(
          "save_as_image")
    }
    for (var g in G_KPlugin) {
      G_KPlugin[g].onShowTopMenu
      && (b = G_KPlugin[g].onShowTopMenu(a, c)) && (c = b);
    }
    for (a = 0; a < c.length; a++) {
      0 == a
      && (g = this._topmenu_document.createElement(
          "dt"), g.innerHTML = "top_main_menu", this._topmenu_main.appendChild(
          g)), this._addItem(c[a]);
    }
    this._disableItem(this._disabeld_menu)
  },
  _disableItem: function (a) {
    for (var c = 0; c < a.length; c++) {
      var b = this._topmenu_document.getElementById("topmenu_" + a[c]);
      b && (b.className =
          "item_disabled")
    }
  },
  _addItem: function (a) {
    for (r = 0; r < this._editor.remove_item.length;
        r++) {
      if (this._editor.remove_item[r] == a) {
        return;
      }
    }
    var c = this._topmenu_document.createElement("dd"), b = this,
        d = this._getImageIconUrl(a), e = this._getText(a),
        f = this._item_sub_list[a];
    if ("" == e) {
      c.className = "b_border";
    } else {
      var g = this._topmenu_document.createElement("div"),
          h = this._topmenu_document.createElement("div"),
          m = this._topmenu_document.createElement("div"),
          q = this._topmenu_document.createElement("span");
      0 < d.length && (q.className =
          a, g.appendChild(q), 0 == a.indexOf("p_")
      && (q.style.background = "url(" + d + ") transparent no-repeat"));
      g.className = "s_left";
      h.className = "s_right ellipsis";
      d = this._topmenu_document.createElement("a");
      d.href = "javascript:void(0);";
      d.title = e;
      d.style.textDecoration = "none";
      d.style.color = "#545454";
      d.style.cursor = "pointer";
      d.innerHTML = e;
      h.appendChild(d);
      c.appendChild(g);
      c.appendChild(h);
      if (f) {
        m.className = "arrow", c.appendChild(m), g = function (a) {
          return function (c) {
            if ("item_disabled" != a.className) {
              b._topmenu_sub.innerHTML =
                  "";
              for (var d = 0; d < f.length; d++) {
                if (0 == d) {
                  var e = b._topmenu_document.createElement("dt");
                  e.innerHTML = "top_sub_menu";
                  b._topmenu_sub.appendChild(e)
                }
                b._addSubItem(f[d])
              }
              b._disableItem(b._disabeld_menu);
              d = getClientRect(a);
              0 == d.top && (d = getClientRect(a));
              b._topmenu_document.getElementById(
                  "topmenu_sub").style.display = "";
              b._topmenu_document.getElementById(
                  "topmenu_sub").style.top = d.top
                  - 0 + "px";
              a.className = "on_mouseover";
              KEDITORTOP.RAONKEDITOR.util.stopEvent(c)
            }
          }
        }(c), e = function (a, b) {
          return function (b) {
            "on_mouseover" ==
            a.className
            && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
          }
        }(c, d), h = function (a) {
          return function (b) {
            "on_mouseover" == a.className
            && KEDITORTOP.RAONKEDITOR.util.stopEvent(b)
          }
        }(c), KEDITORTOP.RAONKEDITOR.util.addEvent(c, "mouseover",
            g), KEDITORTOP.RAONKEDITOR.util.addEvent(c, "mouseout",
            e), KEDITORTOP.RAONKEDITOR.util.addEvent(c, "click",
            h), g = function (a, c) {
          return function (d) {
            if ("item_disabled" != a.className) {
              b._topmenu_sub.innerHTML = "";
              for (var e = 0; e < f.length; e++) {
                b._addSubItem(f[e], c);
              }
              var e = d.target ?
                  d.target : d.srcElement, g = getClientRect(e);
              0 == g.top && (g = getClientRect(e));
              b._topmenu_document.getElementById(
                  "topmenu_sub").style.display = "";
              b._topmenu_document.getElementById(
                  "topmenu_sub").style.top = g.top
                  - 0 + "px";
              a.className = "on_mouseover";
              KEDITORTOP.RAONKEDITOR.util.stopEvent(d);
              d = function (a) {
                return function (a) {
                  if (39 == ("which" in a ? a.which : a.keyCode)) {
                    var c = b._topmenu_document.getElementById(
                            "topmenu_sub").getElementsByTagName("A").length,
                        d = b._topmenu_document.getElementById(
                            "topmenu_sub").getElementsByTagName("A")[0],
                        c = b._topmenu_document.getElementById(
                            "topmenu_sub").getElementsByTagName("A")[c - 1];
                    d.focus();
                    setFocusFirstAndLast(_topmenu_document, d, c);
                    KEDITORTOP.RAONKEDITOR.util.stopEvent(a)
                  }
                }
              }(c);
              KEDITORTOP.RAONKEDITOR.util.addEvent(c, "keyup", d)
            }
          }
        }(c, d), KEDITORTOP.RAONKEDITOR.util.addEvent(d, "focus",
            g), KEDITORTOP.RAONKEDITOR.util.addEvent(d, "blur", e);
      } else {
        var g = function (a, c) {
          return function (d) {
            KEDITORTOP.RAONKEDITOR.util.removeEvent(c, "focus", t);
            KEDITORTOP.RAONKEDITOR.util.removeEvent(c, "blur", u);
            b._topmenu_document.getElementById("topmenu_sub").style.display =
                "none";
            "item_disabled" != a.className
            && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
                d))
          }
        }(c, d), e = function (a, b) {
          return function (c) {
            KEDITORTOP.RAONKEDITOR.util.addEvent(b, "focus", t);
            KEDITORTOP.RAONKEDITOR.util.addEvent(b, "blur", u);
            "on_mouseover" == a.className
            && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(c))
          }
        }(c, d), t = function (a, c) {
          return function (c) {
            b._topmenu_document.getElementById(
                "topmenu_sub").style.display = "none";
            "item_disabled" != a.className && (a.className = "on_mouseover",
                KEDITORTOP.RAONKEDITOR.util.stopEvent(c))
          }
        }(c, d), u = function (a, b) {
          return function (b) {
            "on_mouseover" == a.className
            && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
          }
        }(c, d), b = this, h = function (c) {
          return function (d) {
            "on_mouseover" == c.className && (b._editor._editorCommands(
                b._editor.ID, a, b), b.hide_focus(
                b._editor.ID), KEDITORTOP.RAONKEDITOR.util.stopEvent(d))
          }
        }(c);
        KEDITORTOP.RAONKEDITOR.util.addEvent(c, "mouseover", g);
        KEDITORTOP.RAONKEDITOR.util.addEvent(c, "mouseout", e);
        KEDITORTOP.RAONKEDITOR.util.addEvent(c,
            "click", h);
        KEDITORTOP.RAONKEDITOR.util.addEvent(d, "focus", t);
        KEDITORTOP.RAONKEDITOR.util.addEvent(d, "blur", u)
      }
    }
    0 < a.length && (c.id = "topmenu_" + a);
    c.unselectable = "on";
    this._topmenu_main.appendChild(c)
  },
  _addSubItem: function (a, c) {
    for (r = 0; r < this._editor.remove_item.length;
        r++) {
      if (this._editor.remove_item[r] == a) {
        return;
      }
    }
    var b = this._topmenu_document.createElement("dd"), d = this,
        e = this._getImageIconUrl(a), f = this._getText(a);
    if ("" == f) {
      b.className = "b_border";
    } else {
      var g = this._topmenu_document.createElement("div"), h =
              this._topmenu_document.createElement("div"),
          m = this._topmenu_document.createElement("span"),
          q = this._topmenu_document.createElement("a");
      q.href = "javascript:void(0);";
      q.title = f;
      q.style.textDecoration = "none";
      q.style.color = "#545454";
      q.style.cursor = "pointer";
      0 < e.length && (m.className = a, g.appendChild(m), 0 == a.indexOf("p_")
      && (m.style.background = "url(" + e + ") transparent no-repeat"));
      g.className = "s_left";
      h.className = "s_right ellipsis";
      q.innerHTML = f;
      h.appendChild(q);
      b.appendChild(g);
      b.appendChild(h);
      var e = function (a) {
        return function (b) {
          KEDITORTOP.RAONKEDITOR.util.removeEvent(q,
              "focus", t);
          KEDITORTOP.RAONKEDITOR.util.removeEvent(q, "blur", u);
          "item_disabled" != a.className
          && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
              b))
        }
      }(b), f = function (a) {
        return function (b) {
          KEDITORTOP.RAONKEDITOR.util.removeEvent(q, "focus", t);
          KEDITORTOP.RAONKEDITOR.util.removeEvent(q, "blur", u);
          "on_mouseover" == a.className
          && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
        }
      }(b), t = function (a, b) {
        return function (b) {
          "item_disabled" != a.className
          && (a.className = "on_mouseover", KEDITORTOP.RAONKEDITOR.util.stopEvent(
              b))
        }
      }(b,
          q), u = function (a, b) {
        return function (b) {
          "on_mouseover" == a.className
          && (a.className = "", KEDITORTOP.RAONKEDITOR.util.stopEvent(b))
        }
      }(b, q), d = this, g = function (b) {
        return function (c) {
          "on_mouseover" == b.className && (d._editor._editorCommands(
              d._editor.ID, a), d.hide_focus(d._editor.ID))
        }
      }(b);
      KEDITORTOP.RAONKEDITOR.util.addEvent(b, "mouseover", e);
      KEDITORTOP.RAONKEDITOR.util.addEvent(b, "mouseout", f);
      KEDITORTOP.RAONKEDITOR.util.addEvent(b, "click", g);
      KEDITORTOP.RAONKEDITOR.util.addEvent(q, "focus", t);
      KEDITORTOP.RAONKEDITOR.util.addEvent(q,
          "blur", u);
      e = function (a) {
        return function (a) {
          37 == ("which" in a ? a.which : a.keyCode)
          && (c.focus(), KEDITORTOP.RAONKEDITOR.util.stopEvent(a))
        }
      }(q);
      KEDITORTOP.RAONKEDITOR.util.addEvent(q, "keyup", e);
      0 < a.length && (b.id = "topmenu_" + a);
      b.unselectable = "on";
      this._topmenu_sub.appendChild(b)
    }
    this._topmenu_sub.appendChild(b)
  },
  _getImageIconUrl: function (a) {
    var c = "";
    if (0 == a.indexOf("p_")) {
      var c = a.split("_"), b = c[1], d = "icon";
      2 < c.length && (d = c[2]);
      c = this._editor._config.webPath.plugin + b + "/images/" + d + ".png"
    } else {
      c = this._editor._config.webPath.image +
          this._editor._config.style.iconName + "/" + a + ".gif";
    }
    for (b = 0; b < this._non_image_item.length; b++) {
      if (a
          == this._non_image_item[b]) {
        c = "";
        break
      }
    }
    return c
  },
  _getText: function (a) {
    var c = "";
    "" != a && (0 == a.indexOf("p_") ? (c = a.split(
            "_")[1], c = RAONKEditor_lang.plugins[c].topmenu[a])
        : c = RAONKEditor_lang.topmenu[a]);
    return c
  },
  show: function (a, c, b, d) {
    if (this._top_menu_click_id != b) {
      this._top_menu_click_id = b;
      this.setHoverClass(b);
      this.setTopMenuItemPosition();
      null == this._topmenu_iframe && this._create();
      this._topmenu_main.innerHTML =
          "";
      this._topmenu_sub.innerHTML = "";
      this._setMenu(b);
      this._topmenu_iframe.style.width = this._width;
      this._topmenu_iframe.style.height = this._height;
      a = a ? a : window.event;
      Math.round(a.clientX);
      Math.round(a.clientY);
      b = {};
      b = getWindowScrollPos(KEDITORTOP.KEDITORWIN);
      d = getClientRect(_iframeWin.parent.frameElement);
      getClientRect(_iframeWin.frameElement);
      a = getClientRect(a.target ? a.target : a.srcElement);
      this._topmenu_iframe.style.left = a.left + b[0] + d.left + "px";
      this._topmenu_iframe.style.top = a.top + b[1] + d.top + 19 + "px";
      this._makeBackground(c);
      this._topmenu_iframe.style.display = "";
      this._topmenu_bg.style.display = "";
      var e = this._topmenu_iframe.contentWindow;
      c = getIframeDocument(this._topmenu_iframe);
      0 == KEDITORTOP.RAONKEDITOR.browser.ie && e.focus();
      c.body.focus();
      try {
        c.getElementsByTagName("A")[0].focus()
      } catch (f) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(f)
      }
      c.onkeyup = function (a) {
        var b = 0;
        a = a || e.event;
        b = "which" in a ? a.which : a.keyCode;
        27 == b && (hideTopMenu(), setTimeout(function () {
              setFocusToBody()
            },
            1))
      };
      setFocusFirstAndLast(c, c.getElementsByTagName("A")[0]);
      setZoomValueToBody(c, this._editor)
    }
  },
  hide: function (a) {
    this._topmenu_document && this._topmenu_document.getElementById(
        "topmenu_sub") && (this._topmenu_document.getElementById(
        "topmenu_sub").style.display = "none");
    this._topmenu_iframe && (this._topmenu_iframe.style.display = "none");
    this._topmenu_bg && (this._topmenu_bg.style.display = "none");
    this._top_menu_click_id = "";
    this.setHoverClass("")
  },
  hide_focus: function (a) {
    this._topmenu_document && this._topmenu_document.getElementById(
        "topmenu_sub") &&
    (this._topmenu_document.getElementById(
        "topmenu_sub").style.display = "none");
    this._topmenu_iframe && (this._topmenu_iframe.style.display = "none");
    this._topmenu_bg && (this._topmenu_bg.style.display = "none");
    this._top_menu_click_id = "";
    this.setHoverClass("");
    this._editor.isCloseTopMenu = !0;
    dialogCancel()
  },
  _makeBackground: function (a) {
    var c = this;
    if (this._topmenu_bg = KEDITORTOP.KEDITORDOC.getElementById(
        c._topmenu_bg_id)) {
      KEDITORTOP.KEDITORDOC.body.removeChild(
          this._topmenu_bg), this._topmenu_bg = null;
    }
    if (!this._topmenu_bg) {
      this._topmenu_bg =
          KEDITORTOP.KEDITORDOC.createElement("div");
      this._topmenu_bg.style.display = "none";
      this._topmenu_bg.id = this._topmenu_bg_id;
      this._topmenu_bg.style.overflow = "visible";
      this._topmenu_bg.style.position = "static";
      this._topmenu_bg.innerHTML = '<div oncontextmenu="return false" style="filter:alpha(opacity=0); opacity:0.0; -moz-opacity:0.0; -khtml-opacity: 0.0; background-color:#000000; z-index:'
          + this._topmenu_bg_zIndex
          + '; position:absolute; left:0px; top:0px;overflow:hidden; "></div>';
      var b = "CSS1Compat" == KEDITORTOP.KEDITORDOC.compatMode ?
              KEDITORTOP.KEDITORDOC.documentElement.scrollWidth
              : KEDITORTOP.KEDITORDOC.body.scrollWidth,
          d = "CSS1Compat" == KEDITORTOP.KEDITORDOC.compatMode
              ? KEDITORTOP.KEDITORDOC.documentElement.scrollHeight
              : KEDITORTOP.KEDITORDOC.body.scrollHeight,
          b = changeValueForZoom(b, this._editor),
          d = changeValueForZoom(d, this._editor);
      this._topmenu_bg.firstChild.style.width = b - 10 + "px";
      this._topmenu_bg.firstChild.style.height = d - 10 + "px";
      KEDITORTOP.KEDITORDOC.body.appendChild(this._topmenu_bg);
      b = function () {
        return function (b) {
          c.hide_focus(a)
        }
      }();
      KEDITORTOP.RAONKEDITOR.util.addEvent(this._topmenu_bg, "click", b);
      KEDITORTOP.RAONKEDITOR.util.addEvent(this._topmenu_bg, "contextmenu", b);
      KEDITORTOP.RAONKEDITOR.util.addEvent(KEDITORTOP.KEDITORWIN, "resize",
          this._editor.topmenu_bg_resize);
      KEDITORTOP.RAONKEDITOR.util.addEvent(
          this._topmenu_document.getElementById("topmenu_iframe_bg"), "click",
          b);
      KEDITORTOP.RAONKEDITOR.util.addEvent(
          this._topmenu_document.getElementById("topmenu_iframe_bg"),
          "contextmenu", b);
      this._topmenu_bg.style.display = "none";
      KEDITORTOP.RAONKEDITOR.util.addEvent(this._topmenu_bg,
          "mousemove", function (a) {
            a = c.getItemInCurrPosition(a);
            "" != a && a != c._top_menu_click_id
            && (c._topmenu_bg.style.display = "none", setTimeout(function () {
              "" == c._topmenu_iframe.style.display
              && (c._topmenu_bg.style.display = "")
            }, 10))
          })
    }
  },
  setFocusOutline: function (a, c) {
    var b = "border";
    0 == KEDITORTOP.RAONKEDITOR.browser.ie && (b = "outline");
    a.style[b] = c ? "" : "1px dotted #B5B7BB"
  },
  setTopMenuEvents: function () {
    for (var a = this, c = null, b = "", d = 0,
        e = a._editor._config.topMenuItem.length; d < e;
        d++) {
      if (b = KEDITORTOP.RAONKEDITOR.util.trim(
          a._editor._config.topMenuItem[d]).toLowerCase(),
          c = document.getElementById("ue_" + a._editor.ID + b)) {
        switch (c) {
          case "design":
          case "source":
          case "preview":
          case "text":
            "textContent" in c ? c.textContent = RAONKEditor_lang.top_menu[b]
                : c.innerText = RAONKEditor_lang.top_menu[b]
        }
        var f = function (b) {
          return function (c) {
            KEDITORTOP.RAONKEDITOR.util.stopEvent(c);
            "design" == a._editor._currentMode && (b == a._top_menu_click_id
                ? hideTopMenuAndFocus() : setTopMenu(c, a._editor, b,
                    a._editor._config))
          }
        }(b), b = function (b) {
          return function (c) {
            b != a._top_menu_click_id && "" == a._topmenu_iframe.style.display
            &&
            setTopMenu(c, a._editor, b, a._editor._config)
          }
        }(b);
        KEDITORTOP.RAONKEDITOR.util.addEvent(c, "click", f);
        KEDITORTOP.RAONKEDITOR.util.addEvent(c, "mouseover", b)
      }
    }
  },
  setHoverClass: function (a) {
    for (var c = 0, b = this._editor._config.topMenuItem.length; c < b; c++) {
      var d = KEDITORTOP.RAONKEDITOR.util.trim(
          this._editor._config.topMenuItem[c]).toLowerCase();
      document.getElementById(
          "ue_" + this._editor.ID + d).childNodes[0].className = d == a ? "on"
          : ""
    }
  },
  setTopMenuItemPosition: function () {
    var a = this._editor._config.topMenuItem.length;
    if (0 < a) {
      for (var c = 0; c < a; c++) {
        var b = this._editor._config.topMenuItem[c],
            b = KEDITORTOP.RAONKEDITOR.util.trim(b).toLowerCase(),
            d = _iframeWin.parent.document.getElementById(
                "ue_" + this._editor.ID + b);
        if (d) {
          var d = d.getBoundingClientRect(),
              e = getClientRect(_iframeWin.parent.frameElement), f = {};
          f.x = e.left + d.left;
          f.y = e.top + d.top;
          f.xx = e.left + d.right;
          f.yy = e.top + d.bottom;
          this._item_position[b] = f
        }
      }
    }
  },
  getItemInCurrPosition: function (a) {
    var c = "", b = a.clientX;
    a = a.clientY;
    b = changeValueForZoom(b, this._editor);
    a = changeValueForZoom(a,
        this._editor);
    for (p in this._item_position) {
      var d = this._item_position[p];
      if (point_in_rectagnle(b, a, d.x, d.y, d.xx, d.yy)) {
        c = p;
        break
      }
    }
    return c
  }
};

function point_in_rectagnle(a, c, b, d, e, f) {
  var g = !1, h = function (a, b, c) {
    var d = !1;
    a < c && b > a && b < c && (d = !0);
    a > c && b > c && b < a && (d = !0);
    if (b == a || b == c) {
      d = !0;
    }
    return d
  };
  h(b, a, e) && h(d, c, f) && (g = !0);
  return g
};var ImageHTML = function (a, c) {
  this.htmlSource = a;
  this.range = c
}, UndoManager = function () {
  this.arrImageHTML = [];
  this.limitCount = 50;
  this.currentImage = null;
  this.index = -1;
  this.canRedo = this.canUndo = !1;
  this.charCount = 0;
  this.isInsertData = this.isDeleteImageBehind = !1;
  this.tempRange = this.tempEContainer = this.tempSContainer = null
};
UndoManager.prototype = {
  reset: function () {
    this.arrImageHTML = [];
    this.limitCount = 50;
    this.currentImage = null;
    this.index = -1;
    this.canRedo = this.canUndo = !1;
    this.charCount = 0;
    1 == _iframeDoc.body.contentEditable
    && KEDITORTOP.G_CURRKEDITOR._iconEnable("");
    KEDITORTOP.G_CURRKEDITOR.isInitKeydownForSetApi = !0;
    this.isInsertData = !1;
    this.tempRange = this.tempEContainerText = this.tempSContainerText = null
  }, putUndo: function (a) {
    try {
      var c = null, b = null, d = null, e = null, f = null, g = {},
          h = KEDITORTOP.G_CURRKEDITOR._config.undoMode;
      if ("2" ==
          h) {
        if (a && 0 == KEDITORTOP.G_CURRKEDITOR._config.initFocus) {
          var m = getMyFirstOrLastChildElementNode(
                  KEDITORTOP.G_CURRKEDITOR._BODY),
              f = _iframeDoc.createElement("dextmark");
          f.id = "_dext_caret";
          m.firstChild ? m.insertBefore(f, m.firstChild) : m.appendChild(f)
        } else {
          c = getFirstRange().range, b = getFirstRange().sel, d = c.cloneRange(), f = _iframeDoc.createElement(
              "dextmark"), f.id = "_dext_caret", c.collapse(!1), c.insertNode(
              f);
        }
      } else {
        c = getFirstRange().range, b = getFirstRange().sel, d = c.cloneRange(), c
        && c.startContainer && (e = getMyElementNode(c.startContainer)),
        e && (g.id = e.id, g.undoId = "_dext", e.id = g.id + g.undoId);
      }
      var q = _iframeDoc.body.innerHTML, q = dummyTagClassClear(q);
      if ("2" == h) {
        f.parentNode.removeChild(f), b
        && (c = !1, KEDITORTOP.RAONKEDITOR.browser.ie && 8
        >= KEDITORTOP.RAONKEDITOR.browser.ieVersion && "0"
        != KEDITORTOP.G_CURRKEDITOR._config.autoUrlDetect && (c = !0), c
        && _iframeDoc.execCommand("AutoUrlDetect", !1,
            !1), KEDITORTOP.RAONKEDITOR.browser.ie
        && (b.removeAllRanges(), b.addRange(d)), c && _iframeDoc.execCommand(
            "AutoUrlDetect", !0, !0));
      } else {
        if (e) {
          if ("" == g.id) {
            try {
              e.removeAttribute("id")
            } catch (t) {
              KEDITORTOP &&
              KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(t)
            }
          } else {
            e.id = g.id;
          }
        }
        b && (b.removeAllRanges(), b.addRange(d))
      }
      var u = "BackCompat" == _iframeDoc.compatMode;
      KEDITORTOP.RAONKEDITOR.browser.ie && 7
      < KEDITORTOP.RAONKEDITOR.browser.ieVersion && 11
      > KEDITORTOP.RAONKEDITOR.browser.ieVersion && 1 != u
      && (q = KEDITORTOP.RAONKEDITOR.util.nbspRemove(q));
      q = ReplaceAll(q, unescape("%uFEFF"), "");
      q = ReplaceAll(q, unescape("%u200B"), "");
      if (KEDITORTOP.RAONKEDITOR.browser.ie && 8
          >= KEDITORTOP.RAONKEDITOR.browser.ieVersion ||
          u) {
        try {
          var v = q.match(RegExp("<td *([^>?+])*>", "gi"));
          if (v) {
            for (var w = v.length, b = 0; b < w; b++) {
              var x = v[b], y = /cellOrgBgColor=>/.exec(x);
              if (null != y) {
                var z = y[0].replace(RegExp("cellOrgBgColor=>", "g"),
                    ">"), x = x.replace(y, z), q = q.replace(v[b], x)
              }
            }
            for (b = 0; b < w; b++) {
              if (x = v[b], y = /cellOrgBgColor= /.exec(
                  x)) {
                z = y[0].replace(RegExp("cellOrgBgColor= ", "g"),
                    ""), x = x.replace(y, z), q = q.replace(v[b], x)
              }
            }
          }
        } catch (A) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(A)
        }
      }
      if (!this.currentImage || this.currentImage.htmlSource.replace(
          /<dextmark(\s|\S)*?<\/dextmark>/gi,
          "") != q.replace(/<dextmark(\s|\S)*?<\/dextmark>/gi, "")) {
        "2" == h
        && (this.isInsertData = !1, this.tempRange = this.tempEContainerText = this.tempSContainerText = null);
        var B = new ImageHTML(q, g);
        if ("2" == h) {
          for (var C = this.arrImageHTML.length - 1;
              C >= this.index + 1; C--) {
            this.arrImageHTML.pop();
          }
        } else {
          try {
            if (this.index < this.arrImageHTML.length - 1) {
              if (0
                  == this.isDeleteImageBehind) {
                for (this.isDeleteImageBehind = !0;
                    this.index < this.arrImageHTML.length
                    - 1;) {
                  this.arrImageHTML.pop()
                }
              }
            } else {
              1 == this.isDeleteImageBehind && this.arrImageHTML.pop(),
                  this.isDeleteImageBehind = !1
            }
          } catch (D) {
            this.isDeleteImageBehind = !1
          }
        }
        this.arrImageHTML.length == this.limitCount
        && this.arrImageHTML.shift();
        this.index = this.arrImageHTML.push(B) - 1;
        this.currentImage = B;
        this.canUndo = 0 < this.arrImageHTML.length ? !0 : !1;
        this.index == this.arrImageHTML.length - 1 && (this.canRedo = !1);
        if ("2" == h) {
          if (this.charCount = 99, a && (this.canUndo = !1), 1
          < this.arrImageHTML.length) {
            a = "";
            try {
              var H = GetTableSelectionCells();
              0 < H.length && (a = 1 == H.length ? "selectedSingleCell"
                  : "selectedMultiCell")
            } catch (G) {
              KEDITORTOP &&
              KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
              && console.log(G)
            }
            try {
              var I = KEDITORTOP.G_CURRKEDITOR.keditor_dragresize;
              I && I.G_keditorResizeDiv && I.G_keditorResize_elem && (a = "IMG"
              == I.G_keditorResize_elem.tagName ? "focusImage"
                  : "keditorResize")
            } catch (M) {
              KEDITORTOP && KEDITORTOP.RAONKEDITOR
              && KEDITORTOP.RAONKEDITOR.logMode && console.log(M)
            }
            "" != a && KEDITORTOP.G_CURRKEDITOR._iconEnable(a)
          }
        } else {
          this.charCount = 0
        }
      }
    } catch (K) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(K)
    }
  },
  execUndo: function () {
    try {
      if (G_LAST_CMD = "undo", 0
      == this.canUndo) {
        KEDITORTOP.G_CURRKEDITOR._iconEnable("");
      } else {
        var a = KEDITORTOP.G_CURRKEDITOR._config.undoMode;
        "2" == a && 1 == this.isInsertData && this.putUndo();
        --this.index;
        if (-1 == this.index) {
          if ("2" == a) {
            1 == this.arrImageHTML.length
            && (this.index = 0);
          } else {
            this.canRedo = this.canUndo = !1;
            KEDITORTOP.G_CURRKEDITOR._iconEnable("");
            return
          }
        }
        var c = this.arrImageHTML[this.index].htmlSource;
        if (KEDITORTOP.RAONKEDITOR.browser.ie && 11
            == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          for (var b =
                  "span strong em strike sup sub b i".split(" "), d = b.length,
              e = 0; e < d; e++) {
            var f = "(<p[^>]*><" + b[e]
                    + "[^>]*>)(?:\\s|  | |)(</" + b[e] + "></p>)",
                g = new RegExp(f, "gim"), c = c.replace(g,
                    "$1" + unescape("%u200B") + "</" + b[e] + "></p>");
          }
          f = "(<span[^>]*?raon_placeholder.*?>)(" + unescape("%u200B")
              + "?)</span>";
          g = new RegExp(f, "gim");
          c = c.replace(g, "$1</span>")
        }
        b = "";
        b = KEDITORTOP.RAONKEDITOR.browser.ie && "xp"
        != KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase() ? unescape(
            "%u200B") : unescape("%uFEFF");
        g = RegExp("<a ([^>]+)></a>",
            "gi");
        c = c.replace(g, "<a $1>" + b + "</a>");
        if (!this.currentImage || this.currentImage.htmlSource.replace(
            /<dextmark(\s|\S)*?<\/dextmark>/gi, "") != c.replace(
            /<dextmark(\s|\S)*?<\/dextmark>/gi, "")) {
          _iframeDoc.body.innerHTML = c;
          var h = this.arrImageHTML[this.index].range, m = h.id + h.undoId,
              c = null;
          if ("2" == KEDITORTOP.G_CURRKEDITOR._config.undoMode) {
            if (c = _iframeDoc.getElementById("_dext_caret")) {
              var q = getFirstRange().range, t = getFirstRange().sel;
              q.setStartAfter(c);
              q.setEndAfter(c);
              t.removeAllRanges();
              t.addRange(q);
              c.parentNode.removeChild(c);
              KEDITORTOP.G_CURRKEDITOR._LastRange = q
            }
          } else if (c = _iframeDoc.getElementById(m)) {
            c.id == h.undoId ? removeAttribute(c, "id") : c.id = h.id;
            var u = getFirstRange();
            try {
              if (c.nodeType = c.lastChild && c.lastChild.tagName && "br"
                  == c.lastChild.tagName.toLowerCase()) {
                try {
                  c.lastChild.previousSibling ? (rangy.getSelection(
                          _iframeWin).removeAllRanges(), u.range.selectNodeContents(
                          c.lastChild.previousSibling), u.range.collapse(
                          !1), rangy.getSelection(_iframeWin).setSingleRange(
                          u.range))
                      : doSetCaretPosition(c, 0)
                } catch (v) {
                  doSetCaretPosition(c,
                      0)
                }
              } else {
                rangy.getSelection(
                    _iframeWin).removeAllRanges(), u.range.selectNodeContents(
                    c), u.range.collapse(!1), rangy.getSelection(
                    _iframeWin).setSingleRange(u.range);
              }
              setMenuIconRealable(c)
            } catch (w) {
              try {
                var x = _iframeDoc.body.childNodes, y = x.length;
                0 < y && (doSetCaretPosition(x[y - 1], 0), setMenuIconRealable(
                    x[y - 1]))
              } catch (z) {
                KEDITORTOP && KEDITORTOP.RAONKEDITOR
                && KEDITORTOP.RAONKEDITOR.logMode && console.log(z)
              }
            }
          }
          this.currentImage = new ImageHTML(_iframeDoc.body.innerHTML, h);
          this.canRedo = !0;
          0 == this.index && (this.canUndo =
              !1);
          this.charCount = "2" == a ? 99 : 0;
          KEDITORTOP.G_CURRKEDITOR._iconEnableForTextInRange();
          ClearDraggingTableAllTable()
        }
      }
    } catch (A) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(A)
    }
  }, execRedo: function () {
    try {
      if (G_LAST_CMD = "redo", 0
      == this.canRedo) {
        KEDITORTOP.G_CURRKEDITOR._iconEnable("");
      } else {
        this.index += 1;
        var a = KEDITORTOP.G_CURRKEDITOR._config.undoMode, c = null;
        "2" == a && 1 == this.arrImageHTML.length && (this.index = 0);
        c = this.arrImageHTML[this.index].htmlSource;
        if (KEDITORTOP.RAONKEDITOR.browser.ie &&
            11 == KEDITORTOP.RAONKEDITOR.browser.ieVersion) {
          for (var b = "span strong em strike sup sub b i".split(" "),
              d = b.length, e = 0; e < d; e++) {
            var f = "(<p[^>]*><" + b[e]
                    + "[^>]*>)(?:\\s|  | |)(</" + b[e] + "></p>)",
                g = new RegExp(f, "gim"), c = c.replace(g,
                    "$1" + unescape("%u200B") + "</" + b[e] + "></p>");
          }
          f = "(<span[^>]*?raon_placeholder.*?>)(" + unescape("%u200B")
              + "?)</span>";
          g = new RegExp(f, "gim");
          c = c.replace(g, "$1</span>")
        }
        b = "";
        b = KEDITORTOP.RAONKEDITOR.browser.ie && "xp"
        != KEDITORTOP.RAONKEDITOR.UserAgent.os.version.toLowerCase() ? unescape(
                "%u200B") :
            unescape("%uFEFF");
        g = RegExp("<a ([^>]+)></a>", "gi");
        c = c.replace(g, "<a $1>" + b + "</a>");
        if (!this.currentImage || this.currentImage.htmlSource.replace(
            /<dextmark(\s|\S)*?<\/dextmark>/gi, "") != c.replace(
            /<dextmark(\s|\S)*?<\/dextmark>/gi, "")) {
          _iframeDoc.body.innerHTML = c;
          var h = this.arrImageHTML[this.index].range, m = h.id + h.undoId,
              c = null;
          if ("2" == a) {
            if (c = _iframeDoc.getElementById("_dext_caret")) {
              var q = getFirstRange().range, t = getFirstRange().sel;
              q.setStartAfter(c);
              q.setEndAfter(c);
              t.removeAllRanges();
              t.addRange(q);
              c.parentNode.removeChild(c);
              KEDITORTOP.G_CURRKEDITOR._LastRange = q
            }
          } else if (c = _iframeDoc.getElementById(m)) {
            c.id == h.undoId ? removeAttribute(c, "id") : c.id = h.id;
            var u = getFirstRange();
            try {
              rangy.getSelection(
                  _iframeWin).removeAllRanges(), u.range.selectNodeContents(
                  c), u.range.collapse(!1), rangy.getSelection(
                  _iframeWin).setSingleRange(u.range), setMenuIconRealable(c)
            } catch (v) {
              try {
                var w = _iframeDoc.body.childNodes, x = w.length;
                0 < x && (doSetCaretPosition(w[x - 1], 1), setMenuIconRealable(
                    w[x - 1]))
              } catch (y) {
                KEDITORTOP &&
                KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
                && console.log(y)
              }
            }
          }
          this.currentImage = new ImageHTML(_iframeDoc.body.innerHTML, h);
          this.canUndo = !0;
          this.index == this.arrImageHTML.length - 1 && (this.canRedo = !1);
          this.charCount = "2" == a ? 99 : 0;
          KEDITORTOP.G_CURRKEDITOR._iconEnableForTextInRange();
          ClearDraggingTableAllTable()
        }
      }
    } catch (z) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(z)
    }
  }, clearNextImgData: function () {
    for (var a = this.arrImageHTML.length - 1; a >= this.index + 1;
        a--) {
      this.arrImageHTML.pop();
    }
    this.arrImageHTML.length == this.limitCount && this.arrImageHTML.shift();
    this.canUndo = 0 < this.arrImageHTML.length ? !0 : !1;
    this.index == this.arrImageHTML.length - 1 && (this.canRedo = !1);
    this.charCount = 99
  }
};
resizebar_props = {
  editor: null,
  editorMinTop: 0,
  editorHegiht: 0,
  mouseTop: 0,
  editorMinFlag: !1,
  mouseClickFlag: !1,
  mouseClickObj: null,
  mouseLeftBtnFlag: !1
};

function KEditorResize(a) {
  resizebar_props
  && (resizebar_props.editor = a, resizebar_props.editorMinTop = parseInt(
      a._config.style.defaultMinHeight))
}

KEditorResize.prototype.createStatusResizeBar = function () {
  if (resizebar_props) {
    if (0 == checkIfIncluded("editor_resize_bar.css", KEDITORTOP.KEDITORDOC)) {
      var a = KEDITORTOP.KEDITORDOC.createElement("link");
      a.type = "text/css";
      a.rel = "stylesheet";
      a.href = KEDITORTOP.RAONKEDITOR.isRelease
          ? resizebar_props.editor._config.webPath.css
          + "editor_resize_bar.css?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp
          : resizebar_props.editor._config.webPath.css_dev
          + "editor_resize_bar.css?t=" + KEDITORTOP.RAONKEDITOR.UrlStamp;
      KEDITORTOP.KEDITORDOC.getElementsByTagName("head")[0].appendChild(a)
    }
    a =
        KEDITORTOP.KEDITORDOC.getElementById(
            resizebar_props.editor._config.holderID);
    a.className = "KE_frame_resizebar";
    var c = KEDITORTOP.KEDITORDOC.createElement("div");
    c.setAttribute("id", "KE_resizebar_" + resizebar_props.editor.ID);
    c.className = "KE_resizebar KE_resizebar_"
        + resizebar_props.editor._config.style.skinName;
    c.innerHTML = '<div class="KE_resizebar_btn" id="KE_resizebar_btn_'
        + resizebar_props.editor.ID
        + '"><div class="KE_resizebar_horizon_line" id="KE_resizebar_horizon_line_'
        + resizebar_props.editor.ID +
        '"></div><button type="button" id="KE_resizebar_button_'
        + resizebar_props.editor.ID + '" title="'
        + RAONKEditor_lang.resizebar_button.title + '"></button></div>';
    a.appendChild(c)
  }
};

function kEditorResizeMouseDownEvt(a) {
  try {
    KEditorResize.prototype.mouseDown(a)
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
}

function kEditorResizeMouseMoveEvt(a) {
  try {
    KEditorResize.prototype.mouseMove(a)
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
}

function kEditorResizeMouseUpEvt(a) {
  try {
    KEditorResize.prototype.mouseUp(a)
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
}

function kEditorResizeBlurEvt(a) {
  try {
    KEditorResize.prototype.blur(a)
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
}

KEditorResize.prototype.mouseDown = function (a) {
  try {
    if (resizebar_props) {
      if (KEDITORTOP.KEDITORDOC.getElementById(
          resizebar_props.editor._config.holderID)) {
        a = a ? a : event;
        var c = a.target ? a.target : a.srcElement, b = this.isLeftClick(a);
        resizebar_props.mouseLeftBtnFlag = b;
        resizebar_props.mouseLeftBtnFlag && (c && c.id && c.id
        == "KE_resizebar_"
        + resizebar_props.editor.ID ? resizebar_props.mouseClickObj = c : c
        && c.id && c.id == "KE_resizebar_btn_" + resizebar_props.editor.ID
            ? resizebar_props.mouseClickObj = c.parentNode : c && c.id && (c.id
                ==
                "KE_resizebar_horizon_line_" + resizebar_props.editor.ID || c.id
                == "KE_resizebar_button_" + resizebar_props.editor.ID)
            && (resizebar_props.mouseClickObj = c.parentNode.parentNode));
        resizebar_props.mouseLeftBtnFlag && resizebar_props.mouseClickObj
        == KEDITORTOP.KEDITORDOC.getElementById(
            "KE_resizebar_" + resizebar_props.editor.ID)
        && (resizebar_props.editorHegiht = parseInt(
            KEDITORTOP.KEDITORDOC.getElementById(
                resizebar_props.editor._config.holderID).style.height.replace(
                "px",
                "")), resizebar_props.mouseTop = a.clientY, resizebar_props.mouseClickFlag =
            !0)
      } else {
        resizebar_props = null
      }
    }
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
};
KEditorResize.prototype.mouseMove = function (a) {
  try {
    if (resizebar_props && (a = a ? a : event, resizebar_props.mouseLeftBtnFlag
    && resizebar_props.mouseClickObj == KEDITORTOP.KEDITORDOC.getElementById(
        "KE_resizebar_" + resizebar_props.editor.ID)
    && resizebar_props.mouseClickFlag)) {
      KEDITORTOP.KEDITORDOC.body.style.cursor = "row-resize";
      if (!KEDITORTOP.KEDITORDOC.getElementById("ke_disabled")) {
        var c = KEDITORTOP.KEDITORDOC.createElement("div");
        c.setAttribute("id", "ke_disabled");
        c.style.overflow = "visible";
        c.innerHTML = '<div style="filter:alpha(opacity=0); opacity:0; -moz-opacity:0; -ms-filter:progid:DXImageTransform.Microsoft.Alpha(Opacity=0); -khtml-opacity: 0; background-color:white; z-index:'
            +
            (G_MAIN_ZINDEX + 1E3)
            + '; position:absolute; left:0px; top:0px;overflow:hidden;width:100%;height:100%;"></div>';
        var b = "CSS1Compat" == KEDITORTOP.KEDITORDOC.compatMode
            ? KEDITORTOP.KEDITORDOC.documentElement.scrollHeight
            : KEDITORTOP.KEDITORDOC.body.scrollHeight;
        c.firstChild.style.width = ("CSS1Compat"
        == KEDITORTOP.KEDITORDOC.compatMode
            ? KEDITORTOP.KEDITORDOC.documentElement.scrollWidth
            : KEDITORTOP.KEDITORDOC.body.scrollWidth) + "px";
        c.firstChild.style.height = b + "px";
        KEDITORTOP.KEDITORDOC.body.appendChild(c)
      }
      var c =
              0, d = a.clientY,
          c = resizebar_props.editorHegiht + (d - resizebar_props.mouseTop),
          c = Math.max(resizebar_props.editorMinTop, c);
      resizebar_props.editorMinFlag = c == resizebar_props.editorMinTop ? !0
          : !1;
      resizebar_props.editorMinFlag || (this.setHeight(
          c), G_BodyFit.widthFixStatus && (setBodyFitStyle(
          resizebar_props.editor, !0), setAutoBodyFit(
          resizebar_props.editor)), resizebar_props.editorHegiht = c, resizebar_props.mouseTop = d)
    }
  } catch (e) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(e)
  }
};
KEditorResize.prototype.mouseUp = function (a) {
  try {
    if (resizebar_props) {
      if (a = a ? a
          : event, KEDITORTOP.KEDITORDOC.body.style.cursor = "", resizebar_props.mouseLeftBtnFlag
      && resizebar_props.mouseClickObj == KEDITORTOP.KEDITORDOC.getElementById(
          "KE_resizebar_" + resizebar_props.editor.ID)) {
        var c = 0, c = resizebar_props.editorHegiht + (a.clientY
                - resizebar_props.mouseTop),
            c = Math.max(resizebar_props.editorMinTop, c);
        resizebar_props.editorMinFlag = c == resizebar_props.editorMinTop ? !0
            : !1;
        resizebar_props.editorMinFlag || (this.setHeight(c),
        G_BodyFit.widthFixStatus && (setBodyFitStyle(resizebar_props.editor,
            !0), setAutoBodyFit(resizebar_props.editor)));
        resizebar_props.editorHegiht = 0;
        resizebar_props.mouseTop = 0;
        resizebar_props.editorMinFlag = !1;
        resizebar_props.mouseClickFlag = !1;
        resizebar_props.mouseClickObj = null;
        resizebar_props.mouseLeftBtnFlag = !1;
        if (KEDITORTOP.KEDITORDOC.getElementById("ke_disabled")) {
          var b = KEDITORTOP.KEDITORDOC.getElementById("ke_disabled");
          b.parentNode.removeChild(b)
        }
        try {
          var d = {objResizedWindow: KEDITORTOP.G_CURRKEDITOR.Frame};
          "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.resized
              ? KEDITORTOP.G_CURRKEDITOR._config.event.resized(
                  KEDITORTOP.G_CURRKEDITOR.ID, d) : "function"
              === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_Resized
              && KEDITORTOP.KEDITORWIN.RAONKEDITOR_Resized(
                  KEDITORTOP.G_CURRKEDITOR.ID, d)
        } catch (e) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(e)
        }
      } else {
        resizebar_props.mouseClickObj
        == KEDITORTOP.KEDITORDOC.getElementById(
            "KE_resizebar_" + resizebar_props.editor.ID)
        && (resizebar_props.editorHegiht =
            0, resizebar_props.mouseTop = 0, resizebar_props.editorMinFlag = !1, resizebar_props.mouseClickFlag = !1, resizebar_props.mouseClickObj = null, resizebar_props.mouseLeftBtnFlag = !1, KEDITORTOP.KEDITORDOC.getElementById(
            "ke_disabled") && (b = KEDITORTOP.KEDITORDOC.getElementById(
            "ke_disabled"), b.parentNode.removeChild(b)))
      }
    }
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
};
KEditorResize.prototype.wheel = function (a) {
  try {
    if (resizebar_props && (a = a ? a : event, resizebar_props.mouseLeftBtnFlag
    && resizebar_props.mouseClickObj == KEDITORTOP.KEDITORDOC.getElementById(
        "KE_resizebar_"
        + resizebar_props.editor.ID))) {
      return a.returnValue = !1, a.preventDefault
      && a.preventDefault(), !1
    }
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
};
KEditorResize.prototype.blur = function (a) {
  try {
    if (resizebar_props && resizebar_props.mouseLeftBtnFlag
        && resizebar_props.mouseClickObj
        == KEDITORTOP.KEDITORDOC.getElementById(
            "KE_resizebar_" + resizebar_props.editor.ID)
        && KEDITORTOP.KEDITORDOC.getElementById("ke_disabled")) {
      var c = KEDITORTOP.KEDITORDOC.getElementById("ke_disabled");
      c.parentNode.removeChild(c)
    }
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
};
KEditorResize.prototype.setHeight = function (a) {
  var c = resizebar_props.editor.ID,
      b = KEDITORTOP.RAONKEDITOR.util._setEditor(c);
  if (void 0 == c || "" == c) {
    c = b.ID;
  }
  var d = KEDITORTOP.KEDITORDOC.getElementById("raonk_frame_holder" + c),
      e = null;
  "1" == b._config.resizeBarHolderSync && (e = d.parentNode);
  var c = KEDITORTOP.KEDITORDOC.getElementById(
      "raonk_frame_" + c).contentWindow.document.getElementById(
      "ue_editor_holder_" + c), f = 0, f = b.baseMenuToolbarHeight;
  isViewMode(b) ? b._defaultHeight = parseInt(a, 10) - 4
      : b._defaultHeight = parseInt(a,
          10) - f;
  -1 < a.toString().indexOf("%") || -1 < a.toString().indexOf("px")
      ? (d.style.height = a, e && (e.style.height = a)) : (d.style.height = a
          + "px", e && (e.style.height = a + "px"));
  c.style.height = b._defaultHeight + "px";
  b._config.style.height = a + "px";
  G_Ruler && "1" == resizebar_props.editor._config.ruler.view && "design"
  == resizebar_props.editor._currentMode && G_Ruler.SetRulerPosition();
  "1" == resizebar_props.editor._config.autoBodyFit && (a = parseIntOr0(
          resizebar_props.editor._config.defaultBodySpace.configValue.top)
      + parseIntOr0(
          resizebar_props.editor._config.defaultBodySpace.configValue.bottom),
      b._BODY.style.minHeight = (b._defaultHeight - a) / b._defaultHeight * 100
          + "%")
};
KEditorResize.prototype.isLeftClick = function (a) {
  var c = !1;
  a = a || window.event;
  a.which || void 0 === a.button || (a.which = a.button & 1 ? 1 : a.button & 2
      ? 3 : a.button & 4 ? 2 : 0);
  switch (a.which) {
    case 1:
      c = !0;
      break;
    case 2:
      c = !1;
      break;
    case 3:
      c = !1;
      break;
    case 0:
      0 == a.button && (c = !1)
  }
  return c
};
KEditorResize.prototype.apply = function (a) {
  try {
    resizebar_props
    && (keditorResizeObj = this, KEDITORTOP.RAONKEDITOR.util.addEvent(a,
        "mousedown", kEditorResizeMouseDownEvt,
        !0), KEDITORTOP.RAONKEDITOR.util.addEvent(a, "mousemove",
        kEditorResizeMouseMoveEvt, !0), KEDITORTOP.RAONKEDITOR.util.addEvent(a,
        "mouseup", kEditorResizeMouseUpEvt, !0), a.addEventListener
    && (domMouseScrollEvent = function (a) {
      keditorResizeObj.wheel(a)
    }, a.addEventListener("DOMMouseScroll", domMouseScrollEvent,
        !1), KEDITORTOP.RAONKEDITOR.RAONKMULTIPLEEVENT[KEDITORTOP.G_CURRKEDITOR.ID].push(
        {
          element: a,
          event: "DOMMouseScroll", func: domMouseScrollEvent
        })), KEDITORTOP.RAONKEDITOR.util.addEvent(a, "blur",
        kEditorResizeBlurEvt, !0))
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
};
KEditorResize.prototype.remove = function (a) {
  try {
    KEDITORTOP.RAONKEDITOR.util.removeEvent(a, "mousedown",
        kEditorResizeMouseDownEvt, !0), KEDITORTOP.RAONKEDITOR.util.removeEvent(
        a, "mousemove", kEditorResizeMouseMoveEvt,
        !0), KEDITORTOP.RAONKEDITOR.util.removeEvent(a, "mouseup",
        kEditorResizeMouseUpEvt, !0), KEDITORTOP.RAONKEDITOR.util.removeEvent(a,
        "blur", kEditorResizeBlurEvt, !0)
  } catch (c) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(c)
  }
};
(function () {
  function a(a) {
    var b = {};
    a = a.split(",");
    for (var c = 0; c < a.length; c++) {
      b[a[c]] = !0;
    }
    return b
  }

  var c = a(
          "p,ul,ol,li,a,img,i,b,u,sup,sub,table,caption,col,colgroup,thead,tbody,tfoot,tr,td,th"),
      b = a("colgroup,col");
  RAONK_EDITOR.HWPFilter = function (b, c) {
    function f(a, b, d, m) {
      b = b.toLowerCase();
      if (w[b]) {
        for ("table" != D.last() && "tbody" != D.last() || "td" != b || f("",
            "tr", "", ""); D.last() && x[D.last()];) {
          g("", D.last());
        }
        "p" != D.last() || "table" != b && "hr" != b && "center" != b || g("",
            "p")
      }
      y[b] && D.last() == b && g("", b);
      (m = v[b] || !!m) ||
      D.push(b);
      if (c.start) {
        var t = [];
        a = h.test(a) ? q : u;
        d.replace(a, function (a, b, c, d, e) {
          c = c ? c : d ? d : e ? e : z[b] ? b : "";
          d = "";
          "" != a && (a = a.substring(a.indexOf(b) + b.length), a = a.substring(
              a.indexOf("=") + 1), a = a.replace(/^\s+/, ""), d = a.substring(0,
              1), "'" != d && '"' != d && (d = ""));
          t.push({
            name: b,
            value: c,
            escaped: c.replace(/(^|[^\\])"/g, '$1\\"'),
            quotationmark: d
          })
        });
        c.start && c.start(b, t, m)
      }
    }

    function g(a, b) {
      if (b) {
        for (b = b.toLowerCase(), d = D.length - 1; 0 <= d && D[d] != b;
            d--) {
          ;
        }
      } else {
        var d = 0;
      }
      if (0 <= d) {
        for (var f = D.length - 1; f >= d; f--) {
          c.end && c.end(D[f]);
        }
        D.length = d
      }
    }

    var h = /^<([-A-Za-z0-9_]+)((?:\s+\w+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,
        m = /^<\/([-A-Za-z0-9_:]+)[^>]*>/,
        q = /([-A-Za-z0-9_]+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,
        t = /^<([-A-Za-z0-9_:-]+)((?:\s+[a-zA-Z_0-9:-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,
        u = /([-A-Za-z0-9_:-]+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,
        v = a(
            "area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed");
    a("area,base,basefont,br,col,frame,img,input,isindex,link,meta,param,embed");
    var w = a(
            "address,applet,blockquote,button,center,dd,del,dir,div,dl,dt,fieldset,form,frameset,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,p,pre,script,table,tbody,td,tfoot,th,thead,tr,ul,h1,h2,h3,h4,h5,h6"),
        x = a(
            "a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var"),
        y = a("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr"), z = a(
            "checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected"),
        A = a(""), B, C, D = [], H = b;
    for (D.last = function () {
      return this[this.length - 1]
    }; b;) {
      C = !0;
      if (D.last() && A[D.last()]) {
        b = b.replace(
            new RegExp("(.*)</" + D.last() + "[^>]*>"), function (a, b) {
              b = b.replace(/\x3c!--(.*?)--\x3e/g, "$1").replace(
                  /<!\[CDATA\[(.*?)]]\x3e/g, "$1");
              c.chars && c.chars(b);
              return ""
            }), g("", D.last());
      } else {
        var G = b.indexOf("<");
        B = b.indexOf(">") +
            1;
        var I = b.substring(G, B);
        if (0 == b.indexOf("\x3c!--")) {
          B = b.indexOf("--\x3e"), 0 <= B
          && (c.comment && c.comment(b.substring(4, B)), b = b.substring(
              B + 3), C = !1);
        } else if (0 == b.indexOf("<?xml")) {
          B = b.indexOf(
              "/>"), 0 <= B && (b = b.substring(B + 2), C = !1);
        } else if (0
            != b.indexOf("<") && "</" + D.last() + ">" == I.replace(/ /ig,
                "")) {
          C = b.substring(0, G), B = b.substring(B), b = C + "</"
              + D.last() + ">" + B, C = !0;
        } else if (0 == b.indexOf("</")) {
          if (B = b.match(m)) {
            b = b.substring(B[0].length), B[0].replace(m,
                g), C = !1
          }
        } else if (0 == b.indexOf("<")) {
          if (B = b.match(h)) {
            b = b.substring(
                B[0].length),
                B[0].replace(h, f), C = !1;
          } else if (B = b.match(
              t)) {
            b = b.substring(B[0].length), B[0].replace(t,
                f), C = !1;
          } else if ("1"
              == KEDITORTOP.G_CURRKEDITOR._config.removeIncorrectAttribute
              && (B = b.indexOf("<"), I = b.indexOf(">"), 0 == B && 0 < I)) {
            var M = b.substring(0, I + 1), K = G = B = 0;
            0 < M.indexOf('\ub9d1\uc740=""') ? (B = M.indexOf(
                    '\ub9d1\uc740=""'), G = 5, K = M.split(
                    '\ub9d1\uc740=""').length)
                : 0 < M.indexOf("\ub9d1\uc740=''") && (B = M.indexOf(
                "\ub9d1\uc740=''"), G = 5, K = M.split(
                "\ub9d1\uc740=''").length);
            if (2 == K && 0 < B && (I = b.substring(I + 1), K = M.substring(0,
                B).lastIndexOf(" "), K < B + G)) {
              if (B = M.substring(K,
                  B + G), M = M.replace(B, ""), b = M + I, B = b.match(
                  h)) {
                b = b.substring(B[0].length), B[0].replace(h,
                    f), C = !1;
              } else if (B = b.match(t)) {
                b = b.substring(
                    B[0].length), B[0].replace(t, f), C = !1
              }
            }
          }
        }
        C && (B = b.indexOf("<"), C = 0 > B ? b : b.substring(0, B), b = 0 > B
            ? "" : b.substring(B), c.chars && (D.last() && x[D.last()]
        && "textarea" != D.last() && "script" != D.last()
        && (B = !1, G = RegExp("\\S\\n", "g"), G.test(C)
        && (B = !0), G = RegExp("\\n\\S", "g"), G.test(C)
        && (B = !0), G = RegExp("\\S\\n\\S", "g"), G.test(C) && (B = !0), B
            ? C = C.replace(/\n/g,
                " ") : (G = RegExp("\\n\\n", "g"), G.test(C) && "" == C.trim()
                ? C = C.replace(/\n\n/g, "") : C == unescape("%20%20")
                && (B = new RegExp(unescape("%20"), "g"), C = C.replace(B,
                    "&nbsp;")))), B = new RegExp(unescape("%20%20"),
            "g"), C = C.replace(B, "&nbsp; "), c.chars(C)))
      }
      if (b == H) {
        throw"Parse Error: " + b;
      }
      H = b
    }
    g()
  };
  RAONK_EDITOR.HWPFilter.DOMProcess = function (b, c, f) {
    c = b;
    try {
      var g = function (a) {
        try {
          if (a.style.cssText) {
            var b = a.style.margin, b = b.split(" "), c = b.length, d = "";
            4 == c ? d = "margin-top: " + b[0] + "; margin-right: " + b[1]
                + "; margin-bottom: " + b[2] +
                "; margin-left: " + b[3] + ";" : 2 == c ? d = "margin-top: "
                + b[0] + "; margin-right: " + b[1] + "; margin-bottom: " + b[0]
                + "; margin-left: " + b[1] + ";" : 3 == c && (d = "margin-top: "
                + b[0] + "; margin-right: " + b[1] + "; margin-bottom: " + b[2]
                + "; margin-left: " + b[1] + ";");
            if ("" != d) {
              a.style.margin = "";
              var e = a.style.cssText;
              a.removeAttribute("style");
              a.setAttribute("style", d + " " + e)
            }
          }
        } catch (f) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(f)
        }
      }, h = function (a, b) {
        try {
          var c = KEDITORTOP.RAONKEDITOR.util.getStyle(a,
              b);
          if (c && "" != c) {
            var d = "", e = !1, f = parseFloat(c) + "";
            c == f && (e = !0);
            if (-1 < c.indexOf("px")) {
              d = q(c);
            } else if (-1 < c.indexOf(
                "pt")) {
              var g = parseFloat(c), d = q(4 * g / 3);
            } else if (-1
                < c.indexOf("em") || -1 < c.indexOf("%") || e) {
              var g = parseFloat(c),
                  h = KEDITORTOP.RAONKEDITOR.util.getStyle(a, "fontSize");
              h && "" != h && (-1 < h.indexOf("px") ? (g *= parseFloat(
                  h), d = q(g)) : -1 < h.indexOf("pt") && (g *= 4 * parseFloat(
                  h) / 3, d = q(g)))
            }
            "" != d && (a.style[b] = d)
          }
        } catch (m) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(m)
        }
      }, m = function (a,
          b) {
        var c = KEDITORTOP.RAONKEDITOR.util.getStyle(a, b);
        "" == c && (c = a.style[b]);
        "" != c && (c = KEDITORTOP.RAONKEDITOR.util.parseIntOr0(c), 0 < c
        && a.setAttribute(b, c))
      }, q = function (a) {
        var b = !1, c;
        c = a + "";
        c = c.replace(/^\s*|\s*$/g, "");
        c = "" == c || isNaN(c) ? !1 : !0;
        c ? b = !0 : -1 < a.indexOf("px") && (a = parseInt(a), b = !0);
        b && (a = .264583 * a + "mm");
        return a
      }, t = function (a) {
        "" != a.align && -1 == ",left,center,right,justify,char,".indexOf(
            "," + a.align.toLowerCase() + ",") && (a.align = "");
        "" != a.vAlign && -1 == ",top,middle,bottom,baseline,".indexOf(
            "," + a.vAlign.toLowerCase() +
            ",") && (a.vAlign = "")
      }, u = function (a) {
        for (var b = [], c = a.length >>> 0; c--;) {
          b[c] = a[c];
        }
        return b
      }, v = function (a) {
        var b = [], c = 0;
        a = a.attributes;
        for (var d = a.length; c < d; c++) {
          b.push(a[c].nodeName);
        }
        return b
      }, w = document.createElement("div");
      try {
        w.style.visibility = !1
      } catch (x) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(x)
      }
      w.style.position = "absolute";
      w.style.top = "0px";
      w.style.left = "-2000px";
      w.innerHTML = c;
      document.body.appendChild(w);
      for (var y = "p ul ol li table caption col colgroup thead tfoot tbody tr th td a img i b u sub sup ".split(
              " "),
          z = j = k = 0, A = y.length, B, C, D, H, G, I, M, K; z < A;
          z++) {
        for (B = w.getElementsByTagName(y[z]), j = 0, H = B.length;
            j < H; j++) {
          C = B[j];
          D = v(C);
          switch (y[z]) {
            case "p":
              "" != C.style.textAlign
              && (M = ",left,center,right,adjust,", K = -1
              == M.indexOf("," + C.style.textAlign.toLowerCase() + ",")
                  ? "adjust"
                  : C.style.textAlign, C.style.textAlign = "", C.align = K);
              "" == C.align && removeAttribute(C, "align");
              removeAttribute(C, "id");
              I = a("id,style,align");
              h(C, "lineHeight");
              h(C, "marginLeft");
              h(C, "marginRight");
              h(C, "marginTop");
              h(C, "marginBottom");
              g(C);
              break;
            case "ul":
            case "ol":
              if (0 ==
                  C.getElementsByTagName("li").length) {
                var P = u(C.childNodes), E = document.createElement("li");
                C.appendChild(E);
                for (var L = 0, O = P.length; L < O; L++) {
                  E.appendChild(P[L])
                }
              }
              I = a("id");
              break;
            case "a":
              I = a("id,name,href,rel,rev");
              break;
            case "img":
              "" != C.align && (M = ",top,middle,bottom,left,right,", -1
              == M.indexOf("," + C.align.toLowerCase() + ",")
              && (C.align = ""));
              m(C, "width");
              m(C, "height");
              "" == C.src ? C.src = "noImage" : 0 == !!f.keepImgUrl
                  && (C.src.indexOf("/") ? C.src = C.src.substring(
                      C.src.lastIndexOf("/") + 1) : C.src.indexOf("\\")
                      && (C.src =
                          C.src.substring(C.src.lastIndexOf("\\") + 1)));
              "" == C.alt && (C.alt = "" != C.title ? C.title : "untitled");
              I = a(
                  "id,src,alt,name,longdesc,height,width,align,border,hspace,vspace");
              break;
            case "table":
              "" != C.align && (M = ",left,center,right,adjust,", -1
              == M.indexOf(
                  "," + C.align.toLowerCase() + ",") && (C.align = ""));
              "" == C.border && C.setAttribute("border",
                  C.style.borderWidth.replace("px", ""));
              C.border && "" != C.border && isNaN(C.border) && C.setAttribute(
                  "border", "1");
              m(C, "width");
              m(C, "height");
              I = a(
                  "id,summary,width,height,border,cellspacing,cellpadding,align");
              break;
            case "caption":
              "" != C.align && (M = ",top,bottom,left,right,", -1 == M.indexOf(
                  "," + C.align.toLowerCase() + ",") && (C.align = ""));
              I = a("id,align");
              break;
            case "colgroup":
            case "col":
              t(C);
              I = a("id,span,width,align,char,charoff,valign");
              break;
            case "thead":
            case "tfoot":
            case "tbody":
            case "tr":
              t(C);
              I = a("id,align,char,charoff,valign");
              break;
            case "th":
            case "td":
              t(C);
              m(C, "width");
              m(C, "height");
              I = a(
                  "id,abbr,axis,headers,scope,rowspan,colspan,align,char,charoff,valign,nowrap,width,height");
              break;
            case "i":
            case "b":
            case "u":
            case "sub":
            case "sup":
            case "li":
              I =
                  a("id");
              break;
            default:
              I = a("id")
          }
          k = 0;
          for (G = D.length; k < G; k++) {
            I[D[k].toLowerCase()] || removeAttribute(
                C, D[k])
          }
        }
      }
      c = KEDITORTOP.RAONKEDITOR.util.html2xhtml(w.innerHTML);
      w.parentNode.removeChild(w);
      try {
        var N = !1, F = !1;
        c = c.replace(/ width=['\"](\d+)['\"]/ig, function (a, b) {
          N = !0;
          return ' width="' + q(b) + '"'
        });
        c = c.replace(/ height=['\"](\d+)['\"]/ig, function (a, b) {
          F = !0;
          return ' height="' + q(b) + '"'
        });
        0 == N && (c = c.replace(/ width=(\d+)/ig, function (a, b) {
          return ' width="' + q(b) + '"'
        }));
        0 == F && (c = c.replace(/ height=(\d+)/ig, function (a,
            b) {
          return ' height="' + q(b) + '"'
        }))
      } catch (J) {
        c = b
      }
    } catch (W) {
      w.parentNode.removeChild(w), c = b
    }
    return c
  };
  RAONK_EDITOR.HWPFilter.GetTagByIdUsingRegex = function (a, b, c) {
    var g, h = c;
    g = (new RegExp("<" + a.toLowerCase() + "[^>]*id[\\s]?=[\\s]?['\"]" + b
        + "['\"][\\s\\S]*?</" + a.toLowerCase() + ">")).exec(c);
    null == g && (g = (new RegExp(
        "<" + a.toUpperCase() + "[^>]*id[\\s]?=[\\s]?['\"]" + b
        + "['\"][\\s\\S]*?</" + a.toUpperCase() + ">")).exec(c));
    g && (a = g[0], b = a.indexOf(">"), c = a.lastIndexOf("</"), 0 < b && 0 < c
    && (h = a.substring(b + 1, c)));
    return h
  };
  RAONK_EDITOR.HWPFilter.HTMLtoXML = function (a, e, f) {
    var g = "", h = a, m = a.toLowerCase().indexOf("<body"),
        q = a.toLowerCase().lastIndexOf("</body>");
    -1 < m && -1 < q && (a = a.substring(m + 1, q), m = a.indexOf(
        ">"), a = a.substring(m + 1));
    a = RAONK_EDITOR.HWPFilter.HtmlToDomProcess(a);
    if ("undefined" != typeof e) {
      try {
        var m = "", t = _iframeDoc.getElementById(e);
        if (t) {
          m = t.tagName.toLowerCase();
        } else {
          var u = _iframeDoc.createElement("div");
          u.style.display = "none";
          u.innerHTML = a;
          _iframeDoc.body.appendChild(u);
          (t = _iframeDoc.getElementById(e)) && (m =
              t.tagName.toLowerCase());
          u.innerHTML = "";
          _iframeDoc.body.removeChild(u);
          try {
            delete null
          } catch (v) {
            KEDITORTOP && KEDITORTOP.RAONKEDITOR
            && KEDITORTOP.RAONKEDITOR.logMode
            && console.log(v)
          }
        }
        "" != m && (a = RAONK_EDITOR.HWPFilter.GetTagByIdUsingRegex(m, e, a))
      } catch (w) {
        a = h
      }
    }
    try {
      a = a.replace(/<italic/gi, "<i"), a = a.replace(/<\/italic>/gi,
          "</i>"), a = a.replace(/<underline/gi, "<u"), a = a.replace(
          /<\/underline>/gi, "</u>"), a = a.replace(/<strong/gi,
          "<b"), a = a.replace(/<\/strong>/gi, "</b>"), RAONK_EDITOR.HWPFilter(
          a, {
            start: function (a,
                b, d) {
              if (c[a]) {
                g += "<" + a;
                for (a = 0; a < b.length; a++) {
                  g = "href" == b[a].name || "src"
                  == b[a].name ? g + (" " + b[a].name + "=" + b[a].quotationmark
                      + b[a].value + b[a].quotationmark) : ""
                  != b[a].quotationmark ? g + (" " + b[a].name + "="
                      + b[a].quotationmark + b[a].value + b[a].quotationmark)
                      : g
                      + (" " + b[a].name + '="' + b[a].escaped + '"');
                }
                g += (d ? "/" : "") + ">"
              }
            }, end: function (a) {
              c[a] && !b[a] && (g += "</" + a + ">")
            }, chars: function (a) {
              g += a
            }, comment: function (a) {
              g += ""
            }
          })
    } catch (x) {
      g = h
    }
    return g = RAONK_EDITOR.HWPFilter.DOMProcess(g, e, f)
  };
  RAONK_EDITOR.HWPFilter.HtmlToDomProcess =
      function (a) {
        var b = a, c = !1;
        document.createTreeWalker && (c = !0);
        if (c) {
          var g = document.createElement("div");
          g.style.display = "none";
          g.innerHTML = a;
          document.body.appendChild(g);
          a = g.getElementsByTagName("p");
          for (var b = a.length, h = 0; h < b; h++) {
            if (c) {
              for (var m = a[h],
                  q = void 0,
                  t = document.createTreeWalker(m, NodeFilter.SHOW_TEXT, null,
                      !1);
                  q = t.nextNode();) {
                var u = q.nodeValue, u = u.replace(/\n/g, ""),
                    u = u.replace(/\t/g, "");
                if ("" != u && (q = q.parentNode) && q.tagName && "span"
                    == q.tagName.toLowerCase()) {
                  for (var u = ["fontFamily", "fontSize"],
                      v = u.length, w = 0, x = 0; x < v; x++) {
                    var y = KEDITORTOP.RAONKEDITOR.util.getStyle(q, u[x]);
                    y && (m.style[u[x]] = y, w++)
                  }
                  if (0 < w) {
                    break
                  }
                }
              }
            }
          }
          b = g.innerHTML;
          g.parentNode.removeChild(g)
        }
        return b
      }
})();
var g_d5selectedCName = "keditor_selected_basic",
    g_d5selectedFocusCName = "keditor_selected_nofocus";

function setFormControlSelected(a) {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.formMode) {
    var c = ["INPUT", "TEXTAREA", "SELECT", "BUTTON"], b = c.length, d = !1;
    if (a && 1 == a.nodeType) {
      for (var e = 0; e < b; e++) {
        if (a.tagName
            == c[e]) {
          d = !0;
          break
        }
      }
    }
    if (0 == d) {
      clearAllFormControlSelected();
    } else {
      rangy.getSelection(_iframeWin).removeAllRanges();
      for (var f = [], g = _iframeDoc.body, e = 0; e < b;
          e++) {
        for (var h = g.getElementsByTagName(c[e]), m = h.length, q = 0;
            q < m; q++) {
          h[q].className != g_d5selectedCName && h[q].className
          != g_d5selectedFocusCName || a == h[q] || f.push(h[q]);
        }
      }
      if (d) {
        if (a.className == g_d5selectedCName) {
          d5RemoveSelectedClassName(a,
              g_d5selectedCName);
        } else if (a.className
            == g_d5selectedFocusCName) {
          d5RemoveSelectedClassName(a,
              g_d5selectedFocusCName), 0 < f.length
          && (f[0].className = g_d5selectedFocusCName);
        } else {
          for (d5AddSelectedClassName(
              a, g_d5selectedFocusCName), a = f.length, e = 0; e < a;
              e++) {
            d5RemoveSelectedClassName(f[e],
                g_d5selectedFocusCName), d5AddSelectedClassName(f[e],
                g_d5selectedCName)
          }
        }
      }
    }
  }
}

function getFormControlSelectedItem() {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.formMode) {
    for (var a = {count: 0, arrNodes: []},
        c = ["INPUT", "TEXTAREA", "SELECT", "BUTTON"], b = c.length,
        d = _iframeDoc.body, e = 0; e < b;
        e++) {
      for (var f = d.getElementsByTagName(c[e]), g = f.length, h = 0;
          h < g; h++) {
        if (f[h].className == g_d5selectedCName || f[h].className
            == g_d5selectedFocusCName) {
          a.count += 1, a.arrNodes.push(f[h]);
        }
      }
    }
    return a
  }
}

function clearAllFormControlSelected(a) {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.formMode) {
    var c = _iframeDoc;
    a && (c = a);
    a = ["INPUT", "TEXTAREA", "SELECT", "BUTTON"];
    for (var b = a.length, c = c.body, d = 0; d < b;
        d++) {
      for (var e = c.getElementsByTagName(a[d]), f = e.length, g = 0;
          g < f; g++) {
        if (e[g].className == g_d5selectedCName || e[g].className
            == g_d5selectedFocusCName) {
          d5RemoveSelectedClassName(e[g],
              g_d5selectedCName), d5RemoveSelectedClassName(e[g],
              g_d5selectedFocusCName)
        }
      }
    }
  }
}

function d5AddSelectedClassName(a, c) {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.formMode) {
    var b = a.className, d = "";
    if (0 < b.length) {
      for (var b = b.split(" "), e = b.length, f = 0; f < e; f++) {
        c != b[f]
        && (d += b[f] + " ");
      }
      d += c
    } else {
      d = c;
    }
    a.className = d
  }
}

function d5RemoveSelectedClassName(a, c) {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.formMode) {
    var b = a.className, d = "";
    if (0 < b.length) {
      for (var b = b.split(" "), e = b.length, f = 0; f < e;
          f++) {
        b[f] != c && (d = f < e - 1 ? d + (b[f] + " ") : d
            + b[f]);
      }
    } else {
      d = "";
    }
    a.className = d
  }
}

function d5ApplyAlignLeft() {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.formMode) {
    var a = getFormControlSelectedItem();
    if (!(1 >= a.count)) {
      for (var c = null, b = 0; b < a.count; b++) {
        if (a.arrNodes[b].className
            == g_d5selectedFocusCName) {
          c = a.arrNodes[b];
          break
        }
      }
      if (c) {
        for (b = 0; b < a.count; b++) {
          a.arrNodes[b] != c
          && (a.arrNodes[b].style.left = getClientRect(c).left + "px")
        }
      }
    }
  }
}

function d5ApplySameWidth() {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.formMode) {
    var a = getFormControlSelectedItem();
    if (!(1 >= a.count)) {
      for (var c = null, b = 0; b < a.count; b++) {
        if (a.arrNodes[b].className
            == g_d5selectedFocusCName) {
          c = a.arrNodes[b];
          break
        }
      }
      if (c) {
        for (c = "" == c.style.width ? getClientRect(c).right
            - getClientRect(c).left + "px" : c.style.width, b = 0; b < a.count;
            b++) {
          a.arrNodes[b].style.width = c
        }
      }
    }
  }
}

function d5ApplySameHeight() {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.formMode) {
    var a = getFormControlSelectedItem();
    if (!(1 >= a.count)) {
      for (var c = null, b = 0; b < a.count; b++) {
        if (a.arrNodes[b].className
            == g_d5selectedFocusCName) {
          c = a.arrNodes[b];
          break
        }
      }
      if (c) {
        for (c = "" == c.style.height ? getClientRect(c).bottom
            - getClientRect(c).top + "px" : c.style.height, b = 0; b < a.count;
            b++) {
          a.arrNodes[b].style.height = c
        }
      }
    }
  }
}

function d5ApplySameWidthHeight() {
  if ("1" == KEDITORTOP.G_CURRKEDITOR._config.formMode) {
    var a = getFormControlSelectedItem();
    if (!(1 >= a.count)) {
      for (var c = null, b = 0; b < a.count; b++) {
        if (a.arrNodes[b].className
            == g_d5selectedFocusCName) {
          c = a.arrNodes[b];
          break
        }
      }
      if (c) {
        for (var d = "" == c.style.width ? getClientRect(c).right
                - getClientRect(c).left + "px" : c.style.width,
            c = "" == c.style.height ? getClientRect(c).bottom - getClientRect(
                c).top + "px" : c.style.height, b = 0; b < a.count;
            b++) {
          a.arrNodes[b].style.width = d, a.arrNodes[b].style.height =
              c
        }
      }
    }
  }
};"object" != typeof JSON && (JSON = {});
(function () {
  function a(a) {
    return 10 > a ? "0" + a : a
  }

  function c(a) {
    return e.lastIndex = 0, e.test(a) ? '"' + a.replace(e, function (a) {
      var b = h[a];
      return "string" == typeof b ? b : "\\u" + ("0000" + a.charCodeAt(
          0).toString(16)).slice(-4)
    }) + '"' : '"' + a + '"'
  }

  function b(a, d) {
    var e, h, w, x, y, z = f, A = d[a];
    switch (A && "object" == typeof A && "function" == typeof A.toJSON
    && (A = A.toJSON(a)), "function" == typeof m && (A = m.call(d, a,
        A)), typeof A) {
      case "string":
        return c(A);
      case "number":
        return isFinite(A) ? A + "" : "null";
      case "boolean":
      case "null":
        return A + "";
      case "object":
        if (!A) {
          return "null";
        }
        if (f += g, y = [], "[object Array]"
        === Object.prototype.toString.apply(A)) {
          x = A.length;
          for (e = 0; x > e; e += 1) {
            y[e] = b(e, A) || "null";
          }
          return w = 0 === y.length ? "[]" : f ? "[\n" + f + y.join(",\n" + f)
              + "\n" + z + "]" : "[" + y.join(",") + "]", f = z, w
        }
        if (m && "object" == typeof m) {
          for (x = m.length, e = 0; x > e;
              e += 1) {
            "string" == typeof m[e] && (h = m[e], w = b(h, A), w
            && y.push(c(h) + (f ? ": " : ":") + w));
          }
        } else {
          for (h in
              A) {
            Object.prototype.hasOwnProperty.call(A, h) && (w = b(h, A), w
            && y.push(c(h) + (f ? ": " : ":") + w));
          }
        }
        return w = 0 === y.length ? "{}" : f ? "{\n" + f +
            y.join(",\n" + f) + "\n" + z + "}" : "{" + y.join(",")
            + "}", f = z, w
    }
  }

  "function" != typeof Date.prototype.toJSON
  && (Date.prototype.toJSON = function () {
    return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + a(
        this.getUTCMonth() + 1) + "-" + a(this.getUTCDate()) + "T" + a(
        this.getUTCHours()) + ":" + a(this.getUTCMinutes()) + ":" + a(
        this.getUTCSeconds()) + "Z" : null
  }, String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function () {
    return this.valueOf()
  });
  var d, e, f, g, h, m;
  "function" != typeof JSON.stringify
  && (e = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
      h = {
        "\b": "\\b",
        "\t": "\\t",
        "\n": "\\n",
        "\f": "\\f",
        "\r": "\\r",
        '"': '\\"',
        "\\": "\\\\"
      }, JSON.stringify = function (a, c, d) {
    var e;
    if (f = "", g = "", "number" == typeof d) {
      for (e = 0; d > e;
          e += 1) {
        g += " ";
      }
    } else {
      "string" == typeof d && (g = d);
    }
    if (m = c, c && "function" != typeof c && ("object" != typeof c || "number"
        != typeof c.length)) {
      throw Error("JSON.stringify");
    }
    return b("", {"": a})
  });
  "function" != typeof JSON.parse
  && (d = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, JSON.parse = function (a,
      b) {
    function c(a,
        d) {
      var e, f, g = a[d];
      if (g && "object" == typeof g) {
        for (e in
            g) {
          Object.prototype.hasOwnProperty.call(g, e) && (f = c(g, e), void 0
          !== f ? g[e] = f : delete g[e]);
        }
      }
      return b.call(a, d, g)
    }

    var e;
    if (a += "", d.lastIndex = 0, d.test(a) && (a = a.replace(d, function (a) {
      return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
    })), /^[\],:{}\s]*$/.test(
        a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(
            /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
            "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
      return e = eval(
          "(" + a + ")"),
          "function" == typeof b ? c({"": e}, "") : e;
    }
    throw new SyntaxError("JSON.parse");
  })
})();
"undefined" == typeof JSON && (this.JSON = {});
(function () {
  var a = {
    "\b": "\\b",
    "\t": "\\t",
    "\n": "\\n",
    "\f": "\\f",
    "\r": "\\r",
    '"': '\\"',
    "\\": "\\\\"
  }, c = function (b) {
    return a[b] || "\\u" + ("0000" + b.charCodeAt(0).toString(16)).slice(-4)
  };
  JSON.validate = function (a) {
    a = a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(
        /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
        "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "");
    return /^[\],:{}\s]*$/.test(a)
  };
  JSON.encode = JSON.stringify ? function (a) {
    return JSON.stringify(a)
  } : function (a) {
    a && a.toJSON && (a = a.toJSON());
    switch (typeOf(a)) {
      case "string":
        return '"' + a.replace(/[\x00-\x1f\\"]/g, c) + '"';
      case "array":
        return "[" + a.map(JSON.encode).clean() + "]";
      case "object":
      case "hash":
        var d = [];
        Object.each(a, function (a, b) {
          var c = JSON.encode(a);
          c && d.push(JSON.encode(b) + ":" + c)
        });
        return "{" + d + "}";
      case "number":
      case "boolean":
        return "" + a;
      case "null":
        return "null"
    }
    return null
  };
  JSON.secure = !0;
  JSON.decode = function (a, c) {
    if (!a || "string" != typeof a) {
      return null;
    }
    null == c && (c = JSON.secure);
    if (c) {
      if (JSON.parse) {
        return JSON.parse(a);
      }
      if (!JSON.validate(a)) {
        throw Error(
            "JSON could not decode the input; security is enabled and the value is not secure.");
      }
    }
    return eval("(" + a + ")")
  }
})();
var onChange = function (a) {
  var c = a.editor;
  a = a.isPossibleDirty;
  try {
    for (var b in G_KPlugin) {
      if ("function"
          === typeof G_KPlugin[b].onChange) {
        G_KPlugin[b].onChange()
      }
    }
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  set_ruler_vertical_height(c);
  set_horizontal_line_2(c);
  a && (G_IsPossibleDirty = a);
  "" != c._config.placeholder.content && placeholderControl(c, "class")
}, onCommand = function (a) {
  var c = a.editor, b = a.cmd, d = !1;
  1 == a.tool && (d = !0);
  try {
    for (var e in G_KPlugin) {
      if ("function" ===
          typeof G_KPlugin[e].onCommand) {
        G_KPlugin[e].onCommand(a)
      }
    }
  } catch (f) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(f)
  }
  if ("1" == c._config.returnEvent.command_event) {
    try {
      "function" === typeof KEDITORTOP.G_CURRKEDITOR._config.event.command
          ? KEDITORTOP.G_CURRKEDITOR._config.event.command(c.ID,
              {cmd: b, tool: d}) : "function"
          === typeof KEDITORTOP.KEDITORWIN.RAONKEDITOR_CommandEvent
          && KEDITORTOP.KEDITORWIN.RAONKEDITOR_CommandEvent(c.ID,
              {cmd: b, tool: d})
    } catch (g) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR &&
      KEDITORTOP.RAONKEDITOR.logMode && console.log(g)
    }
  }
}, onResize = function (a) {
  try {
    for (var c in G_KPlugin) {
      if ("function"
          === typeof G_KPlugin[c].onResize) {
        G_KPlugin[c].onResize(a)
      }
    }
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
}, onInitOnce = function (a) {
  try {
    for (var c in G_KPlugin) {
      if ("function"
          === typeof G_KPlugin[c].onInitOnce) {
        G_KPlugin[c].onInitOnce(a)
      }
    }
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
}, onColorPicker = function (a) {
  var c =
      null;
  try {
    for (var b in G_KPlugin) {
      "function" === typeof G_KPlugin[b].onColorPicker
      && (c = G_KPlugin[b].onColorPicker(a))
    }
  } catch (d) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(d)
  }
  return c
}, onCellResize = function (a) {
  try {
    for (var c in G_KPlugin) {
      if ("function"
          === typeof G_KPlugin[c].onCellResize) {
        G_KPlugin[c].onCellResize(a)
      }
    }
  } catch (b) {
    KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
    && console.log(b)
  }
};

var rangy;
rangy = rangy || function () {
  function h(c, d) {
    var e = typeof c[d];
    return e == b || e == a && !!c[d] || e == "unknown"
  }

  function i(b, c) {
    return typeof b[c] == a && !!b[c]
  }

  function j(a, b) {
    return typeof a[b] != c
  }

  function k(a) {
    return function (b, c) {
      var d = c.length;
      while (d--) {
        if (!a(b, c[d])) {
          return !1;
        }
      }
      return !0
    }
  }

  function o(a) {
    return a && l(a, g) && n(a, f)
  }

  function p(a) {
    return i(a, "body") ? a.body : a.getElementsByTagName("body")[0]
  }

  function s(a) {
    i(window, "console") && h(window.console, "log") && window.console.log(a)
  }

  function t(a, b) {
    b ? window.alert(a) : s(a)
  }

  function u(a) {
    r.initialized = !0, r.supported = !1, t(
        "Rangy is not supported on this page in your browser. Reason: " + a,
        r.config.alertOnFail)
  }

  function v(a) {
    t("Rangy warning: " + a, r.config.alertOnWarn)
  }

  function y(a) {
    return a.message || a.description || String(a)
  }

  function z() {
    if (r.initialized) {
      return;
    }
    var a, b = !1,
        c = !1;
    h(document, "createRange") && (a = document.createRange(), l(a, e) && n(a,
        d) && (b = !0), a.detach());
    var f = p(document);
    if (!f || f.nodeName.toLowerCase() != "body") {
      u("No body element found");
      return
    }
    f && h(f, "createTextRange") && (a = f.createTextRange(), o(a) && (c = !0));
    if (!b && !c) {
      u("Neither Range nor TextRange are available");
      return
    }
    r.initialized = !0, r.features = {
      implementsDomRange: b,
      implementsTextRange: c
    };
    var g, i;
    for (var j in q) {
      (g = q[j]) instanceof C && g.init();
    }
    for (var k = 0, m = x.length; k < m; ++k) {
      try {
        x[k](r)
      } catch (t) {
        i = "Rangy init listener threw an exception. Continuing. Detail: " + y(
            t), s(i)
      }
    }
  }

  function B(a) {
    a = a || window, z();
    for (var b = 0, c = A.length; b < c; ++b) {
      A[b](a)
    }
  }

  function C(a, b) {
    this.name = a, this.initialized = !1, this.supported = !1, this.init = b
  }

  var a = "object",
      b = "function",
      c = "undefined",
      d = ["startContainer", "startOffset", "endContainer", "endOffset",
        "collapsed", "commonAncestorContainer"],
      e = ["setStart", "setStartBefore", "setStartAfter", "setEnd",
        "setEndBefore", "setEndAfter", "collapse", "selectNode",
        "selectNodeContents", "compareBoundaryPoints", "deleteContents",
        "extractContents", "cloneContents", "insertNode", "surroundContents",
        "cloneRange", "toString", "detach"],
      f = ["boundingHeight", "boundingLeft", "boundingTop", "boundingWidth",
        "htmlText", "text"],
      g = ["collapse", "compareEndPoints", "duplicate", "moveToElementText",
        "parentElement", "select", "setEndPoint", "getBoundingClientRect"],
      l = k(h),
      m = k(i),
      n = k(j),
      q = {},
      r = {
        version: "1.3alpha.772",
        initialized: !1,
        supported: !0,
        util: {
          isHostMethod: h,
          isHostObject: i,
          isHostProperty: j,
          areHostMethods: l,
          areHostObjects: m,
          areHostProperties: n,
          isTextRange: o,
          getBody: p
        },
        features: {},
        modules: q,
        config: {
          alertOnFail: !0,
          alertOnWarn: !1,
          preferTextRange: !1
        }
      };
  r.fail = u, r.warn = v, {}.hasOwnProperty ? r.util.extend = function (a, b,
      c) {
    var d, e;
    for (var f in b) {
      b.hasOwnProperty(f) && (d = a[f], e = b[f], c && d !== null
      && typeof d == "object" && e !== null && typeof e == "object"
      && r.util.extend(d, e, !0), a[f] = e);
    }
    return a
  } : u("hasOwnProperty not supported"),
      function () {
        var a = document.createElement("div");
        a.appendChild(document.createElement("span"));
        var b = [].slice,
            c;
        try {
          b.call(a.childNodes, 0)[0].nodeType == 1 && (c = function (a) {
            return b.call(a, 0)
          })
        } catch (d) {
        }
        c || (c = function (a) {
          var b = [];
          for (var c = 0, d = a.length; c < d; ++c) {
            b[c] = a[c];
          }
          return b
        }), r.util.toArray = c
      }();
  var w;
  h(document, "addEventListener") ? w = function (a, b, c) {
    a.addEventListener(b, c, !1)
  } : h(document, "attachEvent") ? w = function (a, b, c) {
    a.attachEvent("on" + b, c)
  } : u(
      "Document does not have required addEventListener or attachEvent method"), r.util.addListener = w;
  var x = [];
  r.init = z, r.addInitListener = function (a) {
    r.initialized ? a(r) : x.push(a)
  };
  var A = [];
  r.addCreateMissingNativeApiListener = function (a) {
    A.push(a)
  }, r.createMissingNativeApi = B, C.prototype = {
    fail: function (a) {
      throw this.initialized = !0, this.supported = !1, new Error(
          "Module '" + this.name + "' failed to load: " + a)
    },
    warn: function (a) {
      r.warn("Module " + this.name + ": " + a)
    },
    deprecationNotice: function (a, b) {
      r.warn("DEPRECATED: " + a + " in module " + this.name
          + "is deprecated. Please use " + b + " instead")
    },
    createError: function (a) {
      return new Error("Error in Rangy " + this.name + " module: " + a)
    }
  }, r.createModule = function (a, b) {
    var c = new C(a, function () {
      if (!c.initialized) {
        c.initialized = !0;
        try {
          b(r, c), c.supported = !0
        } catch (d) {
          var e = "Module '" + a + "' failed to load: " + y(d);
          s(e)
        }
      }
    });
    q[a] = c
  }, r.requireModules = function (a) {
    for (var b = 0, c = a.length, d, e; b < c; ++b) {
      e = a[b], d = q[e];
      if (!d || !(d instanceof C)) {
        throw new Error(
            "required module '" + e + "' not found");
      }
      d.init();
      if (!d.supported) {
        throw new Error(
            "required module '" + e + "' not supported")
      }
    }
  };
  var D = !1,
      E = function (a) {
        D || (D = !0, r.initialized || z())
      };
  if (typeof window == c) {
    u("No window found");
    return
  }
  if (typeof document == c) {
    u("No document found");
    return
  }
  return h(document, "addEventListener") && document.addEventListener(
      "DOMContentLoaded", E, !1), w(window, "load", E), r
}(), rangy.createModule("DomUtil", function (a, b) {
  function h(a) {
    var b;
    return typeof a.namespaceURI == c || (b = a.namespaceURI) === null || b
        == "http://www.w3.org/1999/xhtml"
  }

  function i(a) {
    var b = a.parentNode;
    return b.nodeType == 1 ? b : null
  }

  function j(a) {
    var b = 0;
    while (a = a.previousSibling) {
      ++b;
    }
    return b
  }

  function k(a) {
    switch (a.nodeType) {
      case 7:
      case 10:
        return 0;
      case 3:
      case 8:
        return a.length;
      default:
        return a.childNodes.length
    }
  }

  function l(a, b) {
    var c = [],
        d;
    for (d = a; d; d = d.parentNode) {
      c.push(d);
    }
    for (d = b; d; d = d.parentNode) {
      if (g(c, d)) {
        return d;
      }
    }
    return null
  }

  function m(a, b, c) {
    var d = c ? b : b.parentNode;
    while (d) {
      if (d === a) {
        return !0;
      }
      d = d.parentNode
    }
    return !1
  }

  function n(a, b) {
    return m(a, b, !0)
  }

  function o(a, b, c) {
    var d, e = c ? a : a.parentNode;
    while (e) {
      d = e.parentNode;
      if (d === b) {
        return e;
      }
      e = d
    }
    return null
  }

  function p(a) {
    var b = a.nodeType;
    return b == 3 || b == 4 || b == 8
  }

  function q(a) {
    if (!a) {
      return !1;
    }
    var b = a.nodeType;
    return b == 3 || b == 8
  }

  function r(a, b) {
    var c = b.nextSibling,
        d = b.parentNode;
    return c ? d.insertBefore(a, c) : d.appendChild(a), a
  }

  function s(a, b, c) {
    var d = a.cloneNode(!1);
    d.deleteData(0, b), a.deleteData(b, a.length - b), r(d, a);
    if (c) {
      for (var e = 0, f; f = c[e++];) {
        f.node == a && f.offset > b
            ? (f.node = d, f.offset -= b) : f.node == a.parentNode && f.offset
            > j(a) && ++f.offset;
      }
    }
    return d
  }

  function t(a) {
    if (a.nodeType == 9) {
      return a;
    }
    if (typeof a.ownerDocument != c) {
      return a.ownerDocument;
    }
    if (typeof a.document != c) {
      return a.document;
    }
    if (a.parentNode) {
      return t(a.parentNode);
    }
    throw b.createError("getDocument: no document found for node")
  }

  function u(a) {
    var d = t(a);
    if (typeof d.defaultView != c) {
      return d.defaultView;
    }
    if (typeof d.parentWindow != c) {
      return d.parentWindow;
    }
    throw b.createError("Cannot get a window object for node")
  }

  function v(a) {
    if (typeof a.contentDocument != c) {
      return a.contentDocument;
    }
    if (typeof a.contentWindow != c) {
      return a.contentWindow.document;
    }
    throw b.createError(
        "getIframeDocument: No Document object found for iframe element")
  }

  function w(a) {
    if (typeof a.contentWindow != c) {
      return a.contentWindow;
    }
    if (typeof a.contentDocument != c) {
      return a.contentDocument.defaultView;
    }
    throw b.createError(
        "getIframeWindow: No Window object found for iframe element")
  }

  function x(a) {
    return a && d.isHostMethod(a, "setTimeout") && d.isHostObject(a, "document")
  }

  function y(a, b, c) {
    var e;
    a ? d.isHostProperty(a, "nodeType") ? e = a.nodeType == 1
    && a.tagName.toLowerCase() == "iframe" ? v(a) : t(a) : x(a)
        && (e = a.document) : e = document;
    if (!e) {
      throw b.createError(
          c + "(): Parameter must be a Window object or DOM node");
    }
    return e
  }

  function z(a) {
    var b;
    while (b = a.parentNode) {
      a = b;
    }
    return a
  }

  function A(a, c, d, e) {
    var f, g, h, i, k;
    if (a == d) {
      return c === e ? 0 : c < e ? -1 : 1;
    }
    if (f = o(d, a, !0)) {
      return c <= j(f) ? -1 : 1;
    }
    if (f = o(a, d, !0)) {
      return j(f) < e ? -1 : 1;
    }
    g = l(a, d), h = a === g ? g : o(a, g, !0), i = d === g ? g : o(d, g, !0);
    if (h === i) {
      throw b.createError(
          "comparePoints got to case 4 and childA and childB are the same!");
    }
    k = g.firstChild;
    while (k) {
      if (k === h) {
        return -1;
      }
      if (k === i) {
        return 1;
      }
      k = k.nextSibling
    }
  }

  function C(a) {
    try {
      return a.parentNode, !1
    } catch (b) {
      return !0
    }
  }

  function D(a) {
    if (!a) {
      return "[No node]";
    }
    if (B && C(a)) {
      return "[Broken node]";
    }
    if (p(a)) {
      return '"' + a.data + '"';
    }
    if (a.nodeType == 1) {
      var b = a.id ? ' id="' + a.id + '"' : "";
      return "<" + a.nodeName + b + ">[" + a.childNodes.length + "]["
          + a.innerHTML.slice(0, 20) + "]"
    }
    return a.nodeName
  }

  function E(a) {
    var b = t(a).createDocumentFragment(),
        c;
    while (c = a.firstChild) {
      b.appendChild(c);
    }
    return b
  }

  function G(a) {
    this.root = a, this._next = a
  }

  function H(a) {
    return new G(a)
  }

  function I(a, b) {
    this.node = a, this.offset = b
  }

  function J(a) {
    this.code = this[a], this.codeName = a, this.message = "DOMException: "
        + this.codeName
  }

  var c = "undefined",
      d = a.util;
  d.areHostMethods(document,
      ["createDocumentFragment", "createElement", "createTextNode"]) || b.fail(
      "document missing a Node creation method"), d.isHostMethod(document,
      "getElementsByTagName") || b.fail(
      "document missing getElementsByTagName method");
  var e = document.createElement("div");
  d.areHostMethods(e,
      ["insertBefore", "appendChild", "cloneNode"] || !d.areHostObjects(e,
          ["previousSibling", "nextSibling", "childNodes", "parentNode"]))
  || b.fail("Incomplete Element implementation"), d.isHostProperty(e,
      "innerHTML") || b.fail("Element is missing innerHTML property");
  var f = document.createTextNode("test");
  d.areHostMethods(f,
      ["splitText", "deleteData", "insertData", "appendData", "cloneNode"]
      || !d.areHostObjects(e,
          ["previousSibling", "nextSibling", "childNodes", "parentNode"])
      || !d.areHostProperties(f, ["data"])) || b.fail(
      "Incomplete Text Node implementation");
  var g = function (a, b) {
        var c = a.length;
        while (c--) {
          if (a[c] === b) {
            return !0;
          }
        }
        return !1
      },
      B = !1;
  (function () {
    var b = document.createElement("b");
    b.innerHTML = "1";
    var c = b.firstChild;
    b.innerHTML = "<br>", B = C(c), a.features.crashyTextNodes = B
  })();
  var F;
  typeof window.getComputedStyle != c ? F = function (a, b) {
    return u(a).getComputedStyle(a, null)[b]
  } : typeof document.documentElement.currentStyle != c ? F = function (a, b) {
    return a.currentStyle[b]
  } : b.fail(
      "No means of obtaining computed style properties found"), G.prototype = {
    _current: null,
    hasNext: function () {
      return !!this._next
    },
    next: function () {
      var a = this._current = this._next,
          b, c;
      if (this._current) {
        b = a.firstChild;
        if (b) {
          this._next = b;
        } else {
          c = null;
          while (a !== this.root && !(c = a.nextSibling)) {
            a = a.parentNode;
          }
          this._next = c
        }
      }
      return this._current
    },
    detach: function () {
      this._current = this._next = this.root = null
    }
  }, I.prototype = {
    equals: function (a) {
      return !!a && this.node === a.node && this.offset == a.offset
    },
    inspect: function () {
      return "[DomPosition(" + D(this.node) + ":" + this.offset + ")]"
    },
    toString: function () {
      return this.inspect()
    }
  }, J.prototype = {
    INDEX_SIZE_ERR: 1,
    HIERARCHY_REQUEST_ERR: 3,
    WRONG_DOCUMENT_ERR: 4,
    NO_MODIFICATION_ALLOWED_ERR: 7,
    NOT_FOUND_ERR: 8,
    NOT_SUPPORTED_ERR: 9,
    INVALID_STATE_ERR: 11
  }, J.prototype.toString = function () {
    return this.message
  }, a.dom = {
    arrayContains: g,
    isHtmlNamespace: h,
    parentElement: i,
    getNodeIndex: j,
    getNodeLength: k,
    getCommonAncestor: l,
    isAncestorOf: m,
    isOrIsAncestorOf: n,
    getClosestAncestorIn: o,
    isCharacterDataNode: p,
    isTextOrCommentNode: q,
    insertAfter: r,
    splitDataNode: s,
    getDocument: t,
    getWindow: u,
    getIframeWindow: w,
    getIframeDocument: v,
    getBody: d.getBody,
    isWindow: x,
    getContentDocument: y,
    getRootContainer: z,
    comparePoints: A,
    isBrokenNode: C,
    inspectNode: D,
    getComputedStyleProperty: F,
    fragmentFromNodeChildren: E,
    createIterator: H,
    DomPosition: I
  }, a.DOMException = J
}), rangy.createModule("DomRange", function (a, b) {
  function r(a, b) {
    return a.nodeType != 3 && (i(a, b.startContainer) || i(a, b.endContainer))
  }

  function s(a) {
    return a.document || j(a.startContainer)
  }

  function t(a) {
    return new e(a.parentNode, h(a))
  }

  function u(a) {
    return new e(a.parentNode, h(a) + 1)
  }

  function v(a, b, d) {
    var e = a.nodeType == 11 ? a.firstChild : a;
    return g(b) ? d == b.length ? c.insertAfter(a, b)
        : b.parentNode.insertBefore(a, d == 0 ? b : l(b, d)) : d
    >= b.childNodes.length ? b.appendChild(a) : b.insertBefore(a,
        b.childNodes[d]), e
  }

  function w(a, b, c) {
    Y(a), Y(b);
    var d = k(a.startContainer, a.startOffset, b.endContainer, b.endOffset),
        e = k(a.endContainer, a.endOffset, b.startContainer, b.startOffset);
    return c ? d <= 0 && e >= 0 : d < 0 && e > 0
  }

  function x(a) {
    var b;
    for (var c, d = s(a.range).createDocumentFragment(), e; c = a.next();) {
      b = a.isPartiallySelectedSubtree(), c = c.cloneNode(!b), b
      && (e = a.getSubtreeIterator(), c.appendChild(x(e)), e.detach(!0));
      d.appendChild(c)
    }
    return d
  }

  function y(a, b, d) {
    var e, f;
    d = d || {
      stop: !1
    };
    for (var g, h; g = a.next();) {
      if (a.isPartiallySelectedSubtree()) {
        if (b(g) === !1) {
          d.stop = !0;
          return
        }
        h = a.getSubtreeIterator(), y(h, b, d), h.detach(!0);
        if (d.stop) {
          return
        }
      } else {
        e = c.createIterator(g);
        while (f = e.next()) {
          if (b(f) === !1) {
            d.stop = !0;
            return
          }
        }
      }
    }
  }

  function z(a) {
    var b;
    while (a.next()) {
      a.isPartiallySelectedSubtree()
          ? (b = a.getSubtreeIterator(), z(b), b.detach(!0)) : a.remove()
    }
  }

  function A(a) {
    for (var b, c = s(a.range).createDocumentFragment(), d; b = a.next();) {
      a.isPartiallySelectedSubtree() ? (b = b.cloneNode(
              !1), d = a.getSubtreeIterator(), b.appendChild(A(d)), d.detach(!0))
          : a.remove();
      c.appendChild(b)
    }
    return c
  }

  function B(a, b, c) {
    var d = !!b && !!b.length,
        e, f = !!c;
    d && (e = new RegExp("^(" + b.join("|") + ")$"));
    var g = [];
    return y(new D(a, !1), function (a) {
      (!d || e.test(a.nodeType)) && (!f || c(a)) && g.push(a)
    }), g
  }

  function C(a) {
    var b = typeof a.getName == "undefined" ? "Range" : a.getName();
    return "[" + b + "(" + c.inspectNode(a.startContainer) + ":" + a.startOffset
        + ", " + c.inspectNode(a.endContainer) + ":" + a.endOffset + ")]"
  }

  function D(a, b) {
    this.range = a, this.clonePartiallySelectedTextNodes = b;
    if (!a.collapsed) {
      this.sc = a.startContainer, this.so = a.startOffset, this.ec = a.endContainer, this.eo = a.endOffset;
      var c = a.commonAncestorContainer;
      this.sc === this.ec && g(this.sc)
          ? (this.isSingleCharacterDataNode = !0, this._first = this._last = this._next = this.sc)
          : (this._first = this._next = this.sc === c && !g(this.sc)
              ? this.sc.childNodes[this.so] : m(this.sc, c,
                  !0), this._last = this.ec === c && !g(this.ec)
              ? this.ec.childNodes[this.eo - 1] : m(this.ec, c, !0))
    }
  }

  function E(a) {
    this.code = this[a], this.codeName = a, this.message = "RangeException: "
        + this.codeName
  }

  function K(a) {
    return function (b, c) {
      var d, e = c ? b : b.parentNode;
      while (e) {
        d = e.nodeType;
        if (o(a, d)) {
          return e;
        }
        e = e.parentNode
      }
      return null
    }
  }

  function O(a, b) {
  }

  function P(a) {
  }

  function Q(a, b) {
  }

  function R(a, b) {
  }

  function S(a, b) {
  }

  function T(a) {
  }

  function U(a, b) {
  }

  function V(a) {
    return q && c.isBrokenNode(a) || !o(G, a.nodeType) && !L(a, !0)
  }

  function W(a, b) {
    return b <= (g(a) ? a.length : a.childNodes.length)
  }

  function X(a) {
    return !!a.startContainer && !!a.endContainer && !V(a.startContainer) && !V(
        a.endContainer) && W(a.startContainer, a.startOffset) && W(
        a.endContainer, a.endOffset)
  }

  function Y(a) {
    P(a);
  }

  function bb(a, b) {
    Y(a);
    var c = a.startContainer,
        d = a.startOffset,
        e = a.endContainer,
        f = a.endOffset,
        i = c === e;
    g(e) && f > 0 && f < e.length && l(e, f, b), g(c) && d > 0 && d < c.length
    && (c = l(c, d, b), i ? (f -= d, e = c) : e == c.parentNode && f >= h(c)
        && f++, d = 0), a.setStartAndEnd(c, d, e, f)
  }

  function lb() {
  }

  function mb(a) {
    a.START_TO_START = db, a.START_TO_END = eb, a.END_TO_END = fb, a.END_TO_START = gb, a.NODE_BEFORE = hb, a.NODE_AFTER = ib, a.NODE_BEFORE_AND_AFTER = jb, a.NODE_INSIDE = kb
  }

  function nb(a) {
    mb(a), mb(a.prototype)
  }

  function ob(a, b) {
    return function () {
      Y(this);
      var c = this.startContainer,
          d = this.startOffset,
          e = this.commonAncestorContainer,
          f = new D(this, !0),
          g, h;
      c !== e && (g = m(c, e, !0), h = u(g), c = h.node, d = h.offset), y(f,
          T), f.reset();
      var i = a(f);
      return f.detach(), b(this, c, d, c, d), i
    }
  }

  function pb(a, b, c) {
    function e(a, b) {
      return function (c) {
        P(this), Q(c, F), Q(p(c), G);
        var d = (a ? t : u)(c);
        (b ? f : i)(this, d.node, d.offset)
      }
    }

    function f(a, c, d) {
      var e = a.endContainer,
          f = a.endOffset;
      if (c !== a.startContainer || d !== a.startOffset) {
        if (p(c) != p(e) || k(c, d, e, f) == 1) {
          e = c, f = d;
        }
        b(a, c, d, e, f)
      }
    }

    function i(a, c, d) {
      var e = a.startContainer,
          f = a.startOffset;
      if (c !== a.endContainer || d !== a.endOffset) {
        if (p(c) != p(e) || k(c, d, e, f) == -1) {
          e = c, f = d;
        }
        b(a, e, f, c, d)
      }
    }

    a.prototype = new lb, d.extend(a.prototype, {
      setStart: function (a, b) {
        P(this), O(a, !0), R(a, b), f(this, a, b)
      },
      setEnd: function (a, b) {
        P(this), O(a, !0), R(a, b), i(this, a, b)
      },
      setStartAndEnd: function () {
        P(this);
        var a = arguments,
            c = a[0],
            d = a[1],
            e = c,
            f = d;
        switch (a.length) {
          case 3:
            f = a[2];
            break;
          case 4:
            e = a[2], f = a[3]
        }
        b(this, c, d, e, f)
      },
      setBoundary: function (a, b, c) {
        this["set" + (c ? "Start" : "End")](a, b)
      },
      setStartBefore: e(!0, !0),
      setStartAfter: e(!1, !0),
      setEndBefore: e(!0, !1),
      setEndAfter: e(!1, !1),
      collapse: function (a) {
        Y(this), a ? b(this, this.startContainer, this.startOffset,
            this.startContainer, this.startOffset) : b(this, this.endContainer,
            this.endOffset, this.endContainer, this.endOffset)
      },
      selectNodeContents: function (a) {
        P(this), O(a, !0), b(this, a, 0, a, n(a))
      },
      selectNode: function (a) {
        P(this), O(a, !1), Q(a, F);
        var c = t(a),
            d = u(a);
        b(this, c.node, c.offset, d.node, d.offset)
      },
      extractContents: ob(A, b),
      deleteContents: ob(z, b),
      canSurroundContents: function () {
        Y(this), T(this.startContainer), T(this.endContainer);
        var a = new D(this, !0),
            b = a._first && r(a._first, this) || a._last && r(a._last, this);
        return a.detach(), !b
      },
      detach: function () {
        c(this)
      },
      splitBoundaries: function () {
        bb(this)
      },
      splitBoundariesPreservingPositions: function (a) {
        bb(this, a)
      },
      normalizeBoundaries: function () {
        Y(this);
        var a = this.startContainer,
            c = this.startOffset,
            d = this.endContainer,
            e = this.endOffset,
            f = function (a) {
              var b = a.nextSibling;
              b && b.nodeType == a.nodeType
              && (d = a, e = a.length, a.appendData(
                  b.data), b.parentNode.removeChild(b))
            },
            i = function (b) {
              var f = b.previousSibling;
              if (f && f.nodeType == b.nodeType) {
                a = b;
                var g = b.length;
                c = f.length, b.insertData(0, f.data), f.parentNode.removeChild(
                    f);
                if (a == d) {
                  e += c, d = a;
                } else if (d == b.parentNode) {
                  var i = h(b);
                  e == i ? (d = b, e = g) : e > i && e--
                }
              }
            },
            j = !0;
        if (g(d)) {
          d.length == e && f(d);
        } else {
          if (e > 0) {
            var k = d.childNodes[e - 1];
            k && g(k) && f(k)
          }
          j = !this.collapsed
        }
        if (j) {
          if (g(a)) {
            c == 0 && i(a);
          } else if (c < a.childNodes.length) {
            var l = a.childNodes[c];
            l && g(l) && i(l)
          }
        } else {
          a = d, c = e;
        }
        b(this, a, c, d, e)
      },
      collapseToPoint: function (a, b) {
        P(this), O(a, !0), R(a, b), this.setStartAndEnd(a, b)
      }
    }), nb(a)
  }

  function qb(a) {
    a.collapsed = a.startContainer === a.endContainer && a.startOffset
        === a.endOffset, a.commonAncestorContainer = a.collapsed
        ? a.startContainer : c.getCommonAncestor(a.startContainer,
            a.endContainer)
  }

  function rb(a, b, d, e, f) {
    a.startContainer = b, a.startOffset = d, a.endContainer = e, a.endOffset = f, a.document = c.getDocument(
        b), qb(a)
  }

  function sb(a) {
    P(a), a.startContainer = a.startOffset = a.endContainer = a.endOffset = a.document = null, a.collapsed = a.commonAncestorContainer = null
  }

  function tb(a) {
    this.startContainer = a, this.startOffset = 0, this.endContainer = a, this.endOffset = 0, this.document = a, qb(
        this)
  }

  a.requireModules(["DomUtil"]);
  var c = a.dom,
      d = a.util,
      e = c.DomPosition,
      f = a.DOMException,
      g = c.isCharacterDataNode,
      h = c.getNodeIndex,
      i = c.isOrIsAncestorOf,
      j = c.getDocument,
      k = c.comparePoints,
      l = c.splitDataNode,
      m = c.getClosestAncestorIn,
      n = c.getNodeLength,
      o = c.arrayContains,
      p = c.getRootContainer,
      q = a.features.crashyTextNodes;
  D.prototype = {
    _current: null,
    _next: null,
    _first: null,
    _last: null,
    isSingleCharacterDataNode: !1,
    reset: function () {
      this._current = null, this._next = this._first
    },
    hasNext: function () {
      return !!this._next
    },
    next: function () {
      var a = this._current = this._next;
      return a && (this._next = a !== this._last ? a.nextSibling : null, g(a)
      && this.clonePartiallySelectedTextNodes && (a === this.ec
      && (a = a.cloneNode(!0)).deleteData(this.eo,
          a.length - this.eo), this._current === this.sc && (a = a.cloneNode(
          !0)).deleteData(0, this.so))), a
    },
    remove: function () {
      var a = this._current,
          b, c;
      !g(a) || a !== this.sc && a !== this.ec ? a.parentNode
          && a.parentNode.removeChild(a) : (b = a === this.sc ? this.so
          : 0, c = a === this.ec ? this.eo : a.length, b != c && a.deleteData(b,
          c - b))
    },
    isPartiallySelectedSubtree: function () {
      var a = this._current;
      return r(a, this.range)
    },
    getSubtreeIterator: function () {
      var a;
      if (this.isSingleCharacterDataNode) {
        a = this.range.cloneRange(), a.collapse(
            !1);
      } else {
        a = new tb(s(this.range));
        var b = this._current,
            c = b,
            d = 0,
            e = b,
            f = n(b);
        i(b, this.sc) && (c = this.sc, d = this.so), i(b, this.ec)
        && (e = this.ec, f = this.eo), rb(a, c, d, e, f)
      }
      return new D(a, this.clonePartiallySelectedTextNodes)
    },
    detach: function (a) {
      a
      && this.range.detach(), this.range = this._current = this._next = this._first = this._last = this.sc = this.so = this.ec = this.eo = null
    }
  }, E.prototype = {
    BAD_BOUNDARYPOINTS_ERR: 1,
    INVALID_NODE_TYPE_ERR: 2
  }, E.prototype.toString = function () {
    return this.message
  };
  var F = [1, 3, 4, 5, 7, 8, 10],
      G = [2, 9, 11],
      H = [5, 6, 10, 12],
      I = [1, 3, 4, 5, 7, 8, 10, 11],
      J = [1, 3, 4, 5, 7, 8],
      L = K([9, 11]),
      M = K(H),
      N = K([6, 10, 12]),
      Z = document.createElement("style"),
      $ = !1;
  try {
    Z.innerHTML = "<b>x</b>", $ = Z.firstChild.nodeType == 3
  } catch (_) {
  }
  a.features.htmlParsingConforms = $;
  var ab = $ ? function (a) {
        var b = this.startContainer,
            d = j(b);
        var e = null;
        return b.nodeType == 1 ? e = b : g(b) && (e = c.parentElement(b)), e
        === null || e.nodeName == "HTML" && c.isHtmlNamespace(j(e).documentElement)
        && c.isHtmlNamespace(e) ? e = d.createElement("body") : e = e.cloneNode(
            !1), e.innerHTML = a, c.fragmentFromNodeChildren(e)
      } : function (a) {
        P(this);
        var b = s(this),
            d = b.createElement("body");
        return d.innerHTML = a, c.fragmentFromNodeChildren(d)
      },
      cb = ["startContainer", "startOffset", "endContainer", "endOffset",
        "collapsed", "commonAncestorContainer"],
      db = 0,
      eb = 1,
      fb = 2,
      gb = 3,
      hb = 0,
      ib = 1,
      jb = 2,
      kb = 3;
  lb.prototype = {
    compareBoundaryPoints: function (a, b) {
      Y(this), S(this.startContainer, b.startContainer);
      var c, d, e, f, g = a == gb || a == db ? "start" : "end",
          h = a == eb || a == db ? "start" : "end";
      return c = this[g + "Container"], d = this[g + "Offset"], e = b[h
      + "Container"], f = b[h + "Offset"], k(c, d, e, f)
    },
    insertNode: function (a) {
      Y(this), Q(a, I), T(this.startContainer);
      var b = v(a, this.startContainer, this.startOffset);
      this.setStartBefore(b)
    },
    cloneContents: function () {
      Y(this);
      var a, b;
      if (this.collapsed) {
        return s(this).createDocumentFragment();
      }
      if (this.startContainer === this.endContainer && g(
          this.startContainer)) {
        return a = this.startContainer.cloneNode(
            !0), a.data = a.data.slice(this.startOffset, this.endOffset), b = s(
            this).createDocumentFragment(), b.appendChild(a), b;
      }
      var c = new D(this, !0);
      return a = x(c), c.detach(), a
    },
    canSurroundContents: function () {
      Y(this), T(this.startContainer), T(this.endContainer);
      var a = new D(this, !0),
          b = a._first && r(a._first, this) || a._last && r(a._last, this);
      return a.detach(), !b
    },
    surroundContents: function (a) {
      Q(a, J);
      var b = this.extractContents();
      if (a.hasChildNodes()) {
        while (a.lastChild) {
          a.removeChild(a.lastChild);
        }
      }
      v(a, this.startContainer, this.startOffset), a.appendChild(
          b), this.selectNode(a)
    },
    cloneRange: function () {
      Y(this);
      var a = new tb(s(this)),
          b = cb.length,
          c;
      while (b--) {
        c = cb[b], a[c] = this[c];
      }
      return a
    },
    toString: function () {
      Y(this);
      var a = this.startContainer;
      if (a === this.endContainer && g(a)) {
        return a.nodeType == 3 || a.nodeType
        == 4 ? a.data.slice(this.startOffset, this.endOffset) : "";
      }
      var b = [],
          c = new D(this, !0);
      return y(c, function (a) {
        (a.nodeType == 3 || a.nodeType == 4) && b.push(a.data)
      }), c.detach(), b.join("")
    },
    compareNode: function (a) {
      Y(this);
      var b = a.parentNode,
          c = h(a);
      var d = this.comparePoint(b, c),
          e = this.comparePoint(b, c + 1);
      return d < 0 ? e > 0 ? jb : hb : e > 0 ? ib : kb
    },
    comparePoint: function (a, b) {
      return Y(this), U(a, "HIERARCHY_REQUEST_ERR"), S(a,
          this.startContainer), k(a, b, this.startContainer, this.startOffset)
      < 0 ? -1 : k(a, b, this.endContainer, this.endOffset) > 0 ? 1 : 0
    },
    createContextualFragment: ab,
    toHtml: function () {
      Y(this);
      var a = this.commonAncestorContainer.parentNode.cloneNode(!1);
      return a.appendChild(this.cloneContents()), a.innerHTML
    },
    intersectsNode: function (a, b) {
      Y(this), U(a, "NOT_FOUND_ERR");
      if (j(a) !== s(this)) {
        return !1;
      }
      var c = a.parentNode,
          d = h(a);
      U(c, "NOT_FOUND_ERR");
      var e = k(c, d, this.endContainer, this.endOffset),
          f = k(c, d + 1, this.startContainer, this.startOffset);
      return b ? e <= 0 && f >= 0 : e < 0 && f > 0
    },
    isPointInRange: function (a, b) {
      return Y(this), U(a, "HIERARCHY_REQUEST_ERR"), S(a,
          this.startContainer), k(a, b, this.startContainer, this.startOffset)
      >= 0 && k(a, b, this.endContainer, this.endOffset) <= 0
    },
    intersectsRange: function (a) {
      return w(this, a, !1)
    },
    intersectsOrTouchesRange: function (a) {
      return w(this, a, !0)
    },
    intersection: function (a) {
      if (this.intersectsRange(a)) {
        var b = k(this.startContainer, this.startOffset, a.startContainer,
                a.startOffset),
            c = k(this.endContainer, this.endOffset, a.endContainer,
                a.endOffset),
            d = this.cloneRange();
        return b == -1 && d.setStart(a.startContainer, a.startOffset), c == 1
        && d.setEnd(a.endContainer, a.endOffset), d
      }
      return null
    },
    union: function (a) {
      if (this.intersectsOrTouchesRange(a)) {
        var b = this.cloneRange();
        return k(a.startContainer, a.startOffset, this.startContainer,
            this.startOffset) == -1 && b.setStart(a.startContainer,
            a.startOffset), k(a.endContainer, a.endOffset, this.endContainer,
            this.endOffset) == 1 && b.setEnd(a.endContainer, a.endOffset), b
      }
    },
    containsNode: function (a, b) {
      return b ? this.intersectsNode(a, !1) : this.compareNode(a) == kb
    },
    containsNodeContents: function (a) {
      return this.comparePoint(a, 0) >= 0 && this.comparePoint(a, n(a)) <= 0
    },
    containsRange: function (a) {
      var b = this.intersection(a);
      return b !== null && a.equals(b)
    },
    containsNodeText: function (a) {
      var b = this.cloneRange();
      b.selectNode(a);
      var c = b.getNodes([3]);
      if (c.length > 0) {
        b.setStart(c[0], 0);
        var d = c.pop();
        b.setEnd(d, d.length);
        var e = this.containsRange(b);
        return b.detach(), e
      }
      return this.containsNodeContents(a)
    },
    getNodes: function (a, b) {
      return Y(this), B(this, a, b)
    },
    getDocument: function () {
      return s(this)
    },
    collapseBefore: function (a) {
      P(this), this.setEndBefore(a), this.collapse(!1)
    },
    collapseAfter: function (a) {
      P(this), this.setStartAfter(a), this.collapse(!0)
    },
    getBookmark: function (b) {
      var d = s(this),
          e = a.createRange(d);
      b = b || c.getBody(d), e.selectNodeContents(b);
      var f = this.intersection(e),
          g = 0,
          h = 0;
      return f && (e.setEnd(f.startContainer,
          f.startOffset), g = e.toString().length, h = g
          + f.toString().length, e.detach()), {
        start: g,
        end: h,
        containerNode: b
      }
    },
    moveToBookmark: function (a) {
      var b = a.containerNode,
          c = 0;
      this.setStart(b, 0), this.collapse(!0);
      var d = [b],
          e, f = !1,
          g = !1,
          h, i, j;
      while (!g && (e = d.pop())) {
        if (e.nodeType == 3) {
          h = c + e.length, !f && a.start >= c && a.start
          <= h && (this.setStart(e, a.start - c), f = !0), f && a.end >= c
          && a.end <= h && (this.setEnd(e, a.end - c), g = !0), c = h;
        } else {
          j = e.childNodes, i = j.length;
          while (i--) {
            d.push(j[i])
          }
        }
      }
    },
    getName: function () {
      return "DomRange"
    },
    equals: function (a) {
      return tb.rangesEqual(this, a)
    },
    isValid: function () {
      return X(this)
    },
    inspect: function () {
      return C(this)
    }
  }, pb(tb, rb, sb), a.rangePrototype = lb.prototype, d.extend(tb, {
    rangeProperties: cb,
    RangeIterator: D,
    copyComparisonConstants: nb,
    createPrototypeRange: pb,
    inspect: C,
    getRangeDocument: s,
    rangesEqual: function (a, b) {
      return a.startContainer === b.startContainer && a.startOffset
          === b.startOffset && a.endContainer === b.endContainer && a.endOffset
          === b.endOffset
    }
  }), a.DomRange = tb, a.RangeException = E
}), rangy.createModule("WrappedRange", function (a, b) {
  a.requireModules(["DomUtil", "DomRange"]);
  var c, d, e = a.dom,
      f = a.util,
      g = e.DomPosition,
      h = a.DomRange,
      i = e.getBody,
      j = e.getContentDocument,
      k = e.isCharacterDataNode;
  a.features.implementsDomRange && function () {
    function k(a) {
      var b = g.length,
          c;
      while (b--) {
        c = g[b], a[c] = a.nativeRange[c];
      }
      a.collapsed = a.startContainer === a.endContainer && a.startOffset
          === a.endOffset
    }

    function l(a, b, c, d, e) {
      var f = a.startContainer !== b || a.startOffset != c,
          g = a.endContainer !== d || a.endOffset != e,
          h = !a.equals(a.nativeRange);
      if (f || g || h) {
        a.setEnd(d, e), a.setStart(b, c)
      }
    }

    function m(a) {
      a.nativeRange.detach(), a.detached = !0;
      var b = g.length;
      while (b--) {
        a[g[b]] = null
      }
    }

    var d, g = h.rangeProperties,
        n;
    c = function (a) {
      if (!a) {
        throw b.createError("WrappedRange: Range must be specified");
      }
      this.nativeRange = a, k(this)
    }, h.createPrototypeRange(c, l,
        m), d = c.prototype, d.selectNode = function (a) {
      this.nativeRange.selectNode(a), k(this)
    }, d.cloneContents = function () {
      return this.nativeRange.cloneContents()
    }, d.surroundContents = function (a) {
      this.nativeRange.surroundContents(a), k(this)
    }, d.collapse = function (a) {
      this.nativeRange.collapse(a), k(this)
    }, d.cloneRange = function () {
      return new c(this.nativeRange.cloneRange())
    }, d.refresh = function () {
      k(this)
    }, d.toString = function () {
      return this.nativeRange.toString()
    };
    var o = document.createTextNode("test");
    i(document).appendChild(o);
    var p = document.createRange();
    p.setStart(o, 0), p.setEnd(o, 0);
    try {
      p.setStart(o, 1), d.setStart = function (a, b) {
        this.nativeRange.setStart(a, b), k(this)
      }, d.setEnd = function (a, b) {
        this.nativeRange.setEnd(a, b), k(this)
      }, n = function (a) {
        return function (b) {
          this.nativeRange[a](b), k(this)
        }
      }
    } catch (q) {
      d.setStart = function (a, b) {
        try {
          this.nativeRange.setStart(a, b)
        } catch (c) {
          this.nativeRange.setEnd(a, b), this.nativeRange.setStart(a, b)
        }
        k(this)
      }, d.setEnd = function (a, b) {
        try {
          this.nativeRange.setEnd(a, b)
        } catch (c) {
          this.nativeRange.setStart(a, b), this.nativeRange.setEnd(a, b)
        }
        k(this)
      }, n = function (a, b) {
        return function (c) {
          try {
            this.nativeRange[a](c)
          } catch (d) {
            this.nativeRange[b](c), this.nativeRange[a](c)
          }
          k(this)
        }
      }
    }
    d.setStartBefore = n("setStartBefore", "setEndBefore"), d.setStartAfter = n(
        "setStartAfter", "setEndAfter"), d.setEndBefore = n("setEndBefore",
        "setStartBefore"), d.setEndAfter = n("setEndAfter",
        "setStartAfter"), p.selectNodeContents(o), p.startContainer == o
    && p.endContainer == o && p.startOffset == 0 && p.endOffset == o.length
        ? d.selectNodeContents = function (a) {
          this.nativeRange.selectNodeContents(a), k(this)
        } : d.selectNodeContents = function (a) {
          this.setStartAndEnd(a, 0, e.getNodeLength(a))
        }, p.selectNodeContents(o), p.setEnd(o, 3);
    var r = document.createRange();
    r.selectNodeContents(o), r.setEnd(o, 4), r.setStart(o,
        2), p.compareBoundaryPoints(p.START_TO_END, r) == -1
    && p.compareBoundaryPoints(p.END_TO_START, r) == 1
        ? d.compareBoundaryPoints = function (a, b) {
          return b = b.nativeRange || b, a == b.START_TO_END
              ? a = b.END_TO_START : a == b.END_TO_START
              && (a = b.START_TO_END), this.nativeRange.compareBoundaryPoints(a,
              b)
        } : d.compareBoundaryPoints = function (a, b) {
          return this.nativeRange.compareBoundaryPoints(a, b.nativeRange || b)
        };
    var s = document.createElement("div");
    s.innerHTML = "123";
    var t = s.firstChild,
        u = i(document);
    u.appendChild(s), p.setStart(t, 1), p.setEnd(t,
        2), p.deleteContents(), t.data == "13"
    && (d.deleteContents = function () {
      this.nativeRange.deleteContents(), k(this)
    }, d.extractContents = function () {
      var a = this.nativeRange.extractContents();
      return k(this), a
    }), u.removeChild(s), u = null, f.isHostMethod(p,
        "createContextualFragment")
    && (d.createContextualFragment = function (a) {
      return this.nativeRange.createContextualFragment(a)
    }), i(document).removeChild(
        o), p.detach(), r.detach(), d.getName = function () {
      return "WrappedRange"
    }, a.WrappedRange = c, a.createNativeRange = function (a) {
      return a = j(a, b, "createNativeRange"), a.createRange()
    }
  }();
  if (a.features.implementsTextRange) {
    var l = function (a) {
          var b = a.parentElement(),
              c = a.duplicate();
          c.collapse(!0);
          var d = c.parentElement();
          c = a.duplicate(), c.collapse(!1);
          var f = c.parentElement(),
              g = d == f ? d : e.getCommonAncestor(d, f);
          return g == b ? g : e.getCommonAncestor(b, g)
        },
        m = function (a) {
          return a.compareEndPoints("StartToEnd", a) == 0
        },
        n = function (a, b, c, d, f) {
          var h = a.duplicate();
          h.collapse(c);
          var i = h.parentElement();
          e.isOrIsAncestorOf(b, i) || (i = b);
          if (!i.canHaveHTML) {
            var j = new g(i.parentNode, e.getNodeIndex(i));
            return {
              boundaryPosition: j,
              nodeInfo: {
                nodeIndex: j.offset,
                containerElement: j.node
              }
            }
          }
          var l = e.getDocument(i).createElement("span");
          l.parentNode && l.parentNode.removeChild(l);
          var m, n = c ? "StartToStart" : "StartToEnd",
              o, p, q, r, s = f && f.containerElement == i ? f.nodeIndex : 0,
              t = i.childNodes.length,
              u = t,
              v = u;
          for (; ;) {
            v == t ? i.appendChild(l) : i.insertBefore(l,
                i.childNodes[v]), h.moveToElementText(
                l), m = h.compareEndPoints(n, a);
            if (m == 0 || s == u) {
              break;
            }
            if (m == -1) {
              if (u == s + 1) {
                break;
              }
              s = v
            } else {
              u = u == s + 1 ? s : v;
            }
            v = Math.floor((s + u) / 2), i.removeChild(l)
          }
          r = l.nextSibling;
          if (m == -1 && r && k(r)) {
            h.setEndPoint(c ? "EndToStart" : "EndToEnd", a);
            var w;
            if (/[\r\n]/.test(r.data)) {
              var x = h.duplicate(),
                  y = x.text.replace(/\r\n/g, "\r").length;
              w = x.moveStart("character", y);
              while ((m = x.compareEndPoints("StartToEnd", x))
              == -1) {
                w++, x.moveStart("character", 1)
              }
            } else {
              w = h.text.length;
            }
            q = new g(r, w)
          } else {
            o = (d || !c) && l.previousSibling, p = (d || c)
                && l.nextSibling, p && k(p) ? q = new g(p, 0) : o && k(o)
                ? q = new g(o, o.data.length) : q = new g(i, e.getNodeIndex(l));
          }
          return l.parentNode.removeChild(l), {
            boundaryPosition: q,
            nodeInfo: {
              nodeIndex: v,
              containerElement: i
            }
          }
        },
        o = function (a, b) {
          var c, d, f = a.offset,
              g = e.getDocument(a.node),
              h, j, l = i(g).createTextRange(),
              m = k(a.node);
          return m ? (c = a.node, d = c.parentNode)
              : (j = a.node.childNodes, c = f < j.length ? j[f]
                  : null, d = a.node), h = g.createElement(
              "span"), h.innerHTML = "&#feff;", c ? d.insertBefore(h, c)
              : d.appendChild(h), l.moveToElementText(h), l.collapse(
              !b), d.removeChild(h), m && l[b ? "moveStart" : "moveEnd"](
              "character", f), l
        };
    d = function (a) {
      this.textRange = a, this.refresh()
    }, d.prototype = new h(document), d.prototype.refresh = function () {
      var a, b, c, d = l(this.textRange);
      m(this.textRange) ? b = a = n(this.textRange, d, !0, !0).boundaryPosition
          : (c = n(this.textRange, d, !0, !1), a = c.boundaryPosition, b = n(
              this.textRange, d, !1, !1,
              c.nodeInfo).boundaryPosition), this.setStart(a.node,
          a.offset), this.setEnd(b.node, b.offset)
    }, d.prototype.getName = function () {
      return "WrappedTextRange"
    }, h.copyComparisonConstants(d), d.rangeToTextRange = function (a) {
      if (a.collapsed) {
        return o(new g(a.startContainer, a.startOffset), !0);
      }
      var b = o(new g(a.startContainer, a.startOffset), !0),
          c = o(new g(a.endContainer, a.endOffset), !1),
          d = i(h.getRangeDocument(a)).createTextRange();
      return d.setEndPoint("StartToStart", b), d.setEndPoint("EndToEnd", c), d
    }, a.WrappedTextRange = d;
    if (!a.features.implementsDomRange || a.config.preferTextRange) {
      var p = function () {
        return this
      }();
      typeof p.Range == "undefined"
      && (p.Range = d), a.createNativeRange = function (a) {
        return a = j(a, b, "createNativeRange"), i(a).createTextRange()
      }, a.WrappedRange = d
    }
  }
  a.createRange = function (c) {
    return c = j(c, b, "createRange"), new a.WrappedRange(
        a.createNativeRange(c))
  }, a.createRangyRange = function (a) {
    return a = j(a, b, "createRangyRange"), new h(a)
  }, a.createIframeRange = function (c) {
    return b.deprecationNotice("createIframeRange()",
        "createRange(iframeEl)"), a.createRange(c)
  }, a.createIframeRangyRange = function (c) {
    return b.deprecationNotice("createIframeRangyRange()",
        "createRangyRange(iframeEl)"), a.createRangyRange(c)
  }, a.addCreateMissingNativeApiListener(function (b) {
    var c = b.document;
    typeof c.createRange == "undefined" && (c.createRange = function () {
      return a.createRange(c)
    }), c = b = null
  })
}), rangy.createModule("WrappedSelection", function (a, b) {
  function r(a) {
    return typeof a == "string" ? a == "backward" : !!a
  }

  function s(a, c) {
    if (!a) {
      return window;
    }
    if (d.isWindow(a)) {
      return a;
    }
    if (a instanceof T) {
      return a.win;
    }
    var e = d.getContentDocument(a, b, c);
    return d.getWindow(e)
  }

  function t(a) {
    return s(a, "getWinSelection").getSelection()
  }

  function u(a) {
    return s(a, "getDocSelection").document.selection
  }

  function I(a, b, c) {
    var d = c ? "end" : "start",
        e = c ? "start" : "end";
    a.anchorNode = b[d + "Container"], a.anchorOffset = b[d
    + "Offset"], a.focusNode = b[e + "Container"], a.focusOffset = b[e
    + "Offset"]
  }

  function J(a) {
    var b = a.nativeSelection;
    a.anchorNode = b.anchorNode, a.anchorOffset = b.anchorOffset, a.focusNode = b.focusNode, a.focusOffset = b.focusOffset
  }

  function K(a) {
    a.anchorNode = a.focusNode = null, a.anchorOffset = a.focusOffset = 0, a.rangeCount = 0, a.isCollapsed = !0, a._ranges.length = 0
  }

  function L(b) {
    var c;
    return b instanceof g ? (c = a.createNativeRange(b.getDocument()), c.setEnd(
        b.endContainer, b.endOffset), c.setStart(b.startContainer,
        b.startOffset)) : b instanceof h ? c = b.nativeRange
        : m.implementsDomRange && b instanceof d.getWindow(
        b.startContainer).Range && (c = b), c
  }

  function M(a) {
    if (!a.length || a[0].nodeType != 1) {
      return !1;
    }
    for (var b = 1, c = a.length; b < c; ++b) {
      if (!d.isAncestorOf(a[0], a[b])) {
        return !1;
      }
    }
    return !0
  }

  function N(a) {
    var c = a.getNodes();
    if (!M(c)) {
      throw b.createError(
          "getSingleElementFromRange: range " + a.inspect()
          + " did not consist of a single element");
    }
    return c[0]
  }

  function O(a) {
    return !!a && typeof a.text != "undefined"
  }

  function P(a, b) {
    var c = new h(b);
    a._ranges = [c], I(a, c, !1), a.rangeCount = 1, a.isCollapsed = c.collapsed
  }

  function Q(b) {
    b._ranges.length = 0;
    if (b.docSelection.type == "None") {
      K(b);
    } else {
      var c = b.docSelection.createRange();
      if (O(c)) {
        P(b, c);
      } else {
        b.rangeCount = c.length;
        var d, e = o(c.item(0));
        for (var f = 0; f < b.rangeCount; ++f) {
          d = a.createRange(
              e), d.selectNode(c.item(f)), b._ranges.push(d);
        }
        b.isCollapsed = b.rangeCount == 1 && b._ranges[0].collapsed, I(b,
            b._ranges[b.rangeCount - 1], !1)
      }
    }
  }

  function R(a, c) {
    var d = a.docSelection.createRange(),
        e = N(c),
        f = o(d.item(0)),
        g = p(f).createControlRange();
    for (var h = 0, i = d.length; h < i; ++h) {
      g.add(d.item(h));
    }
    try {
      g.add(e)
    } catch (j) {
      throw b.createError(
          "addRange(): Element within the specified Range could not be added to control selection (does it have layout?)")
    }
    g.select(), Q(a)
  }

  function T(a, b, c) {
    this.nativeSelection = a, this.docSelection = b, this._ranges = [], this.win = c, this.refresh()
  }

  function U(a) {
    a.win = a.anchorNode = a.focusNode = a._ranges = null, a.rangeCount = a.anchorOffset = a.focusOffset = 0, a.detached = !0
  }

  function W(a, b) {
    var c = V.length,
        d, e;
    while (c--) {
      d = V[c], e = d.selection;
      if (b == "deleteAll") {
        U(e);
      } else if (d.win == a) {
        return b == "delete" ? (V.splice(c, 1), !0) : e
      }
    }
    return b == "deleteAll" && (V.length = 0), null
  }

  function Z(a, c) {
    var d = o(c[0].startContainer),
        e = p(d).createControlRange();
    for (var f = 0, g; f < rangeCount; ++f) {
      g = N(c[f]);
      try {
        e.add(g)
      } catch (h) {
        throw b.createError(
            "setRanges(): Element within the one of the specified Ranges could not be added to control selection (does it have layout?)")
      }
    }
    e.select(), Q(a)
  }

  function cb(a, b) {
  }

  function db(b) {
    return function (c, d) {
      var e;
      this.rangeCount ? (e = this.getRangeAt(0), e["set" + (b ? "Start"
          : "End")](c, d)) : (e = a.createRange(
          this.win.document), e.setStartAndEnd(c, d)), this.setSingleRange(e,
          this.isBackward())
    }
  }

  function eb(a) {
    var b = [],
        c = new j(a.anchorNode, a.anchorOffset),
        d = new j(a.focusNode, a.focusOffset),
        e = typeof a.getName == "function" ? a.getName() : "Selection";
    if (typeof a.rangeCount != "undefined") {
      for (var f = 0, h = a.rangeCount; f < h; ++f) {
        b[f] = g.inspect(
            a.getRangeAt(f));
      }
    }
    return "[" + e + "(Ranges: " + b.join(", ") + ")(anchor: " + c.inspect()
        + ", focus: " + d.inspect() + "]"
  }

  a.requireModules(["DomUtil", "DomRange",
    "WrappedRange"]), a.config.checkSelectionRanges = !0;
  var c = "boolean",
      d = a.dom,
      e = a.util,
      f = e.isHostMethod,
      g = a.DomRange,
      h = a.WrappedRange,
      i = a.DOMException,
      j = d.DomPosition,
      k, l, m = a.features,
      n = "Control",
      o = d.getDocument,
      p = d.getBody,
      q = g.rangesEqual,
      v = f(window, "getSelection"),
      w = e.isHostObject(document, "selection");
  m.implementsWinGetSelection = v, m.implementsDocSelection = w;
  var x = w && (!v || a.config.preferTextRange);
  x ? (k = u, a.isSelectionValid = function (a) {
    var b = s(a, "isSelectionValid").document,
        c = b.selection;
    return c.type != "None" || o(c.createRange().parentElement()) == b
  }) : v ? (k = t, a.isSelectionValid = function () {
    return !0
  }) : b.fail(
      "Neither document.selection or window.getSelection() detected."), a.getNativeSelection = k;
  var y = k(),
      z = a.createNativeRange(document),
      A = p(document),
      B = e.areHostProperties(y,
          ["anchorNode", "focusNode", "anchorOffset", "focusOffset"]);
  m.selectionHasAnchorAndFocus = B;
  var C = f(y, "extend");
  m.selectionHasExtend = C;
  var D = typeof y.rangeCount == "number";
  m.selectionHasRangeCount = D;
  var E = !1,
      F = !0;
  e.areHostMethods(y, ["addRange", "getRangeAt", "removeAllRanges"])
  && typeof y.rangeCount == "number" && m.implementsDomRange && function () {
    var a = window.getSelection();
    if (a) {
      var b = p(document),
          c = b.appendChild(document.createElement("div"));
      c.contentEditable = "false";
      var d = c.appendChild(document.createTextNode("\u00a0\u00a0\u00a0")),
          e = document.createRange();
      e.setStart(d, 1), e.collapse(!0), a.addRange(e), F = a.rangeCount
          == 1, a.removeAllRanges();
      var f = e.cloneRange();
      e.setStart(d, 0), f.setEnd(d, 3), f.setStart(d, 2), a.addRange(e);
      if (!KEDITORTOP.RAONKEDITOR.browser.chrome) {
        a.addRange(f);
      }
      E = a.rangeCount == 2, b.removeChild(
          c), a.removeAllRanges(), e.detach(), f.detach();
    }
  }(), m.selectionSupportsMultipleRanges = E, m.collapsedNonEditableSelectionsSupported = F;
  var G = !1,
      H;
  A && f(A, "createControlRange")
  && (H = A.createControlRange(), e.areHostProperties(H, ["item", "add"])
  && (G = !0)), m.implementsControlRange = G, B ? l = function (a) {
    return a.anchorNode === a.focusNode && a.anchorOffset === a.focusOffset
  } : l = function (a) {
    return a.rangeCount ? a.getRangeAt(a.rangeCount - 1).collapsed : !1
  };
  var S;
  f(y, "getRangeAt") ? S = function (a, b) {
    try {
      return a.getRangeAt(b)
    } catch (c) {
      return null
    }
  } : B && (S = function (b) {
    var c = o(b.anchorNode),
        d = a.createRange(c);
    return d.setStartAndEnd(b.anchorNode, b.anchorOffset, b.focusNode,
        b.focusOffset), d.collapsed !== this.isCollapsed && d.setStartAndEnd(
        b.focusNode, b.focusOffset, b.anchorNode, b.anchorOffset), d
  });
  var V = [],
      X = function (a) {
        if (a && a instanceof T) {
          return a.refresh(), a;
        }
        a = s(a, "getNativeSelection");
        var b = W(a),
            c = k(a),
            d = w ? u(a) : null;
        return b ? (b.nativeSelection = c, b.docSelection = d, b.refresh())
            : (b = new T(c, d, a), V.push({
              win: a,
              selection: b
            })), b
      };
  a.getSelection = X, a.getIframeSelection = function (c) {
    return b.deprecationNotice("getIframeSelection()",
        "getSelection(iframeEl)"), a.getSelection(d.getIframeWindow(c))
  };
  var Y = T.prototype;
  if (!x && B && e.areHostMethods(y, ["removeAllRanges", "addRange"])) {
    Y.removeAllRanges = function () {
      this.nativeSelection.removeAllRanges(), K(this)
    };
    var $ = function (b, c) {
      var d = g.getRangeDocument(c),
          e = a.createRange(d);
      e.collapseToPoint(c.endContainer,
          c.endOffset), b.nativeSelection.addRange(
          L(e)), b.nativeSelection.extend(c.startContainer,
          c.startOffset), b.refresh()
    };
    D ? Y.addRange = function (b, c) {
      if (G && w && this.docSelection.type == n) {
        R(this, b);
      } else if (r(c) && C) {
        $(this, b);
      } else {
        var d;
        E ? d = this.rangeCount
            : (this.removeAllRanges(), d = 0), this.nativeSelection.addRange(
            L(b).cloneRange()), this.rangeCount = this.nativeSelection.rangeCount;
        if (this.rangeCount == d + 1) {
          if (a.config.checkSelectionRanges) {
            var e = S(this.nativeSelection, this.rangeCount - 1);
            e && !q(e, b) && (b = new h(e))
          }
          this._ranges[this.rangeCount - 1] = b, I(this, b,
              bb(this.nativeSelection)), this.isCollapsed = l(this)
        } else {
          this.refresh()
        }
      }
    } : Y.addRange = function (a, b) {
      r(b) && C ? $(this, a) : (this.nativeSelection.addRange(
          L(a)), this.refresh())
    }, Y.setRanges = function (a) {
      if (G && a.length > 1) {
        Z(this, a);
      } else {
        this.removeAllRanges();
        for (var b = 0, c = a.length; b < c; ++b) {
          this.addRange(a[b])
        }
      }
    }
  } else {
    if (!(f(y, "empty") && f(z, "select") && G && x)) {
      return b.fail(
          "No means of selecting a Range or TextRange was found"), !1;
    }
    Y.removeAllRanges = function () {
      try {
        this.docSelection.empty();
        if (this.docSelection.type != "None") {
          var a;
          if (this.anchorNode) {
            a = o(this.anchorNode);
          } else if (this.docSelection.type == n) {
            var b = this.docSelection.createRange();
            b.length && (a = o(b.item(0)))
          }
          if (a) {
            var c = p(a).createTextRange();
            c.select(), this.docSelection.empty()
          }
        }
      } catch (d) {
      }
      K(this)
    }, Y.addRange = function (a) {
      this.docSelection.type == n ? R(this, a) : (h.rangeToTextRange(
          a).select(), this._ranges[0] = a, this.rangeCount = 1, this.isCollapsed = this._ranges[0].collapsed, I(
          this, a, !1))
    }, Y.setRanges = function (a) {
      this.removeAllRanges();
      var b = a.length;
      b > 1 ? Z(this, a) : b && this.addRange(a[0])
    }
  }
  Y.getRangeAt = function (a) {
    return this._ranges[a].cloneRange()
  };
  var _;
  if (x) {
    _ = function (b) {
      var c;
      a.isSelectionValid(b.win) ? c = b.docSelection.createRange() : (c = p(
          b.win.document).createTextRange(), c.collapse(
          !0)), b.docSelection.type
      == n ? Q(b) : O(c) ? P(b, c) : K(b)
    };
  } else if (f(y, "getRangeAt") && typeof y.rangeCount
      == "number") {
    _ = function (b) {
      if (G && w && b.docSelection.type == n) {
        Q(b);
      } else {
        b._ranges.length = b.rangeCount = b.nativeSelection.rangeCount;
        if (b.rangeCount) {
          for (var c = 0, d = b.rangeCount; c < d;
              ++c) {
            b._ranges[c] = new a.WrappedRange(
                b.nativeSelection.getRangeAt(c));
          }
          I(b, b._ranges[b.rangeCount - 1],
              bb(b.nativeSelection)), b.isCollapsed = l(b)
        } else {
          K(b)
        }
      }
    };
  } else {
    if (!B || typeof y.isCollapsed != c || typeof z.collapsed != c
        || !m.implementsDomRange) {
      return b.fail(
          "No means of obtaining a Range or TextRange from the user's selection was found"), !1;
    }
    _ = function (a) {
      var b, c = a.nativeSelection;
      c.anchorNode ? (b = S(c, 0), a._ranges = [b], a.rangeCount = 1, J(
          a), a.isCollapsed = l(a)) : K(a)
    }
  }
  Y.refresh = function (a) {
    var b = a ? this._ranges.slice(0) : null,
        c = this.anchorNode,
        d = this.anchorOffset;
    _(this);
    if (a) {
      var e = b.length;
      if (e != this._ranges.length) {
        return !0;
      }
      if (this.anchorNode != c || this.anchorOffset != d) {
        return !0;
      }
      while (e--) {
        if (!q(b[e], this._ranges[e])) {
          return !0;
        }
      }
      return !1
    }
  };
  var ab = function (b, c) {
    var d = b.getAllRanges();
    b.removeAllRanges();
    for (var e = 0, f = d.length; e < f; ++e) {
      a.rangesEqual(c, d[e])
      || b.addRange(d[e]);
    }
    b.rangeCount || K(b)
  };
  G ? Y.removeRange = function (a) {
    if (this.docSelection.type == n) {
      var b = this.docSelection.createRange(),
          c = N(a),
          d = o(b.item(0)),
          e = p(d).createControlRange(),
          f, g = !1;
      for (var h = 0, i = b.length; h < i; ++h) {
        f = b.item(h), f !== c || g
            ? e.add(b.item(h)) : g = !0;
      }
      e.select(), Q(this)
    } else {
      ab(this, a)
    }
  } : Y.removeRange = function (a) {
    ab(this, a)
  };
  var bb;
  !x && B && m.implementsDomRange ? (bb = function (a) {
    var b = !1;
    return a.anchorNode && (b = d.comparePoints(a.anchorNode, a.anchorOffset,
        a.focusNode, a.focusOffset) == 1), b
  }, Y.isBackward = function () {
    return bb(this)
  }) : bb = Y.isBackward = function () {
    return !1
  }, Y.isBackwards = Y.isBackward, Y.toString = function () {
    var a = [];
    for (var b = 0, c = this.rangeCount; b < c; ++b) {
      a[b] = ""
          + this._ranges[b];
    }
    return a.join("")
  }, Y.collapse = function (b, c) {
    cb(this, b);
    var d = a.createRange(b);
    d.collapseToPoint(b, c), this.setSingleRange(d), this.isCollapsed = !0
  }, Y.collapseToStart = function () {
    var a = this._ranges[0];
    this.collapse(a.startContainer, a.startOffset)
  }, Y.collapseToEnd = function () {
    var a = this._ranges[this.rangeCount - 1];
    this.collapse(a.endContainer, a.endOffset)
  }, Y.selectAllChildren = function (b) {
    cb(this, b);
    var c = a.createRange(b);
    c.selectNodeContents(b), this.removeAllRanges(), this.addRange(c)
  }, Y.deleteFromDocument = function () {
    if (G && w && this.docSelection.type == n) {
      var a = this.docSelection.createRange(),
          b;
      while (a.length) {
        b = a.item(0), a.remove(b), b.parentNode.removeChild(b);
      }
      this.refresh()
    } else if (this.rangeCount) {
      var c = this.getAllRanges();
      if (c.length) {
        this.removeAllRanges();
        for (var d = 0, e = c.length; d < e; ++d) {
          c[d].deleteContents();
        }
        this.addRange(c[e - 1])
      }
    }
  }, Y.eachRange = function (a, b) {
    for (var c = 0, d = this._ranges.length; c < d; ++c) {
      if (a(this.getRangeAt(c))) {
        return b
      }
    }
  }, Y.getAllRanges = function () {
    var a = [];
    return this.eachRange(function (b) {
      a.push(b)
    }), a
  }, Y.setSingleRange = function (a, b) {
    this.removeAllRanges(), this.addRange(a, b)
  }, Y.callMethodOnEachRange = function (a, b) {
    var c = [];
    return this.eachRange(function (d) {
      c.push(d[a].apply(d, b))
    }), c
  }, Y.setStart = db(!0), Y.setEnd = db(
      !1), a.rangePrototype.select = function (a) {
    X(this.getDocument()).setSingleRange(this, a)
  }, Y.changeEachRange = function (a) {
    var b = [],
        c = this.isBackward();
    this.eachRange(function (c) {
      a(c), b.push(c)
    }), this.removeAllRanges(), c && b.length == 1 ? this.addRange(b[0],
        "backward") : this.setRanges(b)
  }, Y.containsNode = function (a, b) {
    return this.eachRange(function (c) {
      return c.containsNode(a, b)
    }, !0)
  }, Y.getBookmark = function (a) {
    return {
      backward: this.isBackward(),
      rangeBookmarks: this.callMethodOnEachRange("getBookmark", [a])
    }
  }, Y.moveToBookmark = function (b) {
    var c = [];
    for (var d = 0, e, f; e = b.rangeBookmarks[d++];) {
      f = a.createRange(
          this.win), f.moveToBookmark(e), c.push(f);
    }
    b.backward ? this.setSingleRange(c[0], "backward") : this.setRanges(c)
  }, Y.toHtml = function () {
    return this.callMethodOnEachRange("toHtml").join("")
  }, Y.getName = function () {
    return "WrappedSelection"
  }, Y.inspect = function () {
    return eb(this)
  }, Y.detach = function () {
    W(this.win, "delete"), U(this)
  }, T.detachAll = function () {
    W(null, "deleteAll")
  }, T.inspect = eb, T.isDirectionBackward = r, a.Selection = T, a.selectionPrototype = Y, a.addCreateMissingNativeApiListener(
      function (a) {
        typeof a.getSelection == "undefined" && (a.getSelection = function () {
          return X(a)
        }), a = null
      })
})

/**
 * Text range module for Rangy.
 * Text-based manipulation and searching of ranges and selections.
 *
 * Features
 *
 * - Ability to move range boundaries by character or word offsets
 * - Customizable word tokenizer
 * - Ignores text nodes inside <script> or <style> elements or those hidden by CSS display and visibility properties
 * - Range findText method to search for text or regex within the page or within a range. Flags for whole words and case
 *   sensitivity
 * - Selection and range save/restore as text offsets within a node
 * - Methods to return visible text within a range or selection
 * - innerText method for elements
 *
 * References
 *
 * https://www.w3.org/Bugs/Public/show_bug.cgi?id=13145
 * http://aryeh.name/spec/innertext/innertext.html
 * http://dvcs.w3.org/hg/editing/raw-file/tip/editing.html
 *
 * Part of Rangy, a cross-browser JavaScript range and selection library
 * http://code.google.com/p/rangy/
 *
 * Depends on Rangy core.
 *
 * Copyright 2013, Tim Down
 * Licensed under the MIT license.
 * Version: 1.3alpha.772
 * Build date: 26 February 2013
 */
rangy.createModule("TextRange", function (a, b) {
  function t(a, b) {
    function f(b, c, d) {
      var f = a.slice(b, c), g = {
        isWord: d, chars: f, toString: function () {
          return f.join("")
        }
      };
      for (var h = 0, i = f.length; h < i; ++h) {
        f[h].token = g;
      }
      e.push(g)
    }

    var c = a.join(""), d, e = [], g = 0, h, i;
    while (d = b.wordRegex.exec(c)) {
      h = d.index, i = h + d[0].length, h > g && f(g, h, !1);
      if (b.includeTrailingSpace) {
        while (m.test(a[i])) {
          ++i;
        }
      }
      f(h, i, !0), g = i
    }
    return g < a.length && f(g, a.length, !1), e
  }

  function x(a, b) {
    if (!a) {
      return b;
    }
    var c = {};
    return h(c, b), h(c, a), c
  }

  function y(a) {
    var b, c;
    return a ? (b = a.language || o, c = {}, h(c, w[b] || w[o]), h(c, a), c)
        : w[o]
  }

  function z(a) {
    return x(a, u)
  }

  function A(a) {
    return x(a, v)
  }

  function I(a, b) {
    var c = F(a, "display", b), d = a.tagName.toLowerCase();
    return c == "block" && G && H.hasOwnProperty(d) ? H[d] : c
  }

  function J(a) {
    var b = P(a);
    for (var c = 0, d = b.length; c < d; ++c) {
      if (b[c].nodeType == 1 && I(b[c])
          == "none") {
        return !0;
      }
    }
    return !1
  }

  function K(a) {
    var b;
    return a.nodeType == 3 && (b = a.parentNode) && F(b, "visibility")
        == "hidden"
  }

  function L(a) {
    return a && (a.nodeType == 1 && !/^(inline(-block|-table)?|none)$/.test(
        I(a)) || a.nodeType == 9 || a.nodeType == 11)
  }

  function M(a) {
    var b = a.lastChild;
    return b ? M(b) : a
  }

  function N(a) {
    return f.isCharacterDataNode(a)
        || !/^(area|base|basefont|br|col|frame|hr|img|input|isindex|link|meta|param)$/i.test(
            a.nodeName)
  }

  function O(a) {
    var b = [];
    while (a.parentNode) {
      b.unshift(a.parentNode), a = a.parentNode;
    }
    return b
  }

  function P(a) {
    return O(a).concat([a])
  }

  function Q(a) {
    var b;
    return typeof (b = a.namespaceURI) == c || b === null || b
        == "http://www.w3.org/1999/xhtml"
  }

  function R(a, b) {
    if (!a || a.nodeType != 1 || !Q(a)) {
      return !1;
    }
    switch (typeof b) {
      case"string":
        return a.tagName.toLowerCase() == b.toLowerCase();
      case"object":
        return (new RegExp("^(" + b.join("|S") + ")$", "i")).test(a.tagName);
      default:
        return !0
    }
  }

  function S(a) {
    while (a && !a.nextSibling) {
      a = a.parentNode;
    }
    return a ? a.nextSibling : null
  }

  function T(a, b) {
    return !b && a.hasChildNodes() ? a.firstChild : S(a)
  }

  function U(a) {
    var b = a.previousSibling;
    if (b) {
      a = b;
      while (a.hasChildNodes()) {
        a = a.lastChild;
      }
      return a
    }
    var c = a.parentNode;
    return c && c.nodeType == 1 ? c : null
  }

  function V(a) {
    if (!a || a.nodeType != 3) {
      return !1;
    }
    var b = a.data;
    if (b === "") {
      return !0;
    }
    var c = a.parentNode;
    if (!c || c.nodeType != 1) {
      return !1;
    }
    var d = F(a.parentNode, "whiteSpace");
    return /^[\t\n\r ]+$/.test(b) && /^(normal|nowrap)$/.test(d)
        || /^[\t\r ]+$/.test(b) && d == "pre-line"
  }

  function W(a) {
    if (a.data === "") {
      return !0;
    }
    if (!V(a)) {
      return !1;
    }
    var b = a.parentNode;
    return b ? J(a) ? !0 : !1 : !0
  }

  function X(a) {
    var b = a.nodeType;
    return b == 7 || b == 8 || J(a) || /^(script|style)$/i.test(a.nodeName)
        || K(a) || W(a)
  }

  function Y(a, b) {
    var c = a.nodeType;
    return c == 7 || c == 8 || c == 1 && I(a, b) == "none"
  }

  function Z() {
    this.store = {}
  }

  function ab(a, b, c) {
    return function (d) {
      var e = this.cache;
      if (e.hasOwnProperty(a)) {
        return $++, e[a];
      }
      _++;
      var f = b.call(this, c ? this[c] : this, d);
      return e[a] = f, f
    }
  }

  function bb(a, b) {
    this.node = a, this.session = b, this.cache = new Z, this.positions = new Z
  }

  function kb(a, b) {
    this.offset = b, this.nodeWrapper = a, this.node = a.node, this.session = a.session, this.cache = new Z
  }

  function lb() {
    return "[Position(" + f.inspectNode(this.node) + ":" + this.offset + ")]"
  }

  function pb() {
    return rb(), nb = new ob
  }

  function qb() {
    return nb || pb()
  }

  function rb() {
    nb && nb.detach(), nb = null
  }

  function sb(a, c, d, e) {
    function h() {
      var a = null, b = null;
      return c ? (b = f, g || (f = f.previousVisible(), g = !f || d && f.equals(
          d))) : g || (b = f = f.nextVisible(), g = !f || d && f.equals(d)), g
      && (f = null), b
    }

    d && (c ? X(d.node) && (d = a.previousVisible()) : X(d.node)
        && (d = d.nextVisible()));
    var f = a, g = !1, i, j = !1;
    return {
      next: function () {
        if (j) {
          return j = !1, i;
        }
        var a, b;
        while (a = h()) {
          b = a.getCharacter(e);
          if (b) {
            return i = a, a
          }
        }
        return null
      }, rewind: function () {
        if (!i) {
          throw b.createError(
              "createCharacterIterator: cannot rewind. Only one position can be rewound.");
        }
        j = !0
      }, dispose: function () {
        a = d = null
      }
    }
  }

  function ub(a, b, c) {
    function g(a) {
      var b, c, f = [], g = a ? d : e, h = !1, i = !1;
      while (b = g.next()) {
        c = b.character;
        if (l.test(c)) {
          i && (i = !1, h = !0);
        } else {
          if (h) {
            g.rewind();
            break
          }
          i = !0
        }
        f.push(b)
      }
      return f
    }

    function n(a) {
      var b = ["[" + a.length + "]"];
      for (var c = 0; c < a.length; ++c) {
        b.push(
            "(word: " + a[c] + ", is word: " + a[c].isWord + ")");
      }
      return b
    }

    var d = sb(a, !1, null, b), e = sb(a, !0, null, b), f = c.tokenizer,
        h = g(!0), i = g(!1).reverse(), j = f(i.concat(h), c),
        k = h.length ? j.slice(tb(j, h[0].token)) : [],
        m = i.length ? j.slice(0, tb(j, i.pop().token) + 1) : [];
    return {
      nextEndToken: function () {
        var a, b;
        while (k.length == 1 && !(a = k[0]).isWord && (b = g(!0)).length
        > 0) {
          k = f(a.chars.concat(b), c);
        }
        return k.shift()
      }, previousStartToken: function () {
        var a, b;
        while (m.length == 1 && !(a = m[0]).isWord && (b = g(!1)).length
        > 0) {
          m = f(b.reverse().concat(a.chars), c);
        }
        return m.pop()
      }, dispose: function () {
        d.dispose(), e.dispose(), k = m = null
      }
    }
  }

  function vb(a, b, c, f, g) {
    var h = 0, i, j = a, k, l, m = Math.abs(c), n;
    if (c !== 0) {
      var o = c < 0;
      switch (b) {
        case d:
          k = sb(a, o, null, f);
          while ((i = k.next()) && h < m) {
            ++h, j = i;
          }
          l = i, k.dispose();
          break;
        case e:
          var p = ub(a, f, g), q = o ? p.previousStartToken : p.nextEndToken;
          while ((n = q()) && h < m) {
            n.isWord && (++h, j = o ? n.chars[0]
                : n.chars[n.chars.length - 1]);
          }
          break;
        default:
          throw new Error("movePositionBy: unit '" + b + "' not implemented")
      }
      o ? (j = j.previousVisible(), h = -h) : j && j.isLeadingSpace && (b == e
      && (k = sb(a, !1, null, f), l = k.next(), k.dispose()), l
      && (j = l.previousVisible()))
    }
    return {position: j, unitsMoved: h}
  }

  function wb(a, b, c, d) {
    var e = a.getRangeBoundaryPosition(b, !0),
        f = a.getRangeBoundaryPosition(b, !1), g = d ? f : e, h = d ? e : f;
    return sb(g, !!d, h, c)
  }

  function xb(a, b, c) {
    var d = [], e = wb(a, b, c), f;
    while (f = e.next()) {
      d.push(f);
    }
    return e.dispose(), d
  }

  function yb(b, c, d) {
    var e = a.createRange(b.node);
    e.setStartAndEnd(b.node, b.offset, c.node, c.offset);
    var f = !e.expand("word", d);
    return e.detach(), f
  }

  function zb(a, b, c, d, e) {
    function r(a, b) {
      var c = i[a].previousVisible(), d = i[b - 1],
          f = !e.wholeWordsOnly || yb(c, d, e.wordOptions);
      return {startPos: c, endPos: d, valid: f}
    }

    var f = p(e.direction),
        g = sb(a, f, a.session.getRangeBoundaryPosition(d, f), e), h = "",
        i = [], j, k, l, m, n, o, q = null;
    while (j = g.next()) {
      k = j.character, !c && !e.caseSensitive && (k = k.toLowerCase()), f
          ? (i.unshift(j), h = k + h) : (i.push(j), h += k);
      if (c) {
        n = b.exec(h);
        if (n) {
          if (o) {
            l = n.index, m = l + n[0].length;
            if (!f && m < h.length || f && l > 0) {
              q = r(l, m);
              break
            }
          } else {
            o = !0
          }
        }
      } else if ((l = h.indexOf(b)) != -1) {
        q = r(l, l + b.length);
        break
      }
    }
    return o && (q = r(l, m)), g.dispose(), q
  }

  function Ab(a) {
    return function () {
      var b = !!nb, c = qb(), d = [c].concat(g.toArray(arguments)),
          e = a.apply(this, d);
      return b || rb(), e
    }
  }

  function Bb(a, b) {
    return Ab(function (c, e, f, g) {
      typeof f == "undefined" && (f = e, e = d), g = x(g, C);
      var h = z(g.characterOptions), i = y(g.wordOptions), j = a;
      b && (j = f >= 0, this.collapse(!j));
      var k = vb(c.getRangeBoundaryPosition(this, j), e, f, h, i),
          l = k.position;
      return this[j ? "setStart" : "setEnd"](l.node, l.offset), k.unitsMoved
    })
  }

  function Cb(a) {
    return Ab(function (b, c) {
      c = z(c);
      var d, e = wb(b, this, c, !a), f = 0;
      while ((d = e.next()) && l.test(d.character)) {
        ++f;
      }
      e.dispose();
      var g = f > 0;
      return g && this[a ? "moveStart" : "moveEnd"]("character", a ? f : -f,
          {characterOptions: c}), g
    })
  }

  function Db(a) {
    return Ab(function (b, c) {
      var d = !1;
      return this.changeEachRange(function (b) {
        d = b[a](c) || d
      }), d
    })
  }

  a.requireModules(["WrappedSelection"]);
  var c = "undefined", d = "character", e = "word", f = a.dom, g = a.util,
      h = g.extend, i = f.getBody, j = /^[ \t\f\r\n]+$/, k = /^[ \t\f\r]+$/,
      l = /^[\t-\r \u0085\u00A0\u1680\u180E\u2000-\u200B\u2028\u2029\u202F\u205F\u3000]+$/,
      m = /^[\t \u00A0\u1680\u180E\u2000-\u200B\u202F\u205F\u3000]+$/,
      n = /^[\n-\r\u0085\u2028\u2029]$/, o = "en",
      p = a.Selection.isDirectionBackward, q = !1, r = !1, s = !0;
  (function () {
    q = !1, r = !1/*var b=document.createElement("div");b.contentEditable="true",b.innerHTML="<p>1 </p><p></p>";var c=i(document),d=b.firstChild,e=a.getSelection();c.appendChild(b),e.collapse(d.lastChild,2),e.setStart(d.firstChild,0),q=(""+e).length==1,b.innerHTML="1 <br>",e.collapse(b,2),e.setStart(b.firstChild,0),r=(""+e).length==1,c.removeChild(b),e.removeAllRanges()*/
  })();
  var u = {
        includeBlockContentTrailingSpace: !0,
        includeSpaceBeforeBr: !0,
        includePreLineTrailingSpace: !0
      }, v = {
        includeBlockContentTrailingSpace: !s,
        includeSpaceBeforeBr: !r,
        includePreLineTrailingSpace: !0
      }, w = {
        en: {
          wordRegex: /[a-z0-9]+('[a-z0-9]+)*/gi,
          includeTrailingSpace: !1,
          tokenizer: t
        }
      }, B = {
        caseSensitive: !1,
        withinRange: null,
        wholeWordsOnly: !1,
        wrap: !1,
        direction: "forward",
        wordOptions: null,
        characterOptions: null
      }, C = {wordOptions: null, characterOptions: null}, D = {
        wordOptions: null,
        characterOptions: null,
        trim: !1,
        trimStart: !0,
        trimEnd: !0
      }, E = {wordOptions: null, characterOptions: null, direction: "forward"},
      F = f.getComputedStyleProperty, G;
  (function () {
    var a = document.createElement("table"), b = i(document);
    b.appendChild(a), G = F(a, "display") == "block", b.removeChild(a)
  })(), a.features.tableCssDisplayBlock = G;
  var H = {
    table: "table",
    caption: "table-caption",
    colgroup: "table-column-group",
    col: "table-column",
    thead: "table-header-group",
    tbody: "table-row-group",
    tfoot: "table-footer-group",
    tr: "table-row",
    td: "table-cell",
    th: "table-cell"
  };
  Z.prototype = {
    get: function (a) {
      return this.store.hasOwnProperty(a) ? this.store[a] : null
    }, set: function (a, b) {
      return this.store[a] = b
    }
  };
  var $ = 0, _ = 0;
  a.report = function () {
    console.log("Cached: " + $ + ", uncached: " + _)
  };
  var cb = {
    getPosition: function (a) {
      var b = this.positions;
      return b.get(a) || b.set(a, new kb(this, a))
    }, toString: function () {
      return "[NodeWrapper(" + f.inspectNode(this.node) + ")]"
    }
  };
  bb.prototype = cb;
  var db = "EMPTY", eb = "NON_SPACE", fb = "UNCOLLAPSIBLE_SPACE",
      gb = "COLLAPSIBLE_SPACE", hb = "TRAILING_SPACE_IN_BLOCK",
      ib = "TRAILING_SPACE_BEFORE_BR",
      jb = "PRE_LINE_TRAILING_SPACE_BEFORE_LINE_BREAK";
  h(cb, {
    isCharacterDataNode: ab("isCharacterDataNode", f.isCharacterDataNode,
        "node"),
    getNodeIndex: ab("nodeIndex", f.getNodeIndex, "node"),
    getLength: ab("nodeLength", f.getNodeLength, "node"),
    containsPositions: ab("containsPositions", N, "node"),
    isWhitespace: ab("isWhitespace", V, "node"),
    isCollapsedWhitespace: ab("isCollapsedWhitespace", W, "node"),
    getComputedDisplay: ab("computedDisplay", I, "node"),
    isCollapsed: ab("collapsed", X, "node"),
    isIgnored: ab("ignored", Y, "node"),
    next: ab("nextPos", T, "node"),
    previous: ab("previous", U, "node"),
    getTextNodeInfo: ab("textNodeInfo", function (a) {
      var b = null, c = !1, d = F(a.parentNode, "whiteSpace"),
          e = d == "pre-line";
      if (e) {
        b = k, c = !0;
      } else if (d == "normal" || d
          == "nowrap") {
        b = j, c = !0;
      }
      return {
        node: a,
        text: a.data,
        spaceRegex: b,
        collapseSpaces: c,
        preLine: e
      }
    }, "node"),
    hasInnerText: ab("hasInnerText", function (a, b) {
      var c = this.session,
          d = c.getPosition(a.parentNode, this.getNodeIndex() + 1),
          e = c.getPosition(a, 0), f = b ? d : e, g = b ? e : d;
      while (f !== g) {
        f.prepopulateChar();
        if (f.isDefinitelyNonEmpty()) {
          return !0;
        }
        f = b ? f.previousVisible() : f.nextVisible()
      }
      return !1
    }, "node"),
    getTrailingSpace: ab("trailingSpace", function (a) {
      if (a.tagName.toLowerCase() == "br") {
        return "";
      }
      switch (this.getComputedDisplay()) {
        case"inline":
          var b = a.lastChild;
          while (b) {
            if (!Y(b)) {
              return b.nodeType == 1 ? this.session.getNodeWrapper(
                  b).getTrailingSpace() : "";
            }
            b = b.previousSibling
          }
          break;
        case"inline-block":
        case"inline-table":
        case"none":
        case"table-column":
        case"table-column-group":
          break;
        case"table-cell":
          return "	";
        default:
          return this.hasInnerText(!0) ? "\n" : ""
      }
      return ""
    }, "node"),
    getLeadingSpace: ab("leadingSpace", function (a) {
      switch (this.getComputedDisplay()) {
        case"inline":
        case"inline-block":
        case"inline-table":
        case"none":
        case"table-column":
        case"table-column-group":
        case"table-cell":
          break;
        default:
          return this.hasInnerText(!1) ? "\n" : ""
      }
      return ""
    }, "node")
  });
  var mb = {
    character: "", characterType: db, isBr: !1, prepopulateChar: function () {
      var a = this;
      if (!a.prepopulatedChar) {
        var b = a.node, c = a.offset, d = "", e = db, f = !1;
        if (c > 0) {
          if (b.nodeType == 3) {
            var g = b.data, h = g.charAt(c - 1),
                i = a.nodeWrapper.getTextNodeInfo(), j = i.spaceRegex;
            i.collapseSpaces ? j.test(h) ? c > 1 && j.test(g.charAt(c - 2))
                    || (i.preLine && g.charAt(c) === "\n" ? (d = " ", e = jb)
                        : (d = " ", e = gb)) : (d = h, e = eb, f = !0)
                : (d = h, e = fb, f = !0)
          } else {
            var k = b.childNodes[c - 1];
            k && k.nodeType == 1 && !X(k) && (k.tagName.toLowerCase() == "br"
                ? (d = "\n", a.isBr = !0, e = gb, f = !1)
                : a.checkForTrailingSpace = !0);
            if (!d) {
              var l = b.childNodes[c];
              l && l.nodeType == 1 && !X(l) && (a.checkForLeadingSpace = !0)
            }
          }
        }
        a.prepopulatedChar = !0, a.character = d, a.characterType = e, a.isCharInvariant = f
      }
    }, isDefinitelyNonEmpty: function () {
      var a = this.characterType;
      return a == eb || a == fb
    }, resolveLeadingAndTrailingSpaces: function () {
      this.prepopulatedChar || this.prepopulateChar();
      if (this.checkForTrailingSpace) {
        var a = this.session.getNodeWrapper(
            this.node.childNodes[this.offset - 1]).getTrailingSpace();
        a
        && (this.isTrailingSpace = !0, this.character = a, this.characterType = gb), this.checkForTrailingSpace = !1
      }
      if (this.checkForLeadingSpace) {
        var b = this.session.getNodeWrapper(
            this.node.childNodes[this.offset]).getLeadingSpace();
        b
        && (this.isLeadingSpace = !0, this.character = b, this.characterType = gb), this.checkForLeadingSpace = !1
      }
    }, getPrecedingUncollapsedPosition: function (a) {
      var b = this, c;
      while (b = b.previousVisible()) {
        c = b.getCharacter(a);
        if (c !== "") {
          return b
        }
      }
      return null
    }, getCharacter: function (a) {
      function j() {
        return h || (g = i.getPrecedingUncollapsedPosition(a), h = !0), g
      }

      this.resolveLeadingAndTrailingSpaces();
      if (this.isCharInvariant) {
        return this.character;
      }
      var b = ["character", a.includeSpaceBeforeBr,
        a.includeBlockContentTrailingSpace, a.includePreLineTrailingSpace].join(
          "_"), c = this.cache.get(b);
      if (c !== null) {
        return c;
      }
      var d = "", e = this.characterType == gb, f, g, h = !1, i = this;
      if (e) {
        if (this.character != " " || !!j() && !g.isTrailingSpace && g.character
            != "\n") {
          if (this.character == "\n" && this.isLeadingSpace) {
            j()
            && g.character != "\n" && (d = "\n");
          } else {
            f = this.nextUncollapsed();
            if (f) {
              f.isBr ? this.type = ib : f.isTrailingSpace && f.character == "\n"
                  && (this.type = hb);
              if (f.character === "\n") {
                if (this.type != ib || !!a.includeSpaceBeforeBr) {
                  if (this.type
                      != hb || !f.isTrailingSpace
                      || !!a.includeBlockContentTrailingSpace) {
                    if (this.type != jb
                        || f.type != eb
                        || !!a.includePreLineTrailingSpace) {
                      this.character === "\n"
                          ? f.isTrailingSpace ? this.isTrailingSpace
                              || !this.isBr
                              : d = "\n" : this.character === " " && (d = " ")
                    }
                  }
                }
              } else {
                d = this.character
              }
            }
          }
        }
      } else {
        this.character !== "\n" || !!(f = this.nextUncollapsed())
        && !f.isTrailingSpace;
      }
      return this.cache.set(b, d), d
    }, equals: function (a) {
      return !!a && this.node === a.node && this.offset === a.offset
    }, inspect: lb, toString: function () {
      return this.character
    }
  };
  kb.prototype = mb, h(mb, {
    next: ab("nextPos", function (a) {
      var b = a.nodeWrapper, c = a.node, d = a.offset, e = b.session;
      if (!c) {
        return null;
      }
      var f, g, h;
      return d == b.getLength() ? (f = c.parentNode, g = f ? b.getNodeIndex()
          + 1 : 0) : b.isCharacterDataNode() ? (f = c, g = d + 1)
          : (h = c.childNodes[d], e.getNodeWrapper(h).containsPositions()
              ? (f = h, g = 0) : (f = c, g = d + 1)), f ? e.getPosition(f, g)
          : null
    }), previous: ab("previous", function (a) {
      var b = a.nodeWrapper, c = a.node, d = a.offset, e = b.session, g, h, i;
      return d == 0 ? (g = c.parentNode, h = g ? b.getNodeIndex() : 0)
          : b.isCharacterDataNode() ? (g = c, h = d - 1) : (i = c.childNodes[d
          - 1], e.getNodeWrapper(i).containsPositions()
              ? (g = i, h = f.getNodeLength(i)) : (g = c, h = d - 1)), g
          ? e.getPosition(g, h) : null
    }), nextVisible: ab("nextVisible", function (a) {
      var b = a.next();
      if (!b) {
        return null;
      }
      var c = b.nodeWrapper, d = b.node, e = b;
      return c.isCollapsed() && (e = c.session.getPosition(d.parentNode,
          c.getNodeIndex() + 1)), e
    }), nextUncollapsed: ab("nextUncollapsed", function (a) {
      var b = a;
      while (b = b.nextVisible()) {
        b.resolveLeadingAndTrailingSpaces();
        if (b.character !== "") {
          return b
        }
      }
      return null
    }), previousVisible: ab("previousVisible", function (a) {
      var b = a.previous();
      if (!b) {
        return null;
      }
      var c = b.nodeWrapper, d = b.node, e = b;
      return c.isCollapsed() && (e = c.session.getPosition(d.parentNode,
          c.getNodeIndex())), e
    })
  });
  var nb = null, ob = function () {
    function a(a) {
      var b = new Z;
      return {
        get: function (c) {
          var d = b.get(c[a]);
          if (d) {
            for (var e = 0, f; f = d[e++];) {
              if (f.node === c) {
                return f;
              }
            }
          }
          return null
        }, set: function (c) {
          var d = c.node[a], e = b.get(d) || b.set(d, []);
          e.push(c)
        }
      }
    }

    function c() {
      this.initCaches()
    }

    var b = g.isHostProperty(document.documentElement, "uniqueID");
    return c.prototype = {
      initCaches: function () {
        this.elementCache = b ? function () {
          var a = new Z;
          return {
            get: function (b) {
              return a.get(b.uniqueID)
            }, set: function (b) {
              a.set(b.node.uniqueID, b)
            }
          }
        }() : a("tagName"), this.textNodeCache = a(
            "data"), this.otherNodeCache = a("nodeName")
      }, getNodeWrapper: function (a) {
        var b;
        switch (a.nodeType) {
          case 1:
            b = this.elementCache;
            break;
          case 3:
            b = this.textNodeCache;
            break;
          default:
            b = this.otherNodeCache
        }
        var c = b.get(a);
        return c || (c = new bb(a, this), b.set(c)), c
      }, getPosition: function (a, b) {
        return this.getNodeWrapper(a).getPosition(b)
      }, getRangeBoundaryPosition: function (a, b) {
        var c = b ? "start" : "end";
        return this.getPosition(a[c + "Container"], a[c + "Offset"])
      }, detach: function () {
        this.elementCache = this.textNodeCache = this.otherNodeCache = null
      }
    }, c
  }();
  h(f, {nextNode: T, previousNode: U});
  var tb = Array.prototype.indexOf ? function (a, b) {
    return a.indexOf(b)
  } : function (a, b) {
    for (var c = 0, d = a.length; c < d; ++c) {
      if (a[c] === b) {
        return c;
      }
    }
    return -1
  };
  h(a.rangePrototype, {
    moveStart: Bb(!0, !1),
    moveEnd: Bb(!1, !1),
    move: Bb(!0, !0),
    trimStart: Cb(!0),
    trimEnd: Cb(!1),
    trim: Ab(function (a, b) {
      var c = this.trimStart(b), d = this.trimEnd(b);
      return c || d
    }),
    expand: Ab(function (a, b, c) {
      var f = !1;
      c = x(c, D);
      var g = z(c.characterOptions);
      b || (b = d);
      if (b == e) {
        var h = y(c.wordOptions), i = a.getRangeBoundaryPosition(this, !0),
            j = a.getRangeBoundaryPosition(this, !1), k = ub(i, g, h),
            l = k.nextEndToken(), m = l.chars[0].previousVisible(), n, o;
        if (this.collapsed) {
          n = l;
        } else {
          var p = ub(j, g, h);
          n = p.previousStartToken()
        }
        return o = n.chars[n.chars.length - 1], m.equals(i) || (this.setStart(
            m.node, m.offset), f = !0), o && !o.equals(j) && (this.setEnd(
            o.node, o.offset), f = !0), c.trim && (c.trimStart
        && (f = this.trimStart(g) || f), c.trimEnd && (f = this.trimEnd(g)
            || f)), f
      }
      return this.moveEnd(d, 1, c)
    }),
    text: Ab(function (a, b) {
      return this.collapsed ? "" : xb(a, this, z(b)).join("")
    }),
    selectCharacters: Ab(function (a, b, c, d, e) {
      var f = {characterOptions: e};
      b || (b = i(this.getDocument())), this.selectNodeContents(
          b), this.collapse(!0), this.moveStart("character", c,
          f), this.collapse(!0), this.moveEnd("character", d - c, f)
    }),
    toCharacterRange: Ab(function (a, b, c) {
      b || (b = i(this.getDocument()));
      var d = b.parentNode, e = f.getNodeIndex(b),
          g = f.comparePoints(this.startContainer, this.endContainer, d, e)
              == -1, h = this.cloneRange(), j, k;
      return g ? (h.setStartAndEnd(this.startContainer, this.startOffset, d,
          e), j = -h.text(c).length) : (h.setStartAndEnd(d, e,
          this.startContainer, this.startOffset), j = h.text(c).length), k = j
          + this.text(c).length, {start: j, end: k}
    }),
    findText: Ab(function (b, c, d) {
      d = x(d, B), d.wholeWordsOnly && (d.wordOptions = y(
          d.wordOptions), d.wordOptions.includeTrailingSpace = !1);
      var e = p(d.direction), f = d.withinRange;
      f || (f = a.createRange(), f.selectNodeContents(this.getDocument()));
      var g = c, h = !1;
      typeof g == "string" ? d.caseSensitive || (g = g.toLowerCase()) : h = !0;
      var i = b.getRangeBoundaryPosition(this, !e),
          j = f.comparePoint(i.node, i.offset);
      j === -1 ? i = b.getRangeBoundaryPosition(f, !0) : j === 1
          && (i = b.getRangeBoundaryPosition(f, !1));
      var k = i, l = !1, m;
      for (; ;) {
        m = zb(k, g, h, f, d);
        if (m) {
          if (m.valid) {
            return this.setStartAndEnd(m.startPos.node,
                m.startPos.offset, m.endPos.node, m.endPos.offset), !0;
          }
          k = e ? m.startPos : m.endPos
        } else {
          if (!d.wrap || !!l) {
            return !1;
          }
          f = f.cloneRange(), k = b.getRangeBoundaryPosition(f,
              !e), f.setBoundary(i.node, i.offset, e), l = !0
        }
      }
    }),
    pasteHtml: function (a) {
      this.deleteContents();
      if (a) {
        var b = this.createContextualFragment(a), c = b.lastChild;
        this.insertNode(b), this.collapseAfter(c)
      }
    }
  }), h(a.selectionPrototype, {
    expand: Ab(function (a, b, c) {
      this.changeEachRange(function (a) {
        a.expand(b, c)
      })
    }),
    move: Ab(function (a, b, c, d) {
      var e = 0;
      if (this.focusNode) {
        this.collapse(this.focusNode, this.focusOffset);
        var f = this.getRangeAt(0);
        d || (d = {}), d.characterOptions = A(d.characterOptions), e = f.move(b,
            c, d), this.setSingleRange(f)
      }
      return e
    }),
    trimStart: Db("trimStart"),
    trimEnd: Db("trimEnd"),
    trim: Db("trim"),
    selectCharacters: Ab(function (b, c, d, e, f, g) {
      var h = a.createRange(c);
      h.selectCharacters(c, d, e, g), this.setSingleRange(h, f)
    }),
    saveCharacterRanges: Ab(function (a, b, c) {
      var d = this.getAllRanges(), e = d.length, f = [],
          g = e == 1 && this.isBackward();
      for (var h = 0, i = d.length; h < i; ++h) {
        f[h] = {
          characterRange: d[h].toCharacterRange(b, c),
          backward: g,
          characterOptions: c
        };
      }
      return f
    }),
    restoreCharacterRanges: Ab(function (b, c, d) {
      this.removeAllRanges();
      for (var e = 0, f = d.length, g, h, i; e < f;
          ++e) {
        h = d[e], i = h.characterRange, g = a.createRange(
            c), g.selectCharacters(c, i.start, i.end,
            h.characterOptions), this.addRange(g, h.backward)
      }
    }),
    text: Ab(function (a, b) {
      var c = [];
      for (var d = 0, e = this.rangeCount; d < e; ++d) {
        c[d] = this.getRangeAt(
            d).text(b);
      }
      return c.join("")
    })
  }), a.innerText = function (b, c) {
    var d = a.createRange(b);
    d.selectNodeContents(b);
    var e = d.text(c);
    return d.detach(), e
  }, a.createWordIterator = function (a, b, c) {
    var d = qb();
    c = x(c, E);
    var e = z(c.characterOptions), f = y(c.wordOptions),
        g = d.getPosition(a, b), h = ub(g, e, f), i = p(c.direction);
    return {
      next: function () {
        return i ? h.previousStartToken() : h.nextEndToken()
      }, dispose: function () {
        h.dispose(), this.next = function () {
        }
      }
    }
  }, a.noMutation = function (a) {
    var b = qb();
    a(b), rb()
  }, a.noMutation.createEntryPointFunction = Ab, a.textRange = {
    isBlockNode: L,
    isCollapsedWhitespaceNode: W,
    createPosition: Ab(function (a, b, c) {
      return a.getPosition(b, c)
    })
  }
})

/*
 CSS Class Applier module for Rangy.
 Adds, removes and toggles CSS classes on Ranges and Selections

 Part of Rangy, a cross-browser JavaScript range and selection library
 http://code.google.com/p/rangy/

 Depends on Rangy core.

 Copyright 2012, Tim Down
 Licensed under the MIT license.
 Version: 1.2.3
 Build date: 26 February 2012
*/
rangy.createModule("CssClassApplier", function (i, v) {
  function r(a, b) {
    return a.className && RegExp("(?:^|\\s)" + b + "(?:\\s|$)").test(
        a.className)
  }

  function s(a, b) {
    if (a.className) {
      r(a, b) || (a.className += " " + b);
    } else {
      a.className = b
    }
  }

  function o(a) {
    return a.split(/\s+/).sort().join(" ")
  }

  function w(a, b) {
    return o(a.className) == o(b.className)
  }

  function x(a) {
    for (var b = a.parentNode; a.hasChildNodes();) {
      b.insertBefore(a.firstChild,
          a);
    }
    b.removeChild(a)
  }

  function y(a, b) {
    var c = a.cloneRange();
    c.selectNodeContents(b);
    var d = c.intersection(a);
    d = d ? d.toString() : "";
    c.detach();
    return d != ""
  }

  function z(a) {
    return a.getNodes([3], function (b) {
      return y(a, b)
    })
  }

  function A(a, b) {
    if (a.attributes.length != b.attributes.length) {
      return false;
    }
    for (var c = 0, d = a.attributes.length, e, f; c < d; ++c) {
      e = a.attributes[c];
      f = e.name;
      if (f != "class") {
        f = b.attributes.getNamedItem(f);
        if (e.specified != f.specified) {
          return false;
        }
        if (e.specified && e.nodeValue !== f.nodeValue) {
          return false
        }
      }
    }
    return true
  }

  function B(a, b) {
    for (var c = 0, d = a.attributes.length, e; c < d; ++c) {
      e = a.attributes[c].name;
      if (!(b &&
              h.arrayContains(b, e)) && a.attributes[c].specified && e
          != "class") {
        return true
      }
    }
    return false
  }

  function C(a) {
    var b;
    return a && a.nodeType == 1 && ((b = a.parentNode) && b.nodeType == 9
        && b.designMode == "on" || k(a) && !k(a.parentNode))
  }

  function D(a) {
    return (k(a) || a.nodeType != 1 && k(a.parentNode)) && !C(a)
  }

  function E(a) {
    return a && a.nodeType == 1 && !M.test(p(a, "display"))
  }

  function N(a) {
    if (a.data.length == 0) {
      return true;
    }
    if (O.test(a.data)) {
      return false;
    }
    switch (p(a.parentNode, "whiteSpace")) {
      case "pre":
      case "pre-wrap":
      case "-moz-pre-wrap":
        return false;
      case "pre-line":
        if (/[\r\n]/.test(a.data)) {
          return false
        }
    }
    return E(a.previousSibling) || E(a.nextSibling)
  }

  function m(a, b, c, d) {
    var e, f = c == 0;
    if (h.isAncestorOf(b, a)) {
      return a;
    }
    if (h.isCharacterDataNode(b)) {
      if (c == 0) {
        c = h.getNodeIndex(b);
        b = b.parentNode
      } else if (c == b.length) {
        c = h.getNodeIndex(b) + 1;
        b = b.parentNode
      } else {
        throw v.createError(
            "splitNodeAt should not be called with offset in the middle of a data node ("
            + c + " in " + b.data);
      }
    }
    var g;
    g = b;
    var j = c;
    g = h.isCharacterDataNode(g) ? j == 0 ? !!g.previousSibling : j == g.length
        ? !!g.nextSibling :
        true : j > 0 && j < g.childNodes.length;
    if (g) {
      if (!e) {
        e = b.cloneNode(false);
        for (e.id && e.removeAttribute("id");
            f = b.childNodes[c];) {
          e.appendChild(f);
        }
        h.insertAfter(e, b)
      }
      return b == a ? e : m(a, e.parentNode, h.getNodeIndex(e), d)
    } else if (a != b) {
      e = b.parentNode;
      b = h.getNodeIndex(b);
      f || b++;
      return m(a, e, b, d)
    }
    return a
  }

  function F(a) {
    var b = a ? "nextSibling" : "previousSibling";
    return function (c, d) {
      var e = c.parentNode, f = c[b];
      if (f) {
        if (f && f.nodeType == 3) {
          return f
        }
      } else if (d) {
        if ((f = e[b]) && f.nodeType == 1 && e.tagName == f.tagName
            && w(e, f) && A(e, f)) {
          return f[a ?
              "firstChild" : "lastChild"];
        }
      }
      return null
    }
  }

  function t(a) {
    this.firstTextNode = (this.isElementMerge = a.nodeType == 1) ? a.lastChild
        : a;
    this.textNodes = [this.firstTextNode]
  }

  function q(a, b, c) {
    this.cssClass = a;
    var d, e, f = null;
    if (typeof b == "object" && b !== null) {
      c = b.tagNames;
      f = b.elementProperties;
      for (d = 0; e = P[d++];) {
        if (b.hasOwnProperty(e)) {
          this[e] = b[e];
        }
      }
      d = b.normalize
    } else {
      d = b;
    }
    this.normalize = typeof d == "undefined" ? true : d;
    this.attrExceptions = [];
    d = document.createElement(this.elementTagName);
    this.elementProperties = {};
    for (var g in f) {
      if (f.hasOwnProperty(g)) {
        if (G.hasOwnProperty(g)) {
          g =
              G[g];
        }
        d[g] = f[g];
        this.elementProperties[g] = d[g];
        this.attrExceptions.push(g)
      }
    }
    this.elementSortedClassName = this.elementProperties.hasOwnProperty(
        "className") ? o(this.elementProperties.className + " " + a) : a;
    this.applyToAnyTagName = false;
    a = typeof c;
    if (a == "string") {
      if (c
          == "*") {
        this.applyToAnyTagName = true;
      } else {
        this.tagNames = c.toLowerCase().replace(
            /^\s\s*/, "").replace(/\s\s*$/, "").split(/\s*,\s*/);
      }
    } else if (a
        == "object" && typeof c.length == "number") {
      this.tagNames = [];
      d = 0;
      for (a = c.length; d < a; ++d) {
        if (c[d] == "*") {
          this.applyToAnyTagName =
              true;
        } else {
          this.tagNames.push(c[d].toLowerCase())
        }
      }
    } else {
      this.tagNames = [this.elementTagName]
    }
  }

  i.requireModules(["WrappedSelection", "WrappedRange"]);
  var h = i.dom, H = function () {
    function a(b, c, d) {
      return c && d ? " " : ""
    }

    return function (b, c) {
      if (b.className) {
        b.className = b.className.replace(
            RegExp("(?:^|\\s)" + c + "(?:\\s|$)"), a)
      }
    }
  }(), p;
  if (typeof window.getComputedStyle != "undefined") {
    p = function (a, b) {
      return h.getWindow(a).getComputedStyle(a, null)[b]
    };
  } else if (typeof document.documentElement.currentStyle
      != "undefined") {
    p = function (a,
        b) {
      return a.currentStyle[b]
    };
  } else {
    v.fail("No means of obtaining computed style properties found");
  }
  var k;
  (function () {
    k = typeof document.createElement("div").isContentEditable == "boolean"
        ? function (a) {
          return a && a.nodeType == 1 && a.isContentEditable
        } : function (a) {
          if (!a || a.nodeType != 1 || a.contentEditable
              == "false") {
            return false;
          }
          return a.contentEditable == "true" || k(a.parentNode)
        }
  })();
  var M = /^inline(-block|-table)?$/i, O = /[^\r\n\t\f \u200B]/, Q = F(false),
      R = F(true);
  t.prototype = {
    doMerge: function () {
      for (var a = [], b, c, d = 0,
          e = this.textNodes.length; d < e; ++d) {
        b = this.textNodes[d];
        c = b.parentNode;
        a[d] = b.data;
        if (d) {
          c.removeChild(b);
          c.hasChildNodes() || c.parentNode.removeChild(c)
        }
      }
      return this.firstTextNode.data = a = a.join("")
    }, getLength: function () {
      for (var a = this.textNodes.length, b = 0;
          a--;) {
        b += this.textNodes[a].length;
      }
      return b
    }, toString: function () {
      for (var a = [], b = 0, c = this.textNodes.length; b < c; ++b) {
        a[b] = "'"
            + this.textNodes[b].data + "'";
      }
      return "[Merge(" + a.join(",") + ")]"
    }
  };
  var P = ["elementTagName", "ignoreWhiteSpace", "applyToEditableOnly"],
      G = {"class": "className"};
  q.prototype = {
    elementTagName: "span",
    elementProperties: {},
    ignoreWhiteSpace: true,
    applyToEditableOnly: false,
    hasClass: function (a) {
      return a.nodeType == 1 && h.arrayContains(this.tagNames,
          a.tagName.toLowerCase()) && r(a, this.cssClass)
    },
    getSelfOrAncestorWithClass: function (a) {
      for (; a;) {
        if (this.hasClass(a, this.cssClass)) {
          return a;
        }
        a = a.parentNode
      }
      return null
    },
    isModifiable: function (a) {
      return !this.applyToEditableOnly || D(a)
    },
    isIgnorableWhiteSpaceNode: function (a) {
      return this.ignoreWhiteSpace && a &&
          a.nodeType == 3 && N(a)
    },
    postApply: function (a, b, c) {
      for (var d = a[0], e = a[a.length - 1], f = [], g, j = d, I = e, J = 0,
          K = e.length, n, L, l = 0, u = a.length; l < u; ++l) {
        n = a[l];
        if (L = Q(n, !c)) {
          if (!g) {
            g = new t(L);
            f.push(g)
          }
          g.textNodes.push(n);
          if (n === d) {
            j = g.firstTextNode;
            J = j.length
          }
          if (n === e) {
            I = g.firstTextNode;
            K = g.getLength()
          }
        } else {
          g = null
        }
      }
      if (a = R(e, !c)) {
        if (!g) {
          g = new t(e);
          f.push(g)
        }
        g.textNodes.push(a)
      }
      if (f.length) {
        l = 0;
        for (u = f.length; l < u; ++l) {
          f[l].doMerge();
        }
        b.setStart(j, J);
        b.setEnd(I, K)
      }
    },
    createContainer: function (a) {
      a = a.createElement(this.elementTagName);
      i.util.extend(a, this.elementProperties);
      s(a, this.cssClass);
      return a
    },
    applyToTextNode: function (a) {
      var b = a.parentNode;
      if (b.childNodes.length == 1 && h.arrayContains(this.tagNames,
          b.tagName.toLowerCase())) {
        s(b, this.cssClass);
      } else {
        b = this.createContainer(h.getDocument(a));
        a.parentNode.insertBefore(b, a);
        b.appendChild(a)
      }
    },
    isRemovable: function (a) {
      var b;
      if (b = a.tagName.toLowerCase() == this.elementTagName) {
        if (b = o(a.className) == this.elementSortedClassName) {
          var c;
          a:{
            b = this.elementProperties;
            for (c in b) {
              if (b.hasOwnProperty(c) &&
                  a[c] !== b[c]) {
                c = false;
                break a
              }
            }
            c = true
          }
          b = c && !B(a, this.attrExceptions) && this.isModifiable(a)
        }
        b = b
      }
      return b
    },
    undoToTextNode: function (a, b, c) {
      if (!b.containsNode(c)) {
        a = b.cloneRange();
        a.selectNode(c);
        if (a.isPointInRange(b.endContainer, b.endOffset)) {
          m(c, b.endContainer, b.endOffset, [b]);
          b.setEndAfter(c)
        }
        if (a.isPointInRange(b.startContainer, b.startOffset)) {
          c = m(c,
              b.startContainer, b.startOffset, [b])
        }
      }
      this.isRemovable(c) ? x(c) : H(c, this.cssClass)
    },
    applyToRange: function (a) {
      a.splitBoundaries();
      var b = z(a);
      if (b.length) {
        for (var c,
            d = 0, e = b.length; d < e; ++d) {
          c = b[d];
          !this.isIgnorableWhiteSpaceNode(c)
          && !this.getSelfOrAncestorWithClass(c) && this.isModifiable(c)
          && this.applyToTextNode(c)
        }
        a.setStart(b[0], 0);
        c = b[b.length - 1];
        a.setEnd(c, c.length);
        this.normalize && this.postApply(b, a, false)
      }
    },
    applyToSelection: function (a) {
      a = a || window;
      a = i.getSelection(a);
      var b, c = a.getAllRanges();
      a.removeAllRanges();
      for (var d = c.length; d--;) {
        b = c[d];
        this.applyToRange(b);
        a.addRange(b)
      }
    },
    undoToRange: function (a) {
      a.splitBoundaries();
      var b = z(a), c, d, e = b[b.length - 1];
      if (b.length) {
        for (var f =
            0, g = b.length; f < g; ++f) {
          c = b[f];
          (d = this.getSelfOrAncestorWithClass(c)) && this.isModifiable(c)
          && this.undoToTextNode(c, a, d);
          a.setStart(b[0], 0);
          a.setEnd(e, e.length)
        }
        this.normalize && this.postApply(b, a, true)
      }
    },
    undoToSelection: function (a) {
      a = a || window;
      a = i.getSelection(a);
      var b = a.getAllRanges(), c;
      a.removeAllRanges();
      for (var d = 0, e = b.length; d < e; ++d) {
        c = b[d];
        this.undoToRange(c);
        a.addRange(c)
      }
    },
    getTextSelectedByRange: function (a, b) {
      var c = b.cloneRange();
      c.selectNodeContents(a);
      var d = c.intersection(b);
      d = d ? d.toString() :
          "";
      c.detach();
      return d
    },
    isAppliedToRange: function (a) {
      if (a.collapsed) {
        return !!this.getSelfOrAncestorWithClass(
            a.commonAncestorContainer);
      } else {
        for (var b = a.getNodes([3]), c = 0, d;
            d = b[c++];) {
          if (!this.isIgnorableWhiteSpaceNode(d) && y(a, d)
              && this.isModifiable(d) && !this.getSelfOrAncestorWithClass(
                  d)) {
            return false;
          }
        }
        return true
      }
    },
    isAppliedToSelection: function (a) {
      a = a || window;
      a = i.getSelection(a).getAllRanges();
      for (var b = a.length; b--;) {
        if (!this.isAppliedToRange(
            a[b])) {
          return false;
        }
      }
      return true
    },
    toggleRange: function (a) {
      this.isAppliedToRange(a) ?
          this.undoToRange(a) : this.applyToRange(a)
    },
    toggleSelection: function (a) {
      this.isAppliedToSelection(a) ? this.undoToSelection(a)
          : this.applyToSelection(a)
    },
    detach: function () {
    }
  };
  q.util = {
    hasClass: r,
    addClass: s,
    removeClass: H,
    hasSameClasses: w,
    replaceWithOwnChildren: x,
    elementsHaveSameNonClassAttributes: A,
    elementHasNonClassAttributes: B,
    splitNodeAt: m,
    isEditableElement: k,
    isEditingHost: C,
    isEditable: D
  };
  i.CssClassApplier = q;
  i.createCssClassApplier = function (a, b, c) {
    return new q(a, b, c)
  }
});

rangy.createModule("Commands", function (f, n) {
  function g(m) {
    return m && 1 == m.nodeType && m.isContentEditable
  }

  function k(m, a) {
    var c;
    !(c = !a || !a.applyToEditableOnly) && (c = g(m) || g(m.parentNode))
    && (c = !(m && (9 == m.nodeType && "on" == m.designMode || g(m) && !g(
        m.parentNode))));
    return c
  }

  function h(m, a) {
    var c = t.comparePoints(m, 0, a.startContainer, a.startOffset),
        b = t.comparePoints(m, t.getNodeLength(m), a.endContainer, a.endOffset);
    return H(m) == H(a.startContainer) && 1 == c && -1 == b
  }

  function c(m, a) {
    if (h(m, a)) {
      return !0;
    }
    var b = t.isCharacterDataNode(m);
    if (m == a.startContainer && b && t.getNodeLength(m) != a.startOffset || m
        == a.endContainer && b && 0 != a.endOffset) {
      return !0;
    }
    var b = m.childNodes, d = b.length;
    if (0 != d) {
      for (var f = 0; f < d; ++f) {
        if (!c(b[f], a)) {
          return !1;
        }
      }
      return !0
    }
    return !1
  }

  function a(m) {
    var a;
    return "undefined" == typeof (a = m.namespaceURI) || null === a
        || "http://www.w3.org/1999/xhtml" == a
  }

  function b(m) {
    return t.isCharacterDataNode(m) || 1 == m.nodeType && r.test(
        I(m, "display"))
  }

  function d(m) {
    return b(m) && "br" != m.nodeName.toLowerCase()
  }

  function p(m, b) {
    if (!m || 1 != m.nodeType || !a(m)) {
      return !1;
    }
    switch (typeof b) {
      case "string":
        return m.tagName.toLowerCase() == b.toLowerCase();
      case "object":
        return (new RegExp("^(" + b.join(",") + ")$", "i")).test(m.tagName);
      default:
        return !0
    }
  }

  function v(m, a) {
    return p(m) ? b(m) && k(m, a) ? q.test(m.tagName) : !0 : !1
  }

  function J(m, a) {
    return 8 == m.nodeType || 3 == m.nodeType && (m.parentNode
        && /^(script|style)$/i.test(m.parentNode.tagName) || a.ignoreWhiteSpace
        && !/[^\r\n\t ]/.test(m.data) && (v(m.previousSibling, a) || v(
            m.nextSibling, a))) ? !0 : !1
  }

  function K(m, a) {
    if (!p(m)) {
      return !1;
    }
    if (a
        && a.command.isModifiableElement) {
      return a.command.isModifiableElement(
          el,
          a);
    }
    var b = m.tagName.toLowerCase();
    if (y.test(b)) {
      b = ["style", "class"];
    } else if ("a" == b) {
      b = ["style",
        "class", "href"];
    } else if ("font" == b) {
      b = ["style", "class", "color",
        "face", "size"];
    } else {
      return !1;
    }
    a:{
      for (var c = 0, d = m.attributes.length, f; c < d;
          ++c) {
        if (f = m.attributes[c].name, m.attributes[c].specified && (!b
            || !t.arrayContains(b, f))) {
          b = !1;
          break a
        }
      }
      b = !0
    }
    return b
  }

  function w(m, a) {
    if (!p(m)) {
      return !1;
    }
    if (a
        && a.command.isSimpleModifiableElement) {
      return a.command.isSimpleModifiableElement(
          m, a);
    }
    var b = m.tagName.toLowerCase();
    if (!z.test(b)) {
      return !1;
    }
    for (var c, d = !1, f = 0, l = m.attributes.length; f < l;
        ++f) {
      if (m.attributes[f].specified) {
        if (d) {
          return !1;
        }
        c = m.attributes[f].name;
        m.getAttribute(c);
        d = !0
      }
    }
    return !d || "style" == c && 0 == m.style.cssText.length || "a" == b
    && "href" == c || "font" == b && /^(color|face|size)$/.test(c) ? !0
        : "style" != c || "number" == typeof m.style.length && 1
        < m.style.length || !/^[a-z\-]+:[^;]+;?\s?$/i.test(m.style.cssText) ? !1
            : ("b" == b || "strong" == b) && "" != m.style.fontWeight || ("i"
                == b || "em" == b) && "" != m.style.fontStyle || ("sub" == b
                || "sup" == b) && "" != m.style.verticalAlign ||
            ("span" == b || "font" == b) && "" != m.style.fontSize || ("a" == b
                || "font" == b || "span" == b) && "" == m.style.textDecoration
            || ("h1" == b || "h2" == b || "h3" == b || "p" == b || "td" == b)
            && "" != m.style.textAlign || /^(a|font|s|span|strike|u|del)$/.test(
                b) && /^(line-through|underline|overline|none)$/.test(
                m.style.textDecoration) ? !0 : !1
  }

  function C(b, a, c, d) {
    -1 == c && (c = a.childNodes.length);
    for (var f = b.parentNode, l = t.getNodeIndex(b), h = [], p = 0,
        q = d.length; p < q; ++p) {
      var r = d[p], v = r.startContainer, g = r.startOffset, y = r.endContainer,
          k = r.endOffset, B = v, z =
              g, n = y, u = k;
      v == a && g > c && z++;
      y == a && k > c && u++;
      v != f || g != l && g != l + 1 || (B = a, z += c - l);
      y != f || k != l && k != l + 1 || (n = a, u += c - l);
      v == f && g > l + 1 && z--;
      y == f && k > l + 1 && u--;
      B == v && z == g && n == y && u == k && h.push([r, B, z, n, u])
    }
    a.childNodes.length == c ? a.appendChild(b) : a.insertBefore(b,
        a.childNodes[c]);
    for (b = 0; a = h[b++];) {
      try {
        a[0].setStart(a[1], a[2])
      } catch (K) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(K)
      }
      try {
        a[0].setEnd(a[3], a[4])
      } catch (J) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        &&
        console.log(J)
      }
    }
  }

  function R(a, b) {
    b = b || [];
    for (var c; c = a.next();) {
      a.isPartiallySelectedSubtree()
          ? (c = a.getSubtreeIterator(), R(c, b), c.detach(!0)) : b.push(c);
    }
    return b
  }

  function L(a, b, c, d, f) {
    for (var l, h = []; l = a.firstChild;) {
      C(l, b, c++, f), h.push(l);
    }
    d && a.parentNode.removeChild(a);
    return h
  }

  function M(a, b) {
    return L(a, a.parentNode, t.getNodeIndex(a), !0, b)
  }

  function Q(a, b) {
    for (var c = a.attributes, d = 0, f = c.length; d < f; ++d) {
      c[d].specified
      && ("style" == c[d].name ? b.style.cssText = b.style.cssText
          : b.setAttribute(c[d].name, c[d].value))
    }
  }

  function P(a, b) {
    var c = b.command, d = b.rangesToPreserve;
    if (null === c.getSpecifiedValue(a, b)) {
      return [];
    }
    if (w(a, b)) {
      return M(a, d);
    }
    c.clearValue && c.clearValue(a, b);
    null !== c.relevantCssProperty && (a.style[c.relevantCssProperty] = "", ""
    == a.style.cssText && a.removeAttribute("style"));
    if (null === c.getSpecifiedValue(a, b)) {
      return [];
    }
    c = t.getDocument(a).createElement("span");
    Q(a, c);
    a.parentNode.insertBefore(c, a);
    L(a, c, 0, !0, d);
    return [c]
  }

  function u(a, b, c) {
    return null === b || null === c ? b === c : a.valuesEqual(b, c)
  }

  function x(a, b) {
    var c =
        1 == a.nodeType;
    return c || a.parentNode && 1 == a.parentNode.nodeType ? c
        ? b.command.getEffectiveValue(a, b) : x(a.parentNode, b) : null
  }

  function N(a, c, d, f) {
    var l = a[0], h = f.options;
    f = f.rangesToPreserve;
    var q, r;
    if (!a.length || !k(l, h)) {
      return null;
    }
    var g = a[a.length - 1];
    b(g) && !p(g, "br") && p(g.nextSibling, "br") && a.push(g.nextSibling);
    var v = l.previousSibling, y = g.nextSibling;
    d = k(v, h) && c(v) ? v : k(y, h) && c(y) ? y : d();
    if (!d) {
      return null;
    }
    var v = t.getDocument(d), B = d.parentNode, y = l.parentNode;
    if (!B) {
      for (y.insertBefore(d, l), q = 0; r = f[q++];) {
        r.startContainer ==
        B && r.startOffset == t.getNodeIndex(d) && r.setStart(r.startContainer,
            r.startOffset + 1), r.endContainer == B && r.endOffset
        == t.getNodeIndex(d) && r.setEnd(r.endContainer, r.endOffset + 1);
      }
    }
    q = d.parentNode;
    r = l.parentNode;
    q = q && r ? -1 == t.comparePoints(d.parentNode, t.getNodeIndex(d),
        l.parentNode, t.getNodeIndex(l)) : !q;
    if (q) {
      for (!b(d) && b(d.lastChild) && b(l) && !p(d.lastChild, "br")
      && d.appendChild(v.createElement("br")), q = 0, l = a.length; q < l;
          ++q) {
        C(
            a[q], d, -1, f);
      }
    } else {
      for (!b(d) && b(d.firstChild) && b(g) && !p(g,
          "br") && d.insertBefore(v.createElement("br"),
          d.firstChild), q = a.length - 1; 0 <= q; q--) {
        C(a[q], d, 0, f);
      }
    }
    k(y, h) && !y.hasChildNodes() && y.parentNode.removeChild(y);
    a = d.nextSibling;
    if (k(a, h) && c(a)) {
      for (!b(d) && b(d.lastChild) && b(a.firstChild) && !p(d.lastChild, "br")
      && d.appendChild(v.createElement("br")); a.hasChildNodes();) {
        C(
            a.firstChild, d, -1, f);
      }
      d.parentNode.removeChild(a)
    }
    if (d && 1 == d.nodeType && !b(d)) {
      c = d.previousSibling;
      var z;
      p(c, "br") && b(z = d.previousSibling.previousSibling) && !p(z, "br")
      && d.parentNode.removeChild(c)
    }
    if (d && 1 == d.nodeType && !b(d)) {
      z = d.lastChild;
      var n;
      2 <= d.childNodes.length && p(d.lastChild, "br") && b(
          n = d.lastChild.previousSibling) && !p(n, "br") && d.removeChild(z)
    }
    return d
  }

  function A(a, b, c, d, f) {
    for (var l = a[f], h = d.rangesToPreserve;
        K(l, d) && 1 == l.childNodes.length && K(l.firstChild, d) && (!w(l, d)
            || !u(b, b.getSpecifiedValue(l, d), c));) {
      l = l.firstChild;
    }
    w(l, d) && u(b, b.getSpecifiedValue(l, d), c) && u(b, x(l, d), c) && l
    != a[f] && (L(l, l.parentNode, t.getNodeIndex(l), !1,
        h), a.parentNode.insertBefore(l, a[f]), C(l.nextSibling, l,
        l.childNodes.length, h))
  }

  function E(a, b, c) {
    if (-1 == ",br,".indexOf("," +
        a.nodeName.toLowerCase() + ",")) {
      var d, l, f, h;
      h = a.nodeType;
      var p = c.command;
      d = c.rangesToPreserve;
      l = c.options;
      if (a.parentNode && null !== b) {
        /^(1|3|4|7)$/.test("" + h) && !v(a, l) && (A(a, p, b, c,
            "previousSibling"), A(a, p, b, c, "nextSibling"), N([a],
            function (a) {
              return w(a, c) && u(p, p.getSpecifiedValue(a, c), b) && u(p,
                  x(a, c), b)
            }, function () {
              return null
            }, c));
        var q = !1;
        try {
          if (f = !1, "fontSize" == p.relevantCssProperty && (f = !0), 0 == f
          && KEDITORTOP.RAONKEDITOR.browser.ie && "fontFamily"
          == p.relevantCssProperty && (f = !0), f && u(p, x(a, c), b)) {
            f = !1;
            for (var r = a; ;) {
              if (3 == r.nodeType) {
                r = r.parentNode;
              } else if (1
                  == r.nodeType) {
                if ("" != r.style[p.relevantCssProperty]) {
                  f = !0;
                  break
                }
                if (r.tagName && "BODY" == r.tagName) {
                  break;
                }
                r = r.parentNode
              } else {
                break;
              }
            }
            q = 1 == f ? !1 : !0
          }
        } catch (g) {
          q = !1
        }
        if (q || !u(p, x(a, c), b)) {
          if (v(a, l)) {
            if ("colgroup" != a.tagName.toLowerCase()) {
              h = [];
              l = 0;
              f = a.childNodes.length;
              for (r = null; l < f; ++l) {
                d = a.childNodes[l];
                if (1 == d.nodeType && (r = p.getSpecifiedValue(d, c), null
                !== r
                && (q || !u(p, b, r)))) {
                  continue;
                }
                h.push(d)
              }
              "1" == KEDITORTOP.G_CURRKEDITOR._config.applyStyleEmptyTag &&
              1 >= a.childNodes.length && ("" == a.innerHTML || "<br>"
                  == a.innerHTML) && ("<br>" == a.innerHTML
                  ? KEDITORTOP.RAONKEDITOR.browser.safari || "windows"
                  != KEDITORTOP.RAONKEDITOR.UserAgent.os.name.toLowerCase()
                      ? a.childNodes[0] || (q = document.createElement(
                      "br"), a.appendChild(q)) : (q = document.createTextNode(
                          "\u200b"), a.childNodes[0]
                          ? (d = a.childNodes[0], a.insertBefore(q,
                              d), a.removeChild(d)) : a.appendChild(q))
                  : (q = document.createTextNode("\u200b"), a.appendChild(
                      q)), h.push(a.childNodes[0]));
              for (l = 0; d = h[l++];) {
                E(d, b, c)
              }
            }
          } else if (4 !=
              h && 7 != h && (q || !u(p, x(a, c), b))) {
            if (f = null, 1 == h
            && "span" == a.nodeName.toLowerCase() && p.relevantCssProperty && -1
            < ",color,backgroundColor,fontFamily,fontSize,".indexOf(
                "," + p.relevantCssProperty
                + ",")) {
              a.style[p.relevantCssProperty] = b;
            } else if (!l.styleWithCss
            && p.createNonCssElement && (f = p.createNonCssElement(a, b, c)), f
            || (f = p.createCssElement ? p.createCssElement(t.getDocument(a), c)
                : t.getDocument(a).createElement(
                    "span")), a.parentNode.insertBefore(f,
                a), l = p.relevantCssProperty, null === l || !q && u(p, x(f, c),
                b)
            || (f.style[l] =
                b), p.styleCssElement && p.styleCssElement(f, b), C(a, f,
                f.childNodes.length, d), 1 == h && (q || !u(p, x(a, c), b))) {
              if (C(
                  a, f.parentNode, t.getNodeIndex(f),
                  d), f.parentNode.removeChild(
                  f), "span" == f.tagName.toLowerCase()
              && (p.hasSpecialSpanStyling
                  && p.hasSpecialSpanStyling(b) || null !== l)) {
                null !== l
                && (a.style[l] = b), p.styleSpanChildElement
                && p.styleSpanChildElement(
                    a, b);
              } else {
                h = [];
                l = 0;
                for (f = a.childNodes.length; l < f; ++l) {
                  d = a.childNodes[l];
                  if (1 == d.nodeType && (r = p.getSpecifiedValue(d, c), null
                  !== r
                  && (q || !u(p, b, r)))) {
                    continue;
                  }
                  h.push(d)
                }
                l =
                    0;
                for (f = h.length; l < f; ++l) {
                  E(h[l], b, c)
                }
              }
            }
          }
        }
      }
    }
  }

  function O(a, b) {
    for (var c = l(a.childNodes), d = 0, f = c.length; d < f; ++d) {
      F(c[d], b)
    }
  }

  function F(a, b) {
    var c, d;
    c = a.nodeType;
    if (9 == c) {
      for (c = 0; c < a.childNodes.length; ++c) {
        if (d = a.childNodes[c], 1 == d.nodeType) {
          F(d, b);
          break
        }
      }
    } else if (11 == c) {
      O(a, b);
    } else if (a.parentNode && 10 != c && !J(a,
        b.options)) {
      if (k(a, b.options)) {
        try {
          if (d = KEDITORTOP.G_CURRKEDITOR._config.keepFontFamily, "fontFamily"
          == b.command.relevantCssProperty && 0 < d.length && 1 == c && -1
          < d.indexOf(a.style.fontFamily.toLowerCase())) {
            return
          }
        } catch (f) {
          KEDITORTOP &&
          KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(f)
        }
        if (1 == c) {
          var p = P(a, b);
          c = 0;
          for (d = p.length; c < d; ++c) {
            F(p[c], b);
          }
          if (!a.parentNode) {
            return
          }
        }
        c = b.command;
        var h = b.value, p = b.options;
        if ((d = a.parentNode) && 1 == d.nodeType && !u(c, x(a, b), h)) {
          var q = d;
          for (d = []; k(q, p) && 1 == q.nodeType && !u(c, x(q, b), h);) {
            d.push(
                q), q = q.parentNode;
          }
          if (0 != d.length) {
            var p = d[d.length - 1], r = c.getSpecifiedValue(p, b);
            if (null !== r || r == h) {
              if (null === h || u(c, x(p.parentNode, b),
                  h)) {
                for (; d.length;) {
                  q = d.pop();
                  null !== c.getSpecifiedValue(q, b) &&
                  (r = c.getSpecifiedValue(q, b));
                  h = l(q.childNodes);
                  null !== c.getSpecifiedValue(q, b) && P(q, b);
                  for (var q = 0, g; g = h[q++];) {
                    g != a && (1 != g.nodeType || null
                        === c.getSpecifiedValue(g, b) || u(c, r,
                            c.getSpecifiedValue(g, b))) && g != p && E(g, r, b)
                  }
                }
              }
            }
          }
        }
        E(a, b.value, b)
      }
      O(a, b)
    }
  }

  function D() {
  }

  function G(a) {
    var b = a.toLowerCase();
    if (B.hasOwnProperty(b)) {
      return B[b];
    }
    throw n.createError(
        "getCommand(): No command registered with the name '" + a + "'");
  }

  f.requireModules(["WrappedSelection", "WrappedRange"]);
  var t = f.dom, H = t.getRootContainer, I;
  "undefined" !=
  typeof window.getComputedStyle ? I = function (a, b) {
    var c = t.getWindow(a).getComputedStyle(a, null)[b];
    if ("fontSize" == b) {
      try {
        -1 < c.indexOf("px") && "undefined"
        != typeof document.documentElement.currentStyle ? c = a.currentStyle[b]
            : a.style && a.style.fontSize && -1 < a.style.fontSize.indexOf("pt")
            && (c = a.style.fontSize)
      } catch (d) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(d)
      }
    } else if ("backgroundColor" == b && "transparent" == c
        && a.parentNode) {
      try {
        if (1 != a.nodeType || "html" != a.nodeName.toLowerCase() &&
            "body" != a.nodeName.toLowerCase()) {
          c = t.getWindow(
              a.parentNode).getComputedStyle(a.parentNode, null)[b]
        }
      } catch (l) {
        KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
        && console.log(l)
      }
    }
    return c
  } : "undefined" != typeof document.documentElement.currentStyle
      ? I = function (a, b) {
        return a.currentStyle[b]
      } : n.fail("No means of obtaining computed style properties found");
  var l;
  (function () {
    var a = document.createElement("div");
    a.appendChild(document.createElement("span"));
    var b = Array.prototype.slice;
    try {
      1 ==
      b.call(a.childNodes, 0)[0].nodeType && (l = function (a) {
        return b.call(a, 0)
      })
    } catch (c) {
      KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
      && console.log(c)
    }
    l || (l = function (a) {
      for (var b = 0, c = a.length, d = []; b < c; ++b) {
        d[b] = a[b];
      }
      return d
    })
  })();
  var q = /^(h[1-6]|p|hr|pre|blockquote|ol|ul|li|dl|dt|dd|div|table|caption|colgroup|col|tbody|thead|tfoot|tr|th|td|address)$/i,
      r = /^inline(-block|-table)?$/i,
      y = /^(b|em|i|s|span|strike|strong|sub|sup|u|del)$/,
      z = /^(b|em|i|s|span|strike|strong|sub|sup|u|del|a|font|h1|h2|h3|h4|h5|h6|p|hr|pre|blockquote|ol|ul|li|dl|dt|dd|div|table|caption|colgroup|col|tbody|thead|tfoot|tr|th|td|address)$/;
  D.prototype = {
    relevantCssProperty: null,
    getSpecifiedValue: function () {
      return null
    },
    clearValue: function () {
    },
    getEffectiveValue: function (a, b) {
      return I(a, this.relevantCssProperty)
    },
    createCssElement: null,
    createNonCssElement: null,
    styleCssElement: null,
    hasSpecialSpanStyling: null,
    styleSpanChildElement: null,
    isSimpleModifiableElement: null,
    defaultOptions: null,
    addDefaultOptions: null,
    valuesEqual: function (a, b) {
      return a === b
    },
    createContext: function (a, b, c) {
      var d = this.defaultOptions;
      if (d) {
        for (var l in d) {
          d.hasOwnProperty(l) &&
          !c.hasOwnProperty(l) && (c[l] = d[l]);
        }
      }
      return {
        command: this,
        value: a,
        rangesToPreserve: b || [],
        options: c || {}
      }
    },
    getSelectionValue: function () {
      return null
    },
    getNewRangeValue: function () {
      return null
    },
    getNewSelectionValue: function () {
      return null
    },
    applyToRange: function (a, b, c, d) {
      a = this.createContext(b, [d], c);
      a.value = this.getNewRangeValue(d, a);
      this.applyValueToRange(d, a)
    },
    applyToSelection: function (a, b, c) {
      a = t.getWindow(a);
      a = f.getSelection(a);
      var d = a.getAllRanges();
      b = this.createContext(b, d, c);
      b.value = this.getNewSelectionValue(a,
          b);
      c = 0;
      for (var l = d.length; c < l; ++c) {
        this.applyValueToRange(d[c], b);
      }
      a.setRanges(d)
    }
  };
  D.util = {
    getComputedStyleProperty: I,
    getFurthestAncestor: function (a) {
      for (; null != a.parentNode;) {
        a = a.parentNode;
      }
      return a
    },
    isContained: h,
    isEffectivelyContained: c,
    isHtmlNode: a,
    isHtmlElement: p,
    isInlineNode: b,
    isUnwrappable: v,
    blockExtend: function (a) {
      for (var b = a.startContainer, c = a.startOffset, l = a.endContainer,
          f = a.endOffset, p, h; ;) {
        if (t.isCharacterDataNode(b) || 0
            == c) {
          c = t.getNodeIndex(b), b = b.parentNode;
        } else if (c
            == t.getNodeLength(b)) {
          c =
              1 + t.getNodeIndex(
                  b), b = b.parentNode;
        } else if ((p = b.childNodes[c]) && d(p) && d(
            p.previousSibling)) {
          c--;
        } else {
          break;
        }
      }
      for (; ;) {
        if (0 == f) {
          f = t.getNodeIndex(
              l), l = l.parentNode;
        } else if (t.isCharacterDataNode(l) || f
            == t.getNodeLength(l)) {
          f = 1 + t.getNodeIndex(
              l), l = l.parentNode;
        } else if ((h = l.childNodes[f]) && d(h) && d(
            h.previousSibling)) {
          f++;
        } else {
          break;
        }
      }
      a = a.cloneRange();
      a.setStart(b, c);
      a.setEnd(l, f);
      return a
    },
    isModifiableElement: K,
    isSimpleModifiableElement: w,
    moveChildrenPreservingRanges: L,
    replaceWithOwnChildren: M,
    copyAttributes: Q,
    getEffectiveValue: x,
    getEffectiveTextNodes: function (a, b) {
      return a.getNodes([3], function (d) {
        return c(d, a) && !J(d, b.options)
      })
    },
    setNodeValue: F,
    wrap: N,
    decomposeRange: function (a, b) {
      if (a.startContainer == a.endContainer && a.startOffset
          == a.endOffset) {
        return [];
      }
      a.splitBoundaries(b);
      for (var c = a.cloneRange();
          0 == c.startOffset && c.startContainer.parentNode;) {
        c.setStart(
            c.startContainer.parentNode, t.getNodeIndex(c.startContainer));
      }
      for (; c.endOffset == t.getNodeLength(c.endContainer)
      && c.endContainer.parentNode;) {
        c.setEnd(c.endContainer.parentNode,
            1 + t.getNodeIndex(c.endContainer));
      }
      var c = new rangy.DomRange.RangeIterator(c, !1), d = R(c);
      c.detach();
      return d
    },
    setGlobalOption: function (a, b) {
    }
  };
  D.create = function (a, b) {
    var c = new D;
    a.prototype = c;
    if ("object" == typeof b) {
      for (var d in b) {
        b.hasOwnProperty(d)
        && (c[d] = b[d])
      }
    }
  };
  var B = {};
  f.registerCommand = function (a, b) {
    if (!(b instanceof D)) {
      throw n.createError(
          "registerCommand(): Object supplied is not a Command");
    }
    B[a.toLowerCase()] = b
  };
  f.execCommand = function (a, b, c) {
    b = b || {};
    var d = b.hasOwnProperty("document") ? b.document :
        document, l = b.hasOwnProperty("value") ? b.value : null;
    a = G(a);
    c ? a.applyToRange(d, l, b, c) : a.applyToSelection(d, l, b)
  };
  f.queryCommandValue = function (a, b, c) {
    b = b || {};
    var d = b.hasOwnProperty("document") ? t.getWindow(b.document) : window;
    c = b.hasOwnProperty("value") ? b.value : null;
    a = G(a);
    d = f.getSelection(d);
    b = a.createContext(c, null, b);
    return a.getSelectionValue(d, b)
  };
  f.getCommand = G;
  f.Command = D
});

function getRangeCorrectly(f, n) {
  var g = [];
  try {
    for (var k = n.startContainer, h = n.endContainer, c = f.length, a = !1,
        b = 0; b < c; b++) {
      a = !1, 0 == b && 1 < c ? 3 == k.nodeType
          && n.startOffset == k.length && (a = !0) : b == c - 1 && 1 < c && 3
          == h.nodeType && 0 == n.endOffset && (a = !0), 0 == a && g.push(f[b])
    }
  } catch (d) {
    return f
  }
  return g
}

function convertRgbToHex(f) {
  return "black" == f.toLowerCase() ? "#000000" : f.replace(
      /(?:rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\))/gi,
      function (f, g, k, h) {
        f = [g, k, h];
        for (g = 0; 3 > g; g++) {
          f[g] = ("0" + parseInt(f[g], 10).toString(
              16)).slice(-2);
        }
        return "#" + f.join("")
      })
}

function getChildToArray(f) {
  var n = [];
  f = f.childNodes;
  for (var g = 0, k = f.length; g < k; g++) {
    n.push(f[g]);
  }
  return n
}

function checkSameParent(f) {
  var n = null, g = !1;
  f && f[0].parentNode && "span" == f[0].parentNode.nodeName.toLowerCase()
  && (g = !0);
  if (g) {
    for (var k = 0, h = f.length; k < h; ++k) {
      if (n && n != f[k].parentNode) {
        g = !1;
        break
      }
      n = f[k].parentNode
    }
  }
  if (g) {
    for (var c = n.childNodes, k = 0, h = c.length; k < h; ++k) {
      if ((1
              != c[k].nodeType || "br" != c[k].nodeName.toLowerCase()) && -1
          == f.indexOf(c[k])) {
        g = !1;
        break
      }
    }
  }
  return g ? (f = [], f.push(n), f) : null
}

rangy.createModule("BoldCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "fontWeight",
    defaultOptions: {tagName: "b", ignoreWhiteSpace: !0},
    getSpecifiedValue: function (c) {
      return c.style.fontWeight || (/^(strong|b)$/i.test(c.tagName) ? "bold"
          : null)
    },
    valuesEqual: function (c, a) {
      c = ("" + c).toLowerCase();
      a = ("" + a).toLowerCase();
      return c == a || "bold" == c && "700" == a || "bold" == a && "700" == c
          || "normal" == c && "400" == a || "normal" == a && "400" == c
    },
    createNonCssElement: function (c,
        a, b) {
      return "bold" == a || "700" == a ? k.getDocument(c).createElement(
          b.options.tagName) : null
    },
    isBoldCssValue: function (c) {
      return /^(bold|700|800|900)$/.test(c)
    },
    getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 == b.length) {
        return this.isBoldCssValue(
            h.getEffectiveValue(c.commonAncestorContainer, a));
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), !this.isBoldCssValue(
            f)) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d],
            a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return this.getRangeValue(c, a) ? "normal" : "bold"
    },
    getNewSelectionValue: function (c, a) {
      return this.getSelectionValue(c, a) ? "normal" : "bold"
    },
    applyValueToRange: function (c, a) {
      for (var b = h.decomposeRange(c, a.rangesToPreserve),
          b = getRangeCorrectly(b, a.rangesToPreserve[0]), d = 0, f = b.length;
          d < f; ++d) {
        h.setNodeValue(b[d], a)
      }
    }
  });
  f.registerCommand("bold", new g)
});
rangy.createModule("ItalicCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "fontStyle",
    defaultOptions: {ignoreWhiteSpace: !0},
    getSpecifiedValue: function (c) {
      return c.style.fontStyle || (/^(em|i)$/i.test(c.tagName) ? "italic"
          : null)
    },
    createNonCssElement: function (c, a) {
      return "italic" == a ? k.getDocument(c).createElement("i") : null
    },
    getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 == b.length) {
        return "italic" ==
            h.getEffectiveValue(c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), "italic"
        != f) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return this.getRangeValue(c, a) ? "normal" : "italic"
    },
    getNewSelectionValue: function (c, a) {
      return this.getSelectionValue(c, a) ? "normal" : "italic"
    },
    applyValueToRange: function (c, a) {
      for (var b = h.decomposeRange(c, a.rangesToPreserve),
          b = getRangeCorrectly(b, a.rangesToPreserve[0]), d = 0, f = b.length;
          d < f; ++d) {
        h.setNodeValue(b[d], a)
      }
    }
  });
  f.registerCommand("italic", new g)
});
rangy.createModule("UnderlineCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "textDecoration",
    defaultOptions: {ignoreWhiteSpace: !0},
    getSpecifiedValue: function (c) {
      return c.style.textDecoration || (/^(u)$/i.test(c.tagName) ? "underline"
          : null)
    },
    createNonCssElement: function (c, a) {
      return "underline" == a ? k.getDocument(c).createElement("u") : null
    },
    getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 ==
          b.length) {
        return "underline" == h.getEffectiveValue(
            c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), "underline"
        != f) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return this.getRangeValue(c, a) ? "none" : "underline"
    },
    getNewSelectionValue: function (c, a) {
      return this.getSelectionValue(c, a) ? "none" : "underline"
    },
    applyValueToRange: function (c, a) {
      for (var b =
              h.decomposeRange(c, a.rangesToPreserve),
          b = getRangeCorrectly(b, a.rangesToPreserve[0]), d = 0, f = b.length;
          d < f; ++d) {
        h.setNodeValue(b[d], a)
      }
    }
  });
  f.registerCommand("underline", new g)
});
rangy.createModule("StrikeThroughCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "textDecoration",
    defaultOptions: {ignoreWhiteSpace: !0},
    getSpecifiedValue: function (c) {
      return c.style.textDecoration || (/^(strike|del)$/i.test(c.tagName)
          ? "line-through" : null)
    },
    createNonCssElement: function (c, a) {
      return "line-through" == a ? k.getDocument(c).createElement("strike")
          : null
    },
    getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c,
          a), d = b.length, f;
      if (0 == b.length) {
        return "line-through" == h.getEffectiveValue(
            c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), "line-through"
        != f) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return this.getRangeValue(c, a) ? "none" : "line-through"
    },
    getNewSelectionValue: function (c, a) {
      return this.getSelectionValue(c, a) ? "none" : "line-through"
    },
    applyValueToRange: function (c,
        a) {
      for (var b = h.decomposeRange(c, a.rangesToPreserve),
          b = getRangeCorrectly(b, a.rangesToPreserve[0]), d = 0, f = b.length;
          d < f; ++d) {
        h.setNodeValue(b[d], a)
      }
    }
  });
  f.registerCommand("strikeThrough", new g)
});
rangy.createModule("SuperScriptCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "verticalAlign",
    defaultOptions: {ignoreWhiteSpace: !0},
    getSpecifiedValue: function (c) {
      return c.style.verticalAlign || (/^(sup|sub)$/i.test(c.tagName) ? "super"
          : null)
    },
    createNonCssElement: function (c, a) {
      return "super" == a ? k.getDocument(c).createElement("sup") : null
    },
    getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 ==
          b.length) {
        return "super" == h.getEffectiveValue(
            c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), "super"
        != f) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return this.getRangeValue(c, a) ? "baseline" : "super"
    },
    getNewSelectionValue: function (c, a) {
      return this.getSelectionValue(c, a) ? "baseline" : "super"
    },
    applyValueToRange: function (c, a) {
      for (var b = h.decomposeRange(c,
              a.rangesToPreserve), b = getRangeCorrectly(b, a.rangesToPreserve[0]),
          d = 0, f = b.length; d < f; ++d) {
        h.setNodeValue(b[d], a)
      }
    }
  });
  f.registerCommand("superscript", new g)
});
rangy.createModule("SubScriptCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "verticalAlign",
    defaultOptions: {ignoreWhiteSpace: !0},
    getSpecifiedValue: function (c) {
      return c.style.verticalAlign || (/^(sub|sup)$/i.test(c.tagName) ? "sub"
          : null)
    },
    createNonCssElement: function (c, a) {
      return "sub" == a ? k.getDocument(c).createElement("sub") : null
    },
    getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 == b.length) {
        return "sub" ==
            h.getEffectiveValue(c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), "sub" != f) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return this.getRangeValue(c, a) ? "baseline" : "sub"
    },
    getNewSelectionValue: function (c, a) {
      return this.getSelectionValue(c, a) ? "baseline" : "sub"
    },
    applyValueToRange: function (c, a) {
      for (var b = h.decomposeRange(c, a.rangesToPreserve),
          b = getRangeCorrectly(b, a.rangesToPreserve[0]), d = 0, f = b.length;
          d < f; ++d) {
        h.setNodeValue(b[d], a)
      }
    }
  });
  f.registerCommand("subscript", new g)
});
rangy.createModule("JustifyLeftCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "textAlign",
    defaultOptions: {ignoreWhiteSpace: !0},
    getSpecifiedValue: function (c) {
      return c.style.textAlign || (/^(p)$/i.test(c.tagName) ? "left" : null)
    },
    createNonCssElement: function (c, a) {
      return "left" == a ? k.getDocument(c).createElement("p") : null
    },
    getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 == b.length) {
        return "left" ==
            h.getEffectiveValue(c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), "left" != f) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return this.getRangeValue(c, a) ? "" : "left"
    },
    getNewSelectionValue: function (c, a) {
      return this.getSelectionValue(c, a) ? "" : "left"
    },
    applyValueToRange: function (c, a) {
      for (var b = h.decomposeRange(c, a.rangesToPreserve),
          b = getRangeCorrectly(b,
              a.rangesToPreserve[0]), d = 0, f = b.length; d < f;
          ++d) {
        h.setNodeValue(b[d], a)
      }
    }
  });
  f.registerCommand("justifyLeft", new g)
});
rangy.createModule("JustifyCenterCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "textAlign",
    defaultOptions: {ignoreWhiteSpace: !0},
    getSpecifiedValue: function (c) {
      return c.style.textAlign || (/^(p)$/i.test(c.tagName) ? "center" : null)
    },
    createNonCssElement: function (c, a) {
      return "center" == a ? k.getDocument(c).createElement("p") : null
    },
    getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 == b.length) {
        return "center" ==
            h.getEffectiveValue(c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), "center"
        != f) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return this.getRangeValue(c, a) ? "" : "center"
    },
    getNewSelectionValue: function (c, a) {
      return this.getSelectionValue(c, a) ? "" : "center"
    },
    applyValueToRange: function (c, a) {
      for (var b = h.decomposeRange(c, a.rangesToPreserve),
          b = getRangeCorrectly(b,
              a.rangesToPreserve[0]), d = 0, f = b.length; d < f;
          ++d) {
        h.setNodeValue(b[d], a)
      }
    }
  });
  f.registerCommand("justifyCenter", new g)
});
rangy.createModule("FontsizeCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "fontSize",
    defaultOptions: {ignoreWhiteSpace: !0},
    getSpecifiedValue: function (c) {
      return c.style.fontSize || (/^(font)$/i.test(c.tagName) ? "fontSize"
          : null)
    },
    createNonCssElement: function (c, a) {
      return "fontsize" != a ? k.getDocument(c).createElement("span") : null
    },
    getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 == b.length) {
        return "fontsize" ==
            h.getEffectiveValue(c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), f
        != a.options.fontsize) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return a.options.fontsize
    },
    getNewSelectionValue: function (c, a) {
      return a.options.fontsize
    },
    applyValueToRange: function (c, a) {
      if ("" != a.value) {
        var b = h.decomposeRange(c, a.rangesToPreserve);
        b && 1 == b.length && 1 == b[0].nodeType &&
        "body" == b[0].nodeName.toLowerCase() && (b = getChildToArray(b[0]));
        var b = getRangeCorrectly(b, a.rangesToPreserve[0]),
            d = checkSameParent(b);
        d && (b = d);
        for (var d = 0, f = b.length; d < f; ++d) {
          if (1 == b[d].nodeType && "p"
              == b[d].nodeName.toLowerCase()) {
            if ("1" == KEDITORTOP.G_CURRKEDITOR._config.applyStyleEmptyTag) {
              var g = b[d].innerHTML,
                  g = g.replace(RegExp("(<br)[^>].*?>", "gim"), "$1>");
              if ("<br/>" == g || "<br />" == g || "<br>" == g || ""
                  == g) {
                b[d].innerHTML = "&nbsp;";
              } else {
                for (var k = b[d].childNodes.length,
                    g = 0; g < k; ++g) {
                  if (1 == b[d].childNodes[g].nodeType &&
                      "BR" == b[d].childNodes[g].tagName) {
                    var n = b[d].childNodes[g],
                        w = _iframeDoc.createElement("span");
                    n.parentNode.insertBefore(w, n);
                    w.appendChild(n)
                  }
                }
              }
            }
            k = getChildToArray(b[d]);
            g = 0;
            for (n = k.length; g < n; ++g) {
              h.setNodeValue(k[g], a)
            }
          } else {
            h.setNodeValue(b[d], a)
          }
        }
      }
    }
  });
  f.registerCommand("fontsize", new g)
});
rangy.createModule("FontfamilyCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "fontFamily",
    defaultOptions: {ignoreWhiteSpace: !0},
    getSpecifiedValue: function (c) {
      return c.style.fontFamily || (/^(font)$/i.test(c.tagName) ? "fontFamily"
          : null)
    },
    createNonCssElement: function (c, a) {
      return "fontFamily" != a ? k.getDocument(c).createElement("span") : null
    },
    getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 ==
          b.length) {
        return "fontFamily" == h.getEffectiveValue(
            c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), f
        != a.options.fontfamily) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return a.options.fontfamily
    },
    getNewSelectionValue: function (c, a) {
      return a.options.fontfamily
    },
    applyValueToRange: function (c, a) {
      if ("" != a.value) {
        var b = h.decomposeRange(c, a.rangesToPreserve);
        b && 1 == b.length && 1 == b[0].nodeType && "body"
        == b[0].nodeName.toLowerCase() && (b = getChildToArray(b[0]));
        var b = getRangeCorrectly(b, a.rangesToPreserve[0]),
            d = checkSameParent(b);
        d && (b = d);
        for (var d = 0, f = b.length; d < f; ++d) {
          if (1 == b[d].nodeType && "p"
              == b[d].nodeName.toLowerCase()) {
            if ("1" == KEDITORTOP.G_CURRKEDITOR._config.applyStyleEmptyTag) {
              var g = b[d].innerHTML,
                  g = g.replace(RegExp("(<br)[^>].*?>", "gim"), "$1>");
              if ("<br/>" == g || "<br />" == g || "<br>" == g || ""
                  == g) {
                b[d].innerHTML = "&nbsp;";
              } else {
                for (var k = b[d].childNodes.length,
                    g =
                        0; g < k; ++g) {
                  if (1 == b[d].childNodes[g].nodeType && "BR"
                      == b[d].childNodes[g].tagName) {
                    var n = b[d].childNodes[g],
                        w = _iframeDoc.createElement("span");
                    n.parentNode.insertBefore(w, n);
                    w.appendChild(n)
                  }
                }
              }
            }
            k = getChildToArray(b[d]);
            g = 0;
            for (n = k.length; g < n; ++g) {
              h.setNodeValue(k[g], a)
            }
          } else {
            h.setNodeValue(b[d], a)
          }
        }
      }
    }
  });
  f.registerCommand("fontfamily", new g)
});
rangy.createModule("FontcolorCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "color",
    defaultOptions: {ignoreWhiteSpace: !0},
    valuesEqual: function (c, a) {
      c = convertRgbToHex(c);
      a = convertRgbToHex(a);
      return c == a
    },
    getSpecifiedValue: function (c) {
      return c.style.color || (/^(font)$/i.test(c.tagName) ? "color" : null)
    },
    createNonCssElement: function (c, a) {
      return "color" != a ? k.getDocument(c).createElement("span") : null
    },
    getRangeValue: function (c,
        a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 == b.length) {
        return "color" == h.getEffectiveValue(
            c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), !this.valuesEqual(f,
            a.options.fontcolor)) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return this.getRangeValue(c, a) ? "" : a.options.fontcolor
    },
    getNewSelectionValue: function (c, a) {
      return this.getSelectionValue(c,
          a) ? "" : a.options.fontcolor
    },
    applyValueToRange: function (c, a) {
      if ("" != a.value) {
        var b = h.decomposeRange(c, a.rangesToPreserve);
        b && 1 == b.length && 1 == b[0].nodeType && "body"
        == b[0].nodeName.toLowerCase() && (b = getChildToArray(b[0]));
        var b = getRangeCorrectly(b, a.rangesToPreserve[0]),
            d = checkSameParent(b);
        d && (b = d);
        for (var d = 0, f = b.length; d < f; ++d) {
          if (1 == b[d].nodeType && "p"
              == b[d].nodeName.toLowerCase()) {
            if ("1" == KEDITORTOP.G_CURRKEDITOR._config.applyStyleEmptyTag) {
              var g = b[d].innerHTML,
                  g = g.replace(RegExp("(<br)[^>].*?>", "gim"),
                      "$1>");
              if ("<br/>" == g || "<br />" == g || "<br>" == g || ""
                  == g) {
                b[d].innerHTML = "&nbsp;";
              } else {
                for (var k = b[d].childNodes.length,
                    g = 0; g < k; ++g) {
                  if (1 == b[d].childNodes[g].nodeType && "BR"
                      == b[d].childNodes[g].tagName) {
                    var n = b[d].childNodes[g],
                        w = _iframeDoc.createElement("span");
                    n.parentNode.insertBefore(w, n);
                    w.appendChild(n)
                  }
                }
              }
            }
            k = getChildToArray(b[d]);
            g = 0;
            for (n = k.length; g < n; ++g) {
              h.setNodeValue(k[g], a)
            }
          } else {
            h.setNodeValue(b[d], a)
          }
        }
      }
    }
  });
  f.registerCommand("fontcolor", new g)
});
rangy.createModule("FontBgcolorCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "backgroundColor",
    defaultOptions: {ignoreWhiteSpace: !0},
    valuesEqual: function (c, a) {
      c = convertRgbToHex(c);
      a = convertRgbToHex(a);
      return c == a
    },
    getSpecifiedValue: function (c) {
      return c.style.backgroundColor || (/^(font)$/i.test(c.tagName)
          ? "backgroundColor" : null)
    },
    createNonCssElement: function (c, a) {
      return "backgroundColor" != a ? k.getDocument(c).createElement("span") :
          null
    },
    getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 == b.length) {
        return "backgroundColor" == h.getEffectiveValue(
            c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), !this.valuesEqual(f,
            a.options.fontcolor)) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return this.getRangeValue(c, a) ? "" : a.options.fontcolor
    },
    getNewSelectionValue: function (c,
        a) {
      return this.getSelectionValue(c, a) ? "" : a.options.fontcolor
    },
    applyValueToRange: function (c, a) {
      if ("" != a.value) {
        var b = h.decomposeRange(c, a.rangesToPreserve);
        b && 1 == b.length && 1 == b[0].nodeType && "body"
        == b[0].nodeName.toLowerCase() && (b = getChildToArray(b[0]));
        var b = getRangeCorrectly(b, a.rangesToPreserve[0]),
            d = checkSameParent(b);
        d && (b = d);
        for (var d = 0, f = b.length; d < f; ++d) {
          if (1 == b[d].nodeType && "p"
              == b[d].nodeName.toLowerCase()) {
            if ("1" == KEDITORTOP.G_CURRKEDITOR._config.applyStyleEmptyTag) {
              var g = b[d].innerHTML, g =
                  g.replace(RegExp("(<br)[^>].*?>", "gim"), "$1>");
              if ("<br/>" == g || "<br />" == g || "<br>" == g || ""
                  == g) {
                b[d].innerHTML = "&nbsp;";
              } else {
                for (var k = b[d].childNodes.length,
                    g = 0; g < k; ++g) {
                  if (1 == b[d].childNodes[g].nodeType && "BR"
                      == b[d].childNodes[g].tagName) {
                    var n = b[d].childNodes[g],
                        w = _iframeDoc.createElement("span");
                    n.parentNode.insertBefore(w, n);
                    w.appendChild(n)
                  }
                }
              }
            }
            k = getChildToArray(b[d]);
            g = 0;
            for (n = k.length; g < n; ++g) {
              h.setNodeValue(k[g], a)
            }
          } else {
            h.setNodeValue(b[d], a)
          }
        }
      }
    }
  });
  f.registerCommand("fontbgcolor", new g)
});
rangy.createModule("LineHeightCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    relevantCssProperty: "lineHeight",
    defaultOptions: {ignoreWhiteSpace: !0},
    getSpecifiedValue: function (c) {
      return c.style.lineHeight ? "lineHeight" : null
    },
    createNonCssElement: function (c, a) {
      return "lineHeight" != a ? k.getDocument(c).createElement("span") : null
    },
    getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 == b.length) {
        return "lineHeight" ==
            h.getEffectiveValue(c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), f
        != a.options.lineheight) {
          return !1;
        }
      }
      return !0
    },
    getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    },
    getNewRangeValue: function (c, a) {
      return a.options.lineheight
    },
    getNewSelectionValue: function (c, a) {
      return a.options.lineheight
    },
    applyValueToRange: function (c, a) {
      for (var b = h.decomposeRange(c, a.rangesToPreserve),
          b = getRangeCorrectly(b, a.rangesToPreserve[0]),
          d = 0, f = b.length; d < f; ++d) {
        h.setNodeValue(b[d], a)
      }
    }
  });
  f.registerCommand("lineheight", new g)
});
rangy.createModule("FormattingCommand", function (f, n) {
  function g() {
  }

  f.requireModules(["Commands"]);
  var k = f.dom, h = f.Command.util;
  f.Command.create(g, {
    defaultOptions: {ignoreWhiteSpace: !0}, getSpecifiedValue: function (c) {
      return /^(h1|h2|h3|h4|h5)$/i.test(c.tagName) ? "formatting" : null
    }, createNonCssElement: function (c, a, b) {
      return "formatting" == a ? k.getDocument(c).createElement(
          b.options.tagName) : null
    }, getRangeValue: function (c, a) {
      var b = h.getEffectiveTextNodes(c, a), d = b.length, f;
      if (0 == b.length) {
        return "formatting" ==
            h.getEffectiveValue(c.commonAncestorContainer, a);
      }
      for (; d--;) {
        if (f = h.getEffectiveValue(b[d], a), "formatting"
        != f) {
          return !1;
        }
      }
      return !0
    }, getSelectionValue: function (c, a) {
      for (var b = c.getAllRanges(), d = 0, f = b.length; d < f;
          ++d) {
        if (!this.getRangeValue(b[d], a)) {
          return !1;
        }
      }
      return 0 < f
    }, getNewRangeValue: function (c, a) {
      return this.getRangeValue(c, a) ? "" : "formatting"
    }, getNewSelectionValue: function (c, a) {
      return this.getSelectionValue(c, a) ? "" : "formatting"
    }, applyValueToRange: function (c, a) {
      for (var b = h.decomposeRange(c, a.rangesToPreserve),
          b = getRangeCorrectly(b, a.rangesToPreserve[0]), d = 0, f = b.length;
          d < f; ++d) {
        h.setNodeValue(b[d], a)
      }
    }
  });
  f.registerCommand("formatting", new g)
});
rangy.createModule("Util", function (f, n) {
  f.requireModules(["WrappedSelection", "WrappedRange"]);
  var g = f.rangePrototype, k = f.selectionPrototype;
  g.select = function (h) {
    f.getSelection(this.getDocument()).setSingleRange(this, h)
  };
  k.pasteText = function (f) {
    this.deleteFromDocument();
    var c = this.getRangeAt(0);
    f = c.getDocument().createTextNode(f);
    c.insertNode(f);
    this.setSingleRange(c)
  };
  g.pasteText = function (f) {
    this.deleteContents();
    f = this.getDocument().createTextNode(f);
    this.insertNode(f)
  };
  k.pasteHtml = function (f) {
    this.deleteFromDocument();
    var c = this.getRangeAt(0);
    f = this.createContextualFragment(f);
    var a = f.lastChild;
    c.insertNode(f);
    a && c.setStartAfter(a);
    this.setSingleRange(c)
  };
  g.pasteHtml = function (f) {
    this.deleteContents();
    f = this.createContextualFragment(f);
    this.insertNode(f)
  };
  k.selectNodeContents = function (g) {
    var c = f.createRange(this.win);
    c.selectNodeContents(g);
    this.setSingleRange(c)
  };
  f.createRangeFromNode = function (g) {
    var c = f.createRange(g);
    c.selectNode(g);
    return c
  };
  f.createRangeFromNodeContents = function (g) {
    var c = f.createRange(g);
    c.selectNodeContents(g);
    return c
  }
});
rangy.createModule("Position", function (f, n) {
  function g(a) {
    var b = 0, c = 0;
    if ("number" == typeof a.pageXOffset && "number"
        == typeof a.pageYOffset) {
      b = a.pageXOffset, c = a.pageYOffset;
    } else {
      a = a.document;
      var d = a.documentElement, f = a.compatMode;
      if ((a = "string" == typeof f && 0 <= f.indexOf("CSS") && d ? d
              : u.getBody(a)) && "number" == typeof a.scrollLeft && "number"
          == typeof a.scrollTop) {
        try {
          b = a.scrollLeft, c = a.scrollTop
        } catch (g) {
          KEDITORTOP && KEDITORTOP.RAONKEDITOR && KEDITORTOP.RAONKEDITOR.logMode
          && console.log(e)
        }
      }
    }
    return {x: b, y: c}
  }

  function k(a,
      b) {
    for (b = b.toLowerCase(); a;) {
      if (1 == a.nodeType && a.tagName.toLowerCase() == b) {
        return a;
      }
      a = a.parentNode
    }
    return null
  }

  function h(a, b, c, d) {
    this.top = a;
    this.right = b;
    this.bottom = c;
    this.left = d;
    this.width = b - d;
    this.height = c - a
  }

  function c(a, b, c) {
    return new h(a.top + c, a.right + b, a.bottom + c, a.left + b)
  }

  function a(a, b) {
    var d = 0, f = 0, g = b.documentElement, h = u.getBody(b),
        h = 0 === g.clientWidth && "number" == typeof h.clientTop ? h : g,
        g = h.clientLeft, h = h.clientTop;
    g && (d = -g);
    h && (f = -h);
    return c(a, d, f)
  }

  function b(a) {
    for (var b = [], c = [], d = [], f =
        [], g = 0, m = a.length, k; g < m; ++g) {
      if (k = a[g]) {
        b.push(
            k.top), c.push(k.bottom), d.push(k.left), f.push(k.right);
      }
    }
    return new h(Math.min.apply(Math, b), Math.max.apply(Math, f),
        Math.max.apply(Math, c), Math.min.apply(Math, d))
  }

  function d(a, b, c) {
    a = u.getBody(a).createTextRange();
    a.moveToPoint(b, c);
    b = new f.WrappedTextRange(a);
    return new N(b.startContainer, b.startOffset)
  }

  function p(a, b, c) {
    a = a.caretPositionFromPoint(b, c);
    return new N(a.offsetNode, a.offset)
  }

  function v(a, b, c) {
    a = a.caretRangeFromPoint(b, c);
    return new N(a.startContainer,
        a.startOffset)
  }

  function J(a) {
    a = (a.nativeRange || a).getClientRects();
    return 0 < a.length ? a[a.length - 1] : null
  }

  function K(a, b, c, d) {
    var g = a.elementFromPoint(b, c);
    a = f.createRange(a);
    a.selectNodeContents(g);
    a.collapse(!0);
    var h = g.firstChild, m, k, n;
    if (h) {
      a:for (; h;) {
        if (3 == h.nodeType) {
          for (m = 0, n = h.length; m <= n; ++m) {
            if (a.setEnd(h, m), (k = J(a)) && c < k.bottom && b >= k.left && b
            <= k.right) {
              k.right - b > b - k.left && --m;
              break a
            }
          }
        } else if (a.setEndAfter(h), (k = J(a)) && c < k.bottom && b >= k.left
        && b <= k.right) {
          m = u.getNodeIndex(h);
          h = g.parentNode;
          d ||
          ++m;
          break
        }
        h = h.nextSibling
      }
      h || (h = g, m = g.childNodes.length)
    } else {
      h = g.parentNode, m = u.getNodeIndex(g), d || ++m;
    }
    return new N(h, m)
  }

  function w(a) {
    if (f.features.implementsTextRange) {
      return d;
    }
    if ("undefined" != typeof a.caretPositionFromPoint) {
      return p;
    }
    if ("undefined" != typeof a.caretRangeFromPoint) {
      return v;
    }
    if ("undefined" != typeof a.elementFromPoint && O) {
      return K
    }
  }

  function C(a, b, c, d, g) {
    g = u.getContentDocument(g, n, "createRangeFromPoints");
    var h = w(g);
    a = h(g, a, b, !1);
    c = h(g, c, d, !0);
    g = f.createRange(g);
    g.setStartAndEnd(a.node, a.offset,
        c.node, c.offset);
    return g
  }

  function R(a, b) {
    return a.compareBoundaryPoints(b.START_TO_START, b)
  }

  function L(a) {
    return function () {
      for (var c = "getBounding" + (a ? "Document" : "Client") + "Rect", d = [],
          f = 0; f < this.rangeCount; ++f) {
        d.push(this.getRangeAt(f)[c]());
      }
      return b(d)
    }
  }

  function M(a, b) {
    return function () {
      if (0 == this.rangeCount) {
        return null;
      }
      var c = b ? "Document" : "Client", d = this.getAllRanges();
      1 < d.length && d.sort(R);
      return a ? d[0]["getStart" + c + "Pos"]() : d[d.length - 1]["getEnd" + c
      + "Pos"]()
    }
  }

  f.requireModules(["WrappedSelection"]);
  var Q = f.WrappedRange, P = f.WrappedTextRange, u = f.dom, x = f.util,
      N = u.DomPosition, A = document.createElement("span"),
      E = x.isHostMethod(A, "getBoundingClientRect"), A = null, O = !1, A = !1;
  f.features.implementsDomRange
  && (A = f.createNativeRange(), O = x.isHostMethod(A,
      "getClientRects"), A = x.isHostMethod(A, "getBoundingClientRect"));
  x.extend(f.features, {
    rangeSupportsGetBoundingClientRect: A,
    rangeSupportsGetClientRects: O,
    elementSupportsGetBoundingClientRect: E
  });
  var F = function (a) {
    return function () {
      var b = this.cloneRange();
      b.collapse(a);
      b = b.getBoundingClientRect();
      return {x: b[a ? "left" : "right"], y: b[a ? "top" : "bottom"]}
    }
  }, D = function (a) {
    return function () {
      var b = this["get" + (a ? "Start" : "End") + "ClientPos"](),
          c = g(u.getWindow(this.startContainer));
      return {x: b.x + c.x, y: b.y + c.y}
    }
  }, G = f.rangePrototype;
  if (f.features.implementsTextRange
      && E) {
    G.getBoundingClientRect = function () {
      var c = P.rangeToTextRange(this), d = this.getNodes([1], function (a) {
        return /^t[dh]$/i.test(a.tagName)
      }), f = [];
      if (0 < d.length) {
        for (var g = k(this.startContainer, "table"), h = 0, n, m, p; n = d[h];
            ++h) {
          m =
              k(n, "table"), g && m == g || (p = this.cloneRange(), g
          && p.setStartAfter(g), p.setEndBefore(m), f.push(
              P.rangeToTextRange(
                  p).getBoundingClientRect())), this.containsNode(n)
              ? f.push(n.getBoundingClientRect())
              : (g = c.duplicate(), g.moveToElementText(n), -1
              == g.compareEndPoints("StartToStart", c) ? g.setEndPoint(
                  "StartToStart", c) : 1 == g.compareEndPoints("EndToEnd", c)
                  && g.setEndPoint("EndToEnd", c), f.push(
                  g.getBoundingClientRect())), g = m;
        }
        !k(this.endContainer, "table") && g
        && (p = this.cloneRange(), p.setStartAfter(g), f.push(
            P.rangeToTextRange(p).getBoundingClientRect()));
        c = b(f)
      } else {
        c = c.getBoundingClientRect();
      }
      return a(c, u.getDocument(this.startContainer))
    };
  } else if (f.features.implementsDomRange) {
    var t = function (a) {
      return a instanceof Q ? a : new Q(a)
    };
    if (A) {
      G.getBoundingClientRect = function () {
        var b = t(this).nativeRange,
            b = b.getBoundingClientRect() || b.getClientRects()[0];
        return a(b, u.getDocument(this.startContainer))
      }, O && (F = function (a) {
        return function () {
          var b;
          b = t(this).nativeRange.getClientRects();
          if (0 < b.length) {
            if (a) {
              return b = b[0], {x: b.left, y: b.top};
            }
            b = b[b.length - 1];
            return {
              x: b.right,
              y: b.bottom
            }
          }
        }
      });
    } else {
      var H = E ? function (b) {
        return a(b.getBoundingClientRect(), u.getDocument(b))
      } : function (b) {
        for (var c = 0, d = 0, f = b, g = b.offsetWidth, k = b.offsetHeight;
            f;) {
          c += f.offsetLeft, d += f.offsetTop, f = f.offsetParent;
        }
        return a(new h(d, c + g, d + k, c), u.getDocument(b))
      }, I = function (a) {
        var c;
        a.splitBoundaries();
        var d = document.createElement("span");
        if (a.collapsed) {
          a.insertNode(d), c = H(d), d.parentNode.removeChild(
              d);
        } else {
          var f = a.cloneRange();
          f.collapse(!0);
          f.insertNode(d);
          c = H(d);
          d.parentNode.removeChild(d);
          f.collapseToPoint(a.endContainer,
              a.endOffset);
          f.insertNode(d);
          f = H(d);
          d.parentNode.removeChild(d);
          d = [c, f];
          c = a.getNodes([1], function (b) {
            return a.containsNode(b)
          });
          for (var f = 0, g = c.length; f < g; ++f) {
            d.push(H(c[f]));
          }
          c = b(d)
        }
        a.normalizeBoundaries();
        return c
      };
      G.getBoundingClientRect = function (a) {
        return I(t(a))
      }
    }
  }
  x.extend(G, {
    getBoundingDocumentRect: function () {
      var a = g(u.getWindow(this.startContainer));
      return c(this.getBoundingClientRect(), a.x, a.y)
    },
    getStartClientPos: F(!0),
    getEndClientPos: F(!1),
    getStartDocumentPos: D(!0),
    getEndDocumentPos: D(!1)
  });
  x.extend(f.selectionPrototype, {
    getBoundingClientRect: L(!1),
    getBoundingDocumentRect: L(!0),
    getStartClientPos: M(!0, !1),
    getEndClientPos: M(!1, !1),
    getStartDocumentPos: M(!0, !0),
    getEndDocumentPos: M(!1, !0)
  });
  f.positionFromPoint = function (a, b, c) {
    c = u.getContentDocument(c, n, "positionFromPoint");
    return w(c)(c, a, b)
  };
  f.createRangeFromPoints = C;
  f.moveSelectionToPoints = function (a, b, c, d, f) {
    var g, h;
    d < b || b == d && c < a ? (g = c, h = d, d = b) : (g = a, h = b, a = c);
    b = rangy.getSelection(f);
    f = C(g, h, a, d, f);
    b.setSingleRange(f);
    return b
  }
});

